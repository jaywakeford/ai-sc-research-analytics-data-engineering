{"version":3,"file":"static/chunks/b99ed89f-0fc257718a37f9e8.js","mappings":"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","sources":["webpack://_N_E/./node_modules/react-pdf/node_modules/pdfjs-dist/build/pdf.js","webpack://_N_E/<anon>"],"sourcesContent":["/**\n * @licstart The following is the entire license notice for the\n * JavaScript code in this page\n *\n * Copyright 2023 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @licend The above is the entire license notice for the\n * JavaScript code in this page\n */\n\n(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = root.pdfjsLib = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"pdfjs-dist/build/pdf\", [], () => { return (root.pdfjsLib = factory()); });\n\telse if(typeof exports === 'object')\n\t\texports[\"pdfjs-dist/build/pdf\"] = root.pdfjsLib = factory();\n\telse\n\t\troot[\"pdfjs-dist/build/pdf\"] = root.pdfjsLib = factory();\n})(globalThis, () => {\nreturn /******/ (() => { // webpackBootstrap\n/******/ \t\"use strict\";\n/******/ \tvar __webpack_modules__ = ([\n/* 0 */,\n/* 1 */\n/***/ ((__unused_webpack_module, exports) => {\n\n\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.VerbosityLevel = exports.Util = exports.UnknownErrorException = exports.UnexpectedResponseException = exports.TextRenderingMode = exports.RenderingIntentFlag = exports.PromiseCapability = exports.PermissionFlag = exports.PasswordResponses = exports.PasswordException = exports.PageActionEventType = exports.OPS = exports.MissingPDFException = exports.MAX_IMAGE_SIZE_TO_CACHE = exports.LINE_FACTOR = exports.LINE_DESCENT_FACTOR = exports.InvalidPDFException = exports.ImageKind = exports.IDENTITY_MATRIX = exports.FormatError = exports.FeatureTest = exports.FONT_IDENTITY_MATRIX = exports.DocumentActionEventType = exports.CMapCompressionType = exports.BaseException = exports.BASELINE_FACTOR = exports.AnnotationType = exports.AnnotationReplyType = exports.AnnotationPrefix = exports.AnnotationMode = exports.AnnotationFlag = exports.AnnotationFieldFlag = exports.AnnotationEditorType = exports.AnnotationEditorPrefix = exports.AnnotationEditorParamsType = exports.AnnotationBorderStyleType = exports.AnnotationActionEventType = exports.AbortException = void 0;\nexports.assert = assert;\nexports.bytesToString = bytesToString;\nexports.createValidAbsoluteUrl = createValidAbsoluteUrl;\nexports.getModificationDate = getModificationDate;\nexports.getUuid = getUuid;\nexports.getVerbosityLevel = getVerbosityLevel;\nexports.info = info;\nexports.isArrayBuffer = isArrayBuffer;\nexports.isArrayEqual = isArrayEqual;\nexports.isNodeJS = void 0;\nexports.normalizeUnicode = normalizeUnicode;\nexports.objectFromMap = objectFromMap;\nexports.objectSize = objectSize;\nexports.setVerbosityLevel = setVerbosityLevel;\nexports.shadow = shadow;\nexports.string32 = string32;\nexports.stringToBytes = stringToBytes;\nexports.stringToPDFString = stringToPDFString;\nexports.stringToUTF8String = stringToUTF8String;\nexports.unreachable = unreachable;\nexports.utf8StringToString = utf8StringToString;\nexports.warn = warn;\nconst isNodeJS = typeof process === \"object\" && process + \"\" === \"[object process]\" && !process.versions.nw && !(process.versions.electron && process.type && process.type !== \"browser\");\nexports.isNodeJS = isNodeJS;\nconst IDENTITY_MATRIX = [1, 0, 0, 1, 0, 0];\nexports.IDENTITY_MATRIX = IDENTITY_MATRIX;\nconst FONT_IDENTITY_MATRIX = [0.001, 0, 0, 0.001, 0, 0];\nexports.FONT_IDENTITY_MATRIX = FONT_IDENTITY_MATRIX;\nconst MAX_IMAGE_SIZE_TO_CACHE = 10e6;\nexports.MAX_IMAGE_SIZE_TO_CACHE = MAX_IMAGE_SIZE_TO_CACHE;\nconst LINE_FACTOR = 1.35;\nexports.LINE_FACTOR = LINE_FACTOR;\nconst LINE_DESCENT_FACTOR = 0.35;\nexports.LINE_DESCENT_FACTOR = LINE_DESCENT_FACTOR;\nconst BASELINE_FACTOR = LINE_DESCENT_FACTOR / LINE_FACTOR;\nexports.BASELINE_FACTOR = BASELINE_FACTOR;\nconst RenderingIntentFlag = {\n  ANY: 0x01,\n  DISPLAY: 0x02,\n  PRINT: 0x04,\n  SAVE: 0x08,\n  ANNOTATIONS_FORMS: 0x10,\n  ANNOTATIONS_STORAGE: 0x20,\n  ANNOTATIONS_DISABLE: 0x40,\n  OPLIST: 0x100\n};\nexports.RenderingIntentFlag = RenderingIntentFlag;\nconst AnnotationMode = {\n  DISABLE: 0,\n  ENABLE: 1,\n  ENABLE_FORMS: 2,\n  ENABLE_STORAGE: 3\n};\nexports.AnnotationMode = AnnotationMode;\nconst AnnotationEditorPrefix = \"pdfjs_internal_editor_\";\nexports.AnnotationEditorPrefix = AnnotationEditorPrefix;\nconst AnnotationEditorType = {\n  DISABLE: -1,\n  NONE: 0,\n  FREETEXT: 3,\n  STAMP: 13,\n  INK: 15\n};\nexports.AnnotationEditorType = AnnotationEditorType;\nconst AnnotationEditorParamsType = {\n  RESIZE: 1,\n  CREATE: 2,\n  FREETEXT_SIZE: 11,\n  FREETEXT_COLOR: 12,\n  FREETEXT_OPACITY: 13,\n  INK_COLOR: 21,\n  INK_THICKNESS: 22,\n  INK_OPACITY: 23\n};\nexports.AnnotationEditorParamsType = AnnotationEditorParamsType;\nconst PermissionFlag = {\n  PRINT: 0x04,\n  MODIFY_CONTENTS: 0x08,\n  COPY: 0x10,\n  MODIFY_ANNOTATIONS: 0x20,\n  FILL_INTERACTIVE_FORMS: 0x100,\n  COPY_FOR_ACCESSIBILITY: 0x200,\n  ASSEMBLE: 0x400,\n  PRINT_HIGH_QUALITY: 0x800\n};\nexports.PermissionFlag = PermissionFlag;\nconst TextRenderingMode = {\n  FILL: 0,\n  STROKE: 1,\n  FILL_STROKE: 2,\n  INVISIBLE: 3,\n  FILL_ADD_TO_PATH: 4,\n  STROKE_ADD_TO_PATH: 5,\n  FILL_STROKE_ADD_TO_PATH: 6,\n  ADD_TO_PATH: 7,\n  FILL_STROKE_MASK: 3,\n  ADD_TO_PATH_FLAG: 4\n};\nexports.TextRenderingMode = TextRenderingMode;\nconst ImageKind = {\n  GRAYSCALE_1BPP: 1,\n  RGB_24BPP: 2,\n  RGBA_32BPP: 3\n};\nexports.ImageKind = ImageKind;\nconst AnnotationType = {\n  TEXT: 1,\n  LINK: 2,\n  FREETEXT: 3,\n  LINE: 4,\n  SQUARE: 5,\n  CIRCLE: 6,\n  POLYGON: 7,\n  POLYLINE: 8,\n  HIGHLIGHT: 9,\n  UNDERLINE: 10,\n  SQUIGGLY: 11,\n  STRIKEOUT: 12,\n  STAMP: 13,\n  CARET: 14,\n  INK: 15,\n  POPUP: 16,\n  FILEATTACHMENT: 17,\n  SOUND: 18,\n  MOVIE: 19,\n  WIDGET: 20,\n  SCREEN: 21,\n  PRINTERMARK: 22,\n  TRAPNET: 23,\n  WATERMARK: 24,\n  THREED: 25,\n  REDACT: 26\n};\nexports.AnnotationType = AnnotationType;\nconst AnnotationReplyType = {\n  GROUP: \"Group\",\n  REPLY: \"R\"\n};\nexports.AnnotationReplyType = AnnotationReplyType;\nconst AnnotationFlag = {\n  INVISIBLE: 0x01,\n  HIDDEN: 0x02,\n  PRINT: 0x04,\n  NOZOOM: 0x08,\n  NOROTATE: 0x10,\n  NOVIEW: 0x20,\n  READONLY: 0x40,\n  LOCKED: 0x80,\n  TOGGLENOVIEW: 0x100,\n  LOCKEDCONTENTS: 0x200\n};\nexports.AnnotationFlag = AnnotationFlag;\nconst AnnotationFieldFlag = {\n  READONLY: 0x0000001,\n  REQUIRED: 0x0000002,\n  NOEXPORT: 0x0000004,\n  MULTILINE: 0x0001000,\n  PASSWORD: 0x0002000,\n  NOTOGGLETOOFF: 0x0004000,\n  RADIO: 0x0008000,\n  PUSHBUTTON: 0x0010000,\n  COMBO: 0x0020000,\n  EDIT: 0x0040000,\n  SORT: 0x0080000,\n  FILESELECT: 0x0100000,\n  MULTISELECT: 0x0200000,\n  DONOTSPELLCHECK: 0x0400000,\n  DONOTSCROLL: 0x0800000,\n  COMB: 0x1000000,\n  RICHTEXT: 0x2000000,\n  RADIOSINUNISON: 0x2000000,\n  COMMITONSELCHANGE: 0x4000000\n};\nexports.AnnotationFieldFlag = AnnotationFieldFlag;\nconst AnnotationBorderStyleType = {\n  SOLID: 1,\n  DASHED: 2,\n  BEVELED: 3,\n  INSET: 4,\n  UNDERLINE: 5\n};\nexports.AnnotationBorderStyleType = AnnotationBorderStyleType;\nconst AnnotationActionEventType = {\n  E: \"Mouse Enter\",\n  X: \"Mouse Exit\",\n  D: \"Mouse Down\",\n  U: \"Mouse Up\",\n  Fo: \"Focus\",\n  Bl: \"Blur\",\n  PO: \"PageOpen\",\n  PC: \"PageClose\",\n  PV: \"PageVisible\",\n  PI: \"PageInvisible\",\n  K: \"Keystroke\",\n  F: \"Format\",\n  V: \"Validate\",\n  C: \"Calculate\"\n};\nexports.AnnotationActionEventType = AnnotationActionEventType;\nconst DocumentActionEventType = {\n  WC: \"WillClose\",\n  WS: \"WillSave\",\n  DS: \"DidSave\",\n  WP: \"WillPrint\",\n  DP: \"DidPrint\"\n};\nexports.DocumentActionEventType = DocumentActionEventType;\nconst PageActionEventType = {\n  O: \"PageOpen\",\n  C: \"PageClose\"\n};\nexports.PageActionEventType = PageActionEventType;\nconst VerbosityLevel = {\n  ERRORS: 0,\n  WARNINGS: 1,\n  INFOS: 5\n};\nexports.VerbosityLevel = VerbosityLevel;\nconst CMapCompressionType = {\n  NONE: 0,\n  BINARY: 1\n};\nexports.CMapCompressionType = CMapCompressionType;\nconst OPS = {\n  dependency: 1,\n  setLineWidth: 2,\n  setLineCap: 3,\n  setLineJoin: 4,\n  setMiterLimit: 5,\n  setDash: 6,\n  setRenderingIntent: 7,\n  setFlatness: 8,\n  setGState: 9,\n  save: 10,\n  restore: 11,\n  transform: 12,\n  moveTo: 13,\n  lineTo: 14,\n  curveTo: 15,\n  curveTo2: 16,\n  curveTo3: 17,\n  closePath: 18,\n  rectangle: 19,\n  stroke: 20,\n  closeStroke: 21,\n  fill: 22,\n  eoFill: 23,\n  fillStroke: 24,\n  eoFillStroke: 25,\n  closeFillStroke: 26,\n  closeEOFillStroke: 27,\n  endPath: 28,\n  clip: 29,\n  eoClip: 30,\n  beginText: 31,\n  endText: 32,\n  setCharSpacing: 33,\n  setWordSpacing: 34,\n  setHScale: 35,\n  setLeading: 36,\n  setFont: 37,\n  setTextRenderingMode: 38,\n  setTextRise: 39,\n  moveText: 40,\n  setLeadingMoveText: 41,\n  setTextMatrix: 42,\n  nextLine: 43,\n  showText: 44,\n  showSpacedText: 45,\n  nextLineShowText: 46,\n  nextLineSetSpacingShowText: 47,\n  setCharWidth: 48,\n  setCharWidthAndBounds: 49,\n  setStrokeColorSpace: 50,\n  setFillColorSpace: 51,\n  setStrokeColor: 52,\n  setStrokeColorN: 53,\n  setFillColor: 54,\n  setFillColorN: 55,\n  setStrokeGray: 56,\n  setFillGray: 57,\n  setStrokeRGBColor: 58,\n  setFillRGBColor: 59,\n  setStrokeCMYKColor: 60,\n  setFillCMYKColor: 61,\n  shadingFill: 62,\n  beginInlineImage: 63,\n  beginImageData: 64,\n  endInlineImage: 65,\n  paintXObject: 66,\n  markPoint: 67,\n  markPointProps: 68,\n  beginMarkedContent: 69,\n  beginMarkedContentProps: 70,\n  endMarkedContent: 71,\n  beginCompat: 72,\n  endCompat: 73,\n  paintFormXObjectBegin: 74,\n  paintFormXObjectEnd: 75,\n  beginGroup: 76,\n  endGroup: 77,\n  beginAnnotation: 80,\n  endAnnotation: 81,\n  paintImageMaskXObject: 83,\n  paintImageMaskXObjectGroup: 84,\n  paintImageXObject: 85,\n  paintInlineImageXObject: 86,\n  paintInlineImageXObjectGroup: 87,\n  paintImageXObjectRepeat: 88,\n  paintImageMaskXObjectRepeat: 89,\n  paintSolidColorImageMask: 90,\n  constructPath: 91\n};\nexports.OPS = OPS;\nconst PasswordResponses = {\n  NEED_PASSWORD: 1,\n  INCORRECT_PASSWORD: 2\n};\nexports.PasswordResponses = PasswordResponses;\nlet verbosity = VerbosityLevel.WARNINGS;\nfunction setVerbosityLevel(level) {\n  if (Number.isInteger(level)) {\n    verbosity = level;\n  }\n}\nfunction getVerbosityLevel() {\n  return verbosity;\n}\nfunction info(msg) {\n  if (verbosity >= VerbosityLevel.INFOS) {\n    console.log(`Info: ${msg}`);\n  }\n}\nfunction warn(msg) {\n  if (verbosity >= VerbosityLevel.WARNINGS) {\n    console.log(`Warning: ${msg}`);\n  }\n}\nfunction unreachable(msg) {\n  throw new Error(msg);\n}\nfunction assert(cond, msg) {\n  if (!cond) {\n    unreachable(msg);\n  }\n}\nfunction _isValidProtocol(url) {\n  switch (url?.protocol) {\n    case \"http:\":\n    case \"https:\":\n    case \"ftp:\":\n    case \"mailto:\":\n    case \"tel:\":\n      return true;\n    default:\n      return false;\n  }\n}\nfunction createValidAbsoluteUrl(url, baseUrl = null, options = null) {\n  if (!url) {\n    return null;\n  }\n  try {\n    if (options && typeof url === \"string\") {\n      if (options.addDefaultProtocol && url.startsWith(\"www.\")) {\n        const dots = url.match(/\\./g);\n        if (dots?.length >= 2) {\n          url = `http://${url}`;\n        }\n      }\n      if (options.tryConvertEncoding) {\n        try {\n          url = stringToUTF8String(url);\n        } catch {}\n      }\n    }\n    const absoluteUrl = baseUrl ? new URL(url, baseUrl) : new URL(url);\n    if (_isValidProtocol(absoluteUrl)) {\n      return absoluteUrl;\n    }\n  } catch {}\n  return null;\n}\nfunction shadow(obj, prop, value, nonSerializable = false) {\n  Object.defineProperty(obj, prop, {\n    value,\n    enumerable: !nonSerializable,\n    configurable: true,\n    writable: false\n  });\n  return value;\n}\nconst BaseException = function BaseExceptionClosure() {\n  function BaseException(message, name) {\n    if (this.constructor === BaseException) {\n      unreachable(\"Cannot initialize BaseException.\");\n    }\n    this.message = message;\n    this.name = name;\n  }\n  BaseException.prototype = new Error();\n  BaseException.constructor = BaseException;\n  return BaseException;\n}();\nexports.BaseException = BaseException;\nclass PasswordException extends BaseException {\n  constructor(msg, code) {\n    super(msg, \"PasswordException\");\n    this.code = code;\n  }\n}\nexports.PasswordException = PasswordException;\nclass UnknownErrorException extends BaseException {\n  constructor(msg, details) {\n    super(msg, \"UnknownErrorException\");\n    this.details = details;\n  }\n}\nexports.UnknownErrorException = UnknownErrorException;\nclass InvalidPDFException extends BaseException {\n  constructor(msg) {\n    super(msg, \"InvalidPDFException\");\n  }\n}\nexports.InvalidPDFException = InvalidPDFException;\nclass MissingPDFException extends BaseException {\n  constructor(msg) {\n    super(msg, \"MissingPDFException\");\n  }\n}\nexports.MissingPDFException = MissingPDFException;\nclass UnexpectedResponseException extends BaseException {\n  constructor(msg, status) {\n    super(msg, \"UnexpectedResponseException\");\n    this.status = status;\n  }\n}\nexports.UnexpectedResponseException = UnexpectedResponseException;\nclass FormatError extends BaseException {\n  constructor(msg) {\n    super(msg, \"FormatError\");\n  }\n}\nexports.FormatError = FormatError;\nclass AbortException extends BaseException {\n  constructor(msg) {\n    super(msg, \"AbortException\");\n  }\n}\nexports.AbortException = AbortException;\nfunction bytesToString(bytes) {\n  if (typeof bytes !== \"object\" || bytes?.length === undefined) {\n    unreachable(\"Invalid argument for bytesToString\");\n  }\n  const length = bytes.length;\n  const MAX_ARGUMENT_COUNT = 8192;\n  if (length < MAX_ARGUMENT_COUNT) {\n    return String.fromCharCode.apply(null, bytes);\n  }\n  const strBuf = [];\n  for (let i = 0; i < length; i += MAX_ARGUMENT_COUNT) {\n    const chunkEnd = Math.min(i + MAX_ARGUMENT_COUNT, length);\n    const chunk = bytes.subarray(i, chunkEnd);\n    strBuf.push(String.fromCharCode.apply(null, chunk));\n  }\n  return strBuf.join(\"\");\n}\nfunction stringToBytes(str) {\n  if (typeof str !== \"string\") {\n    unreachable(\"Invalid argument for stringToBytes\");\n  }\n  const length = str.length;\n  const bytes = new Uint8Array(length);\n  for (let i = 0; i < length; ++i) {\n    bytes[i] = str.charCodeAt(i) & 0xff;\n  }\n  return bytes;\n}\nfunction string32(value) {\n  return String.fromCharCode(value >> 24 & 0xff, value >> 16 & 0xff, value >> 8 & 0xff, value & 0xff);\n}\nfunction objectSize(obj) {\n  return Object.keys(obj).length;\n}\nfunction objectFromMap(map) {\n  const obj = Object.create(null);\n  for (const [key, value] of map) {\n    obj[key] = value;\n  }\n  return obj;\n}\nfunction isLittleEndian() {\n  const buffer8 = new Uint8Array(4);\n  buffer8[0] = 1;\n  const view32 = new Uint32Array(buffer8.buffer, 0, 1);\n  return view32[0] === 1;\n}\nfunction isEvalSupported() {\n  try {\n    new Function(\"\");\n    return true;\n  } catch {\n    return false;\n  }\n}\nclass FeatureTest {\n  static get isLittleEndian() {\n    return shadow(this, \"isLittleEndian\", isLittleEndian());\n  }\n  static get isEvalSupported() {\n    return shadow(this, \"isEvalSupported\", isEvalSupported());\n  }\n  static get isOffscreenCanvasSupported() {\n    return shadow(this, \"isOffscreenCanvasSupported\", typeof OffscreenCanvas !== \"undefined\");\n  }\n  static get platform() {\n    if (typeof navigator === \"undefined\") {\n      return shadow(this, \"platform\", {\n        isWin: false,\n        isMac: false\n      });\n    }\n    return shadow(this, \"platform\", {\n      isWin: navigator.platform.includes(\"Win\"),\n      isMac: navigator.platform.includes(\"Mac\")\n    });\n  }\n  static get isCSSRoundSupported() {\n    return shadow(this, \"isCSSRoundSupported\", globalThis.CSS?.supports?.(\"width: round(1.5px, 1px)\"));\n  }\n}\nexports.FeatureTest = FeatureTest;\nconst hexNumbers = [...Array(256).keys()].map(n => n.toString(16).padStart(2, \"0\"));\nclass Util {\n  static makeHexColor(r, g, b) {\n    return `#${hexNumbers[r]}${hexNumbers[g]}${hexNumbers[b]}`;\n  }\n  static scaleMinMax(transform, minMax) {\n    let temp;\n    if (transform[0]) {\n      if (transform[0] < 0) {\n        temp = minMax[0];\n        minMax[0] = minMax[1];\n        minMax[1] = temp;\n      }\n      minMax[0] *= transform[0];\n      minMax[1] *= transform[0];\n      if (transform[3] < 0) {\n        temp = minMax[2];\n        minMax[2] = minMax[3];\n        minMax[3] = temp;\n      }\n      minMax[2] *= transform[3];\n      minMax[3] *= transform[3];\n    } else {\n      temp = minMax[0];\n      minMax[0] = minMax[2];\n      minMax[2] = temp;\n      temp = minMax[1];\n      minMax[1] = minMax[3];\n      minMax[3] = temp;\n      if (transform[1] < 0) {\n        temp = minMax[2];\n        minMax[2] = minMax[3];\n        minMax[3] = temp;\n      }\n      minMax[2] *= transform[1];\n      minMax[3] *= transform[1];\n      if (transform[2] < 0) {\n        temp = minMax[0];\n        minMax[0] = minMax[1];\n        minMax[1] = temp;\n      }\n      minMax[0] *= transform[2];\n      minMax[1] *= transform[2];\n    }\n    minMax[0] += transform[4];\n    minMax[1] += transform[4];\n    minMax[2] += transform[5];\n    minMax[3] += transform[5];\n  }\n  static transform(m1, m2) {\n    return [m1[0] * m2[0] + m1[2] * m2[1], m1[1] * m2[0] + m1[3] * m2[1], m1[0] * m2[2] + m1[2] * m2[3], m1[1] * m2[2] + m1[3] * m2[3], m1[0] * m2[4] + m1[2] * m2[5] + m1[4], m1[1] * m2[4] + m1[3] * m2[5] + m1[5]];\n  }\n  static applyTransform(p, m) {\n    const xt = p[0] * m[0] + p[1] * m[2] + m[4];\n    const yt = p[0] * m[1] + p[1] * m[3] + m[5];\n    return [xt, yt];\n  }\n  static applyInverseTransform(p, m) {\n    const d = m[0] * m[3] - m[1] * m[2];\n    const xt = (p[0] * m[3] - p[1] * m[2] + m[2] * m[5] - m[4] * m[3]) / d;\n    const yt = (-p[0] * m[1] + p[1] * m[0] + m[4] * m[1] - m[5] * m[0]) / d;\n    return [xt, yt];\n  }\n  static getAxialAlignedBoundingBox(r, m) {\n    const p1 = this.applyTransform(r, m);\n    const p2 = this.applyTransform(r.slice(2, 4), m);\n    const p3 = this.applyTransform([r[0], r[3]], m);\n    const p4 = this.applyTransform([r[2], r[1]], m);\n    return [Math.min(p1[0], p2[0], p3[0], p4[0]), Math.min(p1[1], p2[1], p3[1], p4[1]), Math.max(p1[0], p2[0], p3[0], p4[0]), Math.max(p1[1], p2[1], p3[1], p4[1])];\n  }\n  static inverseTransform(m) {\n    const d = m[0] * m[3] - m[1] * m[2];\n    return [m[3] / d, -m[1] / d, -m[2] / d, m[0] / d, (m[2] * m[5] - m[4] * m[3]) / d, (m[4] * m[1] - m[5] * m[0]) / d];\n  }\n  static singularValueDecompose2dScale(m) {\n    const transpose = [m[0], m[2], m[1], m[3]];\n    const a = m[0] * transpose[0] + m[1] * transpose[2];\n    const b = m[0] * transpose[1] + m[1] * transpose[3];\n    const c = m[2] * transpose[0] + m[3] * transpose[2];\n    const d = m[2] * transpose[1] + m[3] * transpose[3];\n    const first = (a + d) / 2;\n    const second = Math.sqrt((a + d) ** 2 - 4 * (a * d - c * b)) / 2;\n    const sx = first + second || 1;\n    const sy = first - second || 1;\n    return [Math.sqrt(sx), Math.sqrt(sy)];\n  }\n  static normalizeRect(rect) {\n    const r = rect.slice(0);\n    if (rect[0] > rect[2]) {\n      r[0] = rect[2];\n      r[2] = rect[0];\n    }\n    if (rect[1] > rect[3]) {\n      r[1] = rect[3];\n      r[3] = rect[1];\n    }\n    return r;\n  }\n  static intersect(rect1, rect2) {\n    const xLow = Math.max(Math.min(rect1[0], rect1[2]), Math.min(rect2[0], rect2[2]));\n    const xHigh = Math.min(Math.max(rect1[0], rect1[2]), Math.max(rect2[0], rect2[2]));\n    if (xLow > xHigh) {\n      return null;\n    }\n    const yLow = Math.max(Math.min(rect1[1], rect1[3]), Math.min(rect2[1], rect2[3]));\n    const yHigh = Math.min(Math.max(rect1[1], rect1[3]), Math.max(rect2[1], rect2[3]));\n    if (yLow > yHigh) {\n      return null;\n    }\n    return [xLow, yLow, xHigh, yHigh];\n  }\n  static bezierBoundingBox(x0, y0, x1, y1, x2, y2, x3, y3) {\n    const tvalues = [],\n      bounds = [[], []];\n    let a, b, c, t, t1, t2, b2ac, sqrtb2ac;\n    for (let i = 0; i < 2; ++i) {\n      if (i === 0) {\n        b = 6 * x0 - 12 * x1 + 6 * x2;\n        a = -3 * x0 + 9 * x1 - 9 * x2 + 3 * x3;\n        c = 3 * x1 - 3 * x0;\n      } else {\n        b = 6 * y0 - 12 * y1 + 6 * y2;\n        a = -3 * y0 + 9 * y1 - 9 * y2 + 3 * y3;\n        c = 3 * y1 - 3 * y0;\n      }\n      if (Math.abs(a) < 1e-12) {\n        if (Math.abs(b) < 1e-12) {\n          continue;\n        }\n        t = -c / b;\n        if (0 < t && t < 1) {\n          tvalues.push(t);\n        }\n        continue;\n      }\n      b2ac = b * b - 4 * c * a;\n      sqrtb2ac = Math.sqrt(b2ac);\n      if (b2ac < 0) {\n        continue;\n      }\n      t1 = (-b + sqrtb2ac) / (2 * a);\n      if (0 < t1 && t1 < 1) {\n        tvalues.push(t1);\n      }\n      t2 = (-b - sqrtb2ac) / (2 * a);\n      if (0 < t2 && t2 < 1) {\n        tvalues.push(t2);\n      }\n    }\n    let j = tvalues.length,\n      mt;\n    const jlen = j;\n    while (j--) {\n      t = tvalues[j];\n      mt = 1 - t;\n      bounds[0][j] = mt * mt * mt * x0 + 3 * mt * mt * t * x1 + 3 * mt * t * t * x2 + t * t * t * x3;\n      bounds[1][j] = mt * mt * mt * y0 + 3 * mt * mt * t * y1 + 3 * mt * t * t * y2 + t * t * t * y3;\n    }\n    bounds[0][jlen] = x0;\n    bounds[1][jlen] = y0;\n    bounds[0][jlen + 1] = x3;\n    bounds[1][jlen + 1] = y3;\n    bounds[0].length = bounds[1].length = jlen + 2;\n    return [Math.min(...bounds[0]), Math.min(...bounds[1]), Math.max(...bounds[0]), Math.max(...bounds[1])];\n  }\n}\nexports.Util = Util;\nconst PDFStringTranslateTable = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0x2d8, 0x2c7, 0x2c6, 0x2d9, 0x2dd, 0x2db, 0x2da, 0x2dc, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0x2022, 0x2020, 0x2021, 0x2026, 0x2014, 0x2013, 0x192, 0x2044, 0x2039, 0x203a, 0x2212, 0x2030, 0x201e, 0x201c, 0x201d, 0x2018, 0x2019, 0x201a, 0x2122, 0xfb01, 0xfb02, 0x141, 0x152, 0x160, 0x178, 0x17d, 0x131, 0x142, 0x153, 0x161, 0x17e, 0, 0x20ac];\nfunction stringToPDFString(str) {\n  if (str[0] >= \"\\xEF\") {\n    let encoding;\n    if (str[0] === \"\\xFE\" && str[1] === \"\\xFF\") {\n      encoding = \"utf-16be\";\n    } else if (str[0] === \"\\xFF\" && str[1] === \"\\xFE\") {\n      encoding = \"utf-16le\";\n    } else if (str[0] === \"\\xEF\" && str[1] === \"\\xBB\" && str[2] === \"\\xBF\") {\n      encoding = \"utf-8\";\n    }\n    if (encoding) {\n      try {\n        const decoder = new TextDecoder(encoding, {\n          fatal: true\n        });\n        const buffer = stringToBytes(str);\n        return decoder.decode(buffer);\n      } catch (ex) {\n        warn(`stringToPDFString: \"${ex}\".`);\n      }\n    }\n  }\n  const strBuf = [];\n  for (let i = 0, ii = str.length; i < ii; i++) {\n    const code = PDFStringTranslateTable[str.charCodeAt(i)];\n    strBuf.push(code ? String.fromCharCode(code) : str.charAt(i));\n  }\n  return strBuf.join(\"\");\n}\nfunction stringToUTF8String(str) {\n  return decodeURIComponent(escape(str));\n}\nfunction utf8StringToString(str) {\n  return unescape(encodeURIComponent(str));\n}\nfunction isArrayBuffer(v) {\n  return typeof v === \"object\" && v?.byteLength !== undefined;\n}\nfunction isArrayEqual(arr1, arr2) {\n  if (arr1.length !== arr2.length) {\n    return false;\n  }\n  for (let i = 0, ii = arr1.length; i < ii; i++) {\n    if (arr1[i] !== arr2[i]) {\n      return false;\n    }\n  }\n  return true;\n}\nfunction getModificationDate(date = new Date()) {\n  const buffer = [date.getUTCFullYear().toString(), (date.getUTCMonth() + 1).toString().padStart(2, \"0\"), date.getUTCDate().toString().padStart(2, \"0\"), date.getUTCHours().toString().padStart(2, \"0\"), date.getUTCMinutes().toString().padStart(2, \"0\"), date.getUTCSeconds().toString().padStart(2, \"0\")];\n  return buffer.join(\"\");\n}\nclass PromiseCapability {\n  #settled = false;\n  constructor() {\n    this.promise = new Promise((resolve, reject) => {\n      this.resolve = data => {\n        this.#settled = true;\n        resolve(data);\n      };\n      this.reject = reason => {\n        this.#settled = true;\n        reject(reason);\n      };\n    });\n  }\n  get settled() {\n    return this.#settled;\n  }\n}\nexports.PromiseCapability = PromiseCapability;\nlet NormalizeRegex = null;\nlet NormalizationMap = null;\nfunction normalizeUnicode(str) {\n  if (!NormalizeRegex) {\n    NormalizeRegex = /([\\u00a0\\u00b5\\u037e\\u0eb3\\u2000-\\u200a\\u202f\\u2126\\ufb00-\\ufb04\\ufb06\\ufb20-\\ufb36\\ufb38-\\ufb3c\\ufb3e\\ufb40-\\ufb41\\ufb43-\\ufb44\\ufb46-\\ufba1\\ufba4-\\ufba9\\ufbae-\\ufbb1\\ufbd3-\\ufbdc\\ufbde-\\ufbe7\\ufbea-\\ufbf8\\ufbfc-\\ufbfd\\ufc00-\\ufc5d\\ufc64-\\ufcf1\\ufcf5-\\ufd3d\\ufd88\\ufdf4\\ufdfa-\\ufdfb\\ufe71\\ufe77\\ufe79\\ufe7b\\ufe7d]+)|(\\ufb05+)/gu;\n    NormalizationMap = new Map([[\"ﬅ\", \"ſt\"]]);\n  }\n  return str.replaceAll(NormalizeRegex, (_, p1, p2) => {\n    return p1 ? p1.normalize(\"NFKC\") : NormalizationMap.get(p2);\n  });\n}\nfunction getUuid() {\n  if (typeof crypto !== \"undefined\" && typeof crypto?.randomUUID === \"function\") {\n    return crypto.randomUUID();\n  }\n  const buf = new Uint8Array(32);\n  if (typeof crypto !== \"undefined\" && typeof crypto?.getRandomValues === \"function\") {\n    crypto.getRandomValues(buf);\n  } else {\n    for (let i = 0; i < 32; i++) {\n      buf[i] = Math.floor(Math.random() * 255);\n    }\n  }\n  return bytesToString(buf);\n}\nconst AnnotationPrefix = \"pdfjs_internal_id_\";\nexports.AnnotationPrefix = AnnotationPrefix;\n\n/***/ }),\n/* 2 */\n/***/ ((__unused_webpack_module, exports, __w_pdfjs_require__) => {\n\n\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.RenderTask = exports.PDFWorkerUtil = exports.PDFWorker = exports.PDFPageProxy = exports.PDFDocumentProxy = exports.PDFDocumentLoadingTask = exports.PDFDataRangeTransport = exports.LoopbackPort = exports.DefaultStandardFontDataFactory = exports.DefaultFilterFactory = exports.DefaultCanvasFactory = exports.DefaultCMapReaderFactory = void 0;\nObject.defineProperty(exports, \"SVGGraphics\", ({\n  enumerable: true,\n  get: function () {\n    return _displaySvg.SVGGraphics;\n  }\n}));\nexports.build = void 0;\nexports.getDocument = getDocument;\nexports.version = void 0;\nvar _util = __w_pdfjs_require__(1);\nvar _annotation_storage = __w_pdfjs_require__(3);\nvar _display_utils = __w_pdfjs_require__(6);\nvar _font_loader = __w_pdfjs_require__(9);\nvar _displayNode_utils = __w_pdfjs_require__(10);\nvar _canvas = __w_pdfjs_require__(11);\nvar _worker_options = __w_pdfjs_require__(14);\nvar _message_handler = __w_pdfjs_require__(15);\nvar _metadata = __w_pdfjs_require__(16);\nvar _optional_content_config = __w_pdfjs_require__(17);\nvar _transport_stream = __w_pdfjs_require__(18);\nvar _displayFetch_stream = __w_pdfjs_require__(19);\nvar _displayNetwork = __w_pdfjs_require__(22);\nvar _displayNode_stream = __w_pdfjs_require__(23);\nvar _displaySvg = __w_pdfjs_require__(24);\nvar _xfa_text = __w_pdfjs_require__(25);\nconst DEFAULT_RANGE_CHUNK_SIZE = 65536;\nconst RENDERING_CANCELLED_TIMEOUT = 100;\nconst DELAYED_CLEANUP_TIMEOUT = 5000;\nconst DefaultCanvasFactory = _util.isNodeJS ? _displayNode_utils.NodeCanvasFactory : _display_utils.DOMCanvasFactory;\nexports.DefaultCanvasFactory = DefaultCanvasFactory;\nconst DefaultCMapReaderFactory = _util.isNodeJS ? _displayNode_utils.NodeCMapReaderFactory : _display_utils.DOMCMapReaderFactory;\nexports.DefaultCMapReaderFactory = DefaultCMapReaderFactory;\nconst DefaultFilterFactory = _util.isNodeJS ? _displayNode_utils.NodeFilterFactory : _display_utils.DOMFilterFactory;\nexports.DefaultFilterFactory = DefaultFilterFactory;\nconst DefaultStandardFontDataFactory = _util.isNodeJS ? _displayNode_utils.NodeStandardFontDataFactory : _display_utils.DOMStandardFontDataFactory;\nexports.DefaultStandardFontDataFactory = DefaultStandardFontDataFactory;\nfunction getDocument(src) {\n  if (typeof src === \"string\" || src instanceof URL) {\n    src = {\n      url: src\n    };\n  } else if ((0, _util.isArrayBuffer)(src)) {\n    src = {\n      data: src\n    };\n  }\n  if (typeof src !== \"object\") {\n    throw new Error(\"Invalid parameter in getDocument, need parameter object.\");\n  }\n  if (!src.url && !src.data && !src.range) {\n    throw new Error(\"Invalid parameter object: need either .data, .range or .url\");\n  }\n  const task = new PDFDocumentLoadingTask();\n  const {\n    docId\n  } = task;\n  const url = src.url ? getUrlProp(src.url) : null;\n  const data = src.data ? getDataProp(src.data) : null;\n  const httpHeaders = src.httpHeaders || null;\n  const withCredentials = src.withCredentials === true;\n  const password = src.password ?? null;\n  const rangeTransport = src.range instanceof PDFDataRangeTransport ? src.range : null;\n  const rangeChunkSize = Number.isInteger(src.rangeChunkSize) && src.rangeChunkSize > 0 ? src.rangeChunkSize : DEFAULT_RANGE_CHUNK_SIZE;\n  let worker = src.worker instanceof PDFWorker ? src.worker : null;\n  const verbosity = src.verbosity;\n  const docBaseUrl = typeof src.docBaseUrl === \"string\" && !(0, _display_utils.isDataScheme)(src.docBaseUrl) ? src.docBaseUrl : null;\n  const cMapUrl = typeof src.cMapUrl === \"string\" ? src.cMapUrl : null;\n  const cMapPacked = src.cMapPacked !== false;\n  const CMapReaderFactory = src.CMapReaderFactory || DefaultCMapReaderFactory;\n  const standardFontDataUrl = typeof src.standardFontDataUrl === \"string\" ? src.standardFontDataUrl : null;\n  const StandardFontDataFactory = src.StandardFontDataFactory || DefaultStandardFontDataFactory;\n  const ignoreErrors = src.stopAtErrors !== true;\n  const maxImageSize = Number.isInteger(src.maxImageSize) && src.maxImageSize > -1 ? src.maxImageSize : -1;\n  const isEvalSupported = src.isEvalSupported !== false;\n  const isOffscreenCanvasSupported = typeof src.isOffscreenCanvasSupported === \"boolean\" ? src.isOffscreenCanvasSupported : !_util.isNodeJS;\n  const canvasMaxAreaInBytes = Number.isInteger(src.canvasMaxAreaInBytes) ? src.canvasMaxAreaInBytes : -1;\n  const disableFontFace = typeof src.disableFontFace === \"boolean\" ? src.disableFontFace : _util.isNodeJS;\n  const fontExtraProperties = src.fontExtraProperties === true;\n  const enableXfa = src.enableXfa === true;\n  const ownerDocument = src.ownerDocument || globalThis.document;\n  const disableRange = src.disableRange === true;\n  const disableStream = src.disableStream === true;\n  const disableAutoFetch = src.disableAutoFetch === true;\n  const pdfBug = src.pdfBug === true;\n  const length = rangeTransport ? rangeTransport.length : src.length ?? NaN;\n  const useSystemFonts = typeof src.useSystemFonts === \"boolean\" ? src.useSystemFonts : !_util.isNodeJS && !disableFontFace;\n  const useWorkerFetch = typeof src.useWorkerFetch === \"boolean\" ? src.useWorkerFetch : CMapReaderFactory === _display_utils.DOMCMapReaderFactory && StandardFontDataFactory === _display_utils.DOMStandardFontDataFactory && cMapUrl && standardFontDataUrl && (0, _display_utils.isValidFetchUrl)(cMapUrl, document.baseURI) && (0, _display_utils.isValidFetchUrl)(standardFontDataUrl, document.baseURI);\n  const canvasFactory = src.canvasFactory || new DefaultCanvasFactory({\n    ownerDocument\n  });\n  const filterFactory = src.filterFactory || new DefaultFilterFactory({\n    docId,\n    ownerDocument\n  });\n  const styleElement = null;\n  (0, _util.setVerbosityLevel)(verbosity);\n  const transportFactory = {\n    canvasFactory,\n    filterFactory\n  };\n  if (!useWorkerFetch) {\n    transportFactory.cMapReaderFactory = new CMapReaderFactory({\n      baseUrl: cMapUrl,\n      isCompressed: cMapPacked\n    });\n    transportFactory.standardFontDataFactory = new StandardFontDataFactory({\n      baseUrl: standardFontDataUrl\n    });\n  }\n  if (!worker) {\n    const workerParams = {\n      verbosity,\n      port: _worker_options.GlobalWorkerOptions.workerPort\n    };\n    worker = workerParams.port ? PDFWorker.fromPort(workerParams) : new PDFWorker(workerParams);\n    task._worker = worker;\n  }\n  const fetchDocParams = {\n    docId,\n    apiVersion: '3.11.174',\n    data,\n    password,\n    disableAutoFetch,\n    rangeChunkSize,\n    length,\n    docBaseUrl,\n    enableXfa,\n    evaluatorOptions: {\n      maxImageSize,\n      disableFontFace,\n      ignoreErrors,\n      isEvalSupported,\n      isOffscreenCanvasSupported,\n      canvasMaxAreaInBytes,\n      fontExtraProperties,\n      useSystemFonts,\n      cMapUrl: useWorkerFetch ? cMapUrl : null,\n      standardFontDataUrl: useWorkerFetch ? standardFontDataUrl : null\n    }\n  };\n  const transportParams = {\n    ignoreErrors,\n    isEvalSupported,\n    disableFontFace,\n    fontExtraProperties,\n    enableXfa,\n    ownerDocument,\n    disableAutoFetch,\n    pdfBug,\n    styleElement\n  };\n  worker.promise.then(function () {\n    if (task.destroyed) {\n      throw new Error(\"Loading aborted\");\n    }\n    const workerIdPromise = _fetchDocument(worker, fetchDocParams);\n    const networkStreamPromise = new Promise(function (resolve) {\n      let networkStream;\n      if (rangeTransport) {\n        networkStream = new _transport_stream.PDFDataTransportStream({\n          length,\n          initialData: rangeTransport.initialData,\n          progressiveDone: rangeTransport.progressiveDone,\n          contentDispositionFilename: rangeTransport.contentDispositionFilename,\n          disableRange,\n          disableStream\n        }, rangeTransport);\n      } else if (!data) {\n        const createPDFNetworkStream = params => {\n          if (_util.isNodeJS) {\n            return new _displayNode_stream.PDFNodeStream(params);\n          }\n          return (0, _display_utils.isValidFetchUrl)(params.url) ? new _displayFetch_stream.PDFFetchStream(params) : new _displayNetwork.PDFNetworkStream(params);\n        };\n        networkStream = createPDFNetworkStream({\n          url,\n          length,\n          httpHeaders,\n          withCredentials,\n          rangeChunkSize,\n          disableRange,\n          disableStream\n        });\n      }\n      resolve(networkStream);\n    });\n    return Promise.all([workerIdPromise, networkStreamPromise]).then(function ([workerId, networkStream]) {\n      if (task.destroyed) {\n        throw new Error(\"Loading aborted\");\n      }\n      const messageHandler = new _message_handler.MessageHandler(docId, workerId, worker.port);\n      const transport = new WorkerTransport(messageHandler, task, networkStream, transportParams, transportFactory);\n      task._transport = transport;\n      messageHandler.send(\"Ready\", null);\n    });\n  }).catch(task._capability.reject);\n  return task;\n}\nasync function _fetchDocument(worker, source) {\n  if (worker.destroyed) {\n    throw new Error(\"Worker was destroyed\");\n  }\n  const workerId = await worker.messageHandler.sendWithPromise(\"GetDocRequest\", source, source.data ? [source.data.buffer] : null);\n  if (worker.destroyed) {\n    throw new Error(\"Worker was destroyed\");\n  }\n  return workerId;\n}\nfunction getUrlProp(val) {\n  if (val instanceof URL) {\n    return val.href;\n  }\n  try {\n    return new URL(val, window.location).href;\n  } catch {\n    if (_util.isNodeJS && typeof val === \"string\") {\n      return val;\n    }\n  }\n  throw new Error(\"Invalid PDF url data: \" + \"either string or URL-object is expected in the url property.\");\n}\nfunction getDataProp(val) {\n  if (_util.isNodeJS && typeof Buffer !== \"undefined\" && val instanceof Buffer) {\n    throw new Error(\"Please provide binary data as `Uint8Array`, rather than `Buffer`.\");\n  }\n  if (val instanceof Uint8Array && val.byteLength === val.buffer.byteLength) {\n    return val;\n  }\n  if (typeof val === \"string\") {\n    return (0, _util.stringToBytes)(val);\n  }\n  if (typeof val === \"object\" && !isNaN(val?.length) || (0, _util.isArrayBuffer)(val)) {\n    return new Uint8Array(val);\n  }\n  throw new Error(\"Invalid PDF binary data: either TypedArray, \" + \"string, or array-like object is expected in the data property.\");\n}\nclass PDFDocumentLoadingTask {\n  static #docId = 0;\n  constructor() {\n    this._capability = new _util.PromiseCapability();\n    this._transport = null;\n    this._worker = null;\n    this.docId = `d${PDFDocumentLoadingTask.#docId++}`;\n    this.destroyed = false;\n    this.onPassword = null;\n    this.onProgress = null;\n  }\n  get promise() {\n    return this._capability.promise;\n  }\n  async destroy() {\n    this.destroyed = true;\n    try {\n      if (this._worker?.port) {\n        this._worker._pendingDestroy = true;\n      }\n      await this._transport?.destroy();\n    } catch (ex) {\n      if (this._worker?.port) {\n        delete this._worker._pendingDestroy;\n      }\n      throw ex;\n    }\n    this._transport = null;\n    if (this._worker) {\n      this._worker.destroy();\n      this._worker = null;\n    }\n  }\n}\nexports.PDFDocumentLoadingTask = PDFDocumentLoadingTask;\nclass PDFDataRangeTransport {\n  constructor(length, initialData, progressiveDone = false, contentDispositionFilename = null) {\n    this.length = length;\n    this.initialData = initialData;\n    this.progressiveDone = progressiveDone;\n    this.contentDispositionFilename = contentDispositionFilename;\n    this._rangeListeners = [];\n    this._progressListeners = [];\n    this._progressiveReadListeners = [];\n    this._progressiveDoneListeners = [];\n    this._readyCapability = new _util.PromiseCapability();\n  }\n  addRangeListener(listener) {\n    this._rangeListeners.push(listener);\n  }\n  addProgressListener(listener) {\n    this._progressListeners.push(listener);\n  }\n  addProgressiveReadListener(listener) {\n    this._progressiveReadListeners.push(listener);\n  }\n  addProgressiveDoneListener(listener) {\n    this._progressiveDoneListeners.push(listener);\n  }\n  onDataRange(begin, chunk) {\n    for (const listener of this._rangeListeners) {\n      listener(begin, chunk);\n    }\n  }\n  onDataProgress(loaded, total) {\n    this._readyCapability.promise.then(() => {\n      for (const listener of this._progressListeners) {\n        listener(loaded, total);\n      }\n    });\n  }\n  onDataProgressiveRead(chunk) {\n    this._readyCapability.promise.then(() => {\n      for (const listener of this._progressiveReadListeners) {\n        listener(chunk);\n      }\n    });\n  }\n  onDataProgressiveDone() {\n    this._readyCapability.promise.then(() => {\n      for (const listener of this._progressiveDoneListeners) {\n        listener();\n      }\n    });\n  }\n  transportReady() {\n    this._readyCapability.resolve();\n  }\n  requestDataRange(begin, end) {\n    (0, _util.unreachable)(\"Abstract method PDFDataRangeTransport.requestDataRange\");\n  }\n  abort() {}\n}\nexports.PDFDataRangeTransport = PDFDataRangeTransport;\nclass PDFDocumentProxy {\n  constructor(pdfInfo, transport) {\n    this._pdfInfo = pdfInfo;\n    this._transport = transport;\n    Object.defineProperty(this, \"getJavaScript\", {\n      value: () => {\n        (0, _display_utils.deprecated)(\"`PDFDocumentProxy.getJavaScript`, \" + \"please use `PDFDocumentProxy.getJSActions` instead.\");\n        return this.getJSActions().then(js => {\n          if (!js) {\n            return js;\n          }\n          const jsArr = [];\n          for (const name in js) {\n            jsArr.push(...js[name]);\n          }\n          return jsArr;\n        });\n      }\n    });\n  }\n  get annotationStorage() {\n    return this._transport.annotationStorage;\n  }\n  get filterFactory() {\n    return this._transport.filterFactory;\n  }\n  get numPages() {\n    return this._pdfInfo.numPages;\n  }\n  get fingerprints() {\n    return this._pdfInfo.fingerprints;\n  }\n  get isPureXfa() {\n    return (0, _util.shadow)(this, \"isPureXfa\", !!this._transport._htmlForXfa);\n  }\n  get allXfaHtml() {\n    return this._transport._htmlForXfa;\n  }\n  getPage(pageNumber) {\n    return this._transport.getPage(pageNumber);\n  }\n  getPageIndex(ref) {\n    return this._transport.getPageIndex(ref);\n  }\n  getDestinations() {\n    return this._transport.getDestinations();\n  }\n  getDestination(id) {\n    return this._transport.getDestination(id);\n  }\n  getPageLabels() {\n    return this._transport.getPageLabels();\n  }\n  getPageLayout() {\n    return this._transport.getPageLayout();\n  }\n  getPageMode() {\n    return this._transport.getPageMode();\n  }\n  getViewerPreferences() {\n    return this._transport.getViewerPreferences();\n  }\n  getOpenAction() {\n    return this._transport.getOpenAction();\n  }\n  getAttachments() {\n    return this._transport.getAttachments();\n  }\n  getJSActions() {\n    return this._transport.getDocJSActions();\n  }\n  getOutline() {\n    return this._transport.getOutline();\n  }\n  getOptionalContentConfig() {\n    return this._transport.getOptionalContentConfig();\n  }\n  getPermissions() {\n    return this._transport.getPermissions();\n  }\n  getMetadata() {\n    return this._transport.getMetadata();\n  }\n  getMarkInfo() {\n    return this._transport.getMarkInfo();\n  }\n  getData() {\n    return this._transport.getData();\n  }\n  saveDocument() {\n    return this._transport.saveDocument();\n  }\n  getDownloadInfo() {\n    return this._transport.downloadInfoCapability.promise;\n  }\n  cleanup(keepLoadedFonts = false) {\n    return this._transport.startCleanup(keepLoadedFonts || this.isPureXfa);\n  }\n  destroy() {\n    return this.loadingTask.destroy();\n  }\n  get loadingParams() {\n    return this._transport.loadingParams;\n  }\n  get loadingTask() {\n    return this._transport.loadingTask;\n  }\n  getFieldObjects() {\n    return this._transport.getFieldObjects();\n  }\n  hasJSActions() {\n    return this._transport.hasJSActions();\n  }\n  getCalculationOrderIds() {\n    return this._transport.getCalculationOrderIds();\n  }\n}\nexports.PDFDocumentProxy = PDFDocumentProxy;\nclass PDFPageProxy {\n  #delayedCleanupTimeout = null;\n  #pendingCleanup = false;\n  constructor(pageIndex, pageInfo, transport, pdfBug = false) {\n    this._pageIndex = pageIndex;\n    this._pageInfo = pageInfo;\n    this._transport = transport;\n    this._stats = pdfBug ? new _display_utils.StatTimer() : null;\n    this._pdfBug = pdfBug;\n    this.commonObjs = transport.commonObjs;\n    this.objs = new PDFObjects();\n    this._maybeCleanupAfterRender = false;\n    this._intentStates = new Map();\n    this.destroyed = false;\n  }\n  get pageNumber() {\n    return this._pageIndex + 1;\n  }\n  get rotate() {\n    return this._pageInfo.rotate;\n  }\n  get ref() {\n    return this._pageInfo.ref;\n  }\n  get userUnit() {\n    return this._pageInfo.userUnit;\n  }\n  get view() {\n    return this._pageInfo.view;\n  }\n  getViewport({\n    scale,\n    rotation = this.rotate,\n    offsetX = 0,\n    offsetY = 0,\n    dontFlip = false\n  } = {}) {\n    return new _display_utils.PageViewport({\n      viewBox: this.view,\n      scale,\n      rotation,\n      offsetX,\n      offsetY,\n      dontFlip\n    });\n  }\n  getAnnotations({\n    intent = \"display\"\n  } = {}) {\n    const intentArgs = this._transport.getRenderingIntent(intent);\n    return this._transport.getAnnotations(this._pageIndex, intentArgs.renderingIntent);\n  }\n  getJSActions() {\n    return this._transport.getPageJSActions(this._pageIndex);\n  }\n  get filterFactory() {\n    return this._transport.filterFactory;\n  }\n  get isPureXfa() {\n    return (0, _util.shadow)(this, \"isPureXfa\", !!this._transport._htmlForXfa);\n  }\n  async getXfa() {\n    return this._transport._htmlForXfa?.children[this._pageIndex] || null;\n  }\n  render({\n    canvasContext,\n    viewport,\n    intent = \"display\",\n    annotationMode = _util.AnnotationMode.ENABLE,\n    transform = null,\n    background = null,\n    optionalContentConfigPromise = null,\n    annotationCanvasMap = null,\n    pageColors = null,\n    printAnnotationStorage = null\n  }) {\n    this._stats?.time(\"Overall\");\n    const intentArgs = this._transport.getRenderingIntent(intent, annotationMode, printAnnotationStorage);\n    this.#pendingCleanup = false;\n    this.#abortDelayedCleanup();\n    if (!optionalContentConfigPromise) {\n      optionalContentConfigPromise = this._transport.getOptionalContentConfig();\n    }\n    let intentState = this._intentStates.get(intentArgs.cacheKey);\n    if (!intentState) {\n      intentState = Object.create(null);\n      this._intentStates.set(intentArgs.cacheKey, intentState);\n    }\n    if (intentState.streamReaderCancelTimeout) {\n      clearTimeout(intentState.streamReaderCancelTimeout);\n      intentState.streamReaderCancelTimeout = null;\n    }\n    const intentPrint = !!(intentArgs.renderingIntent & _util.RenderingIntentFlag.PRINT);\n    if (!intentState.displayReadyCapability) {\n      intentState.displayReadyCapability = new _util.PromiseCapability();\n      intentState.operatorList = {\n        fnArray: [],\n        argsArray: [],\n        lastChunk: false,\n        separateAnnots: null\n      };\n      this._stats?.time(\"Page Request\");\n      this._pumpOperatorList(intentArgs);\n    }\n    const complete = error => {\n      intentState.renderTasks.delete(internalRenderTask);\n      if (this._maybeCleanupAfterRender || intentPrint) {\n        this.#pendingCleanup = true;\n      }\n      this.#tryCleanup(!intentPrint);\n      if (error) {\n        internalRenderTask.capability.reject(error);\n        this._abortOperatorList({\n          intentState,\n          reason: error instanceof Error ? error : new Error(error)\n        });\n      } else {\n        internalRenderTask.capability.resolve();\n      }\n      this._stats?.timeEnd(\"Rendering\");\n      this._stats?.timeEnd(\"Overall\");\n    };\n    const internalRenderTask = new InternalRenderTask({\n      callback: complete,\n      params: {\n        canvasContext,\n        viewport,\n        transform,\n        background\n      },\n      objs: this.objs,\n      commonObjs: this.commonObjs,\n      annotationCanvasMap,\n      operatorList: intentState.operatorList,\n      pageIndex: this._pageIndex,\n      canvasFactory: this._transport.canvasFactory,\n      filterFactory: this._transport.filterFactory,\n      useRequestAnimationFrame: !intentPrint,\n      pdfBug: this._pdfBug,\n      pageColors\n    });\n    (intentState.renderTasks ||= new Set()).add(internalRenderTask);\n    const renderTask = internalRenderTask.task;\n    Promise.all([intentState.displayReadyCapability.promise, optionalContentConfigPromise]).then(([transparency, optionalContentConfig]) => {\n      if (this.destroyed) {\n        complete();\n        return;\n      }\n      this._stats?.time(\"Rendering\");\n      internalRenderTask.initializeGraphics({\n        transparency,\n        optionalContentConfig\n      });\n      internalRenderTask.operatorListChanged();\n    }).catch(complete);\n    return renderTask;\n  }\n  getOperatorList({\n    intent = \"display\",\n    annotationMode = _util.AnnotationMode.ENABLE,\n    printAnnotationStorage = null\n  } = {}) {\n    function operatorListChanged() {\n      if (intentState.operatorList.lastChunk) {\n        intentState.opListReadCapability.resolve(intentState.operatorList);\n        intentState.renderTasks.delete(opListTask);\n      }\n    }\n    const intentArgs = this._transport.getRenderingIntent(intent, annotationMode, printAnnotationStorage, true);\n    let intentState = this._intentStates.get(intentArgs.cacheKey);\n    if (!intentState) {\n      intentState = Object.create(null);\n      this._intentStates.set(intentArgs.cacheKey, intentState);\n    }\n    let opListTask;\n    if (!intentState.opListReadCapability) {\n      opListTask = Object.create(null);\n      opListTask.operatorListChanged = operatorListChanged;\n      intentState.opListReadCapability = new _util.PromiseCapability();\n      (intentState.renderTasks ||= new Set()).add(opListTask);\n      intentState.operatorList = {\n        fnArray: [],\n        argsArray: [],\n        lastChunk: false,\n        separateAnnots: null\n      };\n      this._stats?.time(\"Page Request\");\n      this._pumpOperatorList(intentArgs);\n    }\n    return intentState.opListReadCapability.promise;\n  }\n  streamTextContent({\n    includeMarkedContent = false,\n    disableNormalization = false\n  } = {}) {\n    const TEXT_CONTENT_CHUNK_SIZE = 100;\n    return this._transport.messageHandler.sendWithStream(\"GetTextContent\", {\n      pageIndex: this._pageIndex,\n      includeMarkedContent: includeMarkedContent === true,\n      disableNormalization: disableNormalization === true\n    }, {\n      highWaterMark: TEXT_CONTENT_CHUNK_SIZE,\n      size(textContent) {\n        return textContent.items.length;\n      }\n    });\n  }\n  getTextContent(params = {}) {\n    if (this._transport._htmlForXfa) {\n      return this.getXfa().then(xfa => {\n        return _xfa_text.XfaText.textContent(xfa);\n      });\n    }\n    const readableStream = this.streamTextContent(params);\n    return new Promise(function (resolve, reject) {\n      function pump() {\n        reader.read().then(function ({\n          value,\n          done\n        }) {\n          if (done) {\n            resolve(textContent);\n            return;\n          }\n          Object.assign(textContent.styles, value.styles);\n          textContent.items.push(...value.items);\n          pump();\n        }, reject);\n      }\n      const reader = readableStream.getReader();\n      const textContent = {\n        items: [],\n        styles: Object.create(null)\n      };\n      pump();\n    });\n  }\n  getStructTree() {\n    return this._transport.getStructTree(this._pageIndex);\n  }\n  _destroy() {\n    this.destroyed = true;\n    const waitOn = [];\n    for (const intentState of this._intentStates.values()) {\n      this._abortOperatorList({\n        intentState,\n        reason: new Error(\"Page was destroyed.\"),\n        force: true\n      });\n      if (intentState.opListReadCapability) {\n        continue;\n      }\n      for (const internalRenderTask of intentState.renderTasks) {\n        waitOn.push(internalRenderTask.completed);\n        internalRenderTask.cancel();\n      }\n    }\n    this.objs.clear();\n    this.#pendingCleanup = false;\n    this.#abortDelayedCleanup();\n    return Promise.all(waitOn);\n  }\n  cleanup(resetStats = false) {\n    this.#pendingCleanup = true;\n    const success = this.#tryCleanup(false);\n    if (resetStats && success) {\n      this._stats &&= new _display_utils.StatTimer();\n    }\n    return success;\n  }\n  #tryCleanup(delayed = false) {\n    this.#abortDelayedCleanup();\n    if (!this.#pendingCleanup || this.destroyed) {\n      return false;\n    }\n    if (delayed) {\n      this.#delayedCleanupTimeout = setTimeout(() => {\n        this.#delayedCleanupTimeout = null;\n        this.#tryCleanup(false);\n      }, DELAYED_CLEANUP_TIMEOUT);\n      return false;\n    }\n    for (const {\n      renderTasks,\n      operatorList\n    } of this._intentStates.values()) {\n      if (renderTasks.size > 0 || !operatorList.lastChunk) {\n        return false;\n      }\n    }\n    this._intentStates.clear();\n    this.objs.clear();\n    this.#pendingCleanup = false;\n    return true;\n  }\n  #abortDelayedCleanup() {\n    if (this.#delayedCleanupTimeout) {\n      clearTimeout(this.#delayedCleanupTimeout);\n      this.#delayedCleanupTimeout = null;\n    }\n  }\n  _startRenderPage(transparency, cacheKey) {\n    const intentState = this._intentStates.get(cacheKey);\n    if (!intentState) {\n      return;\n    }\n    this._stats?.timeEnd(\"Page Request\");\n    intentState.displayReadyCapability?.resolve(transparency);\n  }\n  _renderPageChunk(operatorListChunk, intentState) {\n    for (let i = 0, ii = operatorListChunk.length; i < ii; i++) {\n      intentState.operatorList.fnArray.push(operatorListChunk.fnArray[i]);\n      intentState.operatorList.argsArray.push(operatorListChunk.argsArray[i]);\n    }\n    intentState.operatorList.lastChunk = operatorListChunk.lastChunk;\n    intentState.operatorList.separateAnnots = operatorListChunk.separateAnnots;\n    for (const internalRenderTask of intentState.renderTasks) {\n      internalRenderTask.operatorListChanged();\n    }\n    if (operatorListChunk.lastChunk) {\n      this.#tryCleanup(true);\n    }\n  }\n  _pumpOperatorList({\n    renderingIntent,\n    cacheKey,\n    annotationStorageSerializable\n  }) {\n    const {\n      map,\n      transfers\n    } = annotationStorageSerializable;\n    const readableStream = this._transport.messageHandler.sendWithStream(\"GetOperatorList\", {\n      pageIndex: this._pageIndex,\n      intent: renderingIntent,\n      cacheKey,\n      annotationStorage: map\n    }, transfers);\n    const reader = readableStream.getReader();\n    const intentState = this._intentStates.get(cacheKey);\n    intentState.streamReader = reader;\n    const pump = () => {\n      reader.read().then(({\n        value,\n        done\n      }) => {\n        if (done) {\n          intentState.streamReader = null;\n          return;\n        }\n        if (this._transport.destroyed) {\n          return;\n        }\n        this._renderPageChunk(value, intentState);\n        pump();\n      }, reason => {\n        intentState.streamReader = null;\n        if (this._transport.destroyed) {\n          return;\n        }\n        if (intentState.operatorList) {\n          intentState.operatorList.lastChunk = true;\n          for (const internalRenderTask of intentState.renderTasks) {\n            internalRenderTask.operatorListChanged();\n          }\n          this.#tryCleanup(true);\n        }\n        if (intentState.displayReadyCapability) {\n          intentState.displayReadyCapability.reject(reason);\n        } else if (intentState.opListReadCapability) {\n          intentState.opListReadCapability.reject(reason);\n        } else {\n          throw reason;\n        }\n      });\n    };\n    pump();\n  }\n  _abortOperatorList({\n    intentState,\n    reason,\n    force = false\n  }) {\n    if (!intentState.streamReader) {\n      return;\n    }\n    if (intentState.streamReaderCancelTimeout) {\n      clearTimeout(intentState.streamReaderCancelTimeout);\n      intentState.streamReaderCancelTimeout = null;\n    }\n    if (!force) {\n      if (intentState.renderTasks.size > 0) {\n        return;\n      }\n      if (reason instanceof _display_utils.RenderingCancelledException) {\n        let delay = RENDERING_CANCELLED_TIMEOUT;\n        if (reason.extraDelay > 0 && reason.extraDelay < 1000) {\n          delay += reason.extraDelay;\n        }\n        intentState.streamReaderCancelTimeout = setTimeout(() => {\n          intentState.streamReaderCancelTimeout = null;\n          this._abortOperatorList({\n            intentState,\n            reason,\n            force: true\n          });\n        }, delay);\n        return;\n      }\n    }\n    intentState.streamReader.cancel(new _util.AbortException(reason.message)).catch(() => {});\n    intentState.streamReader = null;\n    if (this._transport.destroyed) {\n      return;\n    }\n    for (const [curCacheKey, curIntentState] of this._intentStates) {\n      if (curIntentState === intentState) {\n        this._intentStates.delete(curCacheKey);\n        break;\n      }\n    }\n    this.cleanup();\n  }\n  get stats() {\n    return this._stats;\n  }\n}\nexports.PDFPageProxy = PDFPageProxy;\nclass LoopbackPort {\n  #listeners = new Set();\n  #deferred = Promise.resolve();\n  postMessage(obj, transfer) {\n    const event = {\n      data: structuredClone(obj, transfer ? {\n        transfer\n      } : null)\n    };\n    this.#deferred.then(() => {\n      for (const listener of this.#listeners) {\n        listener.call(this, event);\n      }\n    });\n  }\n  addEventListener(name, listener) {\n    this.#listeners.add(listener);\n  }\n  removeEventListener(name, listener) {\n    this.#listeners.delete(listener);\n  }\n  terminate() {\n    this.#listeners.clear();\n  }\n}\nexports.LoopbackPort = LoopbackPort;\nconst PDFWorkerUtil = {\n  isWorkerDisabled: false,\n  fallbackWorkerSrc: null,\n  fakeWorkerId: 0\n};\nexports.PDFWorkerUtil = PDFWorkerUtil;\n{\n  if (_util.isNodeJS && typeof require === \"function\") {\n    PDFWorkerUtil.isWorkerDisabled = true;\n    PDFWorkerUtil.fallbackWorkerSrc = \"./pdf.worker.js\";\n  } else if (typeof document === \"object\") {\n    const pdfjsFilePath = document?.currentScript?.src;\n    if (pdfjsFilePath) {\n      PDFWorkerUtil.fallbackWorkerSrc = pdfjsFilePath.replace(/(\\.(?:min\\.)?js)(\\?.*)?$/i, \".worker$1$2\");\n    }\n  }\n  PDFWorkerUtil.isSameOrigin = function (baseUrl, otherUrl) {\n    let base;\n    try {\n      base = new URL(baseUrl);\n      if (!base.origin || base.origin === \"null\") {\n        return false;\n      }\n    } catch {\n      return false;\n    }\n    const other = new URL(otherUrl, base);\n    return base.origin === other.origin;\n  };\n  PDFWorkerUtil.createCDNWrapper = function (url) {\n    const wrapper = `importScripts(\"${url}\");`;\n    return URL.createObjectURL(new Blob([wrapper]));\n  };\n}\nclass PDFWorker {\n  static #workerPorts;\n  constructor({\n    name = null,\n    port = null,\n    verbosity = (0, _util.getVerbosityLevel)()\n  } = {}) {\n    this.name = name;\n    this.destroyed = false;\n    this.verbosity = verbosity;\n    this._readyCapability = new _util.PromiseCapability();\n    this._port = null;\n    this._webWorker = null;\n    this._messageHandler = null;\n    if (port) {\n      if (PDFWorker.#workerPorts?.has(port)) {\n        throw new Error(\"Cannot use more than one PDFWorker per port.\");\n      }\n      (PDFWorker.#workerPorts ||= new WeakMap()).set(port, this);\n      this._initializeFromPort(port);\n      return;\n    }\n    this._initialize();\n  }\n  get promise() {\n    return this._readyCapability.promise;\n  }\n  get port() {\n    return this._port;\n  }\n  get messageHandler() {\n    return this._messageHandler;\n  }\n  _initializeFromPort(port) {\n    this._port = port;\n    this._messageHandler = new _message_handler.MessageHandler(\"main\", \"worker\", port);\n    this._messageHandler.on(\"ready\", function () {});\n    this._readyCapability.resolve();\n    this._messageHandler.send(\"configure\", {\n      verbosity: this.verbosity\n    });\n  }\n  _initialize() {\n    if (!PDFWorkerUtil.isWorkerDisabled && !PDFWorker._mainThreadWorkerMessageHandler) {\n      let {\n        workerSrc\n      } = PDFWorker;\n      try {\n        if (!PDFWorkerUtil.isSameOrigin(window.location.href, workerSrc)) {\n          workerSrc = PDFWorkerUtil.createCDNWrapper(new URL(workerSrc, window.location).href);\n        }\n        const worker = new Worker(workerSrc);\n        const messageHandler = new _message_handler.MessageHandler(\"main\", \"worker\", worker);\n        const terminateEarly = () => {\n          worker.removeEventListener(\"error\", onWorkerError);\n          messageHandler.destroy();\n          worker.terminate();\n          if (this.destroyed) {\n            this._readyCapability.reject(new Error(\"Worker was destroyed\"));\n          } else {\n            this._setupFakeWorker();\n          }\n        };\n        const onWorkerError = () => {\n          if (!this._webWorker) {\n            terminateEarly();\n          }\n        };\n        worker.addEventListener(\"error\", onWorkerError);\n        messageHandler.on(\"test\", data => {\n          worker.removeEventListener(\"error\", onWorkerError);\n          if (this.destroyed) {\n            terminateEarly();\n            return;\n          }\n          if (data) {\n            this._messageHandler = messageHandler;\n            this._port = worker;\n            this._webWorker = worker;\n            this._readyCapability.resolve();\n            messageHandler.send(\"configure\", {\n              verbosity: this.verbosity\n            });\n          } else {\n            this._setupFakeWorker();\n            messageHandler.destroy();\n            worker.terminate();\n          }\n        });\n        messageHandler.on(\"ready\", data => {\n          worker.removeEventListener(\"error\", onWorkerError);\n          if (this.destroyed) {\n            terminateEarly();\n            return;\n          }\n          try {\n            sendTest();\n          } catch {\n            this._setupFakeWorker();\n          }\n        });\n        const sendTest = () => {\n          const testObj = new Uint8Array();\n          messageHandler.send(\"test\", testObj, [testObj.buffer]);\n        };\n        sendTest();\n        return;\n      } catch {\n        (0, _util.info)(\"The worker has been disabled.\");\n      }\n    }\n    this._setupFakeWorker();\n  }\n  _setupFakeWorker() {\n    if (!PDFWorkerUtil.isWorkerDisabled) {\n      (0, _util.warn)(\"Setting up fake worker.\");\n      PDFWorkerUtil.isWorkerDisabled = true;\n    }\n    PDFWorker._setupFakeWorkerGlobal.then(WorkerMessageHandler => {\n      if (this.destroyed) {\n        this._readyCapability.reject(new Error(\"Worker was destroyed\"));\n        return;\n      }\n      const port = new LoopbackPort();\n      this._port = port;\n      const id = `fake${PDFWorkerUtil.fakeWorkerId++}`;\n      const workerHandler = new _message_handler.MessageHandler(id + \"_worker\", id, port);\n      WorkerMessageHandler.setup(workerHandler, port);\n      const messageHandler = new _message_handler.MessageHandler(id, id + \"_worker\", port);\n      this._messageHandler = messageHandler;\n      this._readyCapability.resolve();\n      messageHandler.send(\"configure\", {\n        verbosity: this.verbosity\n      });\n    }).catch(reason => {\n      this._readyCapability.reject(new Error(`Setting up fake worker failed: \"${reason.message}\".`));\n    });\n  }\n  destroy() {\n    this.destroyed = true;\n    if (this._webWorker) {\n      this._webWorker.terminate();\n      this._webWorker = null;\n    }\n    PDFWorker.#workerPorts?.delete(this._port);\n    this._port = null;\n    if (this._messageHandler) {\n      this._messageHandler.destroy();\n      this._messageHandler = null;\n    }\n  }\n  static fromPort(params) {\n    if (!params?.port) {\n      throw new Error(\"PDFWorker.fromPort - invalid method signature.\");\n    }\n    const cachedPort = this.#workerPorts?.get(params.port);\n    if (cachedPort) {\n      if (cachedPort._pendingDestroy) {\n        throw new Error(\"PDFWorker.fromPort - the worker is being destroyed.\\n\" + \"Please remember to await `PDFDocumentLoadingTask.destroy()`-calls.\");\n      }\n      return cachedPort;\n    }\n    return new PDFWorker(params);\n  }\n  static get workerSrc() {\n    if (_worker_options.GlobalWorkerOptions.workerSrc) {\n      return _worker_options.GlobalWorkerOptions.workerSrc;\n    }\n    if (PDFWorkerUtil.fallbackWorkerSrc !== null) {\n      if (!_util.isNodeJS) {\n        (0, _display_utils.deprecated)('No \"GlobalWorkerOptions.workerSrc\" specified.');\n      }\n      return PDFWorkerUtil.fallbackWorkerSrc;\n    }\n    throw new Error('No \"GlobalWorkerOptions.workerSrc\" specified.');\n  }\n  static get _mainThreadWorkerMessageHandler() {\n    try {\n      return globalThis.pdfjsWorker?.WorkerMessageHandler || null;\n    } catch {\n      return null;\n    }\n  }\n  static get _setupFakeWorkerGlobal() {\n    const loader = async () => {\n      const mainWorkerMessageHandler = this._mainThreadWorkerMessageHandler;\n      if (mainWorkerMessageHandler) {\n        return mainWorkerMessageHandler;\n      }\n      if (_util.isNodeJS && typeof require === \"function\") {\n        const worker = eval(\"require\")(this.workerSrc);\n        return worker.WorkerMessageHandler;\n      }\n      await (0, _display_utils.loadScript)(this.workerSrc);\n      return window.pdfjsWorker.WorkerMessageHandler;\n    };\n    return (0, _util.shadow)(this, \"_setupFakeWorkerGlobal\", loader());\n  }\n}\nexports.PDFWorker = PDFWorker;\nclass WorkerTransport {\n  #methodPromises = new Map();\n  #pageCache = new Map();\n  #pagePromises = new Map();\n  #passwordCapability = null;\n  constructor(messageHandler, loadingTask, networkStream, params, factory) {\n    this.messageHandler = messageHandler;\n    this.loadingTask = loadingTask;\n    this.commonObjs = new PDFObjects();\n    this.fontLoader = new _font_loader.FontLoader({\n      ownerDocument: params.ownerDocument,\n      styleElement: params.styleElement\n    });\n    this._params = params;\n    this.canvasFactory = factory.canvasFactory;\n    this.filterFactory = factory.filterFactory;\n    this.cMapReaderFactory = factory.cMapReaderFactory;\n    this.standardFontDataFactory = factory.standardFontDataFactory;\n    this.destroyed = false;\n    this.destroyCapability = null;\n    this._networkStream = networkStream;\n    this._fullReader = null;\n    this._lastProgress = null;\n    this.downloadInfoCapability = new _util.PromiseCapability();\n    this.setupMessageHandler();\n  }\n  #cacheSimpleMethod(name, data = null) {\n    const cachedPromise = this.#methodPromises.get(name);\n    if (cachedPromise) {\n      return cachedPromise;\n    }\n    const promise = this.messageHandler.sendWithPromise(name, data);\n    this.#methodPromises.set(name, promise);\n    return promise;\n  }\n  get annotationStorage() {\n    return (0, _util.shadow)(this, \"annotationStorage\", new _annotation_storage.AnnotationStorage());\n  }\n  getRenderingIntent(intent, annotationMode = _util.AnnotationMode.ENABLE, printAnnotationStorage = null, isOpList = false) {\n    let renderingIntent = _util.RenderingIntentFlag.DISPLAY;\n    let annotationStorageSerializable = _annotation_storage.SerializableEmpty;\n    switch (intent) {\n      case \"any\":\n        renderingIntent = _util.RenderingIntentFlag.ANY;\n        break;\n      case \"display\":\n        break;\n      case \"print\":\n        renderingIntent = _util.RenderingIntentFlag.PRINT;\n        break;\n      default:\n        (0, _util.warn)(`getRenderingIntent - invalid intent: ${intent}`);\n    }\n    switch (annotationMode) {\n      case _util.AnnotationMode.DISABLE:\n        renderingIntent += _util.RenderingIntentFlag.ANNOTATIONS_DISABLE;\n        break;\n      case _util.AnnotationMode.ENABLE:\n        break;\n      case _util.AnnotationMode.ENABLE_FORMS:\n        renderingIntent += _util.RenderingIntentFlag.ANNOTATIONS_FORMS;\n        break;\n      case _util.AnnotationMode.ENABLE_STORAGE:\n        renderingIntent += _util.RenderingIntentFlag.ANNOTATIONS_STORAGE;\n        const annotationStorage = renderingIntent & _util.RenderingIntentFlag.PRINT && printAnnotationStorage instanceof _annotation_storage.PrintAnnotationStorage ? printAnnotationStorage : this.annotationStorage;\n        annotationStorageSerializable = annotationStorage.serializable;\n        break;\n      default:\n        (0, _util.warn)(`getRenderingIntent - invalid annotationMode: ${annotationMode}`);\n    }\n    if (isOpList) {\n      renderingIntent += _util.RenderingIntentFlag.OPLIST;\n    }\n    return {\n      renderingIntent,\n      cacheKey: `${renderingIntent}_${annotationStorageSerializable.hash}`,\n      annotationStorageSerializable\n    };\n  }\n  destroy() {\n    if (this.destroyCapability) {\n      return this.destroyCapability.promise;\n    }\n    this.destroyed = true;\n    this.destroyCapability = new _util.PromiseCapability();\n    this.#passwordCapability?.reject(new Error(\"Worker was destroyed during onPassword callback\"));\n    const waitOn = [];\n    for (const page of this.#pageCache.values()) {\n      waitOn.push(page._destroy());\n    }\n    this.#pageCache.clear();\n    this.#pagePromises.clear();\n    if (this.hasOwnProperty(\"annotationStorage\")) {\n      this.annotationStorage.resetModified();\n    }\n    const terminated = this.messageHandler.sendWithPromise(\"Terminate\", null);\n    waitOn.push(terminated);\n    Promise.all(waitOn).then(() => {\n      this.commonObjs.clear();\n      this.fontLoader.clear();\n      this.#methodPromises.clear();\n      this.filterFactory.destroy();\n      this._networkStream?.cancelAllRequests(new _util.AbortException(\"Worker was terminated.\"));\n      if (this.messageHandler) {\n        this.messageHandler.destroy();\n        this.messageHandler = null;\n      }\n      this.destroyCapability.resolve();\n    }, this.destroyCapability.reject);\n    return this.destroyCapability.promise;\n  }\n  setupMessageHandler() {\n    const {\n      messageHandler,\n      loadingTask\n    } = this;\n    messageHandler.on(\"GetReader\", (data, sink) => {\n      (0, _util.assert)(this._networkStream, \"GetReader - no `IPDFStream` instance available.\");\n      this._fullReader = this._networkStream.getFullReader();\n      this._fullReader.onProgress = evt => {\n        this._lastProgress = {\n          loaded: evt.loaded,\n          total: evt.total\n        };\n      };\n      sink.onPull = () => {\n        this._fullReader.read().then(function ({\n          value,\n          done\n        }) {\n          if (done) {\n            sink.close();\n            return;\n          }\n          (0, _util.assert)(value instanceof ArrayBuffer, \"GetReader - expected an ArrayBuffer.\");\n          sink.enqueue(new Uint8Array(value), 1, [value]);\n        }).catch(reason => {\n          sink.error(reason);\n        });\n      };\n      sink.onCancel = reason => {\n        this._fullReader.cancel(reason);\n        sink.ready.catch(readyReason => {\n          if (this.destroyed) {\n            return;\n          }\n          throw readyReason;\n        });\n      };\n    });\n    messageHandler.on(\"ReaderHeadersReady\", data => {\n      const headersCapability = new _util.PromiseCapability();\n      const fullReader = this._fullReader;\n      fullReader.headersReady.then(() => {\n        if (!fullReader.isStreamingSupported || !fullReader.isRangeSupported) {\n          if (this._lastProgress) {\n            loadingTask.onProgress?.(this._lastProgress);\n          }\n          fullReader.onProgress = evt => {\n            loadingTask.onProgress?.({\n              loaded: evt.loaded,\n              total: evt.total\n            });\n          };\n        }\n        headersCapability.resolve({\n          isStreamingSupported: fullReader.isStreamingSupported,\n          isRangeSupported: fullReader.isRangeSupported,\n          contentLength: fullReader.contentLength\n        });\n      }, headersCapability.reject);\n      return headersCapability.promise;\n    });\n    messageHandler.on(\"GetRangeReader\", (data, sink) => {\n      (0, _util.assert)(this._networkStream, \"GetRangeReader - no `IPDFStream` instance available.\");\n      const rangeReader = this._networkStream.getRangeReader(data.begin, data.end);\n      if (!rangeReader) {\n        sink.close();\n        return;\n      }\n      sink.onPull = () => {\n        rangeReader.read().then(function ({\n          value,\n          done\n        }) {\n          if (done) {\n            sink.close();\n            return;\n          }\n          (0, _util.assert)(value instanceof ArrayBuffer, \"GetRangeReader - expected an ArrayBuffer.\");\n          sink.enqueue(new Uint8Array(value), 1, [value]);\n        }).catch(reason => {\n          sink.error(reason);\n        });\n      };\n      sink.onCancel = reason => {\n        rangeReader.cancel(reason);\n        sink.ready.catch(readyReason => {\n          if (this.destroyed) {\n            return;\n          }\n          throw readyReason;\n        });\n      };\n    });\n    messageHandler.on(\"GetDoc\", ({\n      pdfInfo\n    }) => {\n      this._numPages = pdfInfo.numPages;\n      this._htmlForXfa = pdfInfo.htmlForXfa;\n      delete pdfInfo.htmlForXfa;\n      loadingTask._capability.resolve(new PDFDocumentProxy(pdfInfo, this));\n    });\n    messageHandler.on(\"DocException\", function (ex) {\n      let reason;\n      switch (ex.name) {\n        case \"PasswordException\":\n          reason = new _util.PasswordException(ex.message, ex.code);\n          break;\n        case \"InvalidPDFException\":\n          reason = new _util.InvalidPDFException(ex.message);\n          break;\n        case \"MissingPDFException\":\n          reason = new _util.MissingPDFException(ex.message);\n          break;\n        case \"UnexpectedResponseException\":\n          reason = new _util.UnexpectedResponseException(ex.message, ex.status);\n          break;\n        case \"UnknownErrorException\":\n          reason = new _util.UnknownErrorException(ex.message, ex.details);\n          break;\n        default:\n          (0, _util.unreachable)(\"DocException - expected a valid Error.\");\n      }\n      loadingTask._capability.reject(reason);\n    });\n    messageHandler.on(\"PasswordRequest\", exception => {\n      this.#passwordCapability = new _util.PromiseCapability();\n      if (loadingTask.onPassword) {\n        const updatePassword = password => {\n          if (password instanceof Error) {\n            this.#passwordCapability.reject(password);\n          } else {\n            this.#passwordCapability.resolve({\n              password\n            });\n          }\n        };\n        try {\n          loadingTask.onPassword(updatePassword, exception.code);\n        } catch (ex) {\n          this.#passwordCapability.reject(ex);\n        }\n      } else {\n        this.#passwordCapability.reject(new _util.PasswordException(exception.message, exception.code));\n      }\n      return this.#passwordCapability.promise;\n    });\n    messageHandler.on(\"DataLoaded\", data => {\n      loadingTask.onProgress?.({\n        loaded: data.length,\n        total: data.length\n      });\n      this.downloadInfoCapability.resolve(data);\n    });\n    messageHandler.on(\"StartRenderPage\", data => {\n      if (this.destroyed) {\n        return;\n      }\n      const page = this.#pageCache.get(data.pageIndex);\n      page._startRenderPage(data.transparency, data.cacheKey);\n    });\n    messageHandler.on(\"commonobj\", ([id, type, exportedData]) => {\n      if (this.destroyed) {\n        return;\n      }\n      if (this.commonObjs.has(id)) {\n        return;\n      }\n      switch (type) {\n        case \"Font\":\n          const params = this._params;\n          if (\"error\" in exportedData) {\n            const exportedError = exportedData.error;\n            (0, _util.warn)(`Error during font loading: ${exportedError}`);\n            this.commonObjs.resolve(id, exportedError);\n            break;\n          }\n          const inspectFont = params.pdfBug && globalThis.FontInspector?.enabled ? (font, url) => globalThis.FontInspector.fontAdded(font, url) : null;\n          const font = new _font_loader.FontFaceObject(exportedData, {\n            isEvalSupported: params.isEvalSupported,\n            disableFontFace: params.disableFontFace,\n            ignoreErrors: params.ignoreErrors,\n            inspectFont\n          });\n          this.fontLoader.bind(font).catch(reason => {\n            return messageHandler.sendWithPromise(\"FontFallback\", {\n              id\n            });\n          }).finally(() => {\n            if (!params.fontExtraProperties && font.data) {\n              font.data = null;\n            }\n            this.commonObjs.resolve(id, font);\n          });\n          break;\n        case \"FontPath\":\n        case \"Image\":\n        case \"Pattern\":\n          this.commonObjs.resolve(id, exportedData);\n          break;\n        default:\n          throw new Error(`Got unknown common object type ${type}`);\n      }\n    });\n    messageHandler.on(\"obj\", ([id, pageIndex, type, imageData]) => {\n      if (this.destroyed) {\n        return;\n      }\n      const pageProxy = this.#pageCache.get(pageIndex);\n      if (pageProxy.objs.has(id)) {\n        return;\n      }\n      switch (type) {\n        case \"Image\":\n          pageProxy.objs.resolve(id, imageData);\n          if (imageData) {\n            let length;\n            if (imageData.bitmap) {\n              const {\n                width,\n                height\n              } = imageData;\n              length = width * height * 4;\n            } else {\n              length = imageData.data?.length || 0;\n            }\n            if (length > _util.MAX_IMAGE_SIZE_TO_CACHE) {\n              pageProxy._maybeCleanupAfterRender = true;\n            }\n          }\n          break;\n        case \"Pattern\":\n          pageProxy.objs.resolve(id, imageData);\n          break;\n        default:\n          throw new Error(`Got unknown object type ${type}`);\n      }\n    });\n    messageHandler.on(\"DocProgress\", data => {\n      if (this.destroyed) {\n        return;\n      }\n      loadingTask.onProgress?.({\n        loaded: data.loaded,\n        total: data.total\n      });\n    });\n    messageHandler.on(\"FetchBuiltInCMap\", data => {\n      if (this.destroyed) {\n        return Promise.reject(new Error(\"Worker was destroyed.\"));\n      }\n      if (!this.cMapReaderFactory) {\n        return Promise.reject(new Error(\"CMapReaderFactory not initialized, see the `useWorkerFetch` parameter.\"));\n      }\n      return this.cMapReaderFactory.fetch(data);\n    });\n    messageHandler.on(\"FetchStandardFontData\", data => {\n      if (this.destroyed) {\n        return Promise.reject(new Error(\"Worker was destroyed.\"));\n      }\n      if (!this.standardFontDataFactory) {\n        return Promise.reject(new Error(\"StandardFontDataFactory not initialized, see the `useWorkerFetch` parameter.\"));\n      }\n      return this.standardFontDataFactory.fetch(data);\n    });\n  }\n  getData() {\n    return this.messageHandler.sendWithPromise(\"GetData\", null);\n  }\n  saveDocument() {\n    if (this.annotationStorage.size <= 0) {\n      (0, _util.warn)(\"saveDocument called while `annotationStorage` is empty, \" + \"please use the getData-method instead.\");\n    }\n    const {\n      map,\n      transfers\n    } = this.annotationStorage.serializable;\n    return this.messageHandler.sendWithPromise(\"SaveDocument\", {\n      isPureXfa: !!this._htmlForXfa,\n      numPages: this._numPages,\n      annotationStorage: map,\n      filename: this._fullReader?.filename ?? null\n    }, transfers).finally(() => {\n      this.annotationStorage.resetModified();\n    });\n  }\n  getPage(pageNumber) {\n    if (!Number.isInteger(pageNumber) || pageNumber <= 0 || pageNumber > this._numPages) {\n      return Promise.reject(new Error(\"Invalid page request.\"));\n    }\n    const pageIndex = pageNumber - 1,\n      cachedPromise = this.#pagePromises.get(pageIndex);\n    if (cachedPromise) {\n      return cachedPromise;\n    }\n    const promise = this.messageHandler.sendWithPromise(\"GetPage\", {\n      pageIndex\n    }).then(pageInfo => {\n      if (this.destroyed) {\n        throw new Error(\"Transport destroyed\");\n      }\n      const page = new PDFPageProxy(pageIndex, pageInfo, this, this._params.pdfBug);\n      this.#pageCache.set(pageIndex, page);\n      return page;\n    });\n    this.#pagePromises.set(pageIndex, promise);\n    return promise;\n  }\n  getPageIndex(ref) {\n    if (typeof ref !== \"object\" || ref === null || !Number.isInteger(ref.num) || ref.num < 0 || !Number.isInteger(ref.gen) || ref.gen < 0) {\n      return Promise.reject(new Error(\"Invalid pageIndex request.\"));\n    }\n    return this.messageHandler.sendWithPromise(\"GetPageIndex\", {\n      num: ref.num,\n      gen: ref.gen\n    });\n  }\n  getAnnotations(pageIndex, intent) {\n    return this.messageHandler.sendWithPromise(\"GetAnnotations\", {\n      pageIndex,\n      intent\n    });\n  }\n  getFieldObjects() {\n    return this.#cacheSimpleMethod(\"GetFieldObjects\");\n  }\n  hasJSActions() {\n    return this.#cacheSimpleMethod(\"HasJSActions\");\n  }\n  getCalculationOrderIds() {\n    return this.messageHandler.sendWithPromise(\"GetCalculationOrderIds\", null);\n  }\n  getDestinations() {\n    return this.messageHandler.sendWithPromise(\"GetDestinations\", null);\n  }\n  getDestination(id) {\n    if (typeof id !== \"string\") {\n      return Promise.reject(new Error(\"Invalid destination request.\"));\n    }\n    return this.messageHandler.sendWithPromise(\"GetDestination\", {\n      id\n    });\n  }\n  getPageLabels() {\n    return this.messageHandler.sendWithPromise(\"GetPageLabels\", null);\n  }\n  getPageLayout() {\n    return this.messageHandler.sendWithPromise(\"GetPageLayout\", null);\n  }\n  getPageMode() {\n    return this.messageHandler.sendWithPromise(\"GetPageMode\", null);\n  }\n  getViewerPreferences() {\n    return this.messageHandler.sendWithPromise(\"GetViewerPreferences\", null);\n  }\n  getOpenAction() {\n    return this.messageHandler.sendWithPromise(\"GetOpenAction\", null);\n  }\n  getAttachments() {\n    return this.messageHandler.sendWithPromise(\"GetAttachments\", null);\n  }\n  getDocJSActions() {\n    return this.#cacheSimpleMethod(\"GetDocJSActions\");\n  }\n  getPageJSActions(pageIndex) {\n    return this.messageHandler.sendWithPromise(\"GetPageJSActions\", {\n      pageIndex\n    });\n  }\n  getStructTree(pageIndex) {\n    return this.messageHandler.sendWithPromise(\"GetStructTree\", {\n      pageIndex\n    });\n  }\n  getOutline() {\n    return this.messageHandler.sendWithPromise(\"GetOutline\", null);\n  }\n  getOptionalContentConfig() {\n    return this.messageHandler.sendWithPromise(\"GetOptionalContentConfig\", null).then(results => {\n      return new _optional_content_config.OptionalContentConfig(results);\n    });\n  }\n  getPermissions() {\n    return this.messageHandler.sendWithPromise(\"GetPermissions\", null);\n  }\n  getMetadata() {\n    const name = \"GetMetadata\",\n      cachedPromise = this.#methodPromises.get(name);\n    if (cachedPromise) {\n      return cachedPromise;\n    }\n    const promise = this.messageHandler.sendWithPromise(name, null).then(results => {\n      return {\n        info: results[0],\n        metadata: results[1] ? new _metadata.Metadata(results[1]) : null,\n        contentDispositionFilename: this._fullReader?.filename ?? null,\n        contentLength: this._fullReader?.contentLength ?? null\n      };\n    });\n    this.#methodPromises.set(name, promise);\n    return promise;\n  }\n  getMarkInfo() {\n    return this.messageHandler.sendWithPromise(\"GetMarkInfo\", null);\n  }\n  async startCleanup(keepLoadedFonts = false) {\n    if (this.destroyed) {\n      return;\n    }\n    await this.messageHandler.sendWithPromise(\"Cleanup\", null);\n    for (const page of this.#pageCache.values()) {\n      const cleanupSuccessful = page.cleanup();\n      if (!cleanupSuccessful) {\n        throw new Error(`startCleanup: Page ${page.pageNumber} is currently rendering.`);\n      }\n    }\n    this.commonObjs.clear();\n    if (!keepLoadedFonts) {\n      this.fontLoader.clear();\n    }\n    this.#methodPromises.clear();\n    this.filterFactory.destroy(true);\n  }\n  get loadingParams() {\n    const {\n      disableAutoFetch,\n      enableXfa\n    } = this._params;\n    return (0, _util.shadow)(this, \"loadingParams\", {\n      disableAutoFetch,\n      enableXfa\n    });\n  }\n}\nclass PDFObjects {\n  #objs = Object.create(null);\n  #ensureObj(objId) {\n    return this.#objs[objId] ||= {\n      capability: new _util.PromiseCapability(),\n      data: null\n    };\n  }\n  get(objId, callback = null) {\n    if (callback) {\n      const obj = this.#ensureObj(objId);\n      obj.capability.promise.then(() => callback(obj.data));\n      return null;\n    }\n    const obj = this.#objs[objId];\n    if (!obj?.capability.settled) {\n      throw new Error(`Requesting object that isn't resolved yet ${objId}.`);\n    }\n    return obj.data;\n  }\n  has(objId) {\n    const obj = this.#objs[objId];\n    return obj?.capability.settled || false;\n  }\n  resolve(objId, data = null) {\n    const obj = this.#ensureObj(objId);\n    obj.data = data;\n    obj.capability.resolve();\n  }\n  clear() {\n    for (const objId in this.#objs) {\n      const {\n        data\n      } = this.#objs[objId];\n      data?.bitmap?.close();\n    }\n    this.#objs = Object.create(null);\n  }\n}\nclass RenderTask {\n  #internalRenderTask = null;\n  constructor(internalRenderTask) {\n    this.#internalRenderTask = internalRenderTask;\n    this.onContinue = null;\n  }\n  get promise() {\n    return this.#internalRenderTask.capability.promise;\n  }\n  cancel(extraDelay = 0) {\n    this.#internalRenderTask.cancel(null, extraDelay);\n  }\n  get separateAnnots() {\n    const {\n      separateAnnots\n    } = this.#internalRenderTask.operatorList;\n    if (!separateAnnots) {\n      return false;\n    }\n    const {\n      annotationCanvasMap\n    } = this.#internalRenderTask;\n    return separateAnnots.form || separateAnnots.canvas && annotationCanvasMap?.size > 0;\n  }\n}\nexports.RenderTask = RenderTask;\nclass InternalRenderTask {\n  static #canvasInUse = new WeakSet();\n  constructor({\n    callback,\n    params,\n    objs,\n    commonObjs,\n    annotationCanvasMap,\n    operatorList,\n    pageIndex,\n    canvasFactory,\n    filterFactory,\n    useRequestAnimationFrame = false,\n    pdfBug = false,\n    pageColors = null\n  }) {\n    this.callback = callback;\n    this.params = params;\n    this.objs = objs;\n    this.commonObjs = commonObjs;\n    this.annotationCanvasMap = annotationCanvasMap;\n    this.operatorListIdx = null;\n    this.operatorList = operatorList;\n    this._pageIndex = pageIndex;\n    this.canvasFactory = canvasFactory;\n    this.filterFactory = filterFactory;\n    this._pdfBug = pdfBug;\n    this.pageColors = pageColors;\n    this.running = false;\n    this.graphicsReadyCallback = null;\n    this.graphicsReady = false;\n    this._useRequestAnimationFrame = useRequestAnimationFrame === true && typeof window !== \"undefined\";\n    this.cancelled = false;\n    this.capability = new _util.PromiseCapability();\n    this.task = new RenderTask(this);\n    this._cancelBound = this.cancel.bind(this);\n    this._continueBound = this._continue.bind(this);\n    this._scheduleNextBound = this._scheduleNext.bind(this);\n    this._nextBound = this._next.bind(this);\n    this._canvas = params.canvasContext.canvas;\n  }\n  get completed() {\n    return this.capability.promise.catch(function () {});\n  }\n  initializeGraphics({\n    transparency = false,\n    optionalContentConfig\n  }) {\n    if (this.cancelled) {\n      return;\n    }\n    if (this._canvas) {\n      if (InternalRenderTask.#canvasInUse.has(this._canvas)) {\n        throw new Error(\"Cannot use the same canvas during multiple render() operations. \" + \"Use different canvas or ensure previous operations were \" + \"cancelled or completed.\");\n      }\n      InternalRenderTask.#canvasInUse.add(this._canvas);\n    }\n    if (this._pdfBug && globalThis.StepperManager?.enabled) {\n      this.stepper = globalThis.StepperManager.create(this._pageIndex);\n      this.stepper.init(this.operatorList);\n      this.stepper.nextBreakPoint = this.stepper.getNextBreakPoint();\n    }\n    const {\n      canvasContext,\n      viewport,\n      transform,\n      background\n    } = this.params;\n    this.gfx = new _canvas.CanvasGraphics(canvasContext, this.commonObjs, this.objs, this.canvasFactory, this.filterFactory, {\n      optionalContentConfig\n    }, this.annotationCanvasMap, this.pageColors);\n    this.gfx.beginDrawing({\n      transform,\n      viewport,\n      transparency,\n      background\n    });\n    this.operatorListIdx = 0;\n    this.graphicsReady = true;\n    this.graphicsReadyCallback?.();\n  }\n  cancel(error = null, extraDelay = 0) {\n    this.running = false;\n    this.cancelled = true;\n    this.gfx?.endDrawing();\n    InternalRenderTask.#canvasInUse.delete(this._canvas);\n    this.callback(error || new _display_utils.RenderingCancelledException(`Rendering cancelled, page ${this._pageIndex + 1}`, extraDelay));\n  }\n  operatorListChanged() {\n    if (!this.graphicsReady) {\n      this.graphicsReadyCallback ||= this._continueBound;\n      return;\n    }\n    this.stepper?.updateOperatorList(this.operatorList);\n    if (this.running) {\n      return;\n    }\n    this._continue();\n  }\n  _continue() {\n    this.running = true;\n    if (this.cancelled) {\n      return;\n    }\n    if (this.task.onContinue) {\n      this.task.onContinue(this._scheduleNextBound);\n    } else {\n      this._scheduleNext();\n    }\n  }\n  _scheduleNext() {\n    if (this._useRequestAnimationFrame) {\n      window.requestAnimationFrame(() => {\n        this._nextBound().catch(this._cancelBound);\n      });\n    } else {\n      Promise.resolve().then(this._nextBound).catch(this._cancelBound);\n    }\n  }\n  async _next() {\n    if (this.cancelled) {\n      return;\n    }\n    this.operatorListIdx = this.gfx.executeOperatorList(this.operatorList, this.operatorListIdx, this._continueBound, this.stepper);\n    if (this.operatorListIdx === this.operatorList.argsArray.length) {\n      this.running = false;\n      if (this.operatorList.lastChunk) {\n        this.gfx.endDrawing();\n        InternalRenderTask.#canvasInUse.delete(this._canvas);\n        this.callback();\n      }\n    }\n  }\n}\nconst version = '3.11.174';\nexports.version = version;\nconst build = 'ce8716743';\nexports.build = build;\n\n/***/ }),\n/* 3 */\n/***/ ((__unused_webpack_module, exports, __w_pdfjs_require__) => {\n\n\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.SerializableEmpty = exports.PrintAnnotationStorage = exports.AnnotationStorage = void 0;\nvar _util = __w_pdfjs_require__(1);\nvar _editor = __w_pdfjs_require__(4);\nvar _murmurhash = __w_pdfjs_require__(8);\nconst SerializableEmpty = Object.freeze({\n  map: null,\n  hash: \"\",\n  transfers: undefined\n});\nexports.SerializableEmpty = SerializableEmpty;\nclass AnnotationStorage {\n  #modified = false;\n  #storage = new Map();\n  constructor() {\n    this.onSetModified = null;\n    this.onResetModified = null;\n    this.onAnnotationEditor = null;\n  }\n  getValue(key, defaultValue) {\n    const value = this.#storage.get(key);\n    if (value === undefined) {\n      return defaultValue;\n    }\n    return Object.assign(defaultValue, value);\n  }\n  getRawValue(key) {\n    return this.#storage.get(key);\n  }\n  remove(key) {\n    this.#storage.delete(key);\n    if (this.#storage.size === 0) {\n      this.resetModified();\n    }\n    if (typeof this.onAnnotationEditor === \"function\") {\n      for (const value of this.#storage.values()) {\n        if (value instanceof _editor.AnnotationEditor) {\n          return;\n        }\n      }\n      this.onAnnotationEditor(null);\n    }\n  }\n  setValue(key, value) {\n    const obj = this.#storage.get(key);\n    let modified = false;\n    if (obj !== undefined) {\n      for (const [entry, val] of Object.entries(value)) {\n        if (obj[entry] !== val) {\n          modified = true;\n          obj[entry] = val;\n        }\n      }\n    } else {\n      modified = true;\n      this.#storage.set(key, value);\n    }\n    if (modified) {\n      this.#setModified();\n    }\n    if (value instanceof _editor.AnnotationEditor && typeof this.onAnnotationEditor === \"function\") {\n      this.onAnnotationEditor(value.constructor._type);\n    }\n  }\n  has(key) {\n    return this.#storage.has(key);\n  }\n  getAll() {\n    return this.#storage.size > 0 ? (0, _util.objectFromMap)(this.#storage) : null;\n  }\n  setAll(obj) {\n    for (const [key, val] of Object.entries(obj)) {\n      this.setValue(key, val);\n    }\n  }\n  get size() {\n    return this.#storage.size;\n  }\n  #setModified() {\n    if (!this.#modified) {\n      this.#modified = true;\n      if (typeof this.onSetModified === \"function\") {\n        this.onSetModified();\n      }\n    }\n  }\n  resetModified() {\n    if (this.#modified) {\n      this.#modified = false;\n      if (typeof this.onResetModified === \"function\") {\n        this.onResetModified();\n      }\n    }\n  }\n  get print() {\n    return new PrintAnnotationStorage(this);\n  }\n  get serializable() {\n    if (this.#storage.size === 0) {\n      return SerializableEmpty;\n    }\n    const map = new Map(),\n      hash = new _murmurhash.MurmurHash3_64(),\n      transfers = [];\n    const context = Object.create(null);\n    let hasBitmap = false;\n    for (const [key, val] of this.#storage) {\n      const serialized = val instanceof _editor.AnnotationEditor ? val.serialize(false, context) : val;\n      if (serialized) {\n        map.set(key, serialized);\n        hash.update(`${key}:${JSON.stringify(serialized)}`);\n        hasBitmap ||= !!serialized.bitmap;\n      }\n    }\n    if (hasBitmap) {\n      for (const value of map.values()) {\n        if (value.bitmap) {\n          transfers.push(value.bitmap);\n        }\n      }\n    }\n    return map.size > 0 ? {\n      map,\n      hash: hash.hexdigest(),\n      transfers\n    } : SerializableEmpty;\n  }\n}\nexports.AnnotationStorage = AnnotationStorage;\nclass PrintAnnotationStorage extends AnnotationStorage {\n  #serializable;\n  constructor(parent) {\n    super();\n    const {\n      map,\n      hash,\n      transfers\n    } = parent.serializable;\n    const clone = structuredClone(map, transfers ? {\n      transfer: transfers\n    } : null);\n    this.#serializable = {\n      map: clone,\n      hash,\n      transfers\n    };\n  }\n  get print() {\n    (0, _util.unreachable)(\"Should not call PrintAnnotationStorage.print\");\n  }\n  get serializable() {\n    return this.#serializable;\n  }\n}\nexports.PrintAnnotationStorage = PrintAnnotationStorage;\n\n/***/ }),\n/* 4 */\n/***/ ((__unused_webpack_module, exports, __w_pdfjs_require__) => {\n\n\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.AnnotationEditor = void 0;\nvar _tools = __w_pdfjs_require__(5);\nvar _util = __w_pdfjs_require__(1);\nvar _display_utils = __w_pdfjs_require__(6);\nclass AnnotationEditor {\n  #altText = \"\";\n  #altTextDecorative = false;\n  #altTextButton = null;\n  #altTextTooltip = null;\n  #altTextTooltipTimeout = null;\n  #keepAspectRatio = false;\n  #resizersDiv = null;\n  #boundFocusin = this.focusin.bind(this);\n  #boundFocusout = this.focusout.bind(this);\n  #hasBeenClicked = false;\n  #isEditing = false;\n  #isInEditMode = false;\n  _initialOptions = Object.create(null);\n  _uiManager = null;\n  _focusEventsAllowed = true;\n  _l10nPromise = null;\n  #isDraggable = false;\n  #zIndex = AnnotationEditor._zIndex++;\n  static _borderLineWidth = -1;\n  static _colorManager = new _tools.ColorManager();\n  static _zIndex = 1;\n  static SMALL_EDITOR_SIZE = 0;\n  constructor(parameters) {\n    if (this.constructor === AnnotationEditor) {\n      (0, _util.unreachable)(\"Cannot initialize AnnotationEditor.\");\n    }\n    this.parent = parameters.parent;\n    this.id = parameters.id;\n    this.width = this.height = null;\n    this.pageIndex = parameters.parent.pageIndex;\n    this.name = parameters.name;\n    this.div = null;\n    this._uiManager = parameters.uiManager;\n    this.annotationElementId = null;\n    this._willKeepAspectRatio = false;\n    this._initialOptions.isCentered = parameters.isCentered;\n    this._structTreeParentId = null;\n    const {\n      rotation,\n      rawDims: {\n        pageWidth,\n        pageHeight,\n        pageX,\n        pageY\n      }\n    } = this.parent.viewport;\n    this.rotation = rotation;\n    this.pageRotation = (360 + rotation - this._uiManager.viewParameters.rotation) % 360;\n    this.pageDimensions = [pageWidth, pageHeight];\n    this.pageTranslation = [pageX, pageY];\n    const [width, height] = this.parentDimensions;\n    this.x = parameters.x / width;\n    this.y = parameters.y / height;\n    this.isAttachedToDOM = false;\n    this.deleted = false;\n  }\n  get editorType() {\n    return Object.getPrototypeOf(this).constructor._type;\n  }\n  static get _defaultLineColor() {\n    return (0, _util.shadow)(this, \"_defaultLineColor\", this._colorManager.getHexCode(\"CanvasText\"));\n  }\n  static deleteAnnotationElement(editor) {\n    const fakeEditor = new FakeEditor({\n      id: editor.parent.getNextId(),\n      parent: editor.parent,\n      uiManager: editor._uiManager\n    });\n    fakeEditor.annotationElementId = editor.annotationElementId;\n    fakeEditor.deleted = true;\n    fakeEditor._uiManager.addToAnnotationStorage(fakeEditor);\n  }\n  static initialize(l10n, options = null) {\n    AnnotationEditor._l10nPromise ||= new Map([\"editor_alt_text_button_label\", \"editor_alt_text_edit_button_label\", \"editor_alt_text_decorative_tooltip\"].map(str => [str, l10n.get(str)]));\n    if (options?.strings) {\n      for (const str of options.strings) {\n        AnnotationEditor._l10nPromise.set(str, l10n.get(str));\n      }\n    }\n    if (AnnotationEditor._borderLineWidth !== -1) {\n      return;\n    }\n    const style = getComputedStyle(document.documentElement);\n    AnnotationEditor._borderLineWidth = parseFloat(style.getPropertyValue(\"--outline-width\")) || 0;\n  }\n  static updateDefaultParams(_type, _value) {}\n  static get defaultPropertiesToUpdate() {\n    return [];\n  }\n  static isHandlingMimeForPasting(mime) {\n    return false;\n  }\n  static paste(item, parent) {\n    (0, _util.unreachable)(\"Not implemented\");\n  }\n  get propertiesToUpdate() {\n    return [];\n  }\n  get _isDraggable() {\n    return this.#isDraggable;\n  }\n  set _isDraggable(value) {\n    this.#isDraggable = value;\n    this.div?.classList.toggle(\"draggable\", value);\n  }\n  center() {\n    const [pageWidth, pageHeight] = this.pageDimensions;\n    switch (this.parentRotation) {\n      case 90:\n        this.x -= this.height * pageHeight / (pageWidth * 2);\n        this.y += this.width * pageWidth / (pageHeight * 2);\n        break;\n      case 180:\n        this.x += this.width / 2;\n        this.y += this.height / 2;\n        break;\n      case 270:\n        this.x += this.height * pageHeight / (pageWidth * 2);\n        this.y -= this.width * pageWidth / (pageHeight * 2);\n        break;\n      default:\n        this.x -= this.width / 2;\n        this.y -= this.height / 2;\n        break;\n    }\n    this.fixAndSetPosition();\n  }\n  addCommands(params) {\n    this._uiManager.addCommands(params);\n  }\n  get currentLayer() {\n    return this._uiManager.currentLayer;\n  }\n  setInBackground() {\n    this.div.style.zIndex = 0;\n  }\n  setInForeground() {\n    this.div.style.zIndex = this.#zIndex;\n  }\n  setParent(parent) {\n    if (parent !== null) {\n      this.pageIndex = parent.pageIndex;\n      this.pageDimensions = parent.pageDimensions;\n    }\n    this.parent = parent;\n  }\n  focusin(event) {\n    if (!this._focusEventsAllowed) {\n      return;\n    }\n    if (!this.#hasBeenClicked) {\n      this.parent.setSelected(this);\n    } else {\n      this.#hasBeenClicked = false;\n    }\n  }\n  focusout(event) {\n    if (!this._focusEventsAllowed) {\n      return;\n    }\n    if (!this.isAttachedToDOM) {\n      return;\n    }\n    const target = event.relatedTarget;\n    if (target?.closest(`#${this.id}`)) {\n      return;\n    }\n    event.preventDefault();\n    if (!this.parent?.isMultipleSelection) {\n      this.commitOrRemove();\n    }\n  }\n  commitOrRemove() {\n    if (this.isEmpty()) {\n      this.remove();\n    } else {\n      this.commit();\n    }\n  }\n  commit() {\n    this.addToAnnotationStorage();\n  }\n  addToAnnotationStorage() {\n    this._uiManager.addToAnnotationStorage(this);\n  }\n  setAt(x, y, tx, ty) {\n    const [width, height] = this.parentDimensions;\n    [tx, ty] = this.screenToPageTranslation(tx, ty);\n    this.x = (x + tx) / width;\n    this.y = (y + ty) / height;\n    this.fixAndSetPosition();\n  }\n  #translate([width, height], x, y) {\n    [x, y] = this.screenToPageTranslation(x, y);\n    this.x += x / width;\n    this.y += y / height;\n    this.fixAndSetPosition();\n  }\n  translate(x, y) {\n    this.#translate(this.parentDimensions, x, y);\n  }\n  translateInPage(x, y) {\n    this.#translate(this.pageDimensions, x, y);\n    this.div.scrollIntoView({\n      block: \"nearest\"\n    });\n  }\n  drag(tx, ty) {\n    const [parentWidth, parentHeight] = this.parentDimensions;\n    this.x += tx / parentWidth;\n    this.y += ty / parentHeight;\n    if (this.parent && (this.x < 0 || this.x > 1 || this.y < 0 || this.y > 1)) {\n      const {\n        x,\n        y\n      } = this.div.getBoundingClientRect();\n      if (this.parent.findNewParent(this, x, y)) {\n        this.x -= Math.floor(this.x);\n        this.y -= Math.floor(this.y);\n      }\n    }\n    let {\n      x,\n      y\n    } = this;\n    const [bx, by] = this.#getBaseTranslation();\n    x += bx;\n    y += by;\n    this.div.style.left = `${(100 * x).toFixed(2)}%`;\n    this.div.style.top = `${(100 * y).toFixed(2)}%`;\n    this.div.scrollIntoView({\n      block: \"nearest\"\n    });\n  }\n  #getBaseTranslation() {\n    const [parentWidth, parentHeight] = this.parentDimensions;\n    const {\n      _borderLineWidth\n    } = AnnotationEditor;\n    const x = _borderLineWidth / parentWidth;\n    const y = _borderLineWidth / parentHeight;\n    switch (this.rotation) {\n      case 90:\n        return [-x, y];\n      case 180:\n        return [x, y];\n      case 270:\n        return [x, -y];\n      default:\n        return [-x, -y];\n    }\n  }\n  fixAndSetPosition() {\n    const [pageWidth, pageHeight] = this.pageDimensions;\n    let {\n      x,\n      y,\n      width,\n      height\n    } = this;\n    width *= pageWidth;\n    height *= pageHeight;\n    x *= pageWidth;\n    y *= pageHeight;\n    switch (this.rotation) {\n      case 0:\n        x = Math.max(0, Math.min(pageWidth - width, x));\n        y = Math.max(0, Math.min(pageHeight - height, y));\n        break;\n      case 90:\n        x = Math.max(0, Math.min(pageWidth - height, x));\n        y = Math.min(pageHeight, Math.max(width, y));\n        break;\n      case 180:\n        x = Math.min(pageWidth, Math.max(width, x));\n        y = Math.min(pageHeight, Math.max(height, y));\n        break;\n      case 270:\n        x = Math.min(pageWidth, Math.max(height, x));\n        y = Math.max(0, Math.min(pageHeight - width, y));\n        break;\n    }\n    this.x = x /= pageWidth;\n    this.y = y /= pageHeight;\n    const [bx, by] = this.#getBaseTranslation();\n    x += bx;\n    y += by;\n    const {\n      style\n    } = this.div;\n    style.left = `${(100 * x).toFixed(2)}%`;\n    style.top = `${(100 * y).toFixed(2)}%`;\n    this.moveInDOM();\n  }\n  static #rotatePoint(x, y, angle) {\n    switch (angle) {\n      case 90:\n        return [y, -x];\n      case 180:\n        return [-x, -y];\n      case 270:\n        return [-y, x];\n      default:\n        return [x, y];\n    }\n  }\n  screenToPageTranslation(x, y) {\n    return AnnotationEditor.#rotatePoint(x, y, this.parentRotation);\n  }\n  pageTranslationToScreen(x, y) {\n    return AnnotationEditor.#rotatePoint(x, y, 360 - this.parentRotation);\n  }\n  #getRotationMatrix(rotation) {\n    switch (rotation) {\n      case 90:\n        {\n          const [pageWidth, pageHeight] = this.pageDimensions;\n          return [0, -pageWidth / pageHeight, pageHeight / pageWidth, 0];\n        }\n      case 180:\n        return [-1, 0, 0, -1];\n      case 270:\n        {\n          const [pageWidth, pageHeight] = this.pageDimensions;\n          return [0, pageWidth / pageHeight, -pageHeight / pageWidth, 0];\n        }\n      default:\n        return [1, 0, 0, 1];\n    }\n  }\n  get parentScale() {\n    return this._uiManager.viewParameters.realScale;\n  }\n  get parentRotation() {\n    return (this._uiManager.viewParameters.rotation + this.pageRotation) % 360;\n  }\n  get parentDimensions() {\n    const {\n      parentScale,\n      pageDimensions: [pageWidth, pageHeight]\n    } = this;\n    const scaledWidth = pageWidth * parentScale;\n    const scaledHeight = pageHeight * parentScale;\n    return _util.FeatureTest.isCSSRoundSupported ? [Math.round(scaledWidth), Math.round(scaledHeight)] : [scaledWidth, scaledHeight];\n  }\n  setDims(width, height) {\n    const [parentWidth, parentHeight] = this.parentDimensions;\n    this.div.style.width = `${(100 * width / parentWidth).toFixed(2)}%`;\n    if (!this.#keepAspectRatio) {\n      this.div.style.height = `${(100 * height / parentHeight).toFixed(2)}%`;\n    }\n    this.#altTextButton?.classList.toggle(\"small\", width < AnnotationEditor.SMALL_EDITOR_SIZE || height < AnnotationEditor.SMALL_EDITOR_SIZE);\n  }\n  fixDims() {\n    const {\n      style\n    } = this.div;\n    const {\n      height,\n      width\n    } = style;\n    const widthPercent = width.endsWith(\"%\");\n    const heightPercent = !this.#keepAspectRatio && height.endsWith(\"%\");\n    if (widthPercent && heightPercent) {\n      return;\n    }\n    const [parentWidth, parentHeight] = this.parentDimensions;\n    if (!widthPercent) {\n      style.width = `${(100 * parseFloat(width) / parentWidth).toFixed(2)}%`;\n    }\n    if (!this.#keepAspectRatio && !heightPercent) {\n      style.height = `${(100 * parseFloat(height) / parentHeight).toFixed(2)}%`;\n    }\n  }\n  getInitialTranslation() {\n    return [0, 0];\n  }\n  #createResizers() {\n    if (this.#resizersDiv) {\n      return;\n    }\n    this.#resizersDiv = document.createElement(\"div\");\n    this.#resizersDiv.classList.add(\"resizers\");\n    const classes = [\"topLeft\", \"topRight\", \"bottomRight\", \"bottomLeft\"];\n    if (!this._willKeepAspectRatio) {\n      classes.push(\"topMiddle\", \"middleRight\", \"bottomMiddle\", \"middleLeft\");\n    }\n    for (const name of classes) {\n      const div = document.createElement(\"div\");\n      this.#resizersDiv.append(div);\n      div.classList.add(\"resizer\", name);\n      div.addEventListener(\"pointerdown\", this.#resizerPointerdown.bind(this, name));\n      div.addEventListener(\"contextmenu\", _display_utils.noContextMenu);\n    }\n    this.div.prepend(this.#resizersDiv);\n  }\n  #resizerPointerdown(name, event) {\n    event.preventDefault();\n    const {\n      isMac\n    } = _util.FeatureTest.platform;\n    if (event.button !== 0 || event.ctrlKey && isMac) {\n      return;\n    }\n    const boundResizerPointermove = this.#resizerPointermove.bind(this, name);\n    const savedDraggable = this._isDraggable;\n    this._isDraggable = false;\n    const pointerMoveOptions = {\n      passive: true,\n      capture: true\n    };\n    window.addEventListener(\"pointermove\", boundResizerPointermove, pointerMoveOptions);\n    const savedX = this.x;\n    const savedY = this.y;\n    const savedWidth = this.width;\n    const savedHeight = this.height;\n    const savedParentCursor = this.parent.div.style.cursor;\n    const savedCursor = this.div.style.cursor;\n    this.div.style.cursor = this.parent.div.style.cursor = window.getComputedStyle(event.target).cursor;\n    const pointerUpCallback = () => {\n      this._isDraggable = savedDraggable;\n      window.removeEventListener(\"pointerup\", pointerUpCallback);\n      window.removeEventListener(\"blur\", pointerUpCallback);\n      window.removeEventListener(\"pointermove\", boundResizerPointermove, pointerMoveOptions);\n      this.parent.div.style.cursor = savedParentCursor;\n      this.div.style.cursor = savedCursor;\n      const newX = this.x;\n      const newY = this.y;\n      const newWidth = this.width;\n      const newHeight = this.height;\n      if (newX === savedX && newY === savedY && newWidth === savedWidth && newHeight === savedHeight) {\n        return;\n      }\n      this.addCommands({\n        cmd: () => {\n          this.width = newWidth;\n          this.height = newHeight;\n          this.x = newX;\n          this.y = newY;\n          const [parentWidth, parentHeight] = this.parentDimensions;\n          this.setDims(parentWidth * newWidth, parentHeight * newHeight);\n          this.fixAndSetPosition();\n        },\n        undo: () => {\n          this.width = savedWidth;\n          this.height = savedHeight;\n          this.x = savedX;\n          this.y = savedY;\n          const [parentWidth, parentHeight] = this.parentDimensions;\n          this.setDims(parentWidth * savedWidth, parentHeight * savedHeight);\n          this.fixAndSetPosition();\n        },\n        mustExec: true\n      });\n    };\n    window.addEventListener(\"pointerup\", pointerUpCallback);\n    window.addEventListener(\"blur\", pointerUpCallback);\n  }\n  #resizerPointermove(name, event) {\n    const [parentWidth, parentHeight] = this.parentDimensions;\n    const savedX = this.x;\n    const savedY = this.y;\n    const savedWidth = this.width;\n    const savedHeight = this.height;\n    const minWidth = AnnotationEditor.MIN_SIZE / parentWidth;\n    const minHeight = AnnotationEditor.MIN_SIZE / parentHeight;\n    const round = x => Math.round(x * 10000) / 10000;\n    const rotationMatrix = this.#getRotationMatrix(this.rotation);\n    const transf = (x, y) => [rotationMatrix[0] * x + rotationMatrix[2] * y, rotationMatrix[1] * x + rotationMatrix[3] * y];\n    const invRotationMatrix = this.#getRotationMatrix(360 - this.rotation);\n    const invTransf = (x, y) => [invRotationMatrix[0] * x + invRotationMatrix[2] * y, invRotationMatrix[1] * x + invRotationMatrix[3] * y];\n    let getPoint;\n    let getOpposite;\n    let isDiagonal = false;\n    let isHorizontal = false;\n    switch (name) {\n      case \"topLeft\":\n        isDiagonal = true;\n        getPoint = (w, h) => [0, 0];\n        getOpposite = (w, h) => [w, h];\n        break;\n      case \"topMiddle\":\n        getPoint = (w, h) => [w / 2, 0];\n        getOpposite = (w, h) => [w / 2, h];\n        break;\n      case \"topRight\":\n        isDiagonal = true;\n        getPoint = (w, h) => [w, 0];\n        getOpposite = (w, h) => [0, h];\n        break;\n      case \"middleRight\":\n        isHorizontal = true;\n        getPoint = (w, h) => [w, h / 2];\n        getOpposite = (w, h) => [0, h / 2];\n        break;\n      case \"bottomRight\":\n        isDiagonal = true;\n        getPoint = (w, h) => [w, h];\n        getOpposite = (w, h) => [0, 0];\n        break;\n      case \"bottomMiddle\":\n        getPoint = (w, h) => [w / 2, h];\n        getOpposite = (w, h) => [w / 2, 0];\n        break;\n      case \"bottomLeft\":\n        isDiagonal = true;\n        getPoint = (w, h) => [0, h];\n        getOpposite = (w, h) => [w, 0];\n        break;\n      case \"middleLeft\":\n        isHorizontal = true;\n        getPoint = (w, h) => [0, h / 2];\n        getOpposite = (w, h) => [w, h / 2];\n        break;\n    }\n    const point = getPoint(savedWidth, savedHeight);\n    const oppositePoint = getOpposite(savedWidth, savedHeight);\n    let transfOppositePoint = transf(...oppositePoint);\n    const oppositeX = round(savedX + transfOppositePoint[0]);\n    const oppositeY = round(savedY + transfOppositePoint[1]);\n    let ratioX = 1;\n    let ratioY = 1;\n    let [deltaX, deltaY] = this.screenToPageTranslation(event.movementX, event.movementY);\n    [deltaX, deltaY] = invTransf(deltaX / parentWidth, deltaY / parentHeight);\n    if (isDiagonal) {\n      const oldDiag = Math.hypot(savedWidth, savedHeight);\n      ratioX = ratioY = Math.max(Math.min(Math.hypot(oppositePoint[0] - point[0] - deltaX, oppositePoint[1] - point[1] - deltaY) / oldDiag, 1 / savedWidth, 1 / savedHeight), minWidth / savedWidth, minHeight / savedHeight);\n    } else if (isHorizontal) {\n      ratioX = Math.max(minWidth, Math.min(1, Math.abs(oppositePoint[0] - point[0] - deltaX))) / savedWidth;\n    } else {\n      ratioY = Math.max(minHeight, Math.min(1, Math.abs(oppositePoint[1] - point[1] - deltaY))) / savedHeight;\n    }\n    const newWidth = round(savedWidth * ratioX);\n    const newHeight = round(savedHeight * ratioY);\n    transfOppositePoint = transf(...getOpposite(newWidth, newHeight));\n    const newX = oppositeX - transfOppositePoint[0];\n    const newY = oppositeY - transfOppositePoint[1];\n    this.width = newWidth;\n    this.height = newHeight;\n    this.x = newX;\n    this.y = newY;\n    this.setDims(parentWidth * newWidth, parentHeight * newHeight);\n    this.fixAndSetPosition();\n  }\n  async addAltTextButton() {\n    if (this.#altTextButton) {\n      return;\n    }\n    const altText = this.#altTextButton = document.createElement(\"button\");\n    altText.className = \"altText\";\n    const msg = await AnnotationEditor._l10nPromise.get(\"editor_alt_text_button_label\");\n    altText.textContent = msg;\n    altText.setAttribute(\"aria-label\", msg);\n    altText.tabIndex = \"0\";\n    altText.addEventListener(\"contextmenu\", _display_utils.noContextMenu);\n    altText.addEventListener(\"pointerdown\", event => event.stopPropagation());\n    altText.addEventListener(\"click\", event => {\n      event.preventDefault();\n      this._uiManager.editAltText(this);\n    }, {\n      capture: true\n    });\n    altText.addEventListener(\"keydown\", event => {\n      if (event.target === altText && event.key === \"Enter\") {\n        event.preventDefault();\n        this._uiManager.editAltText(this);\n      }\n    });\n    this.#setAltTextButtonState();\n    this.div.append(altText);\n    if (!AnnotationEditor.SMALL_EDITOR_SIZE) {\n      const PERCENT = 40;\n      AnnotationEditor.SMALL_EDITOR_SIZE = Math.min(128, Math.round(altText.getBoundingClientRect().width * (1 + PERCENT / 100)));\n    }\n  }\n  async #setAltTextButtonState() {\n    const button = this.#altTextButton;\n    if (!button) {\n      return;\n    }\n    if (!this.#altText && !this.#altTextDecorative) {\n      button.classList.remove(\"done\");\n      this.#altTextTooltip?.remove();\n      return;\n    }\n    AnnotationEditor._l10nPromise.get(\"editor_alt_text_edit_button_label\").then(msg => {\n      button.setAttribute(\"aria-label\", msg);\n    });\n    let tooltip = this.#altTextTooltip;\n    if (!tooltip) {\n      this.#altTextTooltip = tooltip = document.createElement(\"span\");\n      tooltip.className = \"tooltip\";\n      tooltip.setAttribute(\"role\", \"tooltip\");\n      const id = tooltip.id = `alt-text-tooltip-${this.id}`;\n      button.setAttribute(\"aria-describedby\", id);\n      const DELAY_TO_SHOW_TOOLTIP = 100;\n      button.addEventListener(\"mouseenter\", () => {\n        this.#altTextTooltipTimeout = setTimeout(() => {\n          this.#altTextTooltipTimeout = null;\n          this.#altTextTooltip.classList.add(\"show\");\n          this._uiManager._eventBus.dispatch(\"reporttelemetry\", {\n            source: this,\n            details: {\n              type: \"editing\",\n              subtype: this.editorType,\n              data: {\n                action: \"alt_text_tooltip\"\n              }\n            }\n          });\n        }, DELAY_TO_SHOW_TOOLTIP);\n      });\n      button.addEventListener(\"mouseleave\", () => {\n        clearTimeout(this.#altTextTooltipTimeout);\n        this.#altTextTooltipTimeout = null;\n        this.#altTextTooltip?.classList.remove(\"show\");\n      });\n    }\n    button.classList.add(\"done\");\n    tooltip.innerText = this.#altTextDecorative ? await AnnotationEditor._l10nPromise.get(\"editor_alt_text_decorative_tooltip\") : this.#altText;\n    if (!tooltip.parentNode) {\n      button.append(tooltip);\n    }\n  }\n  getClientDimensions() {\n    return this.div.getBoundingClientRect();\n  }\n  get altTextData() {\n    return {\n      altText: this.#altText,\n      decorative: this.#altTextDecorative\n    };\n  }\n  set altTextData({\n    altText,\n    decorative\n  }) {\n    if (this.#altText === altText && this.#altTextDecorative === decorative) {\n      return;\n    }\n    this.#altText = altText;\n    this.#altTextDecorative = decorative;\n    this.#setAltTextButtonState();\n  }\n  render() {\n    this.div = document.createElement(\"div\");\n    this.div.setAttribute(\"data-editor-rotation\", (360 - this.rotation) % 360);\n    this.div.className = this.name;\n    this.div.setAttribute(\"id\", this.id);\n    this.div.setAttribute(\"tabIndex\", 0);\n    this.setInForeground();\n    this.div.addEventListener(\"focusin\", this.#boundFocusin);\n    this.div.addEventListener(\"focusout\", this.#boundFocusout);\n    const [parentWidth, parentHeight] = this.parentDimensions;\n    if (this.parentRotation % 180 !== 0) {\n      this.div.style.maxWidth = `${(100 * parentHeight / parentWidth).toFixed(2)}%`;\n      this.div.style.maxHeight = `${(100 * parentWidth / parentHeight).toFixed(2)}%`;\n    }\n    const [tx, ty] = this.getInitialTranslation();\n    this.translate(tx, ty);\n    (0, _tools.bindEvents)(this, this.div, [\"pointerdown\"]);\n    return this.div;\n  }\n  pointerdown(event) {\n    const {\n      isMac\n    } = _util.FeatureTest.platform;\n    if (event.button !== 0 || event.ctrlKey && isMac) {\n      event.preventDefault();\n      return;\n    }\n    this.#hasBeenClicked = true;\n    this.#setUpDragSession(event);\n  }\n  #setUpDragSession(event) {\n    if (!this._isDraggable) {\n      return;\n    }\n    const isSelected = this._uiManager.isSelected(this);\n    this._uiManager.setUpDragSession();\n    let pointerMoveOptions, pointerMoveCallback;\n    if (isSelected) {\n      pointerMoveOptions = {\n        passive: true,\n        capture: true\n      };\n      pointerMoveCallback = e => {\n        const [tx, ty] = this.screenToPageTranslation(e.movementX, e.movementY);\n        this._uiManager.dragSelectedEditors(tx, ty);\n      };\n      window.addEventListener(\"pointermove\", pointerMoveCallback, pointerMoveOptions);\n    }\n    const pointerUpCallback = () => {\n      window.removeEventListener(\"pointerup\", pointerUpCallback);\n      window.removeEventListener(\"blur\", pointerUpCallback);\n      if (isSelected) {\n        window.removeEventListener(\"pointermove\", pointerMoveCallback, pointerMoveOptions);\n      }\n      this.#hasBeenClicked = false;\n      if (!this._uiManager.endDragSession()) {\n        const {\n          isMac\n        } = _util.FeatureTest.platform;\n        if (event.ctrlKey && !isMac || event.shiftKey || event.metaKey && isMac) {\n          this.parent.toggleSelected(this);\n        } else {\n          this.parent.setSelected(this);\n        }\n      }\n    };\n    window.addEventListener(\"pointerup\", pointerUpCallback);\n    window.addEventListener(\"blur\", pointerUpCallback);\n  }\n  moveInDOM() {\n    this.parent?.moveEditorInDOM(this);\n  }\n  _setParentAndPosition(parent, x, y) {\n    parent.changeParent(this);\n    this.x = x;\n    this.y = y;\n    this.fixAndSetPosition();\n  }\n  getRect(tx, ty) {\n    const scale = this.parentScale;\n    const [pageWidth, pageHeight] = this.pageDimensions;\n    const [pageX, pageY] = this.pageTranslation;\n    const shiftX = tx / scale;\n    const shiftY = ty / scale;\n    const x = this.x * pageWidth;\n    const y = this.y * pageHeight;\n    const width = this.width * pageWidth;\n    const height = this.height * pageHeight;\n    switch (this.rotation) {\n      case 0:\n        return [x + shiftX + pageX, pageHeight - y - shiftY - height + pageY, x + shiftX + width + pageX, pageHeight - y - shiftY + pageY];\n      case 90:\n        return [x + shiftY + pageX, pageHeight - y + shiftX + pageY, x + shiftY + height + pageX, pageHeight - y + shiftX + width + pageY];\n      case 180:\n        return [x - shiftX - width + pageX, pageHeight - y + shiftY + pageY, x - shiftX + pageX, pageHeight - y + shiftY + height + pageY];\n      case 270:\n        return [x - shiftY - height + pageX, pageHeight - y - shiftX - width + pageY, x - shiftY + pageX, pageHeight - y - shiftX + pageY];\n      default:\n        throw new Error(\"Invalid rotation\");\n    }\n  }\n  getRectInCurrentCoords(rect, pageHeight) {\n    const [x1, y1, x2, y2] = rect;\n    const width = x2 - x1;\n    const height = y2 - y1;\n    switch (this.rotation) {\n      case 0:\n        return [x1, pageHeight - y2, width, height];\n      case 90:\n        return [x1, pageHeight - y1, height, width];\n      case 180:\n        return [x2, pageHeight - y1, width, height];\n      case 270:\n        return [x2, pageHeight - y2, height, width];\n      default:\n        throw new Error(\"Invalid rotation\");\n    }\n  }\n  onceAdded() {}\n  isEmpty() {\n    return false;\n  }\n  enableEditMode() {\n    this.#isInEditMode = true;\n  }\n  disableEditMode() {\n    this.#isInEditMode = false;\n  }\n  isInEditMode() {\n    return this.#isInEditMode;\n  }\n  shouldGetKeyboardEvents() {\n    return false;\n  }\n  needsToBeRebuilt() {\n    return this.div && !this.isAttachedToDOM;\n  }\n  rebuild() {\n    this.div?.addEventListener(\"focusin\", this.#boundFocusin);\n    this.div?.addEventListener(\"focusout\", this.#boundFocusout);\n  }\n  serialize(isForCopying = false, context = null) {\n    (0, _util.unreachable)(\"An editor must be serializable\");\n  }\n  static deserialize(data, parent, uiManager) {\n    const editor = new this.prototype.constructor({\n      parent,\n      id: parent.getNextId(),\n      uiManager\n    });\n    editor.rotation = data.rotation;\n    const [pageWidth, pageHeight] = editor.pageDimensions;\n    const [x, y, width, height] = editor.getRectInCurrentCoords(data.rect, pageHeight);\n    editor.x = x / pageWidth;\n    editor.y = y / pageHeight;\n    editor.width = width / pageWidth;\n    editor.height = height / pageHeight;\n    return editor;\n  }\n  remove() {\n    this.div.removeEventListener(\"focusin\", this.#boundFocusin);\n    this.div.removeEventListener(\"focusout\", this.#boundFocusout);\n    if (!this.isEmpty()) {\n      this.commit();\n    }\n    if (this.parent) {\n      this.parent.remove(this);\n    } else {\n      this._uiManager.removeEditor(this);\n    }\n    this.#altTextButton?.remove();\n    this.#altTextButton = null;\n    this.#altTextTooltip = null;\n  }\n  get isResizable() {\n    return false;\n  }\n  makeResizable() {\n    if (this.isResizable) {\n      this.#createResizers();\n      this.#resizersDiv.classList.remove(\"hidden\");\n    }\n  }\n  select() {\n    this.makeResizable();\n    this.div?.classList.add(\"selectedEditor\");\n  }\n  unselect() {\n    this.#resizersDiv?.classList.add(\"hidden\");\n    this.div?.classList.remove(\"selectedEditor\");\n    if (this.div?.contains(document.activeElement)) {\n      this._uiManager.currentLayer.div.focus();\n    }\n  }\n  updateParams(type, value) {}\n  disableEditing() {\n    if (this.#altTextButton) {\n      this.#altTextButton.hidden = true;\n    }\n  }\n  enableEditing() {\n    if (this.#altTextButton) {\n      this.#altTextButton.hidden = false;\n    }\n  }\n  enterInEditMode() {}\n  get contentDiv() {\n    return this.div;\n  }\n  get isEditing() {\n    return this.#isEditing;\n  }\n  set isEditing(value) {\n    this.#isEditing = value;\n    if (!this.parent) {\n      return;\n    }\n    if (value) {\n      this.parent.setSelected(this);\n      this.parent.setActiveEditor(this);\n    } else {\n      this.parent.setActiveEditor(null);\n    }\n  }\n  setAspectRatio(width, height) {\n    this.#keepAspectRatio = true;\n    const aspectRatio = width / height;\n    const {\n      style\n    } = this.div;\n    style.aspectRatio = aspectRatio;\n    style.height = \"auto\";\n  }\n  static get MIN_SIZE() {\n    return 16;\n  }\n}\nexports.AnnotationEditor = AnnotationEditor;\nclass FakeEditor extends AnnotationEditor {\n  constructor(params) {\n    super(params);\n    this.annotationElementId = params.annotationElementId;\n    this.deleted = true;\n  }\n  serialize() {\n    return {\n      id: this.annotationElementId,\n      deleted: true,\n      pageIndex: this.pageIndex\n    };\n  }\n}\n\n/***/ }),\n/* 5 */\n/***/ ((__unused_webpack_module, exports, __w_pdfjs_require__) => {\n\n\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.KeyboardManager = exports.CommandManager = exports.ColorManager = exports.AnnotationEditorUIManager = void 0;\nexports.bindEvents = bindEvents;\nexports.opacityToHex = opacityToHex;\nvar _util = __w_pdfjs_require__(1);\nvar _display_utils = __w_pdfjs_require__(6);\nfunction bindEvents(obj, element, names) {\n  for (const name of names) {\n    element.addEventListener(name, obj[name].bind(obj));\n  }\n}\nfunction opacityToHex(opacity) {\n  return Math.round(Math.min(255, Math.max(1, 255 * opacity))).toString(16).padStart(2, \"0\");\n}\nclass IdManager {\n  #id = 0;\n  getId() {\n    return `${_util.AnnotationEditorPrefix}${this.#id++}`;\n  }\n}\nclass ImageManager {\n  #baseId = (0, _util.getUuid)();\n  #id = 0;\n  #cache = null;\n  static get _isSVGFittingCanvas() {\n    const svg = `data:image/svg+xml;charset=UTF-8,<svg viewBox=\"0 0 1 1\" width=\"1\" height=\"1\" xmlns=\"http://www.w3.org/2000/svg\"><rect width=\"1\" height=\"1\" style=\"fill:red;\"/></svg>`;\n    const canvas = new OffscreenCanvas(1, 3);\n    const ctx = canvas.getContext(\"2d\");\n    const image = new Image();\n    image.src = svg;\n    const promise = image.decode().then(() => {\n      ctx.drawImage(image, 0, 0, 1, 1, 0, 0, 1, 3);\n      return new Uint32Array(ctx.getImageData(0, 0, 1, 1).data.buffer)[0] === 0;\n    });\n    return (0, _util.shadow)(this, \"_isSVGFittingCanvas\", promise);\n  }\n  async #get(key, rawData) {\n    this.#cache ||= new Map();\n    let data = this.#cache.get(key);\n    if (data === null) {\n      return null;\n    }\n    if (data?.bitmap) {\n      data.refCounter += 1;\n      return data;\n    }\n    try {\n      data ||= {\n        bitmap: null,\n        id: `image_${this.#baseId}_${this.#id++}`,\n        refCounter: 0,\n        isSvg: false\n      };\n      let image;\n      if (typeof rawData === \"string\") {\n        data.url = rawData;\n        const response = await fetch(rawData);\n        if (!response.ok) {\n          throw new Error(response.statusText);\n        }\n        image = await response.blob();\n      } else {\n        image = data.file = rawData;\n      }\n      if (image.type === \"image/svg+xml\") {\n        const mustRemoveAspectRatioPromise = ImageManager._isSVGFittingCanvas;\n        const fileReader = new FileReader();\n        const imageElement = new Image();\n        const imagePromise = new Promise((resolve, reject) => {\n          imageElement.onload = () => {\n            data.bitmap = imageElement;\n            data.isSvg = true;\n            resolve();\n          };\n          fileReader.onload = async () => {\n            const url = data.svgUrl = fileReader.result;\n            imageElement.src = (await mustRemoveAspectRatioPromise) ? `${url}#svgView(preserveAspectRatio(none))` : url;\n          };\n          imageElement.onerror = fileReader.onerror = reject;\n        });\n        fileReader.readAsDataURL(image);\n        await imagePromise;\n      } else {\n        data.bitmap = await createImageBitmap(image);\n      }\n      data.refCounter = 1;\n    } catch (e) {\n      console.error(e);\n      data = null;\n    }\n    this.#cache.set(key, data);\n    if (data) {\n      this.#cache.set(data.id, data);\n    }\n    return data;\n  }\n  async getFromFile(file) {\n    const {\n      lastModified,\n      name,\n      size,\n      type\n    } = file;\n    return this.#get(`${lastModified}_${name}_${size}_${type}`, file);\n  }\n  async getFromUrl(url) {\n    return this.#get(url, url);\n  }\n  async getFromId(id) {\n    this.#cache ||= new Map();\n    const data = this.#cache.get(id);\n    if (!data) {\n      return null;\n    }\n    if (data.bitmap) {\n      data.refCounter += 1;\n      return data;\n    }\n    if (data.file) {\n      return this.getFromFile(data.file);\n    }\n    return this.getFromUrl(data.url);\n  }\n  getSvgUrl(id) {\n    const data = this.#cache.get(id);\n    if (!data?.isSvg) {\n      return null;\n    }\n    return data.svgUrl;\n  }\n  deleteId(id) {\n    this.#cache ||= new Map();\n    const data = this.#cache.get(id);\n    if (!data) {\n      return;\n    }\n    data.refCounter -= 1;\n    if (data.refCounter !== 0) {\n      return;\n    }\n    data.bitmap = null;\n  }\n  isValidId(id) {\n    return id.startsWith(`image_${this.#baseId}_`);\n  }\n}\nclass CommandManager {\n  #commands = [];\n  #locked = false;\n  #maxSize;\n  #position = -1;\n  constructor(maxSize = 128) {\n    this.#maxSize = maxSize;\n  }\n  add({\n    cmd,\n    undo,\n    mustExec,\n    type = NaN,\n    overwriteIfSameType = false,\n    keepUndo = false\n  }) {\n    if (mustExec) {\n      cmd();\n    }\n    if (this.#locked) {\n      return;\n    }\n    const save = {\n      cmd,\n      undo,\n      type\n    };\n    if (this.#position === -1) {\n      if (this.#commands.length > 0) {\n        this.#commands.length = 0;\n      }\n      this.#position = 0;\n      this.#commands.push(save);\n      return;\n    }\n    if (overwriteIfSameType && this.#commands[this.#position].type === type) {\n      if (keepUndo) {\n        save.undo = this.#commands[this.#position].undo;\n      }\n      this.#commands[this.#position] = save;\n      return;\n    }\n    const next = this.#position + 1;\n    if (next === this.#maxSize) {\n      this.#commands.splice(0, 1);\n    } else {\n      this.#position = next;\n      if (next < this.#commands.length) {\n        this.#commands.splice(next);\n      }\n    }\n    this.#commands.push(save);\n  }\n  undo() {\n    if (this.#position === -1) {\n      return;\n    }\n    this.#locked = true;\n    this.#commands[this.#position].undo();\n    this.#locked = false;\n    this.#position -= 1;\n  }\n  redo() {\n    if (this.#position < this.#commands.length - 1) {\n      this.#position += 1;\n      this.#locked = true;\n      this.#commands[this.#position].cmd();\n      this.#locked = false;\n    }\n  }\n  hasSomethingToUndo() {\n    return this.#position !== -1;\n  }\n  hasSomethingToRedo() {\n    return this.#position < this.#commands.length - 1;\n  }\n  destroy() {\n    this.#commands = null;\n  }\n}\nexports.CommandManager = CommandManager;\nclass KeyboardManager {\n  constructor(callbacks) {\n    this.buffer = [];\n    this.callbacks = new Map();\n    this.allKeys = new Set();\n    const {\n      isMac\n    } = _util.FeatureTest.platform;\n    for (const [keys, callback, options = {}] of callbacks) {\n      for (const key of keys) {\n        const isMacKey = key.startsWith(\"mac+\");\n        if (isMac && isMacKey) {\n          this.callbacks.set(key.slice(4), {\n            callback,\n            options\n          });\n          this.allKeys.add(key.split(\"+\").at(-1));\n        } else if (!isMac && !isMacKey) {\n          this.callbacks.set(key, {\n            callback,\n            options\n          });\n          this.allKeys.add(key.split(\"+\").at(-1));\n        }\n      }\n    }\n  }\n  #serialize(event) {\n    if (event.altKey) {\n      this.buffer.push(\"alt\");\n    }\n    if (event.ctrlKey) {\n      this.buffer.push(\"ctrl\");\n    }\n    if (event.metaKey) {\n      this.buffer.push(\"meta\");\n    }\n    if (event.shiftKey) {\n      this.buffer.push(\"shift\");\n    }\n    this.buffer.push(event.key);\n    const str = this.buffer.join(\"+\");\n    this.buffer.length = 0;\n    return str;\n  }\n  exec(self, event) {\n    if (!this.allKeys.has(event.key)) {\n      return;\n    }\n    const info = this.callbacks.get(this.#serialize(event));\n    if (!info) {\n      return;\n    }\n    const {\n      callback,\n      options: {\n        bubbles = false,\n        args = [],\n        checker = null\n      }\n    } = info;\n    if (checker && !checker(self, event)) {\n      return;\n    }\n    callback.bind(self, ...args)();\n    if (!bubbles) {\n      event.stopPropagation();\n      event.preventDefault();\n    }\n  }\n}\nexports.KeyboardManager = KeyboardManager;\nclass ColorManager {\n  static _colorsMapping = new Map([[\"CanvasText\", [0, 0, 0]], [\"Canvas\", [255, 255, 255]]]);\n  get _colors() {\n    const colors = new Map([[\"CanvasText\", null], [\"Canvas\", null]]);\n    (0, _display_utils.getColorValues)(colors);\n    return (0, _util.shadow)(this, \"_colors\", colors);\n  }\n  convert(color) {\n    const rgb = (0, _display_utils.getRGB)(color);\n    if (!window.matchMedia(\"(forced-colors: active)\").matches) {\n      return rgb;\n    }\n    for (const [name, RGB] of this._colors) {\n      if (RGB.every((x, i) => x === rgb[i])) {\n        return ColorManager._colorsMapping.get(name);\n      }\n    }\n    return rgb;\n  }\n  getHexCode(name) {\n    const rgb = this._colors.get(name);\n    if (!rgb) {\n      return name;\n    }\n    return _util.Util.makeHexColor(...rgb);\n  }\n}\nexports.ColorManager = ColorManager;\nclass AnnotationEditorUIManager {\n  #activeEditor = null;\n  #allEditors = new Map();\n  #allLayers = new Map();\n  #altTextManager = null;\n  #annotationStorage = null;\n  #commandManager = new CommandManager();\n  #currentPageIndex = 0;\n  #deletedAnnotationsElementIds = new Set();\n  #draggingEditors = null;\n  #editorTypes = null;\n  #editorsToRescale = new Set();\n  #filterFactory = null;\n  #idManager = new IdManager();\n  #isEnabled = false;\n  #isWaiting = false;\n  #lastActiveElement = null;\n  #mode = _util.AnnotationEditorType.NONE;\n  #selectedEditors = new Set();\n  #pageColors = null;\n  #boundBlur = this.blur.bind(this);\n  #boundFocus = this.focus.bind(this);\n  #boundCopy = this.copy.bind(this);\n  #boundCut = this.cut.bind(this);\n  #boundPaste = this.paste.bind(this);\n  #boundKeydown = this.keydown.bind(this);\n  #boundOnEditingAction = this.onEditingAction.bind(this);\n  #boundOnPageChanging = this.onPageChanging.bind(this);\n  #boundOnScaleChanging = this.onScaleChanging.bind(this);\n  #boundOnRotationChanging = this.onRotationChanging.bind(this);\n  #previousStates = {\n    isEditing: false,\n    isEmpty: true,\n    hasSomethingToUndo: false,\n    hasSomethingToRedo: false,\n    hasSelectedEditor: false\n  };\n  #translation = [0, 0];\n  #translationTimeoutId = null;\n  #container = null;\n  #viewer = null;\n  static TRANSLATE_SMALL = 1;\n  static TRANSLATE_BIG = 10;\n  static get _keyboardManager() {\n    const proto = AnnotationEditorUIManager.prototype;\n    const arrowChecker = self => {\n      const {\n        activeElement\n      } = document;\n      return activeElement && self.#container.contains(activeElement) && self.hasSomethingToControl();\n    };\n    const small = this.TRANSLATE_SMALL;\n    const big = this.TRANSLATE_BIG;\n    return (0, _util.shadow)(this, \"_keyboardManager\", new KeyboardManager([[[\"ctrl+a\", \"mac+meta+a\"], proto.selectAll], [[\"ctrl+z\", \"mac+meta+z\"], proto.undo], [[\"ctrl+y\", \"ctrl+shift+z\", \"mac+meta+shift+z\", \"ctrl+shift+Z\", \"mac+meta+shift+Z\"], proto.redo], [[\"Backspace\", \"alt+Backspace\", \"ctrl+Backspace\", \"shift+Backspace\", \"mac+Backspace\", \"mac+alt+Backspace\", \"mac+ctrl+Backspace\", \"Delete\", \"ctrl+Delete\", \"shift+Delete\", \"mac+Delete\"], proto.delete], [[\"Escape\", \"mac+Escape\"], proto.unselectAll], [[\"ArrowLeft\", \"mac+ArrowLeft\"], proto.translateSelectedEditors, {\n      args: [-small, 0],\n      checker: arrowChecker\n    }], [[\"ctrl+ArrowLeft\", \"mac+shift+ArrowLeft\"], proto.translateSelectedEditors, {\n      args: [-big, 0],\n      checker: arrowChecker\n    }], [[\"ArrowRight\", \"mac+ArrowRight\"], proto.translateSelectedEditors, {\n      args: [small, 0],\n      checker: arrowChecker\n    }], [[\"ctrl+ArrowRight\", \"mac+shift+ArrowRight\"], proto.translateSelectedEditors, {\n      args: [big, 0],\n      checker: arrowChecker\n    }], [[\"ArrowUp\", \"mac+ArrowUp\"], proto.translateSelectedEditors, {\n      args: [0, -small],\n      checker: arrowChecker\n    }], [[\"ctrl+ArrowUp\", \"mac+shift+ArrowUp\"], proto.translateSelectedEditors, {\n      args: [0, -big],\n      checker: arrowChecker\n    }], [[\"ArrowDown\", \"mac+ArrowDown\"], proto.translateSelectedEditors, {\n      args: [0, small],\n      checker: arrowChecker\n    }], [[\"ctrl+ArrowDown\", \"mac+shift+ArrowDown\"], proto.translateSelectedEditors, {\n      args: [0, big],\n      checker: arrowChecker\n    }]]));\n  }\n  constructor(container, viewer, altTextManager, eventBus, pdfDocument, pageColors) {\n    this.#container = container;\n    this.#viewer = viewer;\n    this.#altTextManager = altTextManager;\n    this._eventBus = eventBus;\n    this._eventBus._on(\"editingaction\", this.#boundOnEditingAction);\n    this._eventBus._on(\"pagechanging\", this.#boundOnPageChanging);\n    this._eventBus._on(\"scalechanging\", this.#boundOnScaleChanging);\n    this._eventBus._on(\"rotationchanging\", this.#boundOnRotationChanging);\n    this.#annotationStorage = pdfDocument.annotationStorage;\n    this.#filterFactory = pdfDocument.filterFactory;\n    this.#pageColors = pageColors;\n    this.viewParameters = {\n      realScale: _display_utils.PixelsPerInch.PDF_TO_CSS_UNITS,\n      rotation: 0\n    };\n  }\n  destroy() {\n    this.#removeKeyboardManager();\n    this.#removeFocusManager();\n    this._eventBus._off(\"editingaction\", this.#boundOnEditingAction);\n    this._eventBus._off(\"pagechanging\", this.#boundOnPageChanging);\n    this._eventBus._off(\"scalechanging\", this.#boundOnScaleChanging);\n    this._eventBus._off(\"rotationchanging\", this.#boundOnRotationChanging);\n    for (const layer of this.#allLayers.values()) {\n      layer.destroy();\n    }\n    this.#allLayers.clear();\n    this.#allEditors.clear();\n    this.#editorsToRescale.clear();\n    this.#activeEditor = null;\n    this.#selectedEditors.clear();\n    this.#commandManager.destroy();\n    this.#altTextManager.destroy();\n  }\n  get hcmFilter() {\n    return (0, _util.shadow)(this, \"hcmFilter\", this.#pageColors ? this.#filterFactory.addHCMFilter(this.#pageColors.foreground, this.#pageColors.background) : \"none\");\n  }\n  get direction() {\n    return (0, _util.shadow)(this, \"direction\", getComputedStyle(this.#container).direction);\n  }\n  editAltText(editor) {\n    this.#altTextManager?.editAltText(this, editor);\n  }\n  onPageChanging({\n    pageNumber\n  }) {\n    this.#currentPageIndex = pageNumber - 1;\n  }\n  focusMainContainer() {\n    this.#container.focus();\n  }\n  findParent(x, y) {\n    for (const layer of this.#allLayers.values()) {\n      const {\n        x: layerX,\n        y: layerY,\n        width,\n        height\n      } = layer.div.getBoundingClientRect();\n      if (x >= layerX && x <= layerX + width && y >= layerY && y <= layerY + height) {\n        return layer;\n      }\n    }\n    return null;\n  }\n  disableUserSelect(value = false) {\n    this.#viewer.classList.toggle(\"noUserSelect\", value);\n  }\n  addShouldRescale(editor) {\n    this.#editorsToRescale.add(editor);\n  }\n  removeShouldRescale(editor) {\n    this.#editorsToRescale.delete(editor);\n  }\n  onScaleChanging({\n    scale\n  }) {\n    this.commitOrRemove();\n    this.viewParameters.realScale = scale * _display_utils.PixelsPerInch.PDF_TO_CSS_UNITS;\n    for (const editor of this.#editorsToRescale) {\n      editor.onScaleChanging();\n    }\n  }\n  onRotationChanging({\n    pagesRotation\n  }) {\n    this.commitOrRemove();\n    this.viewParameters.rotation = pagesRotation;\n  }\n  addToAnnotationStorage(editor) {\n    if (!editor.isEmpty() && this.#annotationStorage && !this.#annotationStorage.has(editor.id)) {\n      this.#annotationStorage.setValue(editor.id, editor);\n    }\n  }\n  #addFocusManager() {\n    window.addEventListener(\"focus\", this.#boundFocus);\n    window.addEventListener(\"blur\", this.#boundBlur);\n  }\n  #removeFocusManager() {\n    window.removeEventListener(\"focus\", this.#boundFocus);\n    window.removeEventListener(\"blur\", this.#boundBlur);\n  }\n  blur() {\n    if (!this.hasSelection) {\n      return;\n    }\n    const {\n      activeElement\n    } = document;\n    for (const editor of this.#selectedEditors) {\n      if (editor.div.contains(activeElement)) {\n        this.#lastActiveElement = [editor, activeElement];\n        editor._focusEventsAllowed = false;\n        break;\n      }\n    }\n  }\n  focus() {\n    if (!this.#lastActiveElement) {\n      return;\n    }\n    const [lastEditor, lastActiveElement] = this.#lastActiveElement;\n    this.#lastActiveElement = null;\n    lastActiveElement.addEventListener(\"focusin\", () => {\n      lastEditor._focusEventsAllowed = true;\n    }, {\n      once: true\n    });\n    lastActiveElement.focus();\n  }\n  #addKeyboardManager() {\n    window.addEventListener(\"keydown\", this.#boundKeydown, {\n      capture: true\n    });\n  }\n  #removeKeyboardManager() {\n    window.removeEventListener(\"keydown\", this.#boundKeydown, {\n      capture: true\n    });\n  }\n  #addCopyPasteListeners() {\n    document.addEventListener(\"copy\", this.#boundCopy);\n    document.addEventListener(\"cut\", this.#boundCut);\n    document.addEventListener(\"paste\", this.#boundPaste);\n  }\n  #removeCopyPasteListeners() {\n    document.removeEventListener(\"copy\", this.#boundCopy);\n    document.removeEventListener(\"cut\", this.#boundCut);\n    document.removeEventListener(\"paste\", this.#boundPaste);\n  }\n  addEditListeners() {\n    this.#addKeyboardManager();\n    this.#addCopyPasteListeners();\n  }\n  removeEditListeners() {\n    this.#removeKeyboardManager();\n    this.#removeCopyPasteListeners();\n  }\n  copy(event) {\n    event.preventDefault();\n    this.#activeEditor?.commitOrRemove();\n    if (!this.hasSelection) {\n      return;\n    }\n    const editors = [];\n    for (const editor of this.#selectedEditors) {\n      const serialized = editor.serialize(true);\n      if (serialized) {\n        editors.push(serialized);\n      }\n    }\n    if (editors.length === 0) {\n      return;\n    }\n    event.clipboardData.setData(\"application/pdfjs\", JSON.stringify(editors));\n  }\n  cut(event) {\n    this.copy(event);\n    this.delete();\n  }\n  paste(event) {\n    event.preventDefault();\n    const {\n      clipboardData\n    } = event;\n    for (const item of clipboardData.items) {\n      for (const editorType of this.#editorTypes) {\n        if (editorType.isHandlingMimeForPasting(item.type)) {\n          editorType.paste(item, this.currentLayer);\n          return;\n        }\n      }\n    }\n    let data = clipboardData.getData(\"application/pdfjs\");\n    if (!data) {\n      return;\n    }\n    try {\n      data = JSON.parse(data);\n    } catch (ex) {\n      (0, _util.warn)(`paste: \"${ex.message}\".`);\n      return;\n    }\n    if (!Array.isArray(data)) {\n      return;\n    }\n    this.unselectAll();\n    const layer = this.currentLayer;\n    try {\n      const newEditors = [];\n      for (const editor of data) {\n        const deserializedEditor = layer.deserialize(editor);\n        if (!deserializedEditor) {\n          return;\n        }\n        newEditors.push(deserializedEditor);\n      }\n      const cmd = () => {\n        for (const editor of newEditors) {\n          this.#addEditorToLayer(editor);\n        }\n        this.#selectEditors(newEditors);\n      };\n      const undo = () => {\n        for (const editor of newEditors) {\n          editor.remove();\n        }\n      };\n      this.addCommands({\n        cmd,\n        undo,\n        mustExec: true\n      });\n    } catch (ex) {\n      (0, _util.warn)(`paste: \"${ex.message}\".`);\n    }\n  }\n  keydown(event) {\n    if (!this.getActive()?.shouldGetKeyboardEvents()) {\n      AnnotationEditorUIManager._keyboardManager.exec(this, event);\n    }\n  }\n  onEditingAction(details) {\n    if ([\"undo\", \"redo\", \"delete\", \"selectAll\"].includes(details.name)) {\n      this[details.name]();\n    }\n  }\n  #dispatchUpdateStates(details) {\n    const hasChanged = Object.entries(details).some(([key, value]) => this.#previousStates[key] !== value);\n    if (hasChanged) {\n      this._eventBus.dispatch(\"annotationeditorstateschanged\", {\n        source: this,\n        details: Object.assign(this.#previousStates, details)\n      });\n    }\n  }\n  #dispatchUpdateUI(details) {\n    this._eventBus.dispatch(\"annotationeditorparamschanged\", {\n      source: this,\n      details\n    });\n  }\n  setEditingState(isEditing) {\n    if (isEditing) {\n      this.#addFocusManager();\n      this.#addKeyboardManager();\n      this.#addCopyPasteListeners();\n      this.#dispatchUpdateStates({\n        isEditing: this.#mode !== _util.AnnotationEditorType.NONE,\n        isEmpty: this.#isEmpty(),\n        hasSomethingToUndo: this.#commandManager.hasSomethingToUndo(),\n        hasSomethingToRedo: this.#commandManager.hasSomethingToRedo(),\n        hasSelectedEditor: false\n      });\n    } else {\n      this.#removeFocusManager();\n      this.#removeKeyboardManager();\n      this.#removeCopyPasteListeners();\n      this.#dispatchUpdateStates({\n        isEditing: false\n      });\n      this.disableUserSelect(false);\n    }\n  }\n  registerEditorTypes(types) {\n    if (this.#editorTypes) {\n      return;\n    }\n    this.#editorTypes = types;\n    for (const editorType of this.#editorTypes) {\n      this.#dispatchUpdateUI(editorType.defaultPropertiesToUpdate);\n    }\n  }\n  getId() {\n    return this.#idManager.getId();\n  }\n  get currentLayer() {\n    return this.#allLayers.get(this.#currentPageIndex);\n  }\n  getLayer(pageIndex) {\n    return this.#allLayers.get(pageIndex);\n  }\n  get currentPageIndex() {\n    return this.#currentPageIndex;\n  }\n  addLayer(layer) {\n    this.#allLayers.set(layer.pageIndex, layer);\n    if (this.#isEnabled) {\n      layer.enable();\n    } else {\n      layer.disable();\n    }\n  }\n  removeLayer(layer) {\n    this.#allLayers.delete(layer.pageIndex);\n  }\n  updateMode(mode, editId = null) {\n    if (this.#mode === mode) {\n      return;\n    }\n    this.#mode = mode;\n    if (mode === _util.AnnotationEditorType.NONE) {\n      this.setEditingState(false);\n      this.#disableAll();\n      return;\n    }\n    this.setEditingState(true);\n    this.#enableAll();\n    this.unselectAll();\n    for (const layer of this.#allLayers.values()) {\n      layer.updateMode(mode);\n    }\n    if (!editId) {\n      return;\n    }\n    for (const editor of this.#allEditors.values()) {\n      if (editor.annotationElementId === editId) {\n        this.setSelected(editor);\n        editor.enterInEditMode();\n        break;\n      }\n    }\n  }\n  updateToolbar(mode) {\n    if (mode === this.#mode) {\n      return;\n    }\n    this._eventBus.dispatch(\"switchannotationeditormode\", {\n      source: this,\n      mode\n    });\n  }\n  updateParams(type, value) {\n    if (!this.#editorTypes) {\n      return;\n    }\n    if (type === _util.AnnotationEditorParamsType.CREATE) {\n      this.currentLayer.addNewEditor(type);\n      return;\n    }\n    for (const editor of this.#selectedEditors) {\n      editor.updateParams(type, value);\n    }\n    for (const editorType of this.#editorTypes) {\n      editorType.updateDefaultParams(type, value);\n    }\n  }\n  enableWaiting(mustWait = false) {\n    if (this.#isWaiting === mustWait) {\n      return;\n    }\n    this.#isWaiting = mustWait;\n    for (const layer of this.#allLayers.values()) {\n      if (mustWait) {\n        layer.disableClick();\n      } else {\n        layer.enableClick();\n      }\n      layer.div.classList.toggle(\"waiting\", mustWait);\n    }\n  }\n  #enableAll() {\n    if (!this.#isEnabled) {\n      this.#isEnabled = true;\n      for (const layer of this.#allLayers.values()) {\n        layer.enable();\n      }\n    }\n  }\n  #disableAll() {\n    this.unselectAll();\n    if (this.#isEnabled) {\n      this.#isEnabled = false;\n      for (const layer of this.#allLayers.values()) {\n        layer.disable();\n      }\n    }\n  }\n  getEditors(pageIndex) {\n    const editors = [];\n    for (const editor of this.#allEditors.values()) {\n      if (editor.pageIndex === pageIndex) {\n        editors.push(editor);\n      }\n    }\n    return editors;\n  }\n  getEditor(id) {\n    return this.#allEditors.get(id);\n  }\n  addEditor(editor) {\n    this.#allEditors.set(editor.id, editor);\n  }\n  removeEditor(editor) {\n    this.#allEditors.delete(editor.id);\n    this.unselect(editor);\n    if (!editor.annotationElementId || !this.#deletedAnnotationsElementIds.has(editor.annotationElementId)) {\n      this.#annotationStorage?.remove(editor.id);\n    }\n  }\n  addDeletedAnnotationElement(editor) {\n    this.#deletedAnnotationsElementIds.add(editor.annotationElementId);\n    editor.deleted = true;\n  }\n  isDeletedAnnotationElement(annotationElementId) {\n    return this.#deletedAnnotationsElementIds.has(annotationElementId);\n  }\n  removeDeletedAnnotationElement(editor) {\n    this.#deletedAnnotationsElementIds.delete(editor.annotationElementId);\n    editor.deleted = false;\n  }\n  #addEditorToLayer(editor) {\n    const layer = this.#allLayers.get(editor.pageIndex);\n    if (layer) {\n      layer.addOrRebuild(editor);\n    } else {\n      this.addEditor(editor);\n    }\n  }\n  setActiveEditor(editor) {\n    if (this.#activeEditor === editor) {\n      return;\n    }\n    this.#activeEditor = editor;\n    if (editor) {\n      this.#dispatchUpdateUI(editor.propertiesToUpdate);\n    }\n  }\n  toggleSelected(editor) {\n    if (this.#selectedEditors.has(editor)) {\n      this.#selectedEditors.delete(editor);\n      editor.unselect();\n      this.#dispatchUpdateStates({\n        hasSelectedEditor: this.hasSelection\n      });\n      return;\n    }\n    this.#selectedEditors.add(editor);\n    editor.select();\n    this.#dispatchUpdateUI(editor.propertiesToUpdate);\n    this.#dispatchUpdateStates({\n      hasSelectedEditor: true\n    });\n  }\n  setSelected(editor) {\n    for (const ed of this.#selectedEditors) {\n      if (ed !== editor) {\n        ed.unselect();\n      }\n    }\n    this.#selectedEditors.clear();\n    this.#selectedEditors.add(editor);\n    editor.select();\n    this.#dispatchUpdateUI(editor.propertiesToUpdate);\n    this.#dispatchUpdateStates({\n      hasSelectedEditor: true\n    });\n  }\n  isSelected(editor) {\n    return this.#selectedEditors.has(editor);\n  }\n  unselect(editor) {\n    editor.unselect();\n    this.#selectedEditors.delete(editor);\n    this.#dispatchUpdateStates({\n      hasSelectedEditor: this.hasSelection\n    });\n  }\n  get hasSelection() {\n    return this.#selectedEditors.size !== 0;\n  }\n  undo() {\n    this.#commandManager.undo();\n    this.#dispatchUpdateStates({\n      hasSomethingToUndo: this.#commandManager.hasSomethingToUndo(),\n      hasSomethingToRedo: true,\n      isEmpty: this.#isEmpty()\n    });\n  }\n  redo() {\n    this.#commandManager.redo();\n    this.#dispatchUpdateStates({\n      hasSomethingToUndo: true,\n      hasSomethingToRedo: this.#commandManager.hasSomethingToRedo(),\n      isEmpty: this.#isEmpty()\n    });\n  }\n  addCommands(params) {\n    this.#commandManager.add(params);\n    this.#dispatchUpdateStates({\n      hasSomethingToUndo: true,\n      hasSomethingToRedo: false,\n      isEmpty: this.#isEmpty()\n    });\n  }\n  #isEmpty() {\n    if (this.#allEditors.size === 0) {\n      return true;\n    }\n    if (this.#allEditors.size === 1) {\n      for (const editor of this.#allEditors.values()) {\n        return editor.isEmpty();\n      }\n    }\n    return false;\n  }\n  delete() {\n    this.commitOrRemove();\n    if (!this.hasSelection) {\n      return;\n    }\n    const editors = [...this.#selectedEditors];\n    const cmd = () => {\n      for (const editor of editors) {\n        editor.remove();\n      }\n    };\n    const undo = () => {\n      for (const editor of editors) {\n        this.#addEditorToLayer(editor);\n      }\n    };\n    this.addCommands({\n      cmd,\n      undo,\n      mustExec: true\n    });\n  }\n  commitOrRemove() {\n    this.#activeEditor?.commitOrRemove();\n  }\n  hasSomethingToControl() {\n    return this.#activeEditor || this.hasSelection;\n  }\n  #selectEditors(editors) {\n    this.#selectedEditors.clear();\n    for (const editor of editors) {\n      if (editor.isEmpty()) {\n        continue;\n      }\n      this.#selectedEditors.add(editor);\n      editor.select();\n    }\n    this.#dispatchUpdateStates({\n      hasSelectedEditor: true\n    });\n  }\n  selectAll() {\n    for (const editor of this.#selectedEditors) {\n      editor.commit();\n    }\n    this.#selectEditors(this.#allEditors.values());\n  }\n  unselectAll() {\n    if (this.#activeEditor) {\n      this.#activeEditor.commitOrRemove();\n      return;\n    }\n    if (!this.hasSelection) {\n      return;\n    }\n    for (const editor of this.#selectedEditors) {\n      editor.unselect();\n    }\n    this.#selectedEditors.clear();\n    this.#dispatchUpdateStates({\n      hasSelectedEditor: false\n    });\n  }\n  translateSelectedEditors(x, y, noCommit = false) {\n    if (!noCommit) {\n      this.commitOrRemove();\n    }\n    if (!this.hasSelection) {\n      return;\n    }\n    this.#translation[0] += x;\n    this.#translation[1] += y;\n    const [totalX, totalY] = this.#translation;\n    const editors = [...this.#selectedEditors];\n    const TIME_TO_WAIT = 1000;\n    if (this.#translationTimeoutId) {\n      clearTimeout(this.#translationTimeoutId);\n    }\n    this.#translationTimeoutId = setTimeout(() => {\n      this.#translationTimeoutId = null;\n      this.#translation[0] = this.#translation[1] = 0;\n      this.addCommands({\n        cmd: () => {\n          for (const editor of editors) {\n            if (this.#allEditors.has(editor.id)) {\n              editor.translateInPage(totalX, totalY);\n            }\n          }\n        },\n        undo: () => {\n          for (const editor of editors) {\n            if (this.#allEditors.has(editor.id)) {\n              editor.translateInPage(-totalX, -totalY);\n            }\n          }\n        },\n        mustExec: false\n      });\n    }, TIME_TO_WAIT);\n    for (const editor of editors) {\n      editor.translateInPage(x, y);\n    }\n  }\n  setUpDragSession() {\n    if (!this.hasSelection) {\n      return;\n    }\n    this.disableUserSelect(true);\n    this.#draggingEditors = new Map();\n    for (const editor of this.#selectedEditors) {\n      this.#draggingEditors.set(editor, {\n        savedX: editor.x,\n        savedY: editor.y,\n        savedPageIndex: editor.pageIndex,\n        newX: 0,\n        newY: 0,\n        newPageIndex: -1\n      });\n    }\n  }\n  endDragSession() {\n    if (!this.#draggingEditors) {\n      return false;\n    }\n    this.disableUserSelect(false);\n    const map = this.#draggingEditors;\n    this.#draggingEditors = null;\n    let mustBeAddedInUndoStack = false;\n    for (const [{\n      x,\n      y,\n      pageIndex\n    }, value] of map) {\n      value.newX = x;\n      value.newY = y;\n      value.newPageIndex = pageIndex;\n      mustBeAddedInUndoStack ||= x !== value.savedX || y !== value.savedY || pageIndex !== value.savedPageIndex;\n    }\n    if (!mustBeAddedInUndoStack) {\n      return false;\n    }\n    const move = (editor, x, y, pageIndex) => {\n      if (this.#allEditors.has(editor.id)) {\n        const parent = this.#allLayers.get(pageIndex);\n        if (parent) {\n          editor._setParentAndPosition(parent, x, y);\n        } else {\n          editor.pageIndex = pageIndex;\n          editor.x = x;\n          editor.y = y;\n        }\n      }\n    };\n    this.addCommands({\n      cmd: () => {\n        for (const [editor, {\n          newX,\n          newY,\n          newPageIndex\n        }] of map) {\n          move(editor, newX, newY, newPageIndex);\n        }\n      },\n      undo: () => {\n        for (const [editor, {\n          savedX,\n          savedY,\n          savedPageIndex\n        }] of map) {\n          move(editor, savedX, savedY, savedPageIndex);\n        }\n      },\n      mustExec: true\n    });\n    return true;\n  }\n  dragSelectedEditors(tx, ty) {\n    if (!this.#draggingEditors) {\n      return;\n    }\n    for (const editor of this.#draggingEditors.keys()) {\n      editor.drag(tx, ty);\n    }\n  }\n  rebuild(editor) {\n    if (editor.parent === null) {\n      const parent = this.getLayer(editor.pageIndex);\n      if (parent) {\n        parent.changeParent(editor);\n        parent.addOrRebuild(editor);\n      } else {\n        this.addEditor(editor);\n        this.addToAnnotationStorage(editor);\n        editor.rebuild();\n      }\n    } else {\n      editor.parent.addOrRebuild(editor);\n    }\n  }\n  isActive(editor) {\n    return this.#activeEditor === editor;\n  }\n  getActive() {\n    return this.#activeEditor;\n  }\n  getMode() {\n    return this.#mode;\n  }\n  get imageManager() {\n    return (0, _util.shadow)(this, \"imageManager\", new ImageManager());\n  }\n}\nexports.AnnotationEditorUIManager = AnnotationEditorUIManager;\n\n/***/ }),\n/* 6 */\n/***/ ((__unused_webpack_module, exports, __w_pdfjs_require__) => {\n\n\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.StatTimer = exports.RenderingCancelledException = exports.PixelsPerInch = exports.PageViewport = exports.PDFDateString = exports.DOMStandardFontDataFactory = exports.DOMSVGFactory = exports.DOMFilterFactory = exports.DOMCanvasFactory = exports.DOMCMapReaderFactory = void 0;\nexports.deprecated = deprecated;\nexports.getColorValues = getColorValues;\nexports.getCurrentTransform = getCurrentTransform;\nexports.getCurrentTransformInverse = getCurrentTransformInverse;\nexports.getFilenameFromUrl = getFilenameFromUrl;\nexports.getPdfFilenameFromUrl = getPdfFilenameFromUrl;\nexports.getRGB = getRGB;\nexports.getXfaPageViewport = getXfaPageViewport;\nexports.isDataScheme = isDataScheme;\nexports.isPdfFile = isPdfFile;\nexports.isValidFetchUrl = isValidFetchUrl;\nexports.loadScript = loadScript;\nexports.noContextMenu = noContextMenu;\nexports.setLayerDimensions = setLayerDimensions;\nvar _base_factory = __w_pdfjs_require__(7);\nvar _util = __w_pdfjs_require__(1);\nconst SVG_NS = \"http://www.w3.org/2000/svg\";\nclass PixelsPerInch {\n  static CSS = 96.0;\n  static PDF = 72.0;\n  static PDF_TO_CSS_UNITS = this.CSS / this.PDF;\n}\nexports.PixelsPerInch = PixelsPerInch;\nclass DOMFilterFactory extends _base_factory.BaseFilterFactory {\n  #_cache;\n  #_defs;\n  #docId;\n  #document;\n  #hcmFilter;\n  #hcmKey;\n  #hcmUrl;\n  #hcmHighlightFilter;\n  #hcmHighlightKey;\n  #hcmHighlightUrl;\n  #id = 0;\n  constructor({\n    docId,\n    ownerDocument = globalThis.document\n  } = {}) {\n    super();\n    this.#docId = docId;\n    this.#document = ownerDocument;\n  }\n  get #cache() {\n    return this.#_cache ||= new Map();\n  }\n  get #defs() {\n    if (!this.#_defs) {\n      const div = this.#document.createElement(\"div\");\n      const {\n        style\n      } = div;\n      style.visibility = \"hidden\";\n      style.contain = \"strict\";\n      style.width = style.height = 0;\n      style.position = \"absolute\";\n      style.top = style.left = 0;\n      style.zIndex = -1;\n      const svg = this.#document.createElementNS(SVG_NS, \"svg\");\n      svg.setAttribute(\"width\", 0);\n      svg.setAttribute(\"height\", 0);\n      this.#_defs = this.#document.createElementNS(SVG_NS, \"defs\");\n      div.append(svg);\n      svg.append(this.#_defs);\n      this.#document.body.append(div);\n    }\n    return this.#_defs;\n  }\n  addFilter(maps) {\n    if (!maps) {\n      return \"none\";\n    }\n    let value = this.#cache.get(maps);\n    if (value) {\n      return value;\n    }\n    let tableR, tableG, tableB, key;\n    if (maps.length === 1) {\n      const mapR = maps[0];\n      const buffer = new Array(256);\n      for (let i = 0; i < 256; i++) {\n        buffer[i] = mapR[i] / 255;\n      }\n      key = tableR = tableG = tableB = buffer.join(\",\");\n    } else {\n      const [mapR, mapG, mapB] = maps;\n      const bufferR = new Array(256);\n      const bufferG = new Array(256);\n      const bufferB = new Array(256);\n      for (let i = 0; i < 256; i++) {\n        bufferR[i] = mapR[i] / 255;\n        bufferG[i] = mapG[i] / 255;\n        bufferB[i] = mapB[i] / 255;\n      }\n      tableR = bufferR.join(\",\");\n      tableG = bufferG.join(\",\");\n      tableB = bufferB.join(\",\");\n      key = `${tableR}${tableG}${tableB}`;\n    }\n    value = this.#cache.get(key);\n    if (value) {\n      this.#cache.set(maps, value);\n      return value;\n    }\n    const id = `g_${this.#docId}_transfer_map_${this.#id++}`;\n    const url = `url(#${id})`;\n    this.#cache.set(maps, url);\n    this.#cache.set(key, url);\n    const filter = this.#createFilter(id);\n    this.#addTransferMapConversion(tableR, tableG, tableB, filter);\n    return url;\n  }\n  addHCMFilter(fgColor, bgColor) {\n    const key = `${fgColor}-${bgColor}`;\n    if (this.#hcmKey === key) {\n      return this.#hcmUrl;\n    }\n    this.#hcmKey = key;\n    this.#hcmUrl = \"none\";\n    this.#hcmFilter?.remove();\n    if (!fgColor || !bgColor) {\n      return this.#hcmUrl;\n    }\n    const fgRGB = this.#getRGB(fgColor);\n    fgColor = _util.Util.makeHexColor(...fgRGB);\n    const bgRGB = this.#getRGB(bgColor);\n    bgColor = _util.Util.makeHexColor(...bgRGB);\n    this.#defs.style.color = \"\";\n    if (fgColor === \"#000000\" && bgColor === \"#ffffff\" || fgColor === bgColor) {\n      return this.#hcmUrl;\n    }\n    const map = new Array(256);\n    for (let i = 0; i <= 255; i++) {\n      const x = i / 255;\n      map[i] = x <= 0.03928 ? x / 12.92 : ((x + 0.055) / 1.055) ** 2.4;\n    }\n    const table = map.join(\",\");\n    const id = `g_${this.#docId}_hcm_filter`;\n    const filter = this.#hcmHighlightFilter = this.#createFilter(id);\n    this.#addTransferMapConversion(table, table, table, filter);\n    this.#addGrayConversion(filter);\n    const getSteps = (c, n) => {\n      const start = fgRGB[c] / 255;\n      const end = bgRGB[c] / 255;\n      const arr = new Array(n + 1);\n      for (let i = 0; i <= n; i++) {\n        arr[i] = start + i / n * (end - start);\n      }\n      return arr.join(\",\");\n    };\n    this.#addTransferMapConversion(getSteps(0, 5), getSteps(1, 5), getSteps(2, 5), filter);\n    this.#hcmUrl = `url(#${id})`;\n    return this.#hcmUrl;\n  }\n  addHighlightHCMFilter(fgColor, bgColor, newFgColor, newBgColor) {\n    const key = `${fgColor}-${bgColor}-${newFgColor}-${newBgColor}`;\n    if (this.#hcmHighlightKey === key) {\n      return this.#hcmHighlightUrl;\n    }\n    this.#hcmHighlightKey = key;\n    this.#hcmHighlightUrl = \"none\";\n    this.#hcmHighlightFilter?.remove();\n    if (!fgColor || !bgColor) {\n      return this.#hcmHighlightUrl;\n    }\n    const [fgRGB, bgRGB] = [fgColor, bgColor].map(this.#getRGB.bind(this));\n    let fgGray = Math.round(0.2126 * fgRGB[0] + 0.7152 * fgRGB[1] + 0.0722 * fgRGB[2]);\n    let bgGray = Math.round(0.2126 * bgRGB[0] + 0.7152 * bgRGB[1] + 0.0722 * bgRGB[2]);\n    let [newFgRGB, newBgRGB] = [newFgColor, newBgColor].map(this.#getRGB.bind(this));\n    if (bgGray < fgGray) {\n      [fgGray, bgGray, newFgRGB, newBgRGB] = [bgGray, fgGray, newBgRGB, newFgRGB];\n    }\n    this.#defs.style.color = \"\";\n    const getSteps = (fg, bg, n) => {\n      const arr = new Array(256);\n      const step = (bgGray - fgGray) / n;\n      const newStart = fg / 255;\n      const newStep = (bg - fg) / (255 * n);\n      let prev = 0;\n      for (let i = 0; i <= n; i++) {\n        const k = Math.round(fgGray + i * step);\n        const value = newStart + i * newStep;\n        for (let j = prev; j <= k; j++) {\n          arr[j] = value;\n        }\n        prev = k + 1;\n      }\n      for (let i = prev; i < 256; i++) {\n        arr[i] = arr[prev - 1];\n      }\n      return arr.join(\",\");\n    };\n    const id = `g_${this.#docId}_hcm_highlight_filter`;\n    const filter = this.#hcmHighlightFilter = this.#createFilter(id);\n    this.#addGrayConversion(filter);\n    this.#addTransferMapConversion(getSteps(newFgRGB[0], newBgRGB[0], 5), getSteps(newFgRGB[1], newBgRGB[1], 5), getSteps(newFgRGB[2], newBgRGB[2], 5), filter);\n    this.#hcmHighlightUrl = `url(#${id})`;\n    return this.#hcmHighlightUrl;\n  }\n  destroy(keepHCM = false) {\n    if (keepHCM && (this.#hcmUrl || this.#hcmHighlightUrl)) {\n      return;\n    }\n    if (this.#_defs) {\n      this.#_defs.parentNode.parentNode.remove();\n      this.#_defs = null;\n    }\n    if (this.#_cache) {\n      this.#_cache.clear();\n      this.#_cache = null;\n    }\n    this.#id = 0;\n  }\n  #addGrayConversion(filter) {\n    const feColorMatrix = this.#document.createElementNS(SVG_NS, \"feColorMatrix\");\n    feColorMatrix.setAttribute(\"type\", \"matrix\");\n    feColorMatrix.setAttribute(\"values\", \"0.2126 0.7152 0.0722 0 0 0.2126 0.7152 0.0722 0 0 0.2126 0.7152 0.0722 0 0 0 0 0 1 0\");\n    filter.append(feColorMatrix);\n  }\n  #createFilter(id) {\n    const filter = this.#document.createElementNS(SVG_NS, \"filter\");\n    filter.setAttribute(\"color-interpolation-filters\", \"sRGB\");\n    filter.setAttribute(\"id\", id);\n    this.#defs.append(filter);\n    return filter;\n  }\n  #appendFeFunc(feComponentTransfer, func, table) {\n    const feFunc = this.#document.createElementNS(SVG_NS, func);\n    feFunc.setAttribute(\"type\", \"discrete\");\n    feFunc.setAttribute(\"tableValues\", table);\n    feComponentTransfer.append(feFunc);\n  }\n  #addTransferMapConversion(rTable, gTable, bTable, filter) {\n    const feComponentTransfer = this.#document.createElementNS(SVG_NS, \"feComponentTransfer\");\n    filter.append(feComponentTransfer);\n    this.#appendFeFunc(feComponentTransfer, \"feFuncR\", rTable);\n    this.#appendFeFunc(feComponentTransfer, \"feFuncG\", gTable);\n    this.#appendFeFunc(feComponentTransfer, \"feFuncB\", bTable);\n  }\n  #getRGB(color) {\n    this.#defs.style.color = color;\n    return getRGB(getComputedStyle(this.#defs).getPropertyValue(\"color\"));\n  }\n}\nexports.DOMFilterFactory = DOMFilterFactory;\nclass DOMCanvasFactory extends _base_factory.BaseCanvasFactory {\n  constructor({\n    ownerDocument = globalThis.document\n  } = {}) {\n    super();\n    this._document = ownerDocument;\n  }\n  _createCanvas(width, height) {\n    const canvas = this._document.createElement(\"canvas\");\n    canvas.width = width;\n    canvas.height = height;\n    return canvas;\n  }\n}\nexports.DOMCanvasFactory = DOMCanvasFactory;\nasync function fetchData(url, asTypedArray = false) {\n  if (isValidFetchUrl(url, document.baseURI)) {\n    const response = await fetch(url);\n    if (!response.ok) {\n      throw new Error(response.statusText);\n    }\n    return asTypedArray ? new Uint8Array(await response.arrayBuffer()) : (0, _util.stringToBytes)(await response.text());\n  }\n  return new Promise((resolve, reject) => {\n    const request = new XMLHttpRequest();\n    request.open(\"GET\", url, true);\n    if (asTypedArray) {\n      request.responseType = \"arraybuffer\";\n    }\n    request.onreadystatechange = () => {\n      if (request.readyState !== XMLHttpRequest.DONE) {\n        return;\n      }\n      if (request.status === 200 || request.status === 0) {\n        let data;\n        if (asTypedArray && request.response) {\n          data = new Uint8Array(request.response);\n        } else if (!asTypedArray && request.responseText) {\n          data = (0, _util.stringToBytes)(request.responseText);\n        }\n        if (data) {\n          resolve(data);\n          return;\n        }\n      }\n      reject(new Error(request.statusText));\n    };\n    request.send(null);\n  });\n}\nclass DOMCMapReaderFactory extends _base_factory.BaseCMapReaderFactory {\n  _fetchData(url, compressionType) {\n    return fetchData(url, this.isCompressed).then(data => {\n      return {\n        cMapData: data,\n        compressionType\n      };\n    });\n  }\n}\nexports.DOMCMapReaderFactory = DOMCMapReaderFactory;\nclass DOMStandardFontDataFactory extends _base_factory.BaseStandardFontDataFactory {\n  _fetchData(url) {\n    return fetchData(url, true);\n  }\n}\nexports.DOMStandardFontDataFactory = DOMStandardFontDataFactory;\nclass DOMSVGFactory extends _base_factory.BaseSVGFactory {\n  _createSVG(type) {\n    return document.createElementNS(SVG_NS, type);\n  }\n}\nexports.DOMSVGFactory = DOMSVGFactory;\nclass PageViewport {\n  constructor({\n    viewBox,\n    scale,\n    rotation,\n    offsetX = 0,\n    offsetY = 0,\n    dontFlip = false\n  }) {\n    this.viewBox = viewBox;\n    this.scale = scale;\n    this.rotation = rotation;\n    this.offsetX = offsetX;\n    this.offsetY = offsetY;\n    const centerX = (viewBox[2] + viewBox[0]) / 2;\n    const centerY = (viewBox[3] + viewBox[1]) / 2;\n    let rotateA, rotateB, rotateC, rotateD;\n    rotation %= 360;\n    if (rotation < 0) {\n      rotation += 360;\n    }\n    switch (rotation) {\n      case 180:\n        rotateA = -1;\n        rotateB = 0;\n        rotateC = 0;\n        rotateD = 1;\n        break;\n      case 90:\n        rotateA = 0;\n        rotateB = 1;\n        rotateC = 1;\n        rotateD = 0;\n        break;\n      case 270:\n        rotateA = 0;\n        rotateB = -1;\n        rotateC = -1;\n        rotateD = 0;\n        break;\n      case 0:\n        rotateA = 1;\n        rotateB = 0;\n        rotateC = 0;\n        rotateD = -1;\n        break;\n      default:\n        throw new Error(\"PageViewport: Invalid rotation, must be a multiple of 90 degrees.\");\n    }\n    if (dontFlip) {\n      rotateC = -rotateC;\n      rotateD = -rotateD;\n    }\n    let offsetCanvasX, offsetCanvasY;\n    let width, height;\n    if (rotateA === 0) {\n      offsetCanvasX = Math.abs(centerY - viewBox[1]) * scale + offsetX;\n      offsetCanvasY = Math.abs(centerX - viewBox[0]) * scale + offsetY;\n      width = (viewBox[3] - viewBox[1]) * scale;\n      height = (viewBox[2] - viewBox[0]) * scale;\n    } else {\n      offsetCanvasX = Math.abs(centerX - viewBox[0]) * scale + offsetX;\n      offsetCanvasY = Math.abs(centerY - viewBox[1]) * scale + offsetY;\n      width = (viewBox[2] - viewBox[0]) * scale;\n      height = (viewBox[3] - viewBox[1]) * scale;\n    }\n    this.transform = [rotateA * scale, rotateB * scale, rotateC * scale, rotateD * scale, offsetCanvasX - rotateA * scale * centerX - rotateC * scale * centerY, offsetCanvasY - rotateB * scale * centerX - rotateD * scale * centerY];\n    this.width = width;\n    this.height = height;\n  }\n  get rawDims() {\n    const {\n      viewBox\n    } = this;\n    return (0, _util.shadow)(this, \"rawDims\", {\n      pageWidth: viewBox[2] - viewBox[0],\n      pageHeight: viewBox[3] - viewBox[1],\n      pageX: viewBox[0],\n      pageY: viewBox[1]\n    });\n  }\n  clone({\n    scale = this.scale,\n    rotation = this.rotation,\n    offsetX = this.offsetX,\n    offsetY = this.offsetY,\n    dontFlip = false\n  } = {}) {\n    return new PageViewport({\n      viewBox: this.viewBox.slice(),\n      scale,\n      rotation,\n      offsetX,\n      offsetY,\n      dontFlip\n    });\n  }\n  convertToViewportPoint(x, y) {\n    return _util.Util.applyTransform([x, y], this.transform);\n  }\n  convertToViewportRectangle(rect) {\n    const topLeft = _util.Util.applyTransform([rect[0], rect[1]], this.transform);\n    const bottomRight = _util.Util.applyTransform([rect[2], rect[3]], this.transform);\n    return [topLeft[0], topLeft[1], bottomRight[0], bottomRight[1]];\n  }\n  convertToPdfPoint(x, y) {\n    return _util.Util.applyInverseTransform([x, y], this.transform);\n  }\n}\nexports.PageViewport = PageViewport;\nclass RenderingCancelledException extends _util.BaseException {\n  constructor(msg, extraDelay = 0) {\n    super(msg, \"RenderingCancelledException\");\n    this.extraDelay = extraDelay;\n  }\n}\nexports.RenderingCancelledException = RenderingCancelledException;\nfunction isDataScheme(url) {\n  const ii = url.length;\n  let i = 0;\n  while (i < ii && url[i].trim() === \"\") {\n    i++;\n  }\n  return url.substring(i, i + 5).toLowerCase() === \"data:\";\n}\nfunction isPdfFile(filename) {\n  return typeof filename === \"string\" && /\\.pdf$/i.test(filename);\n}\nfunction getFilenameFromUrl(url, onlyStripPath = false) {\n  if (!onlyStripPath) {\n    [url] = url.split(/[#?]/, 1);\n  }\n  return url.substring(url.lastIndexOf(\"/\") + 1);\n}\nfunction getPdfFilenameFromUrl(url, defaultFilename = \"document.pdf\") {\n  if (typeof url !== \"string\") {\n    return defaultFilename;\n  }\n  if (isDataScheme(url)) {\n    (0, _util.warn)('getPdfFilenameFromUrl: ignore \"data:\"-URL for performance reasons.');\n    return defaultFilename;\n  }\n  const reURI = /^(?:(?:[^:]+:)?\\/\\/[^/]+)?([^?#]*)(\\?[^#]*)?(#.*)?$/;\n  const reFilename = /[^/?#=]+\\.pdf\\b(?!.*\\.pdf\\b)/i;\n  const splitURI = reURI.exec(url);\n  let suggestedFilename = reFilename.exec(splitURI[1]) || reFilename.exec(splitURI[2]) || reFilename.exec(splitURI[3]);\n  if (suggestedFilename) {\n    suggestedFilename = suggestedFilename[0];\n    if (suggestedFilename.includes(\"%\")) {\n      try {\n        suggestedFilename = reFilename.exec(decodeURIComponent(suggestedFilename))[0];\n      } catch {}\n    }\n  }\n  return suggestedFilename || defaultFilename;\n}\nclass StatTimer {\n  started = Object.create(null);\n  times = [];\n  time(name) {\n    if (name in this.started) {\n      (0, _util.warn)(`Timer is already running for ${name}`);\n    }\n    this.started[name] = Date.now();\n  }\n  timeEnd(name) {\n    if (!(name in this.started)) {\n      (0, _util.warn)(`Timer has not been started for ${name}`);\n    }\n    this.times.push({\n      name,\n      start: this.started[name],\n      end: Date.now()\n    });\n    delete this.started[name];\n  }\n  toString() {\n    const outBuf = [];\n    let longest = 0;\n    for (const {\n      name\n    } of this.times) {\n      longest = Math.max(name.length, longest);\n    }\n    for (const {\n      name,\n      start,\n      end\n    } of this.times) {\n      outBuf.push(`${name.padEnd(longest)} ${end - start}ms\\n`);\n    }\n    return outBuf.join(\"\");\n  }\n}\nexports.StatTimer = StatTimer;\nfunction isValidFetchUrl(url, baseUrl) {\n  try {\n    const {\n      protocol\n    } = baseUrl ? new URL(url, baseUrl) : new URL(url);\n    return protocol === \"http:\" || protocol === \"https:\";\n  } catch {\n    return false;\n  }\n}\nfunction noContextMenu(e) {\n  e.preventDefault();\n}\nfunction loadScript(src, removeScriptElement = false) {\n  return new Promise((resolve, reject) => {\n    const script = document.createElement(\"script\");\n    script.src = src;\n    script.onload = function (evt) {\n      if (removeScriptElement) {\n        script.remove();\n      }\n      resolve(evt);\n    };\n    script.onerror = function () {\n      reject(new Error(`Cannot load script at: ${script.src}`));\n    };\n    (document.head || document.documentElement).append(script);\n  });\n}\nfunction deprecated(details) {\n  console.log(\"Deprecated API usage: \" + details);\n}\nlet pdfDateStringRegex;\nclass PDFDateString {\n  static toDateObject(input) {\n    if (!input || typeof input !== \"string\") {\n      return null;\n    }\n    pdfDateStringRegex ||= new RegExp(\"^D:\" + \"(\\\\d{4})\" + \"(\\\\d{2})?\" + \"(\\\\d{2})?\" + \"(\\\\d{2})?\" + \"(\\\\d{2})?\" + \"(\\\\d{2})?\" + \"([Z|+|-])?\" + \"(\\\\d{2})?\" + \"'?\" + \"(\\\\d{2})?\" + \"'?\");\n    const matches = pdfDateStringRegex.exec(input);\n    if (!matches) {\n      return null;\n    }\n    const year = parseInt(matches[1], 10);\n    let month = parseInt(matches[2], 10);\n    month = month >= 1 && month <= 12 ? month - 1 : 0;\n    let day = parseInt(matches[3], 10);\n    day = day >= 1 && day <= 31 ? day : 1;\n    let hour = parseInt(matches[4], 10);\n    hour = hour >= 0 && hour <= 23 ? hour : 0;\n    let minute = parseInt(matches[5], 10);\n    minute = minute >= 0 && minute <= 59 ? minute : 0;\n    let second = parseInt(matches[6], 10);\n    second = second >= 0 && second <= 59 ? second : 0;\n    const universalTimeRelation = matches[7] || \"Z\";\n    let offsetHour = parseInt(matches[8], 10);\n    offsetHour = offsetHour >= 0 && offsetHour <= 23 ? offsetHour : 0;\n    let offsetMinute = parseInt(matches[9], 10) || 0;\n    offsetMinute = offsetMinute >= 0 && offsetMinute <= 59 ? offsetMinute : 0;\n    if (universalTimeRelation === \"-\") {\n      hour += offsetHour;\n      minute += offsetMinute;\n    } else if (universalTimeRelation === \"+\") {\n      hour -= offsetHour;\n      minute -= offsetMinute;\n    }\n    return new Date(Date.UTC(year, month, day, hour, minute, second));\n  }\n}\nexports.PDFDateString = PDFDateString;\nfunction getXfaPageViewport(xfaPage, {\n  scale = 1,\n  rotation = 0\n}) {\n  const {\n    width,\n    height\n  } = xfaPage.attributes.style;\n  const viewBox = [0, 0, parseInt(width), parseInt(height)];\n  return new PageViewport({\n    viewBox,\n    scale,\n    rotation\n  });\n}\nfunction getRGB(color) {\n  if (color.startsWith(\"#\")) {\n    const colorRGB = parseInt(color.slice(1), 16);\n    return [(colorRGB & 0xff0000) >> 16, (colorRGB & 0x00ff00) >> 8, colorRGB & 0x0000ff];\n  }\n  if (color.startsWith(\"rgb(\")) {\n    return color.slice(4, -1).split(\",\").map(x => parseInt(x));\n  }\n  if (color.startsWith(\"rgba(\")) {\n    return color.slice(5, -1).split(\",\").map(x => parseInt(x)).slice(0, 3);\n  }\n  (0, _util.warn)(`Not a valid color format: \"${color}\"`);\n  return [0, 0, 0];\n}\nfunction getColorValues(colors) {\n  const span = document.createElement(\"span\");\n  span.style.visibility = \"hidden\";\n  document.body.append(span);\n  for (const name of colors.keys()) {\n    span.style.color = name;\n    const computedColor = window.getComputedStyle(span).color;\n    colors.set(name, getRGB(computedColor));\n  }\n  span.remove();\n}\nfunction getCurrentTransform(ctx) {\n  const {\n    a,\n    b,\n    c,\n    d,\n    e,\n    f\n  } = ctx.getTransform();\n  return [a, b, c, d, e, f];\n}\nfunction getCurrentTransformInverse(ctx) {\n  const {\n    a,\n    b,\n    c,\n    d,\n    e,\n    f\n  } = ctx.getTransform().invertSelf();\n  return [a, b, c, d, e, f];\n}\nfunction setLayerDimensions(div, viewport, mustFlip = false, mustRotate = true) {\n  if (viewport instanceof PageViewport) {\n    const {\n      pageWidth,\n      pageHeight\n    } = viewport.rawDims;\n    const {\n      style\n    } = div;\n    const useRound = _util.FeatureTest.isCSSRoundSupported;\n    const w = `var(--scale-factor) * ${pageWidth}px`,\n      h = `var(--scale-factor) * ${pageHeight}px`;\n    const widthStr = useRound ? `round(${w}, 1px)` : `calc(${w})`,\n      heightStr = useRound ? `round(${h}, 1px)` : `calc(${h})`;\n    if (!mustFlip || viewport.rotation % 180 === 0) {\n      style.width = widthStr;\n      style.height = heightStr;\n    } else {\n      style.width = heightStr;\n      style.height = widthStr;\n    }\n  }\n  if (mustRotate) {\n    div.setAttribute(\"data-main-rotation\", viewport.rotation);\n  }\n}\n\n/***/ }),\n/* 7 */\n/***/ ((__unused_webpack_module, exports, __w_pdfjs_require__) => {\n\n\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.BaseStandardFontDataFactory = exports.BaseSVGFactory = exports.BaseFilterFactory = exports.BaseCanvasFactory = exports.BaseCMapReaderFactory = void 0;\nvar _util = __w_pdfjs_require__(1);\nclass BaseFilterFactory {\n  constructor() {\n    if (this.constructor === BaseFilterFactory) {\n      (0, _util.unreachable)(\"Cannot initialize BaseFilterFactory.\");\n    }\n  }\n  addFilter(maps) {\n    return \"none\";\n  }\n  addHCMFilter(fgColor, bgColor) {\n    return \"none\";\n  }\n  addHighlightHCMFilter(fgColor, bgColor, newFgColor, newBgColor) {\n    return \"none\";\n  }\n  destroy(keepHCM = false) {}\n}\nexports.BaseFilterFactory = BaseFilterFactory;\nclass BaseCanvasFactory {\n  constructor() {\n    if (this.constructor === BaseCanvasFactory) {\n      (0, _util.unreachable)(\"Cannot initialize BaseCanvasFactory.\");\n    }\n  }\n  create(width, height) {\n    if (width <= 0 || height <= 0) {\n      throw new Error(\"Invalid canvas size\");\n    }\n    const canvas = this._createCanvas(width, height);\n    return {\n      canvas,\n      context: canvas.getContext(\"2d\")\n    };\n  }\n  reset(canvasAndContext, width, height) {\n    if (!canvasAndContext.canvas) {\n      throw new Error(\"Canvas is not specified\");\n    }\n    if (width <= 0 || height <= 0) {\n      throw new Error(\"Invalid canvas size\");\n    }\n    canvasAndContext.canvas.width = width;\n    canvasAndContext.canvas.height = height;\n  }\n  destroy(canvasAndContext) {\n    if (!canvasAndContext.canvas) {\n      throw new Error(\"Canvas is not specified\");\n    }\n    canvasAndContext.canvas.width = 0;\n    canvasAndContext.canvas.height = 0;\n    canvasAndContext.canvas = null;\n    canvasAndContext.context = null;\n  }\n  _createCanvas(width, height) {\n    (0, _util.unreachable)(\"Abstract method `_createCanvas` called.\");\n  }\n}\nexports.BaseCanvasFactory = BaseCanvasFactory;\nclass BaseCMapReaderFactory {\n  constructor({\n    baseUrl = null,\n    isCompressed = true\n  }) {\n    if (this.constructor === BaseCMapReaderFactory) {\n      (0, _util.unreachable)(\"Cannot initialize BaseCMapReaderFactory.\");\n    }\n    this.baseUrl = baseUrl;\n    this.isCompressed = isCompressed;\n  }\n  async fetch({\n    name\n  }) {\n    if (!this.baseUrl) {\n      throw new Error('The CMap \"baseUrl\" parameter must be specified, ensure that ' + 'the \"cMapUrl\" and \"cMapPacked\" API parameters are provided.');\n    }\n    if (!name) {\n      throw new Error(\"CMap name must be specified.\");\n    }\n    const url = this.baseUrl + name + (this.isCompressed ? \".bcmap\" : \"\");\n    const compressionType = this.isCompressed ? _util.CMapCompressionType.BINARY : _util.CMapCompressionType.NONE;\n    return this._fetchData(url, compressionType).catch(reason => {\n      throw new Error(`Unable to load ${this.isCompressed ? \"binary \" : \"\"}CMap at: ${url}`);\n    });\n  }\n  _fetchData(url, compressionType) {\n    (0, _util.unreachable)(\"Abstract method `_fetchData` called.\");\n  }\n}\nexports.BaseCMapReaderFactory = BaseCMapReaderFactory;\nclass BaseStandardFontDataFactory {\n  constructor({\n    baseUrl = null\n  }) {\n    if (this.constructor === BaseStandardFontDataFactory) {\n      (0, _util.unreachable)(\"Cannot initialize BaseStandardFontDataFactory.\");\n    }\n    this.baseUrl = baseUrl;\n  }\n  async fetch({\n    filename\n  }) {\n    if (!this.baseUrl) {\n      throw new Error('The standard font \"baseUrl\" parameter must be specified, ensure that ' + 'the \"standardFontDataUrl\" API parameter is provided.');\n    }\n    if (!filename) {\n      throw new Error(\"Font filename must be specified.\");\n    }\n    const url = `${this.baseUrl}${filename}`;\n    return this._fetchData(url).catch(reason => {\n      throw new Error(`Unable to load font data at: ${url}`);\n    });\n  }\n  _fetchData(url) {\n    (0, _util.unreachable)(\"Abstract method `_fetchData` called.\");\n  }\n}\nexports.BaseStandardFontDataFactory = BaseStandardFontDataFactory;\nclass BaseSVGFactory {\n  constructor() {\n    if (this.constructor === BaseSVGFactory) {\n      (0, _util.unreachable)(\"Cannot initialize BaseSVGFactory.\");\n    }\n  }\n  create(width, height, skipDimensions = false) {\n    if (width <= 0 || height <= 0) {\n      throw new Error(\"Invalid SVG dimensions\");\n    }\n    const svg = this._createSVG(\"svg:svg\");\n    svg.setAttribute(\"version\", \"1.1\");\n    if (!skipDimensions) {\n      svg.setAttribute(\"width\", `${width}px`);\n      svg.setAttribute(\"height\", `${height}px`);\n    }\n    svg.setAttribute(\"preserveAspectRatio\", \"none\");\n    svg.setAttribute(\"viewBox\", `0 0 ${width} ${height}`);\n    return svg;\n  }\n  createElement(type) {\n    if (typeof type !== \"string\") {\n      throw new Error(\"Invalid SVG element type\");\n    }\n    return this._createSVG(type);\n  }\n  _createSVG(type) {\n    (0, _util.unreachable)(\"Abstract method `_createSVG` called.\");\n  }\n}\nexports.BaseSVGFactory = BaseSVGFactory;\n\n/***/ }),\n/* 8 */\n/***/ ((__unused_webpack_module, exports, __w_pdfjs_require__) => {\n\n\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.MurmurHash3_64 = void 0;\nvar _util = __w_pdfjs_require__(1);\nconst SEED = 0xc3d2e1f0;\nconst MASK_HIGH = 0xffff0000;\nconst MASK_LOW = 0xffff;\nclass MurmurHash3_64 {\n  constructor(seed) {\n    this.h1 = seed ? seed & 0xffffffff : SEED;\n    this.h2 = seed ? seed & 0xffffffff : SEED;\n  }\n  update(input) {\n    let data, length;\n    if (typeof input === \"string\") {\n      data = new Uint8Array(input.length * 2);\n      length = 0;\n      for (let i = 0, ii = input.length; i < ii; i++) {\n        const code = input.charCodeAt(i);\n        if (code <= 0xff) {\n          data[length++] = code;\n        } else {\n          data[length++] = code >>> 8;\n          data[length++] = code & 0xff;\n        }\n      }\n    } else if ((0, _util.isArrayBuffer)(input)) {\n      data = input.slice();\n      length = data.byteLength;\n    } else {\n      throw new Error(\"Wrong data format in MurmurHash3_64_update. \" + \"Input must be a string or array.\");\n    }\n    const blockCounts = length >> 2;\n    const tailLength = length - blockCounts * 4;\n    const dataUint32 = new Uint32Array(data.buffer, 0, blockCounts);\n    let k1 = 0,\n      k2 = 0;\n    let h1 = this.h1,\n      h2 = this.h2;\n    const C1 = 0xcc9e2d51,\n      C2 = 0x1b873593;\n    const C1_LOW = C1 & MASK_LOW,\n      C2_LOW = C2 & MASK_LOW;\n    for (let i = 0; i < blockCounts; i++) {\n      if (i & 1) {\n        k1 = dataUint32[i];\n        k1 = k1 * C1 & MASK_HIGH | k1 * C1_LOW & MASK_LOW;\n        k1 = k1 << 15 | k1 >>> 17;\n        k1 = k1 * C2 & MASK_HIGH | k1 * C2_LOW & MASK_LOW;\n        h1 ^= k1;\n        h1 = h1 << 13 | h1 >>> 19;\n        h1 = h1 * 5 + 0xe6546b64;\n      } else {\n        k2 = dataUint32[i];\n        k2 = k2 * C1 & MASK_HIGH | k2 * C1_LOW & MASK_LOW;\n        k2 = k2 << 15 | k2 >>> 17;\n        k2 = k2 * C2 & MASK_HIGH | k2 * C2_LOW & MASK_LOW;\n        h2 ^= k2;\n        h2 = h2 << 13 | h2 >>> 19;\n        h2 = h2 * 5 + 0xe6546b64;\n      }\n    }\n    k1 = 0;\n    switch (tailLength) {\n      case 3:\n        k1 ^= data[blockCounts * 4 + 2] << 16;\n      case 2:\n        k1 ^= data[blockCounts * 4 + 1] << 8;\n      case 1:\n        k1 ^= data[blockCounts * 4];\n        k1 = k1 * C1 & MASK_HIGH | k1 * C1_LOW & MASK_LOW;\n        k1 = k1 << 15 | k1 >>> 17;\n        k1 = k1 * C2 & MASK_HIGH | k1 * C2_LOW & MASK_LOW;\n        if (blockCounts & 1) {\n          h1 ^= k1;\n        } else {\n          h2 ^= k1;\n        }\n    }\n    this.h1 = h1;\n    this.h2 = h2;\n  }\n  hexdigest() {\n    let h1 = this.h1,\n      h2 = this.h2;\n    h1 ^= h2 >>> 1;\n    h1 = h1 * 0xed558ccd & MASK_HIGH | h1 * 0x8ccd & MASK_LOW;\n    h2 = h2 * 0xff51afd7 & MASK_HIGH | ((h2 << 16 | h1 >>> 16) * 0xafd7ed55 & MASK_HIGH) >>> 16;\n    h1 ^= h2 >>> 1;\n    h1 = h1 * 0x1a85ec53 & MASK_HIGH | h1 * 0xec53 & MASK_LOW;\n    h2 = h2 * 0xc4ceb9fe & MASK_HIGH | ((h2 << 16 | h1 >>> 16) * 0xb9fe1a85 & MASK_HIGH) >>> 16;\n    h1 ^= h2 >>> 1;\n    return (h1 >>> 0).toString(16).padStart(8, \"0\") + (h2 >>> 0).toString(16).padStart(8, \"0\");\n  }\n}\nexports.MurmurHash3_64 = MurmurHash3_64;\n\n/***/ }),\n/* 9 */\n/***/ ((__unused_webpack_module, exports, __w_pdfjs_require__) => {\n\n\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.FontLoader = exports.FontFaceObject = void 0;\nvar _util = __w_pdfjs_require__(1);\nclass FontLoader {\n  #systemFonts = new Set();\n  constructor({\n    ownerDocument = globalThis.document,\n    styleElement = null\n  }) {\n    this._document = ownerDocument;\n    this.nativeFontFaces = new Set();\n    this.styleElement = null;\n    this.loadingRequests = [];\n    this.loadTestFontId = 0;\n  }\n  addNativeFontFace(nativeFontFace) {\n    this.nativeFontFaces.add(nativeFontFace);\n    this._document.fonts.add(nativeFontFace);\n  }\n  removeNativeFontFace(nativeFontFace) {\n    this.nativeFontFaces.delete(nativeFontFace);\n    this._document.fonts.delete(nativeFontFace);\n  }\n  insertRule(rule) {\n    if (!this.styleElement) {\n      this.styleElement = this._document.createElement(\"style\");\n      this._document.documentElement.getElementsByTagName(\"head\")[0].append(this.styleElement);\n    }\n    const styleSheet = this.styleElement.sheet;\n    styleSheet.insertRule(rule, styleSheet.cssRules.length);\n  }\n  clear() {\n    for (const nativeFontFace of this.nativeFontFaces) {\n      this._document.fonts.delete(nativeFontFace);\n    }\n    this.nativeFontFaces.clear();\n    this.#systemFonts.clear();\n    if (this.styleElement) {\n      this.styleElement.remove();\n      this.styleElement = null;\n    }\n  }\n  async loadSystemFont(info) {\n    if (!info || this.#systemFonts.has(info.loadedName)) {\n      return;\n    }\n    (0, _util.assert)(!this.disableFontFace, \"loadSystemFont shouldn't be called when `disableFontFace` is set.\");\n    if (this.isFontLoadingAPISupported) {\n      const {\n        loadedName,\n        src,\n        style\n      } = info;\n      const fontFace = new FontFace(loadedName, src, style);\n      this.addNativeFontFace(fontFace);\n      try {\n        await fontFace.load();\n        this.#systemFonts.add(loadedName);\n      } catch {\n        (0, _util.warn)(`Cannot load system font: ${info.baseFontName}, installing it could help to improve PDF rendering.`);\n        this.removeNativeFontFace(fontFace);\n      }\n      return;\n    }\n    (0, _util.unreachable)(\"Not implemented: loadSystemFont without the Font Loading API.\");\n  }\n  async bind(font) {\n    if (font.attached || font.missingFile && !font.systemFontInfo) {\n      return;\n    }\n    font.attached = true;\n    if (font.systemFontInfo) {\n      await this.loadSystemFont(font.systemFontInfo);\n      return;\n    }\n    if (this.isFontLoadingAPISupported) {\n      const nativeFontFace = font.createNativeFontFace();\n      if (nativeFontFace) {\n        this.addNativeFontFace(nativeFontFace);\n        try {\n          await nativeFontFace.loaded;\n        } catch (ex) {\n          (0, _util.warn)(`Failed to load font '${nativeFontFace.family}': '${ex}'.`);\n          font.disableFontFace = true;\n          throw ex;\n        }\n      }\n      return;\n    }\n    const rule = font.createFontFaceRule();\n    if (rule) {\n      this.insertRule(rule);\n      if (this.isSyncFontLoadingSupported) {\n        return;\n      }\n      await new Promise(resolve => {\n        const request = this._queueLoadingCallback(resolve);\n        this._prepareFontLoadEvent(font, request);\n      });\n    }\n  }\n  get isFontLoadingAPISupported() {\n    const hasFonts = !!this._document?.fonts;\n    return (0, _util.shadow)(this, \"isFontLoadingAPISupported\", hasFonts);\n  }\n  get isSyncFontLoadingSupported() {\n    let supported = false;\n    if (_util.isNodeJS) {\n      supported = true;\n    } else if (typeof navigator !== \"undefined\" && /Mozilla\\/5.0.*?rv:\\d+.*? Gecko/.test(navigator.userAgent)) {\n      supported = true;\n    }\n    return (0, _util.shadow)(this, \"isSyncFontLoadingSupported\", supported);\n  }\n  _queueLoadingCallback(callback) {\n    function completeRequest() {\n      (0, _util.assert)(!request.done, \"completeRequest() cannot be called twice.\");\n      request.done = true;\n      while (loadingRequests.length > 0 && loadingRequests[0].done) {\n        const otherRequest = loadingRequests.shift();\n        setTimeout(otherRequest.callback, 0);\n      }\n    }\n    const {\n      loadingRequests\n    } = this;\n    const request = {\n      done: false,\n      complete: completeRequest,\n      callback\n    };\n    loadingRequests.push(request);\n    return request;\n  }\n  get _loadTestFont() {\n    const testFont = atob(\"T1RUTwALAIAAAwAwQ0ZGIDHtZg4AAAOYAAAAgUZGVE1lkzZwAAAEHAAAABxHREVGABQA\" + \"FQAABDgAAAAeT1MvMlYNYwkAAAEgAAAAYGNtYXABDQLUAAACNAAAAUJoZWFk/xVFDQAA\" + \"ALwAAAA2aGhlYQdkA+oAAAD0AAAAJGhtdHgD6AAAAAAEWAAAAAZtYXhwAAJQAAAAARgA\" + \"AAAGbmFtZVjmdH4AAAGAAAAAsXBvc3T/hgAzAAADeAAAACAAAQAAAAEAALZRFsRfDzz1\" + \"AAsD6AAAAADOBOTLAAAAAM4KHDwAAAAAA+gDIQAAAAgAAgAAAAAAAAABAAADIQAAAFoD\" + \"6AAAAAAD6AABAAAAAAAAAAAAAAAAAAAAAQAAUAAAAgAAAAQD6AH0AAUAAAKKArwAAACM\" + \"AooCvAAAAeAAMQECAAACAAYJAAAAAAAAAAAAAQAAAAAAAAAAAAAAAFBmRWQAwAAuAC4D\" + \"IP84AFoDIQAAAAAAAQAAAAAAAAAAACAAIAABAAAADgCuAAEAAAAAAAAAAQAAAAEAAAAA\" + \"AAEAAQAAAAEAAAAAAAIAAQAAAAEAAAAAAAMAAQAAAAEAAAAAAAQAAQAAAAEAAAAAAAUA\" + \"AQAAAAEAAAAAAAYAAQAAAAMAAQQJAAAAAgABAAMAAQQJAAEAAgABAAMAAQQJAAIAAgAB\" + \"AAMAAQQJAAMAAgABAAMAAQQJAAQAAgABAAMAAQQJAAUAAgABAAMAAQQJAAYAAgABWABY\" + \"AAAAAAAAAwAAAAMAAAAcAAEAAAAAADwAAwABAAAAHAAEACAAAAAEAAQAAQAAAC7//wAA\" + \"AC7////TAAEAAAAAAAABBgAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\" + \"AAAAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\" + \"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\" + \"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\" + \"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\" + \"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMAAAAAAAD/gwAyAAAAAQAAAAAAAAAAAAAAAAAA\" + \"AAABAAQEAAEBAQJYAAEBASH4DwD4GwHEAvgcA/gXBIwMAYuL+nz5tQXkD5j3CBLnEQAC\" + \"AQEBIVhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYAAABAQAADwACAQEEE/t3\" + \"Dov6fAH6fAT+fPp8+nwHDosMCvm1Cvm1DAz6fBQAAAAAAAABAAAAAMmJbzEAAAAAzgTj\" + \"FQAAAADOBOQpAAEAAAAAAAAADAAUAAQAAAABAAAAAgABAAAAAAAAAAAD6AAAAAAAAA==\");\n    return (0, _util.shadow)(this, \"_loadTestFont\", testFont);\n  }\n  _prepareFontLoadEvent(font, request) {\n    function int32(data, offset) {\n      return data.charCodeAt(offset) << 24 | data.charCodeAt(offset + 1) << 16 | data.charCodeAt(offset + 2) << 8 | data.charCodeAt(offset + 3) & 0xff;\n    }\n    function spliceString(s, offset, remove, insert) {\n      const chunk1 = s.substring(0, offset);\n      const chunk2 = s.substring(offset + remove);\n      return chunk1 + insert + chunk2;\n    }\n    let i, ii;\n    const canvas = this._document.createElement(\"canvas\");\n    canvas.width = 1;\n    canvas.height = 1;\n    const ctx = canvas.getContext(\"2d\");\n    let called = 0;\n    function isFontReady(name, callback) {\n      if (++called > 30) {\n        (0, _util.warn)(\"Load test font never loaded.\");\n        callback();\n        return;\n      }\n      ctx.font = \"30px \" + name;\n      ctx.fillText(\".\", 0, 20);\n      const imageData = ctx.getImageData(0, 0, 1, 1);\n      if (imageData.data[3] > 0) {\n        callback();\n        return;\n      }\n      setTimeout(isFontReady.bind(null, name, callback));\n    }\n    const loadTestFontId = `lt${Date.now()}${this.loadTestFontId++}`;\n    let data = this._loadTestFont;\n    const COMMENT_OFFSET = 976;\n    data = spliceString(data, COMMENT_OFFSET, loadTestFontId.length, loadTestFontId);\n    const CFF_CHECKSUM_OFFSET = 16;\n    const XXXX_VALUE = 0x58585858;\n    let checksum = int32(data, CFF_CHECKSUM_OFFSET);\n    for (i = 0, ii = loadTestFontId.length - 3; i < ii; i += 4) {\n      checksum = checksum - XXXX_VALUE + int32(loadTestFontId, i) | 0;\n    }\n    if (i < loadTestFontId.length) {\n      checksum = checksum - XXXX_VALUE + int32(loadTestFontId + \"XXX\", i) | 0;\n    }\n    data = spliceString(data, CFF_CHECKSUM_OFFSET, 4, (0, _util.string32)(checksum));\n    const url = `url(data:font/opentype;base64,${btoa(data)});`;\n    const rule = `@font-face {font-family:\"${loadTestFontId}\";src:${url}}`;\n    this.insertRule(rule);\n    const div = this._document.createElement(\"div\");\n    div.style.visibility = \"hidden\";\n    div.style.width = div.style.height = \"10px\";\n    div.style.position = \"absolute\";\n    div.style.top = div.style.left = \"0px\";\n    for (const name of [font.loadedName, loadTestFontId]) {\n      const span = this._document.createElement(\"span\");\n      span.textContent = \"Hi\";\n      span.style.fontFamily = name;\n      div.append(span);\n    }\n    this._document.body.append(div);\n    isFontReady(loadTestFontId, () => {\n      div.remove();\n      request.complete();\n    });\n  }\n}\nexports.FontLoader = FontLoader;\nclass FontFaceObject {\n  constructor(translatedData, {\n    isEvalSupported = true,\n    disableFontFace = false,\n    ignoreErrors = false,\n    inspectFont = null\n  }) {\n    this.compiledGlyphs = Object.create(null);\n    for (const i in translatedData) {\n      this[i] = translatedData[i];\n    }\n    this.isEvalSupported = isEvalSupported !== false;\n    this.disableFontFace = disableFontFace === true;\n    this.ignoreErrors = ignoreErrors === true;\n    this._inspectFont = inspectFont;\n  }\n  createNativeFontFace() {\n    if (!this.data || this.disableFontFace) {\n      return null;\n    }\n    let nativeFontFace;\n    if (!this.cssFontInfo) {\n      nativeFontFace = new FontFace(this.loadedName, this.data, {});\n    } else {\n      const css = {\n        weight: this.cssFontInfo.fontWeight\n      };\n      if (this.cssFontInfo.italicAngle) {\n        css.style = `oblique ${this.cssFontInfo.italicAngle}deg`;\n      }\n      nativeFontFace = new FontFace(this.cssFontInfo.fontFamily, this.data, css);\n    }\n    this._inspectFont?.(this);\n    return nativeFontFace;\n  }\n  createFontFaceRule() {\n    if (!this.data || this.disableFontFace) {\n      return null;\n    }\n    const data = (0, _util.bytesToString)(this.data);\n    const url = `url(data:${this.mimetype};base64,${btoa(data)});`;\n    let rule;\n    if (!this.cssFontInfo) {\n      rule = `@font-face {font-family:\"${this.loadedName}\";src:${url}}`;\n    } else {\n      let css = `font-weight: ${this.cssFontInfo.fontWeight};`;\n      if (this.cssFontInfo.italicAngle) {\n        css += `font-style: oblique ${this.cssFontInfo.italicAngle}deg;`;\n      }\n      rule = `@font-face {font-family:\"${this.cssFontInfo.fontFamily}\";${css}src:${url}}`;\n    }\n    this._inspectFont?.(this, url);\n    return rule;\n  }\n  getPathGenerator(objs, character) {\n    if (this.compiledGlyphs[character] !== undefined) {\n      return this.compiledGlyphs[character];\n    }\n    let cmds;\n    try {\n      cmds = objs.get(this.loadedName + \"_path_\" + character);\n    } catch (ex) {\n      if (!this.ignoreErrors) {\n        throw ex;\n      }\n      (0, _util.warn)(`getPathGenerator - ignoring character: \"${ex}\".`);\n      return this.compiledGlyphs[character] = function (c, size) {};\n    }\n    if (this.isEvalSupported && _util.FeatureTest.isEvalSupported) {\n      const jsBuf = [];\n      for (const current of cmds) {\n        const args = current.args !== undefined ? current.args.join(\",\") : \"\";\n        jsBuf.push(\"c.\", current.cmd, \"(\", args, \");\\n\");\n      }\n      return this.compiledGlyphs[character] = new Function(\"c\", \"size\", jsBuf.join(\"\"));\n    }\n    return this.compiledGlyphs[character] = function (c, size) {\n      for (const current of cmds) {\n        if (current.cmd === \"scale\") {\n          current.args = [size, -size];\n        }\n        c[current.cmd].apply(c, current.args);\n      }\n    };\n  }\n}\nexports.FontFaceObject = FontFaceObject;\n\n/***/ }),\n/* 10 */\n/***/ ((__unused_webpack_module, exports, __w_pdfjs_require__) => {\n\n\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.NodeStandardFontDataFactory = exports.NodeFilterFactory = exports.NodeCanvasFactory = exports.NodeCMapReaderFactory = void 0;\nvar _base_factory = __w_pdfjs_require__(7);\nvar _util = __w_pdfjs_require__(1);\n;\n;\nconst fetchData = function (url) {\n  return new Promise((resolve, reject) => {\n    const fs = require(\"fs\");\n    fs.readFile(url, (error, data) => {\n      if (error || !data) {\n        reject(new Error(error));\n        return;\n      }\n      resolve(new Uint8Array(data));\n    });\n  });\n};\nclass NodeFilterFactory extends _base_factory.BaseFilterFactory {}\nexports.NodeFilterFactory = NodeFilterFactory;\nclass NodeCanvasFactory extends _base_factory.BaseCanvasFactory {\n  _createCanvas(width, height) {\n    const Canvas = require(\"canvas\");\n    return Canvas.createCanvas(width, height);\n  }\n}\nexports.NodeCanvasFactory = NodeCanvasFactory;\nclass NodeCMapReaderFactory extends _base_factory.BaseCMapReaderFactory {\n  _fetchData(url, compressionType) {\n    return fetchData(url).then(data => {\n      return {\n        cMapData: data,\n        compressionType\n      };\n    });\n  }\n}\nexports.NodeCMapReaderFactory = NodeCMapReaderFactory;\nclass NodeStandardFontDataFactory extends _base_factory.BaseStandardFontDataFactory {\n  _fetchData(url) {\n    return fetchData(url);\n  }\n}\nexports.NodeStandardFontDataFactory = NodeStandardFontDataFactory;\n\n/***/ }),\n/* 11 */\n/***/ ((__unused_webpack_module, exports, __w_pdfjs_require__) => {\n\n\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.CanvasGraphics = void 0;\nvar _util = __w_pdfjs_require__(1);\nvar _display_utils = __w_pdfjs_require__(6);\nvar _pattern_helper = __w_pdfjs_require__(12);\nvar _image_utils = __w_pdfjs_require__(13);\nconst MIN_FONT_SIZE = 16;\nconst MAX_FONT_SIZE = 100;\nconst MAX_GROUP_SIZE = 4096;\nconst EXECUTION_TIME = 15;\nconst EXECUTION_STEPS = 10;\nconst MAX_SIZE_TO_COMPILE = 1000;\nconst FULL_CHUNK_HEIGHT = 16;\nfunction mirrorContextOperations(ctx, destCtx) {\n  if (ctx._removeMirroring) {\n    throw new Error(\"Context is already forwarding operations.\");\n  }\n  ctx.__originalSave = ctx.save;\n  ctx.__originalRestore = ctx.restore;\n  ctx.__originalRotate = ctx.rotate;\n  ctx.__originalScale = ctx.scale;\n  ctx.__originalTranslate = ctx.translate;\n  ctx.__originalTransform = ctx.transform;\n  ctx.__originalSetTransform = ctx.setTransform;\n  ctx.__originalResetTransform = ctx.resetTransform;\n  ctx.__originalClip = ctx.clip;\n  ctx.__originalMoveTo = ctx.moveTo;\n  ctx.__originalLineTo = ctx.lineTo;\n  ctx.__originalBezierCurveTo = ctx.bezierCurveTo;\n  ctx.__originalRect = ctx.rect;\n  ctx.__originalClosePath = ctx.closePath;\n  ctx.__originalBeginPath = ctx.beginPath;\n  ctx._removeMirroring = () => {\n    ctx.save = ctx.__originalSave;\n    ctx.restore = ctx.__originalRestore;\n    ctx.rotate = ctx.__originalRotate;\n    ctx.scale = ctx.__originalScale;\n    ctx.translate = ctx.__originalTranslate;\n    ctx.transform = ctx.__originalTransform;\n    ctx.setTransform = ctx.__originalSetTransform;\n    ctx.resetTransform = ctx.__originalResetTransform;\n    ctx.clip = ctx.__originalClip;\n    ctx.moveTo = ctx.__originalMoveTo;\n    ctx.lineTo = ctx.__originalLineTo;\n    ctx.bezierCurveTo = ctx.__originalBezierCurveTo;\n    ctx.rect = ctx.__originalRect;\n    ctx.closePath = ctx.__originalClosePath;\n    ctx.beginPath = ctx.__originalBeginPath;\n    delete ctx._removeMirroring;\n  };\n  ctx.save = function ctxSave() {\n    destCtx.save();\n    this.__originalSave();\n  };\n  ctx.restore = function ctxRestore() {\n    destCtx.restore();\n    this.__originalRestore();\n  };\n  ctx.translate = function ctxTranslate(x, y) {\n    destCtx.translate(x, y);\n    this.__originalTranslate(x, y);\n  };\n  ctx.scale = function ctxScale(x, y) {\n    destCtx.scale(x, y);\n    this.__originalScale(x, y);\n  };\n  ctx.transform = function ctxTransform(a, b, c, d, e, f) {\n    destCtx.transform(a, b, c, d, e, f);\n    this.__originalTransform(a, b, c, d, e, f);\n  };\n  ctx.setTransform = function ctxSetTransform(a, b, c, d, e, f) {\n    destCtx.setTransform(a, b, c, d, e, f);\n    this.__originalSetTransform(a, b, c, d, e, f);\n  };\n  ctx.resetTransform = function ctxResetTransform() {\n    destCtx.resetTransform();\n    this.__originalResetTransform();\n  };\n  ctx.rotate = function ctxRotate(angle) {\n    destCtx.rotate(angle);\n    this.__originalRotate(angle);\n  };\n  ctx.clip = function ctxRotate(rule) {\n    destCtx.clip(rule);\n    this.__originalClip(rule);\n  };\n  ctx.moveTo = function (x, y) {\n    destCtx.moveTo(x, y);\n    this.__originalMoveTo(x, y);\n  };\n  ctx.lineTo = function (x, y) {\n    destCtx.lineTo(x, y);\n    this.__originalLineTo(x, y);\n  };\n  ctx.bezierCurveTo = function (cp1x, cp1y, cp2x, cp2y, x, y) {\n    destCtx.bezierCurveTo(cp1x, cp1y, cp2x, cp2y, x, y);\n    this.__originalBezierCurveTo(cp1x, cp1y, cp2x, cp2y, x, y);\n  };\n  ctx.rect = function (x, y, width, height) {\n    destCtx.rect(x, y, width, height);\n    this.__originalRect(x, y, width, height);\n  };\n  ctx.closePath = function () {\n    destCtx.closePath();\n    this.__originalClosePath();\n  };\n  ctx.beginPath = function () {\n    destCtx.beginPath();\n    this.__originalBeginPath();\n  };\n}\nclass CachedCanvases {\n  constructor(canvasFactory) {\n    this.canvasFactory = canvasFactory;\n    this.cache = Object.create(null);\n  }\n  getCanvas(id, width, height) {\n    let canvasEntry;\n    if (this.cache[id] !== undefined) {\n      canvasEntry = this.cache[id];\n      this.canvasFactory.reset(canvasEntry, width, height);\n    } else {\n      canvasEntry = this.canvasFactory.create(width, height);\n      this.cache[id] = canvasEntry;\n    }\n    return canvasEntry;\n  }\n  delete(id) {\n    delete this.cache[id];\n  }\n  clear() {\n    for (const id in this.cache) {\n      const canvasEntry = this.cache[id];\n      this.canvasFactory.destroy(canvasEntry);\n      delete this.cache[id];\n    }\n  }\n}\nfunction drawImageAtIntegerCoords(ctx, srcImg, srcX, srcY, srcW, srcH, destX, destY, destW, destH) {\n  const [a, b, c, d, tx, ty] = (0, _display_utils.getCurrentTransform)(ctx);\n  if (b === 0 && c === 0) {\n    const tlX = destX * a + tx;\n    const rTlX = Math.round(tlX);\n    const tlY = destY * d + ty;\n    const rTlY = Math.round(tlY);\n    const brX = (destX + destW) * a + tx;\n    const rWidth = Math.abs(Math.round(brX) - rTlX) || 1;\n    const brY = (destY + destH) * d + ty;\n    const rHeight = Math.abs(Math.round(brY) - rTlY) || 1;\n    ctx.setTransform(Math.sign(a), 0, 0, Math.sign(d), rTlX, rTlY);\n    ctx.drawImage(srcImg, srcX, srcY, srcW, srcH, 0, 0, rWidth, rHeight);\n    ctx.setTransform(a, b, c, d, tx, ty);\n    return [rWidth, rHeight];\n  }\n  if (a === 0 && d === 0) {\n    const tlX = destY * c + tx;\n    const rTlX = Math.round(tlX);\n    const tlY = destX * b + ty;\n    const rTlY = Math.round(tlY);\n    const brX = (destY + destH) * c + tx;\n    const rWidth = Math.abs(Math.round(brX) - rTlX) || 1;\n    const brY = (destX + destW) * b + ty;\n    const rHeight = Math.abs(Math.round(brY) - rTlY) || 1;\n    ctx.setTransform(0, Math.sign(b), Math.sign(c), 0, rTlX, rTlY);\n    ctx.drawImage(srcImg, srcX, srcY, srcW, srcH, 0, 0, rHeight, rWidth);\n    ctx.setTransform(a, b, c, d, tx, ty);\n    return [rHeight, rWidth];\n  }\n  ctx.drawImage(srcImg, srcX, srcY, srcW, srcH, destX, destY, destW, destH);\n  const scaleX = Math.hypot(a, b);\n  const scaleY = Math.hypot(c, d);\n  return [scaleX * destW, scaleY * destH];\n}\nfunction compileType3Glyph(imgData) {\n  const {\n    width,\n    height\n  } = imgData;\n  if (width > MAX_SIZE_TO_COMPILE || height > MAX_SIZE_TO_COMPILE) {\n    return null;\n  }\n  const POINT_TO_PROCESS_LIMIT = 1000;\n  const POINT_TYPES = new Uint8Array([0, 2, 4, 0, 1, 0, 5, 4, 8, 10, 0, 8, 0, 2, 1, 0]);\n  const width1 = width + 1;\n  let points = new Uint8Array(width1 * (height + 1));\n  let i, j, j0;\n  const lineSize = width + 7 & ~7;\n  let data = new Uint8Array(lineSize * height),\n    pos = 0;\n  for (const elem of imgData.data) {\n    let mask = 128;\n    while (mask > 0) {\n      data[pos++] = elem & mask ? 0 : 255;\n      mask >>= 1;\n    }\n  }\n  let count = 0;\n  pos = 0;\n  if (data[pos] !== 0) {\n    points[0] = 1;\n    ++count;\n  }\n  for (j = 1; j < width; j++) {\n    if (data[pos] !== data[pos + 1]) {\n      points[j] = data[pos] ? 2 : 1;\n      ++count;\n    }\n    pos++;\n  }\n  if (data[pos] !== 0) {\n    points[j] = 2;\n    ++count;\n  }\n  for (i = 1; i < height; i++) {\n    pos = i * lineSize;\n    j0 = i * width1;\n    if (data[pos - lineSize] !== data[pos]) {\n      points[j0] = data[pos] ? 1 : 8;\n      ++count;\n    }\n    let sum = (data[pos] ? 4 : 0) + (data[pos - lineSize] ? 8 : 0);\n    for (j = 1; j < width; j++) {\n      sum = (sum >> 2) + (data[pos + 1] ? 4 : 0) + (data[pos - lineSize + 1] ? 8 : 0);\n      if (POINT_TYPES[sum]) {\n        points[j0 + j] = POINT_TYPES[sum];\n        ++count;\n      }\n      pos++;\n    }\n    if (data[pos - lineSize] !== data[pos]) {\n      points[j0 + j] = data[pos] ? 2 : 4;\n      ++count;\n    }\n    if (count > POINT_TO_PROCESS_LIMIT) {\n      return null;\n    }\n  }\n  pos = lineSize * (height - 1);\n  j0 = i * width1;\n  if (data[pos] !== 0) {\n    points[j0] = 8;\n    ++count;\n  }\n  for (j = 1; j < width; j++) {\n    if (data[pos] !== data[pos + 1]) {\n      points[j0 + j] = data[pos] ? 4 : 8;\n      ++count;\n    }\n    pos++;\n  }\n  if (data[pos] !== 0) {\n    points[j0 + j] = 4;\n    ++count;\n  }\n  if (count > POINT_TO_PROCESS_LIMIT) {\n    return null;\n  }\n  const steps = new Int32Array([0, width1, -1, 0, -width1, 0, 0, 0, 1]);\n  const path = new Path2D();\n  for (i = 0; count && i <= height; i++) {\n    let p = i * width1;\n    const end = p + width;\n    while (p < end && !points[p]) {\n      p++;\n    }\n    if (p === end) {\n      continue;\n    }\n    path.moveTo(p % width1, i);\n    const p0 = p;\n    let type = points[p];\n    do {\n      const step = steps[type];\n      do {\n        p += step;\n      } while (!points[p]);\n      const pp = points[p];\n      if (pp !== 5 && pp !== 10) {\n        type = pp;\n        points[p] = 0;\n      } else {\n        type = pp & 0x33 * type >> 4;\n        points[p] &= type >> 2 | type << 2;\n      }\n      path.lineTo(p % width1, p / width1 | 0);\n      if (!points[p]) {\n        --count;\n      }\n    } while (p0 !== p);\n    --i;\n  }\n  data = null;\n  points = null;\n  const drawOutline = function (c) {\n    c.save();\n    c.scale(1 / width, -1 / height);\n    c.translate(0, -height);\n    c.fill(path);\n    c.beginPath();\n    c.restore();\n  };\n  return drawOutline;\n}\nclass CanvasExtraState {\n  constructor(width, height) {\n    this.alphaIsShape = false;\n    this.fontSize = 0;\n    this.fontSizeScale = 1;\n    this.textMatrix = _util.IDENTITY_MATRIX;\n    this.textMatrixScale = 1;\n    this.fontMatrix = _util.FONT_IDENTITY_MATRIX;\n    this.leading = 0;\n    this.x = 0;\n    this.y = 0;\n    this.lineX = 0;\n    this.lineY = 0;\n    this.charSpacing = 0;\n    this.wordSpacing = 0;\n    this.textHScale = 1;\n    this.textRenderingMode = _util.TextRenderingMode.FILL;\n    this.textRise = 0;\n    this.fillColor = \"#000000\";\n    this.strokeColor = \"#000000\";\n    this.patternFill = false;\n    this.fillAlpha = 1;\n    this.strokeAlpha = 1;\n    this.lineWidth = 1;\n    this.activeSMask = null;\n    this.transferMaps = \"none\";\n    this.startNewPathAndClipBox([0, 0, width, height]);\n  }\n  clone() {\n    const clone = Object.create(this);\n    clone.clipBox = this.clipBox.slice();\n    return clone;\n  }\n  setCurrentPoint(x, y) {\n    this.x = x;\n    this.y = y;\n  }\n  updatePathMinMax(transform, x, y) {\n    [x, y] = _util.Util.applyTransform([x, y], transform);\n    this.minX = Math.min(this.minX, x);\n    this.minY = Math.min(this.minY, y);\n    this.maxX = Math.max(this.maxX, x);\n    this.maxY = Math.max(this.maxY, y);\n  }\n  updateRectMinMax(transform, rect) {\n    const p1 = _util.Util.applyTransform(rect, transform);\n    const p2 = _util.Util.applyTransform(rect.slice(2), transform);\n    this.minX = Math.min(this.minX, p1[0], p2[0]);\n    this.minY = Math.min(this.minY, p1[1], p2[1]);\n    this.maxX = Math.max(this.maxX, p1[0], p2[0]);\n    this.maxY = Math.max(this.maxY, p1[1], p2[1]);\n  }\n  updateScalingPathMinMax(transform, minMax) {\n    _util.Util.scaleMinMax(transform, minMax);\n    this.minX = Math.min(this.minX, minMax[0]);\n    this.maxX = Math.max(this.maxX, minMax[1]);\n    this.minY = Math.min(this.minY, minMax[2]);\n    this.maxY = Math.max(this.maxY, minMax[3]);\n  }\n  updateCurvePathMinMax(transform, x0, y0, x1, y1, x2, y2, x3, y3, minMax) {\n    const box = _util.Util.bezierBoundingBox(x0, y0, x1, y1, x2, y2, x3, y3);\n    if (minMax) {\n      minMax[0] = Math.min(minMax[0], box[0], box[2]);\n      minMax[1] = Math.max(minMax[1], box[0], box[2]);\n      minMax[2] = Math.min(minMax[2], box[1], box[3]);\n      minMax[3] = Math.max(minMax[3], box[1], box[3]);\n      return;\n    }\n    this.updateRectMinMax(transform, box);\n  }\n  getPathBoundingBox(pathType = _pattern_helper.PathType.FILL, transform = null) {\n    const box = [this.minX, this.minY, this.maxX, this.maxY];\n    if (pathType === _pattern_helper.PathType.STROKE) {\n      if (!transform) {\n        (0, _util.unreachable)(\"Stroke bounding box must include transform.\");\n      }\n      const scale = _util.Util.singularValueDecompose2dScale(transform);\n      const xStrokePad = scale[0] * this.lineWidth / 2;\n      const yStrokePad = scale[1] * this.lineWidth / 2;\n      box[0] -= xStrokePad;\n      box[1] -= yStrokePad;\n      box[2] += xStrokePad;\n      box[3] += yStrokePad;\n    }\n    return box;\n  }\n  updateClipFromPath() {\n    const intersect = _util.Util.intersect(this.clipBox, this.getPathBoundingBox());\n    this.startNewPathAndClipBox(intersect || [0, 0, 0, 0]);\n  }\n  isEmptyClip() {\n    return this.minX === Infinity;\n  }\n  startNewPathAndClipBox(box) {\n    this.clipBox = box;\n    this.minX = Infinity;\n    this.minY = Infinity;\n    this.maxX = 0;\n    this.maxY = 0;\n  }\n  getClippedPathBoundingBox(pathType = _pattern_helper.PathType.FILL, transform = null) {\n    return _util.Util.intersect(this.clipBox, this.getPathBoundingBox(pathType, transform));\n  }\n}\nfunction putBinaryImageData(ctx, imgData) {\n  if (typeof ImageData !== \"undefined\" && imgData instanceof ImageData) {\n    ctx.putImageData(imgData, 0, 0);\n    return;\n  }\n  const height = imgData.height,\n    width = imgData.width;\n  const partialChunkHeight = height % FULL_CHUNK_HEIGHT;\n  const fullChunks = (height - partialChunkHeight) / FULL_CHUNK_HEIGHT;\n  const totalChunks = partialChunkHeight === 0 ? fullChunks : fullChunks + 1;\n  const chunkImgData = ctx.createImageData(width, FULL_CHUNK_HEIGHT);\n  let srcPos = 0,\n    destPos;\n  const src = imgData.data;\n  const dest = chunkImgData.data;\n  let i, j, thisChunkHeight, elemsInThisChunk;\n  if (imgData.kind === _util.ImageKind.GRAYSCALE_1BPP) {\n    const srcLength = src.byteLength;\n    const dest32 = new Uint32Array(dest.buffer, 0, dest.byteLength >> 2);\n    const dest32DataLength = dest32.length;\n    const fullSrcDiff = width + 7 >> 3;\n    const white = 0xffffffff;\n    const black = _util.FeatureTest.isLittleEndian ? 0xff000000 : 0x000000ff;\n    for (i = 0; i < totalChunks; i++) {\n      thisChunkHeight = i < fullChunks ? FULL_CHUNK_HEIGHT : partialChunkHeight;\n      destPos = 0;\n      for (j = 0; j < thisChunkHeight; j++) {\n        const srcDiff = srcLength - srcPos;\n        let k = 0;\n        const kEnd = srcDiff > fullSrcDiff ? width : srcDiff * 8 - 7;\n        const kEndUnrolled = kEnd & ~7;\n        let mask = 0;\n        let srcByte = 0;\n        for (; k < kEndUnrolled; k += 8) {\n          srcByte = src[srcPos++];\n          dest32[destPos++] = srcByte & 128 ? white : black;\n          dest32[destPos++] = srcByte & 64 ? white : black;\n          dest32[destPos++] = srcByte & 32 ? white : black;\n          dest32[destPos++] = srcByte & 16 ? white : black;\n          dest32[destPos++] = srcByte & 8 ? white : black;\n          dest32[destPos++] = srcByte & 4 ? white : black;\n          dest32[destPos++] = srcByte & 2 ? white : black;\n          dest32[destPos++] = srcByte & 1 ? white : black;\n        }\n        for (; k < kEnd; k++) {\n          if (mask === 0) {\n            srcByte = src[srcPos++];\n            mask = 128;\n          }\n          dest32[destPos++] = srcByte & mask ? white : black;\n          mask >>= 1;\n        }\n      }\n      while (destPos < dest32DataLength) {\n        dest32[destPos++] = 0;\n      }\n      ctx.putImageData(chunkImgData, 0, i * FULL_CHUNK_HEIGHT);\n    }\n  } else if (imgData.kind === _util.ImageKind.RGBA_32BPP) {\n    j = 0;\n    elemsInThisChunk = width * FULL_CHUNK_HEIGHT * 4;\n    for (i = 0; i < fullChunks; i++) {\n      dest.set(src.subarray(srcPos, srcPos + elemsInThisChunk));\n      srcPos += elemsInThisChunk;\n      ctx.putImageData(chunkImgData, 0, j);\n      j += FULL_CHUNK_HEIGHT;\n    }\n    if (i < totalChunks) {\n      elemsInThisChunk = width * partialChunkHeight * 4;\n      dest.set(src.subarray(srcPos, srcPos + elemsInThisChunk));\n      ctx.putImageData(chunkImgData, 0, j);\n    }\n  } else if (imgData.kind === _util.ImageKind.RGB_24BPP) {\n    thisChunkHeight = FULL_CHUNK_HEIGHT;\n    elemsInThisChunk = width * thisChunkHeight;\n    for (i = 0; i < totalChunks; i++) {\n      if (i >= fullChunks) {\n        thisChunkHeight = partialChunkHeight;\n        elemsInThisChunk = width * thisChunkHeight;\n      }\n      destPos = 0;\n      for (j = elemsInThisChunk; j--;) {\n        dest[destPos++] = src[srcPos++];\n        dest[destPos++] = src[srcPos++];\n        dest[destPos++] = src[srcPos++];\n        dest[destPos++] = 255;\n      }\n      ctx.putImageData(chunkImgData, 0, i * FULL_CHUNK_HEIGHT);\n    }\n  } else {\n    throw new Error(`bad image kind: ${imgData.kind}`);\n  }\n}\nfunction putBinaryImageMask(ctx, imgData) {\n  if (imgData.bitmap) {\n    ctx.drawImage(imgData.bitmap, 0, 0);\n    return;\n  }\n  const height = imgData.height,\n    width = imgData.width;\n  const partialChunkHeight = height % FULL_CHUNK_HEIGHT;\n  const fullChunks = (height - partialChunkHeight) / FULL_CHUNK_HEIGHT;\n  const totalChunks = partialChunkHeight === 0 ? fullChunks : fullChunks + 1;\n  const chunkImgData = ctx.createImageData(width, FULL_CHUNK_HEIGHT);\n  let srcPos = 0;\n  const src = imgData.data;\n  const dest = chunkImgData.data;\n  for (let i = 0; i < totalChunks; i++) {\n    const thisChunkHeight = i < fullChunks ? FULL_CHUNK_HEIGHT : partialChunkHeight;\n    ({\n      srcPos\n    } = (0, _image_utils.convertBlackAndWhiteToRGBA)({\n      src,\n      srcPos,\n      dest,\n      width,\n      height: thisChunkHeight,\n      nonBlackColor: 0\n    }));\n    ctx.putImageData(chunkImgData, 0, i * FULL_CHUNK_HEIGHT);\n  }\n}\nfunction copyCtxState(sourceCtx, destCtx) {\n  const properties = [\"strokeStyle\", \"fillStyle\", \"fillRule\", \"globalAlpha\", \"lineWidth\", \"lineCap\", \"lineJoin\", \"miterLimit\", \"globalCompositeOperation\", \"font\", \"filter\"];\n  for (const property of properties) {\n    if (sourceCtx[property] !== undefined) {\n      destCtx[property] = sourceCtx[property];\n    }\n  }\n  if (sourceCtx.setLineDash !== undefined) {\n    destCtx.setLineDash(sourceCtx.getLineDash());\n    destCtx.lineDashOffset = sourceCtx.lineDashOffset;\n  }\n}\nfunction resetCtxToDefault(ctx) {\n  ctx.strokeStyle = ctx.fillStyle = \"#000000\";\n  ctx.fillRule = \"nonzero\";\n  ctx.globalAlpha = 1;\n  ctx.lineWidth = 1;\n  ctx.lineCap = \"butt\";\n  ctx.lineJoin = \"miter\";\n  ctx.miterLimit = 10;\n  ctx.globalCompositeOperation = \"source-over\";\n  ctx.font = \"10px sans-serif\";\n  if (ctx.setLineDash !== undefined) {\n    ctx.setLineDash([]);\n    ctx.lineDashOffset = 0;\n  }\n  if (!_util.isNodeJS) {\n    const {\n      filter\n    } = ctx;\n    if (filter !== \"none\" && filter !== \"\") {\n      ctx.filter = \"none\";\n    }\n  }\n}\nfunction composeSMaskBackdrop(bytes, r0, g0, b0) {\n  const length = bytes.length;\n  for (let i = 3; i < length; i += 4) {\n    const alpha = bytes[i];\n    if (alpha === 0) {\n      bytes[i - 3] = r0;\n      bytes[i - 2] = g0;\n      bytes[i - 1] = b0;\n    } else if (alpha < 255) {\n      const alpha_ = 255 - alpha;\n      bytes[i - 3] = bytes[i - 3] * alpha + r0 * alpha_ >> 8;\n      bytes[i - 2] = bytes[i - 2] * alpha + g0 * alpha_ >> 8;\n      bytes[i - 1] = bytes[i - 1] * alpha + b0 * alpha_ >> 8;\n    }\n  }\n}\nfunction composeSMaskAlpha(maskData, layerData, transferMap) {\n  const length = maskData.length;\n  const scale = 1 / 255;\n  for (let i = 3; i < length; i += 4) {\n    const alpha = transferMap ? transferMap[maskData[i]] : maskData[i];\n    layerData[i] = layerData[i] * alpha * scale | 0;\n  }\n}\nfunction composeSMaskLuminosity(maskData, layerData, transferMap) {\n  const length = maskData.length;\n  for (let i = 3; i < length; i += 4) {\n    const y = maskData[i - 3] * 77 + maskData[i - 2] * 152 + maskData[i - 1] * 28;\n    layerData[i] = transferMap ? layerData[i] * transferMap[y >> 8] >> 8 : layerData[i] * y >> 16;\n  }\n}\nfunction genericComposeSMask(maskCtx, layerCtx, width, height, subtype, backdrop, transferMap, layerOffsetX, layerOffsetY, maskOffsetX, maskOffsetY) {\n  const hasBackdrop = !!backdrop;\n  const r0 = hasBackdrop ? backdrop[0] : 0;\n  const g0 = hasBackdrop ? backdrop[1] : 0;\n  const b0 = hasBackdrop ? backdrop[2] : 0;\n  const composeFn = subtype === \"Luminosity\" ? composeSMaskLuminosity : composeSMaskAlpha;\n  const PIXELS_TO_PROCESS = 1048576;\n  const chunkSize = Math.min(height, Math.ceil(PIXELS_TO_PROCESS / width));\n  for (let row = 0; row < height; row += chunkSize) {\n    const chunkHeight = Math.min(chunkSize, height - row);\n    const maskData = maskCtx.getImageData(layerOffsetX - maskOffsetX, row + (layerOffsetY - maskOffsetY), width, chunkHeight);\n    const layerData = layerCtx.getImageData(layerOffsetX, row + layerOffsetY, width, chunkHeight);\n    if (hasBackdrop) {\n      composeSMaskBackdrop(maskData.data, r0, g0, b0);\n    }\n    composeFn(maskData.data, layerData.data, transferMap);\n    layerCtx.putImageData(layerData, layerOffsetX, row + layerOffsetY);\n  }\n}\nfunction composeSMask(ctx, smask, layerCtx, layerBox) {\n  const layerOffsetX = layerBox[0];\n  const layerOffsetY = layerBox[1];\n  const layerWidth = layerBox[2] - layerOffsetX;\n  const layerHeight = layerBox[3] - layerOffsetY;\n  if (layerWidth === 0 || layerHeight === 0) {\n    return;\n  }\n  genericComposeSMask(smask.context, layerCtx, layerWidth, layerHeight, smask.subtype, smask.backdrop, smask.transferMap, layerOffsetX, layerOffsetY, smask.offsetX, smask.offsetY);\n  ctx.save();\n  ctx.globalAlpha = 1;\n  ctx.globalCompositeOperation = \"source-over\";\n  ctx.setTransform(1, 0, 0, 1, 0, 0);\n  ctx.drawImage(layerCtx.canvas, 0, 0);\n  ctx.restore();\n}\nfunction getImageSmoothingEnabled(transform, interpolate) {\n  const scale = _util.Util.singularValueDecompose2dScale(transform);\n  scale[0] = Math.fround(scale[0]);\n  scale[1] = Math.fround(scale[1]);\n  const actualScale = Math.fround((globalThis.devicePixelRatio || 1) * _display_utils.PixelsPerInch.PDF_TO_CSS_UNITS);\n  if (interpolate !== undefined) {\n    return interpolate;\n  } else if (scale[0] <= actualScale || scale[1] <= actualScale) {\n    return true;\n  }\n  return false;\n}\nconst LINE_CAP_STYLES = [\"butt\", \"round\", \"square\"];\nconst LINE_JOIN_STYLES = [\"miter\", \"round\", \"bevel\"];\nconst NORMAL_CLIP = {};\nconst EO_CLIP = {};\nclass CanvasGraphics {\n  constructor(canvasCtx, commonObjs, objs, canvasFactory, filterFactory, {\n    optionalContentConfig,\n    markedContentStack = null\n  }, annotationCanvasMap, pageColors) {\n    this.ctx = canvasCtx;\n    this.current = new CanvasExtraState(this.ctx.canvas.width, this.ctx.canvas.height);\n    this.stateStack = [];\n    this.pendingClip = null;\n    this.pendingEOFill = false;\n    this.res = null;\n    this.xobjs = null;\n    this.commonObjs = commonObjs;\n    this.objs = objs;\n    this.canvasFactory = canvasFactory;\n    this.filterFactory = filterFactory;\n    this.groupStack = [];\n    this.processingType3 = null;\n    this.baseTransform = null;\n    this.baseTransformStack = [];\n    this.groupLevel = 0;\n    this.smaskStack = [];\n    this.smaskCounter = 0;\n    this.tempSMask = null;\n    this.suspendedCtx = null;\n    this.contentVisible = true;\n    this.markedContentStack = markedContentStack || [];\n    this.optionalContentConfig = optionalContentConfig;\n    this.cachedCanvases = new CachedCanvases(this.canvasFactory);\n    this.cachedPatterns = new Map();\n    this.annotationCanvasMap = annotationCanvasMap;\n    this.viewportScale = 1;\n    this.outputScaleX = 1;\n    this.outputScaleY = 1;\n    this.pageColors = pageColors;\n    this._cachedScaleForStroking = [-1, 0];\n    this._cachedGetSinglePixelWidth = null;\n    this._cachedBitmapsMap = new Map();\n  }\n  getObject(data, fallback = null) {\n    if (typeof data === \"string\") {\n      return data.startsWith(\"g_\") ? this.commonObjs.get(data) : this.objs.get(data);\n    }\n    return fallback;\n  }\n  beginDrawing({\n    transform,\n    viewport,\n    transparency = false,\n    background = null\n  }) {\n    const width = this.ctx.canvas.width;\n    const height = this.ctx.canvas.height;\n    const savedFillStyle = this.ctx.fillStyle;\n    this.ctx.fillStyle = background || \"#ffffff\";\n    this.ctx.fillRect(0, 0, width, height);\n    this.ctx.fillStyle = savedFillStyle;\n    if (transparency) {\n      const transparentCanvas = this.cachedCanvases.getCanvas(\"transparent\", width, height);\n      this.compositeCtx = this.ctx;\n      this.transparentCanvas = transparentCanvas.canvas;\n      this.ctx = transparentCanvas.context;\n      this.ctx.save();\n      this.ctx.transform(...(0, _display_utils.getCurrentTransform)(this.compositeCtx));\n    }\n    this.ctx.save();\n    resetCtxToDefault(this.ctx);\n    if (transform) {\n      this.ctx.transform(...transform);\n      this.outputScaleX = transform[0];\n      this.outputScaleY = transform[0];\n    }\n    this.ctx.transform(...viewport.transform);\n    this.viewportScale = viewport.scale;\n    this.baseTransform = (0, _display_utils.getCurrentTransform)(this.ctx);\n  }\n  executeOperatorList(operatorList, executionStartIdx, continueCallback, stepper) {\n    const argsArray = operatorList.argsArray;\n    const fnArray = operatorList.fnArray;\n    let i = executionStartIdx || 0;\n    const argsArrayLen = argsArray.length;\n    if (argsArrayLen === i) {\n      return i;\n    }\n    const chunkOperations = argsArrayLen - i > EXECUTION_STEPS && typeof continueCallback === \"function\";\n    const endTime = chunkOperations ? Date.now() + EXECUTION_TIME : 0;\n    let steps = 0;\n    const commonObjs = this.commonObjs;\n    const objs = this.objs;\n    let fnId;\n    while (true) {\n      if (stepper !== undefined && i === stepper.nextBreakPoint) {\n        stepper.breakIt(i, continueCallback);\n        return i;\n      }\n      fnId = fnArray[i];\n      if (fnId !== _util.OPS.dependency) {\n        this[fnId].apply(this, argsArray[i]);\n      } else {\n        for (const depObjId of argsArray[i]) {\n          const objsPool = depObjId.startsWith(\"g_\") ? commonObjs : objs;\n          if (!objsPool.has(depObjId)) {\n            objsPool.get(depObjId, continueCallback);\n            return i;\n          }\n        }\n      }\n      i++;\n      if (i === argsArrayLen) {\n        return i;\n      }\n      if (chunkOperations && ++steps > EXECUTION_STEPS) {\n        if (Date.now() > endTime) {\n          continueCallback();\n          return i;\n        }\n        steps = 0;\n      }\n    }\n  }\n  #restoreInitialState() {\n    while (this.stateStack.length || this.inSMaskMode) {\n      this.restore();\n    }\n    this.ctx.restore();\n    if (this.transparentCanvas) {\n      this.ctx = this.compositeCtx;\n      this.ctx.save();\n      this.ctx.setTransform(1, 0, 0, 1, 0, 0);\n      this.ctx.drawImage(this.transparentCanvas, 0, 0);\n      this.ctx.restore();\n      this.transparentCanvas = null;\n    }\n  }\n  endDrawing() {\n    this.#restoreInitialState();\n    this.cachedCanvases.clear();\n    this.cachedPatterns.clear();\n    for (const cache of this._cachedBitmapsMap.values()) {\n      for (const canvas of cache.values()) {\n        if (typeof HTMLCanvasElement !== \"undefined\" && canvas instanceof HTMLCanvasElement) {\n          canvas.width = canvas.height = 0;\n        }\n      }\n      cache.clear();\n    }\n    this._cachedBitmapsMap.clear();\n    this.#drawFilter();\n  }\n  #drawFilter() {\n    if (this.pageColors) {\n      const hcmFilterId = this.filterFactory.addHCMFilter(this.pageColors.foreground, this.pageColors.background);\n      if (hcmFilterId !== \"none\") {\n        const savedFilter = this.ctx.filter;\n        this.ctx.filter = hcmFilterId;\n        this.ctx.drawImage(this.ctx.canvas, 0, 0);\n        this.ctx.filter = savedFilter;\n      }\n    }\n  }\n  _scaleImage(img, inverseTransform) {\n    const width = img.width;\n    const height = img.height;\n    let widthScale = Math.max(Math.hypot(inverseTransform[0], inverseTransform[1]), 1);\n    let heightScale = Math.max(Math.hypot(inverseTransform[2], inverseTransform[3]), 1);\n    let paintWidth = width,\n      paintHeight = height;\n    let tmpCanvasId = \"prescale1\";\n    let tmpCanvas, tmpCtx;\n    while (widthScale > 2 && paintWidth > 1 || heightScale > 2 && paintHeight > 1) {\n      let newWidth = paintWidth,\n        newHeight = paintHeight;\n      if (widthScale > 2 && paintWidth > 1) {\n        newWidth = paintWidth >= 16384 ? Math.floor(paintWidth / 2) - 1 || 1 : Math.ceil(paintWidth / 2);\n        widthScale /= paintWidth / newWidth;\n      }\n      if (heightScale > 2 && paintHeight > 1) {\n        newHeight = paintHeight >= 16384 ? Math.floor(paintHeight / 2) - 1 || 1 : Math.ceil(paintHeight) / 2;\n        heightScale /= paintHeight / newHeight;\n      }\n      tmpCanvas = this.cachedCanvases.getCanvas(tmpCanvasId, newWidth, newHeight);\n      tmpCtx = tmpCanvas.context;\n      tmpCtx.clearRect(0, 0, newWidth, newHeight);\n      tmpCtx.drawImage(img, 0, 0, paintWidth, paintHeight, 0, 0, newWidth, newHeight);\n      img = tmpCanvas.canvas;\n      paintWidth = newWidth;\n      paintHeight = newHeight;\n      tmpCanvasId = tmpCanvasId === \"prescale1\" ? \"prescale2\" : \"prescale1\";\n    }\n    return {\n      img,\n      paintWidth,\n      paintHeight\n    };\n  }\n  _createMaskCanvas(img) {\n    const ctx = this.ctx;\n    const {\n      width,\n      height\n    } = img;\n    const fillColor = this.current.fillColor;\n    const isPatternFill = this.current.patternFill;\n    const currentTransform = (0, _display_utils.getCurrentTransform)(ctx);\n    let cache, cacheKey, scaled, maskCanvas;\n    if ((img.bitmap || img.data) && img.count > 1) {\n      const mainKey = img.bitmap || img.data.buffer;\n      cacheKey = JSON.stringify(isPatternFill ? currentTransform : [currentTransform.slice(0, 4), fillColor]);\n      cache = this._cachedBitmapsMap.get(mainKey);\n      if (!cache) {\n        cache = new Map();\n        this._cachedBitmapsMap.set(mainKey, cache);\n      }\n      const cachedImage = cache.get(cacheKey);\n      if (cachedImage && !isPatternFill) {\n        const offsetX = Math.round(Math.min(currentTransform[0], currentTransform[2]) + currentTransform[4]);\n        const offsetY = Math.round(Math.min(currentTransform[1], currentTransform[3]) + currentTransform[5]);\n        return {\n          canvas: cachedImage,\n          offsetX,\n          offsetY\n        };\n      }\n      scaled = cachedImage;\n    }\n    if (!scaled) {\n      maskCanvas = this.cachedCanvases.getCanvas(\"maskCanvas\", width, height);\n      putBinaryImageMask(maskCanvas.context, img);\n    }\n    let maskToCanvas = _util.Util.transform(currentTransform, [1 / width, 0, 0, -1 / height, 0, 0]);\n    maskToCanvas = _util.Util.transform(maskToCanvas, [1, 0, 0, 1, 0, -height]);\n    const cord1 = _util.Util.applyTransform([0, 0], maskToCanvas);\n    const cord2 = _util.Util.applyTransform([width, height], maskToCanvas);\n    const rect = _util.Util.normalizeRect([cord1[0], cord1[1], cord2[0], cord2[1]]);\n    const drawnWidth = Math.round(rect[2] - rect[0]) || 1;\n    const drawnHeight = Math.round(rect[3] - rect[1]) || 1;\n    const fillCanvas = this.cachedCanvases.getCanvas(\"fillCanvas\", drawnWidth, drawnHeight);\n    const fillCtx = fillCanvas.context;\n    const offsetX = Math.min(cord1[0], cord2[0]);\n    const offsetY = Math.min(cord1[1], cord2[1]);\n    fillCtx.translate(-offsetX, -offsetY);\n    fillCtx.transform(...maskToCanvas);\n    if (!scaled) {\n      scaled = this._scaleImage(maskCanvas.canvas, (0, _display_utils.getCurrentTransformInverse)(fillCtx));\n      scaled = scaled.img;\n      if (cache && isPatternFill) {\n        cache.set(cacheKey, scaled);\n      }\n    }\n    fillCtx.imageSmoothingEnabled = getImageSmoothingEnabled((0, _display_utils.getCurrentTransform)(fillCtx), img.interpolate);\n    drawImageAtIntegerCoords(fillCtx, scaled, 0, 0, scaled.width, scaled.height, 0, 0, width, height);\n    fillCtx.globalCompositeOperation = \"source-in\";\n    const inverse = _util.Util.transform((0, _display_utils.getCurrentTransformInverse)(fillCtx), [1, 0, 0, 1, -offsetX, -offsetY]);\n    fillCtx.fillStyle = isPatternFill ? fillColor.getPattern(ctx, this, inverse, _pattern_helper.PathType.FILL) : fillColor;\n    fillCtx.fillRect(0, 0, width, height);\n    if (cache && !isPatternFill) {\n      this.cachedCanvases.delete(\"fillCanvas\");\n      cache.set(cacheKey, fillCanvas.canvas);\n    }\n    return {\n      canvas: fillCanvas.canvas,\n      offsetX: Math.round(offsetX),\n      offsetY: Math.round(offsetY)\n    };\n  }\n  setLineWidth(width) {\n    if (width !== this.current.lineWidth) {\n      this._cachedScaleForStroking[0] = -1;\n    }\n    this.current.lineWidth = width;\n    this.ctx.lineWidth = width;\n  }\n  setLineCap(style) {\n    this.ctx.lineCap = LINE_CAP_STYLES[style];\n  }\n  setLineJoin(style) {\n    this.ctx.lineJoin = LINE_JOIN_STYLES[style];\n  }\n  setMiterLimit(limit) {\n    this.ctx.miterLimit = limit;\n  }\n  setDash(dashArray, dashPhase) {\n    const ctx = this.ctx;\n    if (ctx.setLineDash !== undefined) {\n      ctx.setLineDash(dashArray);\n      ctx.lineDashOffset = dashPhase;\n    }\n  }\n  setRenderingIntent(intent) {}\n  setFlatness(flatness) {}\n  setGState(states) {\n    for (const [key, value] of states) {\n      switch (key) {\n        case \"LW\":\n          this.setLineWidth(value);\n          break;\n        case \"LC\":\n          this.setLineCap(value);\n          break;\n        case \"LJ\":\n          this.setLineJoin(value);\n          break;\n        case \"ML\":\n          this.setMiterLimit(value);\n          break;\n        case \"D\":\n          this.setDash(value[0], value[1]);\n          break;\n        case \"RI\":\n          this.setRenderingIntent(value);\n          break;\n        case \"FL\":\n          this.setFlatness(value);\n          break;\n        case \"Font\":\n          this.setFont(value[0], value[1]);\n          break;\n        case \"CA\":\n          this.current.strokeAlpha = value;\n          break;\n        case \"ca\":\n          this.current.fillAlpha = value;\n          this.ctx.globalAlpha = value;\n          break;\n        case \"BM\":\n          this.ctx.globalCompositeOperation = value;\n          break;\n        case \"SMask\":\n          this.current.activeSMask = value ? this.tempSMask : null;\n          this.tempSMask = null;\n          this.checkSMaskState();\n          break;\n        case \"TR\":\n          this.ctx.filter = this.current.transferMaps = this.filterFactory.addFilter(value);\n          break;\n      }\n    }\n  }\n  get inSMaskMode() {\n    return !!this.suspendedCtx;\n  }\n  checkSMaskState() {\n    const inSMaskMode = this.inSMaskMode;\n    if (this.current.activeSMask && !inSMaskMode) {\n      this.beginSMaskMode();\n    } else if (!this.current.activeSMask && inSMaskMode) {\n      this.endSMaskMode();\n    }\n  }\n  beginSMaskMode() {\n    if (this.inSMaskMode) {\n      throw new Error(\"beginSMaskMode called while already in smask mode\");\n    }\n    const drawnWidth = this.ctx.canvas.width;\n    const drawnHeight = this.ctx.canvas.height;\n    const cacheId = \"smaskGroupAt\" + this.groupLevel;\n    const scratchCanvas = this.cachedCanvases.getCanvas(cacheId, drawnWidth, drawnHeight);\n    this.suspendedCtx = this.ctx;\n    this.ctx = scratchCanvas.context;\n    const ctx = this.ctx;\n    ctx.setTransform(...(0, _display_utils.getCurrentTransform)(this.suspendedCtx));\n    copyCtxState(this.suspendedCtx, ctx);\n    mirrorContextOperations(ctx, this.suspendedCtx);\n    this.setGState([[\"BM\", \"source-over\"], [\"ca\", 1], [\"CA\", 1]]);\n  }\n  endSMaskMode() {\n    if (!this.inSMaskMode) {\n      throw new Error(\"endSMaskMode called while not in smask mode\");\n    }\n    this.ctx._removeMirroring();\n    copyCtxState(this.ctx, this.suspendedCtx);\n    this.ctx = this.suspendedCtx;\n    this.suspendedCtx = null;\n  }\n  compose(dirtyBox) {\n    if (!this.current.activeSMask) {\n      return;\n    }\n    if (!dirtyBox) {\n      dirtyBox = [0, 0, this.ctx.canvas.width, this.ctx.canvas.height];\n    } else {\n      dirtyBox[0] = Math.floor(dirtyBox[0]);\n      dirtyBox[1] = Math.floor(dirtyBox[1]);\n      dirtyBox[2] = Math.ceil(dirtyBox[2]);\n      dirtyBox[3] = Math.ceil(dirtyBox[3]);\n    }\n    const smask = this.current.activeSMask;\n    const suspendedCtx = this.suspendedCtx;\n    composeSMask(suspendedCtx, smask, this.ctx, dirtyBox);\n    this.ctx.save();\n    this.ctx.setTransform(1, 0, 0, 1, 0, 0);\n    this.ctx.clearRect(0, 0, this.ctx.canvas.width, this.ctx.canvas.height);\n    this.ctx.restore();\n  }\n  save() {\n    if (this.inSMaskMode) {\n      copyCtxState(this.ctx, this.suspendedCtx);\n      this.suspendedCtx.save();\n    } else {\n      this.ctx.save();\n    }\n    const old = this.current;\n    this.stateStack.push(old);\n    this.current = old.clone();\n  }\n  restore() {\n    if (this.stateStack.length === 0 && this.inSMaskMode) {\n      this.endSMaskMode();\n    }\n    if (this.stateStack.length !== 0) {\n      this.current = this.stateStack.pop();\n      if (this.inSMaskMode) {\n        this.suspendedCtx.restore();\n        copyCtxState(this.suspendedCtx, this.ctx);\n      } else {\n        this.ctx.restore();\n      }\n      this.checkSMaskState();\n      this.pendingClip = null;\n      this._cachedScaleForStroking[0] = -1;\n      this._cachedGetSinglePixelWidth = null;\n    }\n  }\n  transform(a, b, c, d, e, f) {\n    this.ctx.transform(a, b, c, d, e, f);\n    this._cachedScaleForStroking[0] = -1;\n    this._cachedGetSinglePixelWidth = null;\n  }\n  constructPath(ops, args, minMax) {\n    const ctx = this.ctx;\n    const current = this.current;\n    let x = current.x,\n      y = current.y;\n    let startX, startY;\n    const currentTransform = (0, _display_utils.getCurrentTransform)(ctx);\n    const isScalingMatrix = currentTransform[0] === 0 && currentTransform[3] === 0 || currentTransform[1] === 0 && currentTransform[2] === 0;\n    const minMaxForBezier = isScalingMatrix ? minMax.slice(0) : null;\n    for (let i = 0, j = 0, ii = ops.length; i < ii; i++) {\n      switch (ops[i] | 0) {\n        case _util.OPS.rectangle:\n          x = args[j++];\n          y = args[j++];\n          const width = args[j++];\n          const height = args[j++];\n          const xw = x + width;\n          const yh = y + height;\n          ctx.moveTo(x, y);\n          if (width === 0 || height === 0) {\n            ctx.lineTo(xw, yh);\n          } else {\n            ctx.lineTo(xw, y);\n            ctx.lineTo(xw, yh);\n            ctx.lineTo(x, yh);\n          }\n          if (!isScalingMatrix) {\n            current.updateRectMinMax(currentTransform, [x, y, xw, yh]);\n          }\n          ctx.closePath();\n          break;\n        case _util.OPS.moveTo:\n          x = args[j++];\n          y = args[j++];\n          ctx.moveTo(x, y);\n          if (!isScalingMatrix) {\n            current.updatePathMinMax(currentTransform, x, y);\n          }\n          break;\n        case _util.OPS.lineTo:\n          x = args[j++];\n          y = args[j++];\n          ctx.lineTo(x, y);\n          if (!isScalingMatrix) {\n            current.updatePathMinMax(currentTransform, x, y);\n          }\n          break;\n        case _util.OPS.curveTo:\n          startX = x;\n          startY = y;\n          x = args[j + 4];\n          y = args[j + 5];\n          ctx.bezierCurveTo(args[j], args[j + 1], args[j + 2], args[j + 3], x, y);\n          current.updateCurvePathMinMax(currentTransform, startX, startY, args[j], args[j + 1], args[j + 2], args[j + 3], x, y, minMaxForBezier);\n          j += 6;\n          break;\n        case _util.OPS.curveTo2:\n          startX = x;\n          startY = y;\n          ctx.bezierCurveTo(x, y, args[j], args[j + 1], args[j + 2], args[j + 3]);\n          current.updateCurvePathMinMax(currentTransform, startX, startY, x, y, args[j], args[j + 1], args[j + 2], args[j + 3], minMaxForBezier);\n          x = args[j + 2];\n          y = args[j + 3];\n          j += 4;\n          break;\n        case _util.OPS.curveTo3:\n          startX = x;\n          startY = y;\n          x = args[j + 2];\n          y = args[j + 3];\n          ctx.bezierCurveTo(args[j], args[j + 1], x, y, x, y);\n          current.updateCurvePathMinMax(currentTransform, startX, startY, args[j], args[j + 1], x, y, x, y, minMaxForBezier);\n          j += 4;\n          break;\n        case _util.OPS.closePath:\n          ctx.closePath();\n          break;\n      }\n    }\n    if (isScalingMatrix) {\n      current.updateScalingPathMinMax(currentTransform, minMaxForBezier);\n    }\n    current.setCurrentPoint(x, y);\n  }\n  closePath() {\n    this.ctx.closePath();\n  }\n  stroke(consumePath = true) {\n    const ctx = this.ctx;\n    const strokeColor = this.current.strokeColor;\n    ctx.globalAlpha = this.current.strokeAlpha;\n    if (this.contentVisible) {\n      if (typeof strokeColor === \"object\" && strokeColor?.getPattern) {\n        ctx.save();\n        ctx.strokeStyle = strokeColor.getPattern(ctx, this, (0, _display_utils.getCurrentTransformInverse)(ctx), _pattern_helper.PathType.STROKE);\n        this.rescaleAndStroke(false);\n        ctx.restore();\n      } else {\n        this.rescaleAndStroke(true);\n      }\n    }\n    if (consumePath) {\n      this.consumePath(this.current.getClippedPathBoundingBox());\n    }\n    ctx.globalAlpha = this.current.fillAlpha;\n  }\n  closeStroke() {\n    this.closePath();\n    this.stroke();\n  }\n  fill(consumePath = true) {\n    const ctx = this.ctx;\n    const fillColor = this.current.fillColor;\n    const isPatternFill = this.current.patternFill;\n    let needRestore = false;\n    if (isPatternFill) {\n      ctx.save();\n      ctx.fillStyle = fillColor.getPattern(ctx, this, (0, _display_utils.getCurrentTransformInverse)(ctx), _pattern_helper.PathType.FILL);\n      needRestore = true;\n    }\n    const intersect = this.current.getClippedPathBoundingBox();\n    if (this.contentVisible && intersect !== null) {\n      if (this.pendingEOFill) {\n        ctx.fill(\"evenodd\");\n        this.pendingEOFill = false;\n      } else {\n        ctx.fill();\n      }\n    }\n    if (needRestore) {\n      ctx.restore();\n    }\n    if (consumePath) {\n      this.consumePath(intersect);\n    }\n  }\n  eoFill() {\n    this.pendingEOFill = true;\n    this.fill();\n  }\n  fillStroke() {\n    this.fill(false);\n    this.stroke(false);\n    this.consumePath();\n  }\n  eoFillStroke() {\n    this.pendingEOFill = true;\n    this.fillStroke();\n  }\n  closeFillStroke() {\n    this.closePath();\n    this.fillStroke();\n  }\n  closeEOFillStroke() {\n    this.pendingEOFill = true;\n    this.closePath();\n    this.fillStroke();\n  }\n  endPath() {\n    this.consumePath();\n  }\n  clip() {\n    this.pendingClip = NORMAL_CLIP;\n  }\n  eoClip() {\n    this.pendingClip = EO_CLIP;\n  }\n  beginText() {\n    this.current.textMatrix = _util.IDENTITY_MATRIX;\n    this.current.textMatrixScale = 1;\n    this.current.x = this.current.lineX = 0;\n    this.current.y = this.current.lineY = 0;\n  }\n  endText() {\n    const paths = this.pendingTextPaths;\n    const ctx = this.ctx;\n    if (paths === undefined) {\n      ctx.beginPath();\n      return;\n    }\n    ctx.save();\n    ctx.beginPath();\n    for (const path of paths) {\n      ctx.setTransform(...path.transform);\n      ctx.translate(path.x, path.y);\n      path.addToPath(ctx, path.fontSize);\n    }\n    ctx.restore();\n    ctx.clip();\n    ctx.beginPath();\n    delete this.pendingTextPaths;\n  }\n  setCharSpacing(spacing) {\n    this.current.charSpacing = spacing;\n  }\n  setWordSpacing(spacing) {\n    this.current.wordSpacing = spacing;\n  }\n  setHScale(scale) {\n    this.current.textHScale = scale / 100;\n  }\n  setLeading(leading) {\n    this.current.leading = -leading;\n  }\n  setFont(fontRefName, size) {\n    const fontObj = this.commonObjs.get(fontRefName);\n    const current = this.current;\n    if (!fontObj) {\n      throw new Error(`Can't find font for ${fontRefName}`);\n    }\n    current.fontMatrix = fontObj.fontMatrix || _util.FONT_IDENTITY_MATRIX;\n    if (current.fontMatrix[0] === 0 || current.fontMatrix[3] === 0) {\n      (0, _util.warn)(\"Invalid font matrix for font \" + fontRefName);\n    }\n    if (size < 0) {\n      size = -size;\n      current.fontDirection = -1;\n    } else {\n      current.fontDirection = 1;\n    }\n    this.current.font = fontObj;\n    this.current.fontSize = size;\n    if (fontObj.isType3Font) {\n      return;\n    }\n    const name = fontObj.loadedName || \"sans-serif\";\n    const typeface = fontObj.systemFontInfo?.css || `\"${name}\", ${fontObj.fallbackName}`;\n    let bold = \"normal\";\n    if (fontObj.black) {\n      bold = \"900\";\n    } else if (fontObj.bold) {\n      bold = \"bold\";\n    }\n    const italic = fontObj.italic ? \"italic\" : \"normal\";\n    let browserFontSize = size;\n    if (size < MIN_FONT_SIZE) {\n      browserFontSize = MIN_FONT_SIZE;\n    } else if (size > MAX_FONT_SIZE) {\n      browserFontSize = MAX_FONT_SIZE;\n    }\n    this.current.fontSizeScale = size / browserFontSize;\n    this.ctx.font = `${italic} ${bold} ${browserFontSize}px ${typeface}`;\n  }\n  setTextRenderingMode(mode) {\n    this.current.textRenderingMode = mode;\n  }\n  setTextRise(rise) {\n    this.current.textRise = rise;\n  }\n  moveText(x, y) {\n    this.current.x = this.current.lineX += x;\n    this.current.y = this.current.lineY += y;\n  }\n  setLeadingMoveText(x, y) {\n    this.setLeading(-y);\n    this.moveText(x, y);\n  }\n  setTextMatrix(a, b, c, d, e, f) {\n    this.current.textMatrix = [a, b, c, d, e, f];\n    this.current.textMatrixScale = Math.hypot(a, b);\n    this.current.x = this.current.lineX = 0;\n    this.current.y = this.current.lineY = 0;\n  }\n  nextLine() {\n    this.moveText(0, this.current.leading);\n  }\n  paintChar(character, x, y, patternTransform) {\n    const ctx = this.ctx;\n    const current = this.current;\n    const font = current.font;\n    const textRenderingMode = current.textRenderingMode;\n    const fontSize = current.fontSize / current.fontSizeScale;\n    const fillStrokeMode = textRenderingMode & _util.TextRenderingMode.FILL_STROKE_MASK;\n    const isAddToPathSet = !!(textRenderingMode & _util.TextRenderingMode.ADD_TO_PATH_FLAG);\n    const patternFill = current.patternFill && !font.missingFile;\n    let addToPath;\n    if (font.disableFontFace || isAddToPathSet || patternFill) {\n      addToPath = font.getPathGenerator(this.commonObjs, character);\n    }\n    if (font.disableFontFace || patternFill) {\n      ctx.save();\n      ctx.translate(x, y);\n      ctx.beginPath();\n      addToPath(ctx, fontSize);\n      if (patternTransform) {\n        ctx.setTransform(...patternTransform);\n      }\n      if (fillStrokeMode === _util.TextRenderingMode.FILL || fillStrokeMode === _util.TextRenderingMode.FILL_STROKE) {\n        ctx.fill();\n      }\n      if (fillStrokeMode === _util.TextRenderingMode.STROKE || fillStrokeMode === _util.TextRenderingMode.FILL_STROKE) {\n        ctx.stroke();\n      }\n      ctx.restore();\n    } else {\n      if (fillStrokeMode === _util.TextRenderingMode.FILL || fillStrokeMode === _util.TextRenderingMode.FILL_STROKE) {\n        ctx.fillText(character, x, y);\n      }\n      if (fillStrokeMode === _util.TextRenderingMode.STROKE || fillStrokeMode === _util.TextRenderingMode.FILL_STROKE) {\n        ctx.strokeText(character, x, y);\n      }\n    }\n    if (isAddToPathSet) {\n      const paths = this.pendingTextPaths ||= [];\n      paths.push({\n        transform: (0, _display_utils.getCurrentTransform)(ctx),\n        x,\n        y,\n        fontSize,\n        addToPath\n      });\n    }\n  }\n  get isFontSubpixelAAEnabled() {\n    const {\n      context: ctx\n    } = this.cachedCanvases.getCanvas(\"isFontSubpixelAAEnabled\", 10, 10);\n    ctx.scale(1.5, 1);\n    ctx.fillText(\"I\", 0, 10);\n    const data = ctx.getImageData(0, 0, 10, 10).data;\n    let enabled = false;\n    for (let i = 3; i < data.length; i += 4) {\n      if (data[i] > 0 && data[i] < 255) {\n        enabled = true;\n        break;\n      }\n    }\n    return (0, _util.shadow)(this, \"isFontSubpixelAAEnabled\", enabled);\n  }\n  showText(glyphs) {\n    const current = this.current;\n    const font = current.font;\n    if (font.isType3Font) {\n      return this.showType3Text(glyphs);\n    }\n    const fontSize = current.fontSize;\n    if (fontSize === 0) {\n      return undefined;\n    }\n    const ctx = this.ctx;\n    const fontSizeScale = current.fontSizeScale;\n    const charSpacing = current.charSpacing;\n    const wordSpacing = current.wordSpacing;\n    const fontDirection = current.fontDirection;\n    const textHScale = current.textHScale * fontDirection;\n    const glyphsLength = glyphs.length;\n    const vertical = font.vertical;\n    const spacingDir = vertical ? 1 : -1;\n    const defaultVMetrics = font.defaultVMetrics;\n    const widthAdvanceScale = fontSize * current.fontMatrix[0];\n    const simpleFillText = current.textRenderingMode === _util.TextRenderingMode.FILL && !font.disableFontFace && !current.patternFill;\n    ctx.save();\n    ctx.transform(...current.textMatrix);\n    ctx.translate(current.x, current.y + current.textRise);\n    if (fontDirection > 0) {\n      ctx.scale(textHScale, -1);\n    } else {\n      ctx.scale(textHScale, 1);\n    }\n    let patternTransform;\n    if (current.patternFill) {\n      ctx.save();\n      const pattern = current.fillColor.getPattern(ctx, this, (0, _display_utils.getCurrentTransformInverse)(ctx), _pattern_helper.PathType.FILL);\n      patternTransform = (0, _display_utils.getCurrentTransform)(ctx);\n      ctx.restore();\n      ctx.fillStyle = pattern;\n    }\n    let lineWidth = current.lineWidth;\n    const scale = current.textMatrixScale;\n    if (scale === 0 || lineWidth === 0) {\n      const fillStrokeMode = current.textRenderingMode & _util.TextRenderingMode.FILL_STROKE_MASK;\n      if (fillStrokeMode === _util.TextRenderingMode.STROKE || fillStrokeMode === _util.TextRenderingMode.FILL_STROKE) {\n        lineWidth = this.getSinglePixelWidth();\n      }\n    } else {\n      lineWidth /= scale;\n    }\n    if (fontSizeScale !== 1.0) {\n      ctx.scale(fontSizeScale, fontSizeScale);\n      lineWidth /= fontSizeScale;\n    }\n    ctx.lineWidth = lineWidth;\n    if (font.isInvalidPDFjsFont) {\n      const chars = [];\n      let width = 0;\n      for (const glyph of glyphs) {\n        chars.push(glyph.unicode);\n        width += glyph.width;\n      }\n      ctx.fillText(chars.join(\"\"), 0, 0);\n      current.x += width * widthAdvanceScale * textHScale;\n      ctx.restore();\n      this.compose();\n      return undefined;\n    }\n    let x = 0,\n      i;\n    for (i = 0; i < glyphsLength; ++i) {\n      const glyph = glyphs[i];\n      if (typeof glyph === \"number\") {\n        x += spacingDir * glyph * fontSize / 1000;\n        continue;\n      }\n      let restoreNeeded = false;\n      const spacing = (glyph.isSpace ? wordSpacing : 0) + charSpacing;\n      const character = glyph.fontChar;\n      const accent = glyph.accent;\n      let scaledX, scaledY;\n      let width = glyph.width;\n      if (vertical) {\n        const vmetric = glyph.vmetric || defaultVMetrics;\n        const vx = -(glyph.vmetric ? vmetric[1] : width * 0.5) * widthAdvanceScale;\n        const vy = vmetric[2] * widthAdvanceScale;\n        width = vmetric ? -vmetric[0] : width;\n        scaledX = vx / fontSizeScale;\n        scaledY = (x + vy) / fontSizeScale;\n      } else {\n        scaledX = x / fontSizeScale;\n        scaledY = 0;\n      }\n      if (font.remeasure && width > 0) {\n        const measuredWidth = ctx.measureText(character).width * 1000 / fontSize * fontSizeScale;\n        if (width < measuredWidth && this.isFontSubpixelAAEnabled) {\n          const characterScaleX = width / measuredWidth;\n          restoreNeeded = true;\n          ctx.save();\n          ctx.scale(characterScaleX, 1);\n          scaledX /= characterScaleX;\n        } else if (width !== measuredWidth) {\n          scaledX += (width - measuredWidth) / 2000 * fontSize / fontSizeScale;\n        }\n      }\n      if (this.contentVisible && (glyph.isInFont || font.missingFile)) {\n        if (simpleFillText && !accent) {\n          ctx.fillText(character, scaledX, scaledY);\n        } else {\n          this.paintChar(character, scaledX, scaledY, patternTransform);\n          if (accent) {\n            const scaledAccentX = scaledX + fontSize * accent.offset.x / fontSizeScale;\n            const scaledAccentY = scaledY - fontSize * accent.offset.y / fontSizeScale;\n            this.paintChar(accent.fontChar, scaledAccentX, scaledAccentY, patternTransform);\n          }\n        }\n      }\n      const charWidth = vertical ? width * widthAdvanceScale - spacing * fontDirection : width * widthAdvanceScale + spacing * fontDirection;\n      x += charWidth;\n      if (restoreNeeded) {\n        ctx.restore();\n      }\n    }\n    if (vertical) {\n      current.y -= x;\n    } else {\n      current.x += x * textHScale;\n    }\n    ctx.restore();\n    this.compose();\n    return undefined;\n  }\n  showType3Text(glyphs) {\n    const ctx = this.ctx;\n    const current = this.current;\n    const font = current.font;\n    const fontSize = current.fontSize;\n    const fontDirection = current.fontDirection;\n    const spacingDir = font.vertical ? 1 : -1;\n    const charSpacing = current.charSpacing;\n    const wordSpacing = current.wordSpacing;\n    const textHScale = current.textHScale * fontDirection;\n    const fontMatrix = current.fontMatrix || _util.FONT_IDENTITY_MATRIX;\n    const glyphsLength = glyphs.length;\n    const isTextInvisible = current.textRenderingMode === _util.TextRenderingMode.INVISIBLE;\n    let i, glyph, width, spacingLength;\n    if (isTextInvisible || fontSize === 0) {\n      return;\n    }\n    this._cachedScaleForStroking[0] = -1;\n    this._cachedGetSinglePixelWidth = null;\n    ctx.save();\n    ctx.transform(...current.textMatrix);\n    ctx.translate(current.x, current.y);\n    ctx.scale(textHScale, fontDirection);\n    for (i = 0; i < glyphsLength; ++i) {\n      glyph = glyphs[i];\n      if (typeof glyph === \"number\") {\n        spacingLength = spacingDir * glyph * fontSize / 1000;\n        this.ctx.translate(spacingLength, 0);\n        current.x += spacingLength * textHScale;\n        continue;\n      }\n      const spacing = (glyph.isSpace ? wordSpacing : 0) + charSpacing;\n      const operatorList = font.charProcOperatorList[glyph.operatorListId];\n      if (!operatorList) {\n        (0, _util.warn)(`Type3 character \"${glyph.operatorListId}\" is not available.`);\n        continue;\n      }\n      if (this.contentVisible) {\n        this.processingType3 = glyph;\n        this.save();\n        ctx.scale(fontSize, fontSize);\n        ctx.transform(...fontMatrix);\n        this.executeOperatorList(operatorList);\n        this.restore();\n      }\n      const transformed = _util.Util.applyTransform([glyph.width, 0], fontMatrix);\n      width = transformed[0] * fontSize + spacing;\n      ctx.translate(width, 0);\n      current.x += width * textHScale;\n    }\n    ctx.restore();\n    this.processingType3 = null;\n  }\n  setCharWidth(xWidth, yWidth) {}\n  setCharWidthAndBounds(xWidth, yWidth, llx, lly, urx, ury) {\n    this.ctx.rect(llx, lly, urx - llx, ury - lly);\n    this.ctx.clip();\n    this.endPath();\n  }\n  getColorN_Pattern(IR) {\n    let pattern;\n    if (IR[0] === \"TilingPattern\") {\n      const color = IR[1];\n      const baseTransform = this.baseTransform || (0, _display_utils.getCurrentTransform)(this.ctx);\n      const canvasGraphicsFactory = {\n        createCanvasGraphics: ctx => {\n          return new CanvasGraphics(ctx, this.commonObjs, this.objs, this.canvasFactory, this.filterFactory, {\n            optionalContentConfig: this.optionalContentConfig,\n            markedContentStack: this.markedContentStack\n          });\n        }\n      };\n      pattern = new _pattern_helper.TilingPattern(IR, color, this.ctx, canvasGraphicsFactory, baseTransform);\n    } else {\n      pattern = this._getPattern(IR[1], IR[2]);\n    }\n    return pattern;\n  }\n  setStrokeColorN() {\n    this.current.strokeColor = this.getColorN_Pattern(arguments);\n  }\n  setFillColorN() {\n    this.current.fillColor = this.getColorN_Pattern(arguments);\n    this.current.patternFill = true;\n  }\n  setStrokeRGBColor(r, g, b) {\n    const color = _util.Util.makeHexColor(r, g, b);\n    this.ctx.strokeStyle = color;\n    this.current.strokeColor = color;\n  }\n  setFillRGBColor(r, g, b) {\n    const color = _util.Util.makeHexColor(r, g, b);\n    this.ctx.fillStyle = color;\n    this.current.fillColor = color;\n    this.current.patternFill = false;\n  }\n  _getPattern(objId, matrix = null) {\n    let pattern;\n    if (this.cachedPatterns.has(objId)) {\n      pattern = this.cachedPatterns.get(objId);\n    } else {\n      pattern = (0, _pattern_helper.getShadingPattern)(this.getObject(objId));\n      this.cachedPatterns.set(objId, pattern);\n    }\n    if (matrix) {\n      pattern.matrix = matrix;\n    }\n    return pattern;\n  }\n  shadingFill(objId) {\n    if (!this.contentVisible) {\n      return;\n    }\n    const ctx = this.ctx;\n    this.save();\n    const pattern = this._getPattern(objId);\n    ctx.fillStyle = pattern.getPattern(ctx, this, (0, _display_utils.getCurrentTransformInverse)(ctx), _pattern_helper.PathType.SHADING);\n    const inv = (0, _display_utils.getCurrentTransformInverse)(ctx);\n    if (inv) {\n      const {\n        width,\n        height\n      } = ctx.canvas;\n      const [x0, y0, x1, y1] = _util.Util.getAxialAlignedBoundingBox([0, 0, width, height], inv);\n      this.ctx.fillRect(x0, y0, x1 - x0, y1 - y0);\n    } else {\n      this.ctx.fillRect(-1e10, -1e10, 2e10, 2e10);\n    }\n    this.compose(this.current.getClippedPathBoundingBox());\n    this.restore();\n  }\n  beginInlineImage() {\n    (0, _util.unreachable)(\"Should not call beginInlineImage\");\n  }\n  beginImageData() {\n    (0, _util.unreachable)(\"Should not call beginImageData\");\n  }\n  paintFormXObjectBegin(matrix, bbox) {\n    if (!this.contentVisible) {\n      return;\n    }\n    this.save();\n    this.baseTransformStack.push(this.baseTransform);\n    if (Array.isArray(matrix) && matrix.length === 6) {\n      this.transform(...matrix);\n    }\n    this.baseTransform = (0, _display_utils.getCurrentTransform)(this.ctx);\n    if (bbox) {\n      const width = bbox[2] - bbox[0];\n      const height = bbox[3] - bbox[1];\n      this.ctx.rect(bbox[0], bbox[1], width, height);\n      this.current.updateRectMinMax((0, _display_utils.getCurrentTransform)(this.ctx), bbox);\n      this.clip();\n      this.endPath();\n    }\n  }\n  paintFormXObjectEnd() {\n    if (!this.contentVisible) {\n      return;\n    }\n    this.restore();\n    this.baseTransform = this.baseTransformStack.pop();\n  }\n  beginGroup(group) {\n    if (!this.contentVisible) {\n      return;\n    }\n    this.save();\n    if (this.inSMaskMode) {\n      this.endSMaskMode();\n      this.current.activeSMask = null;\n    }\n    const currentCtx = this.ctx;\n    if (!group.isolated) {\n      (0, _util.info)(\"TODO: Support non-isolated groups.\");\n    }\n    if (group.knockout) {\n      (0, _util.warn)(\"Knockout groups not supported.\");\n    }\n    const currentTransform = (0, _display_utils.getCurrentTransform)(currentCtx);\n    if (group.matrix) {\n      currentCtx.transform(...group.matrix);\n    }\n    if (!group.bbox) {\n      throw new Error(\"Bounding box is required.\");\n    }\n    let bounds = _util.Util.getAxialAlignedBoundingBox(group.bbox, (0, _display_utils.getCurrentTransform)(currentCtx));\n    const canvasBounds = [0, 0, currentCtx.canvas.width, currentCtx.canvas.height];\n    bounds = _util.Util.intersect(bounds, canvasBounds) || [0, 0, 0, 0];\n    const offsetX = Math.floor(bounds[0]);\n    const offsetY = Math.floor(bounds[1]);\n    let drawnWidth = Math.max(Math.ceil(bounds[2]) - offsetX, 1);\n    let drawnHeight = Math.max(Math.ceil(bounds[3]) - offsetY, 1);\n    let scaleX = 1,\n      scaleY = 1;\n    if (drawnWidth > MAX_GROUP_SIZE) {\n      scaleX = drawnWidth / MAX_GROUP_SIZE;\n      drawnWidth = MAX_GROUP_SIZE;\n    }\n    if (drawnHeight > MAX_GROUP_SIZE) {\n      scaleY = drawnHeight / MAX_GROUP_SIZE;\n      drawnHeight = MAX_GROUP_SIZE;\n    }\n    this.current.startNewPathAndClipBox([0, 0, drawnWidth, drawnHeight]);\n    let cacheId = \"groupAt\" + this.groupLevel;\n    if (group.smask) {\n      cacheId += \"_smask_\" + this.smaskCounter++ % 2;\n    }\n    const scratchCanvas = this.cachedCanvases.getCanvas(cacheId, drawnWidth, drawnHeight);\n    const groupCtx = scratchCanvas.context;\n    groupCtx.scale(1 / scaleX, 1 / scaleY);\n    groupCtx.translate(-offsetX, -offsetY);\n    groupCtx.transform(...currentTransform);\n    if (group.smask) {\n      this.smaskStack.push({\n        canvas: scratchCanvas.canvas,\n        context: groupCtx,\n        offsetX,\n        offsetY,\n        scaleX,\n        scaleY,\n        subtype: group.smask.subtype,\n        backdrop: group.smask.backdrop,\n        transferMap: group.smask.transferMap || null,\n        startTransformInverse: null\n      });\n    } else {\n      currentCtx.setTransform(1, 0, 0, 1, 0, 0);\n      currentCtx.translate(offsetX, offsetY);\n      currentCtx.scale(scaleX, scaleY);\n      currentCtx.save();\n    }\n    copyCtxState(currentCtx, groupCtx);\n    this.ctx = groupCtx;\n    this.setGState([[\"BM\", \"source-over\"], [\"ca\", 1], [\"CA\", 1]]);\n    this.groupStack.push(currentCtx);\n    this.groupLevel++;\n  }\n  endGroup(group) {\n    if (!this.contentVisible) {\n      return;\n    }\n    this.groupLevel--;\n    const groupCtx = this.ctx;\n    const ctx = this.groupStack.pop();\n    this.ctx = ctx;\n    this.ctx.imageSmoothingEnabled = false;\n    if (group.smask) {\n      this.tempSMask = this.smaskStack.pop();\n      this.restore();\n    } else {\n      this.ctx.restore();\n      const currentMtx = (0, _display_utils.getCurrentTransform)(this.ctx);\n      this.restore();\n      this.ctx.save();\n      this.ctx.setTransform(...currentMtx);\n      const dirtyBox = _util.Util.getAxialAlignedBoundingBox([0, 0, groupCtx.canvas.width, groupCtx.canvas.height], currentMtx);\n      this.ctx.drawImage(groupCtx.canvas, 0, 0);\n      this.ctx.restore();\n      this.compose(dirtyBox);\n    }\n  }\n  beginAnnotation(id, rect, transform, matrix, hasOwnCanvas) {\n    this.#restoreInitialState();\n    resetCtxToDefault(this.ctx);\n    this.ctx.save();\n    this.save();\n    if (this.baseTransform) {\n      this.ctx.setTransform(...this.baseTransform);\n    }\n    if (Array.isArray(rect) && rect.length === 4) {\n      const width = rect[2] - rect[0];\n      const height = rect[3] - rect[1];\n      if (hasOwnCanvas && this.annotationCanvasMap) {\n        transform = transform.slice();\n        transform[4] -= rect[0];\n        transform[5] -= rect[1];\n        rect = rect.slice();\n        rect[0] = rect[1] = 0;\n        rect[2] = width;\n        rect[3] = height;\n        const [scaleX, scaleY] = _util.Util.singularValueDecompose2dScale((0, _display_utils.getCurrentTransform)(this.ctx));\n        const {\n          viewportScale\n        } = this;\n        const canvasWidth = Math.ceil(width * this.outputScaleX * viewportScale);\n        const canvasHeight = Math.ceil(height * this.outputScaleY * viewportScale);\n        this.annotationCanvas = this.canvasFactory.create(canvasWidth, canvasHeight);\n        const {\n          canvas,\n          context\n        } = this.annotationCanvas;\n        this.annotationCanvasMap.set(id, canvas);\n        this.annotationCanvas.savedCtx = this.ctx;\n        this.ctx = context;\n        this.ctx.save();\n        this.ctx.setTransform(scaleX, 0, 0, -scaleY, 0, height * scaleY);\n        resetCtxToDefault(this.ctx);\n      } else {\n        resetCtxToDefault(this.ctx);\n        this.ctx.rect(rect[0], rect[1], width, height);\n        this.ctx.clip();\n        this.endPath();\n      }\n    }\n    this.current = new CanvasExtraState(this.ctx.canvas.width, this.ctx.canvas.height);\n    this.transform(...transform);\n    this.transform(...matrix);\n  }\n  endAnnotation() {\n    if (this.annotationCanvas) {\n      this.ctx.restore();\n      this.#drawFilter();\n      this.ctx = this.annotationCanvas.savedCtx;\n      delete this.annotationCanvas.savedCtx;\n      delete this.annotationCanvas;\n    }\n  }\n  paintImageMaskXObject(img) {\n    if (!this.contentVisible) {\n      return;\n    }\n    const count = img.count;\n    img = this.getObject(img.data, img);\n    img.count = count;\n    const ctx = this.ctx;\n    const glyph = this.processingType3;\n    if (glyph) {\n      if (glyph.compiled === undefined) {\n        glyph.compiled = compileType3Glyph(img);\n      }\n      if (glyph.compiled) {\n        glyph.compiled(ctx);\n        return;\n      }\n    }\n    const mask = this._createMaskCanvas(img);\n    const maskCanvas = mask.canvas;\n    ctx.save();\n    ctx.setTransform(1, 0, 0, 1, 0, 0);\n    ctx.drawImage(maskCanvas, mask.offsetX, mask.offsetY);\n    ctx.restore();\n    this.compose();\n  }\n  paintImageMaskXObjectRepeat(img, scaleX, skewX = 0, skewY = 0, scaleY, positions) {\n    if (!this.contentVisible) {\n      return;\n    }\n    img = this.getObject(img.data, img);\n    const ctx = this.ctx;\n    ctx.save();\n    const currentTransform = (0, _display_utils.getCurrentTransform)(ctx);\n    ctx.transform(scaleX, skewX, skewY, scaleY, 0, 0);\n    const mask = this._createMaskCanvas(img);\n    ctx.setTransform(1, 0, 0, 1, mask.offsetX - currentTransform[4], mask.offsetY - currentTransform[5]);\n    for (let i = 0, ii = positions.length; i < ii; i += 2) {\n      const trans = _util.Util.transform(currentTransform, [scaleX, skewX, skewY, scaleY, positions[i], positions[i + 1]]);\n      const [x, y] = _util.Util.applyTransform([0, 0], trans);\n      ctx.drawImage(mask.canvas, x, y);\n    }\n    ctx.restore();\n    this.compose();\n  }\n  paintImageMaskXObjectGroup(images) {\n    if (!this.contentVisible) {\n      return;\n    }\n    const ctx = this.ctx;\n    const fillColor = this.current.fillColor;\n    const isPatternFill = this.current.patternFill;\n    for (const image of images) {\n      const {\n        data,\n        width,\n        height,\n        transform\n      } = image;\n      const maskCanvas = this.cachedCanvases.getCanvas(\"maskCanvas\", width, height);\n      const maskCtx = maskCanvas.context;\n      maskCtx.save();\n      const img = this.getObject(data, image);\n      putBinaryImageMask(maskCtx, img);\n      maskCtx.globalCompositeOperation = \"source-in\";\n      maskCtx.fillStyle = isPatternFill ? fillColor.getPattern(maskCtx, this, (0, _display_utils.getCurrentTransformInverse)(ctx), _pattern_helper.PathType.FILL) : fillColor;\n      maskCtx.fillRect(0, 0, width, height);\n      maskCtx.restore();\n      ctx.save();\n      ctx.transform(...transform);\n      ctx.scale(1, -1);\n      drawImageAtIntegerCoords(ctx, maskCanvas.canvas, 0, 0, width, height, 0, -1, 1, 1);\n      ctx.restore();\n    }\n    this.compose();\n  }\n  paintImageXObject(objId) {\n    if (!this.contentVisible) {\n      return;\n    }\n    const imgData = this.getObject(objId);\n    if (!imgData) {\n      (0, _util.warn)(\"Dependent image isn't ready yet\");\n      return;\n    }\n    this.paintInlineImageXObject(imgData);\n  }\n  paintImageXObjectRepeat(objId, scaleX, scaleY, positions) {\n    if (!this.contentVisible) {\n      return;\n    }\n    const imgData = this.getObject(objId);\n    if (!imgData) {\n      (0, _util.warn)(\"Dependent image isn't ready yet\");\n      return;\n    }\n    const width = imgData.width;\n    const height = imgData.height;\n    const map = [];\n    for (let i = 0, ii = positions.length; i < ii; i += 2) {\n      map.push({\n        transform: [scaleX, 0, 0, scaleY, positions[i], positions[i + 1]],\n        x: 0,\n        y: 0,\n        w: width,\n        h: height\n      });\n    }\n    this.paintInlineImageXObjectGroup(imgData, map);\n  }\n  applyTransferMapsToCanvas(ctx) {\n    if (this.current.transferMaps !== \"none\") {\n      ctx.filter = this.current.transferMaps;\n      ctx.drawImage(ctx.canvas, 0, 0);\n      ctx.filter = \"none\";\n    }\n    return ctx.canvas;\n  }\n  applyTransferMapsToBitmap(imgData) {\n    if (this.current.transferMaps === \"none\") {\n      return imgData.bitmap;\n    }\n    const {\n      bitmap,\n      width,\n      height\n    } = imgData;\n    const tmpCanvas = this.cachedCanvases.getCanvas(\"inlineImage\", width, height);\n    const tmpCtx = tmpCanvas.context;\n    tmpCtx.filter = this.current.transferMaps;\n    tmpCtx.drawImage(bitmap, 0, 0);\n    tmpCtx.filter = \"none\";\n    return tmpCanvas.canvas;\n  }\n  paintInlineImageXObject(imgData) {\n    if (!this.contentVisible) {\n      return;\n    }\n    const width = imgData.width;\n    const height = imgData.height;\n    const ctx = this.ctx;\n    this.save();\n    if (!_util.isNodeJS) {\n      const {\n        filter\n      } = ctx;\n      if (filter !== \"none\" && filter !== \"\") {\n        ctx.filter = \"none\";\n      }\n    }\n    ctx.scale(1 / width, -1 / height);\n    let imgToPaint;\n    if (imgData.bitmap) {\n      imgToPaint = this.applyTransferMapsToBitmap(imgData);\n    } else if (typeof HTMLElement === \"function\" && imgData instanceof HTMLElement || !imgData.data) {\n      imgToPaint = imgData;\n    } else {\n      const tmpCanvas = this.cachedCanvases.getCanvas(\"inlineImage\", width, height);\n      const tmpCtx = tmpCanvas.context;\n      putBinaryImageData(tmpCtx, imgData);\n      imgToPaint = this.applyTransferMapsToCanvas(tmpCtx);\n    }\n    const scaled = this._scaleImage(imgToPaint, (0, _display_utils.getCurrentTransformInverse)(ctx));\n    ctx.imageSmoothingEnabled = getImageSmoothingEnabled((0, _display_utils.getCurrentTransform)(ctx), imgData.interpolate);\n    drawImageAtIntegerCoords(ctx, scaled.img, 0, 0, scaled.paintWidth, scaled.paintHeight, 0, -height, width, height);\n    this.compose();\n    this.restore();\n  }\n  paintInlineImageXObjectGroup(imgData, map) {\n    if (!this.contentVisible) {\n      return;\n    }\n    const ctx = this.ctx;\n    let imgToPaint;\n    if (imgData.bitmap) {\n      imgToPaint = imgData.bitmap;\n    } else {\n      const w = imgData.width;\n      const h = imgData.height;\n      const tmpCanvas = this.cachedCanvases.getCanvas(\"inlineImage\", w, h);\n      const tmpCtx = tmpCanvas.context;\n      putBinaryImageData(tmpCtx, imgData);\n      imgToPaint = this.applyTransferMapsToCanvas(tmpCtx);\n    }\n    for (const entry of map) {\n      ctx.save();\n      ctx.transform(...entry.transform);\n      ctx.scale(1, -1);\n      drawImageAtIntegerCoords(ctx, imgToPaint, entry.x, entry.y, entry.w, entry.h, 0, -1, 1, 1);\n      ctx.restore();\n    }\n    this.compose();\n  }\n  paintSolidColorImageMask() {\n    if (!this.contentVisible) {\n      return;\n    }\n    this.ctx.fillRect(0, 0, 1, 1);\n    this.compose();\n  }\n  markPoint(tag) {}\n  markPointProps(tag, properties) {}\n  beginMarkedContent(tag) {\n    this.markedContentStack.push({\n      visible: true\n    });\n  }\n  beginMarkedContentProps(tag, properties) {\n    if (tag === \"OC\") {\n      this.markedContentStack.push({\n        visible: this.optionalContentConfig.isVisible(properties)\n      });\n    } else {\n      this.markedContentStack.push({\n        visible: true\n      });\n    }\n    this.contentVisible = this.isContentVisible();\n  }\n  endMarkedContent() {\n    this.markedContentStack.pop();\n    this.contentVisible = this.isContentVisible();\n  }\n  beginCompat() {}\n  endCompat() {}\n  consumePath(clipBox) {\n    const isEmpty = this.current.isEmptyClip();\n    if (this.pendingClip) {\n      this.current.updateClipFromPath();\n    }\n    if (!this.pendingClip) {\n      this.compose(clipBox);\n    }\n    const ctx = this.ctx;\n    if (this.pendingClip) {\n      if (!isEmpty) {\n        if (this.pendingClip === EO_CLIP) {\n          ctx.clip(\"evenodd\");\n        } else {\n          ctx.clip();\n        }\n      }\n      this.pendingClip = null;\n    }\n    this.current.startNewPathAndClipBox(this.current.clipBox);\n    ctx.beginPath();\n  }\n  getSinglePixelWidth() {\n    if (!this._cachedGetSinglePixelWidth) {\n      const m = (0, _display_utils.getCurrentTransform)(this.ctx);\n      if (m[1] === 0 && m[2] === 0) {\n        this._cachedGetSinglePixelWidth = 1 / Math.min(Math.abs(m[0]), Math.abs(m[3]));\n      } else {\n        const absDet = Math.abs(m[0] * m[3] - m[2] * m[1]);\n        const normX = Math.hypot(m[0], m[2]);\n        const normY = Math.hypot(m[1], m[3]);\n        this._cachedGetSinglePixelWidth = Math.max(normX, normY) / absDet;\n      }\n    }\n    return this._cachedGetSinglePixelWidth;\n  }\n  getScaleForStroking() {\n    if (this._cachedScaleForStroking[0] === -1) {\n      const {\n        lineWidth\n      } = this.current;\n      const {\n        a,\n        b,\n        c,\n        d\n      } = this.ctx.getTransform();\n      let scaleX, scaleY;\n      if (b === 0 && c === 0) {\n        const normX = Math.abs(a);\n        const normY = Math.abs(d);\n        if (normX === normY) {\n          if (lineWidth === 0) {\n            scaleX = scaleY = 1 / normX;\n          } else {\n            const scaledLineWidth = normX * lineWidth;\n            scaleX = scaleY = scaledLineWidth < 1 ? 1 / scaledLineWidth : 1;\n          }\n        } else if (lineWidth === 0) {\n          scaleX = 1 / normX;\n          scaleY = 1 / normY;\n        } else {\n          const scaledXLineWidth = normX * lineWidth;\n          const scaledYLineWidth = normY * lineWidth;\n          scaleX = scaledXLineWidth < 1 ? 1 / scaledXLineWidth : 1;\n          scaleY = scaledYLineWidth < 1 ? 1 / scaledYLineWidth : 1;\n        }\n      } else {\n        const absDet = Math.abs(a * d - b * c);\n        const normX = Math.hypot(a, b);\n        const normY = Math.hypot(c, d);\n        if (lineWidth === 0) {\n          scaleX = normY / absDet;\n          scaleY = normX / absDet;\n        } else {\n          const baseArea = lineWidth * absDet;\n          scaleX = normY > baseArea ? normY / baseArea : 1;\n          scaleY = normX > baseArea ? normX / baseArea : 1;\n        }\n      }\n      this._cachedScaleForStroking[0] = scaleX;\n      this._cachedScaleForStroking[1] = scaleY;\n    }\n    return this._cachedScaleForStroking;\n  }\n  rescaleAndStroke(saveRestore) {\n    const {\n      ctx\n    } = this;\n    const {\n      lineWidth\n    } = this.current;\n    const [scaleX, scaleY] = this.getScaleForStroking();\n    ctx.lineWidth = lineWidth || 1;\n    if (scaleX === 1 && scaleY === 1) {\n      ctx.stroke();\n      return;\n    }\n    const dashes = ctx.getLineDash();\n    if (saveRestore) {\n      ctx.save();\n    }\n    ctx.scale(scaleX, scaleY);\n    if (dashes.length > 0) {\n      const scale = Math.max(scaleX, scaleY);\n      ctx.setLineDash(dashes.map(x => x / scale));\n      ctx.lineDashOffset /= scale;\n    }\n    ctx.stroke();\n    if (saveRestore) {\n      ctx.restore();\n    }\n  }\n  isContentVisible() {\n    for (let i = this.markedContentStack.length - 1; i >= 0; i--) {\n      if (!this.markedContentStack[i].visible) {\n        return false;\n      }\n    }\n    return true;\n  }\n}\nexports.CanvasGraphics = CanvasGraphics;\nfor (const op in _util.OPS) {\n  if (CanvasGraphics.prototype[op] !== undefined) {\n    CanvasGraphics.prototype[_util.OPS[op]] = CanvasGraphics.prototype[op];\n  }\n}\n\n/***/ }),\n/* 12 */\n/***/ ((__unused_webpack_module, exports, __w_pdfjs_require__) => {\n\n\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.TilingPattern = exports.PathType = void 0;\nexports.getShadingPattern = getShadingPattern;\nvar _util = __w_pdfjs_require__(1);\nvar _display_utils = __w_pdfjs_require__(6);\nconst PathType = {\n  FILL: \"Fill\",\n  STROKE: \"Stroke\",\n  SHADING: \"Shading\"\n};\nexports.PathType = PathType;\nfunction applyBoundingBox(ctx, bbox) {\n  if (!bbox) {\n    return;\n  }\n  const width = bbox[2] - bbox[0];\n  const height = bbox[3] - bbox[1];\n  const region = new Path2D();\n  region.rect(bbox[0], bbox[1], width, height);\n  ctx.clip(region);\n}\nclass BaseShadingPattern {\n  constructor() {\n    if (this.constructor === BaseShadingPattern) {\n      (0, _util.unreachable)(\"Cannot initialize BaseShadingPattern.\");\n    }\n  }\n  getPattern() {\n    (0, _util.unreachable)(\"Abstract method `getPattern` called.\");\n  }\n}\nclass RadialAxialShadingPattern extends BaseShadingPattern {\n  constructor(IR) {\n    super();\n    this._type = IR[1];\n    this._bbox = IR[2];\n    this._colorStops = IR[3];\n    this._p0 = IR[4];\n    this._p1 = IR[5];\n    this._r0 = IR[6];\n    this._r1 = IR[7];\n    this.matrix = null;\n  }\n  _createGradient(ctx) {\n    let grad;\n    if (this._type === \"axial\") {\n      grad = ctx.createLinearGradient(this._p0[0], this._p0[1], this._p1[0], this._p1[1]);\n    } else if (this._type === \"radial\") {\n      grad = ctx.createRadialGradient(this._p0[0], this._p0[1], this._r0, this._p1[0], this._p1[1], this._r1);\n    }\n    for (const colorStop of this._colorStops) {\n      grad.addColorStop(colorStop[0], colorStop[1]);\n    }\n    return grad;\n  }\n  getPattern(ctx, owner, inverse, pathType) {\n    let pattern;\n    if (pathType === PathType.STROKE || pathType === PathType.FILL) {\n      const ownerBBox = owner.current.getClippedPathBoundingBox(pathType, (0, _display_utils.getCurrentTransform)(ctx)) || [0, 0, 0, 0];\n      const width = Math.ceil(ownerBBox[2] - ownerBBox[0]) || 1;\n      const height = Math.ceil(ownerBBox[3] - ownerBBox[1]) || 1;\n      const tmpCanvas = owner.cachedCanvases.getCanvas(\"pattern\", width, height, true);\n      const tmpCtx = tmpCanvas.context;\n      tmpCtx.clearRect(0, 0, tmpCtx.canvas.width, tmpCtx.canvas.height);\n      tmpCtx.beginPath();\n      tmpCtx.rect(0, 0, tmpCtx.canvas.width, tmpCtx.canvas.height);\n      tmpCtx.translate(-ownerBBox[0], -ownerBBox[1]);\n      inverse = _util.Util.transform(inverse, [1, 0, 0, 1, ownerBBox[0], ownerBBox[1]]);\n      tmpCtx.transform(...owner.baseTransform);\n      if (this.matrix) {\n        tmpCtx.transform(...this.matrix);\n      }\n      applyBoundingBox(tmpCtx, this._bbox);\n      tmpCtx.fillStyle = this._createGradient(tmpCtx);\n      tmpCtx.fill();\n      pattern = ctx.createPattern(tmpCanvas.canvas, \"no-repeat\");\n      const domMatrix = new DOMMatrix(inverse);\n      pattern.setTransform(domMatrix);\n    } else {\n      applyBoundingBox(ctx, this._bbox);\n      pattern = this._createGradient(ctx);\n    }\n    return pattern;\n  }\n}\nfunction drawTriangle(data, context, p1, p2, p3, c1, c2, c3) {\n  const coords = context.coords,\n    colors = context.colors;\n  const bytes = data.data,\n    rowSize = data.width * 4;\n  let tmp;\n  if (coords[p1 + 1] > coords[p2 + 1]) {\n    tmp = p1;\n    p1 = p2;\n    p2 = tmp;\n    tmp = c1;\n    c1 = c2;\n    c2 = tmp;\n  }\n  if (coords[p2 + 1] > coords[p3 + 1]) {\n    tmp = p2;\n    p2 = p3;\n    p3 = tmp;\n    tmp = c2;\n    c2 = c3;\n    c3 = tmp;\n  }\n  if (coords[p1 + 1] > coords[p2 + 1]) {\n    tmp = p1;\n    p1 = p2;\n    p2 = tmp;\n    tmp = c1;\n    c1 = c2;\n    c2 = tmp;\n  }\n  const x1 = (coords[p1] + context.offsetX) * context.scaleX;\n  const y1 = (coords[p1 + 1] + context.offsetY) * context.scaleY;\n  const x2 = (coords[p2] + context.offsetX) * context.scaleX;\n  const y2 = (coords[p2 + 1] + context.offsetY) * context.scaleY;\n  const x3 = (coords[p3] + context.offsetX) * context.scaleX;\n  const y3 = (coords[p3 + 1] + context.offsetY) * context.scaleY;\n  if (y1 >= y3) {\n    return;\n  }\n  const c1r = colors[c1],\n    c1g = colors[c1 + 1],\n    c1b = colors[c1 + 2];\n  const c2r = colors[c2],\n    c2g = colors[c2 + 1],\n    c2b = colors[c2 + 2];\n  const c3r = colors[c3],\n    c3g = colors[c3 + 1],\n    c3b = colors[c3 + 2];\n  const minY = Math.round(y1),\n    maxY = Math.round(y3);\n  let xa, car, cag, cab;\n  let xb, cbr, cbg, cbb;\n  for (let y = minY; y <= maxY; y++) {\n    if (y < y2) {\n      const k = y < y1 ? 0 : (y1 - y) / (y1 - y2);\n      xa = x1 - (x1 - x2) * k;\n      car = c1r - (c1r - c2r) * k;\n      cag = c1g - (c1g - c2g) * k;\n      cab = c1b - (c1b - c2b) * k;\n    } else {\n      let k;\n      if (y > y3) {\n        k = 1;\n      } else if (y2 === y3) {\n        k = 0;\n      } else {\n        k = (y2 - y) / (y2 - y3);\n      }\n      xa = x2 - (x2 - x3) * k;\n      car = c2r - (c2r - c3r) * k;\n      cag = c2g - (c2g - c3g) * k;\n      cab = c2b - (c2b - c3b) * k;\n    }\n    let k;\n    if (y < y1) {\n      k = 0;\n    } else if (y > y3) {\n      k = 1;\n    } else {\n      k = (y1 - y) / (y1 - y3);\n    }\n    xb = x1 - (x1 - x3) * k;\n    cbr = c1r - (c1r - c3r) * k;\n    cbg = c1g - (c1g - c3g) * k;\n    cbb = c1b - (c1b - c3b) * k;\n    const x1_ = Math.round(Math.min(xa, xb));\n    const x2_ = Math.round(Math.max(xa, xb));\n    let j = rowSize * y + x1_ * 4;\n    for (let x = x1_; x <= x2_; x++) {\n      k = (xa - x) / (xa - xb);\n      if (k < 0) {\n        k = 0;\n      } else if (k > 1) {\n        k = 1;\n      }\n      bytes[j++] = car - (car - cbr) * k | 0;\n      bytes[j++] = cag - (cag - cbg) * k | 0;\n      bytes[j++] = cab - (cab - cbb) * k | 0;\n      bytes[j++] = 255;\n    }\n  }\n}\nfunction drawFigure(data, figure, context) {\n  const ps = figure.coords;\n  const cs = figure.colors;\n  let i, ii;\n  switch (figure.type) {\n    case \"lattice\":\n      const verticesPerRow = figure.verticesPerRow;\n      const rows = Math.floor(ps.length / verticesPerRow) - 1;\n      const cols = verticesPerRow - 1;\n      for (i = 0; i < rows; i++) {\n        let q = i * verticesPerRow;\n        for (let j = 0; j < cols; j++, q++) {\n          drawTriangle(data, context, ps[q], ps[q + 1], ps[q + verticesPerRow], cs[q], cs[q + 1], cs[q + verticesPerRow]);\n          drawTriangle(data, context, ps[q + verticesPerRow + 1], ps[q + 1], ps[q + verticesPerRow], cs[q + verticesPerRow + 1], cs[q + 1], cs[q + verticesPerRow]);\n        }\n      }\n      break;\n    case \"triangles\":\n      for (i = 0, ii = ps.length; i < ii; i += 3) {\n        drawTriangle(data, context, ps[i], ps[i + 1], ps[i + 2], cs[i], cs[i + 1], cs[i + 2]);\n      }\n      break;\n    default:\n      throw new Error(\"illegal figure\");\n  }\n}\nclass MeshShadingPattern extends BaseShadingPattern {\n  constructor(IR) {\n    super();\n    this._coords = IR[2];\n    this._colors = IR[3];\n    this._figures = IR[4];\n    this._bounds = IR[5];\n    this._bbox = IR[7];\n    this._background = IR[8];\n    this.matrix = null;\n  }\n  _createMeshCanvas(combinedScale, backgroundColor, cachedCanvases) {\n    const EXPECTED_SCALE = 1.1;\n    const MAX_PATTERN_SIZE = 3000;\n    const BORDER_SIZE = 2;\n    const offsetX = Math.floor(this._bounds[0]);\n    const offsetY = Math.floor(this._bounds[1]);\n    const boundsWidth = Math.ceil(this._bounds[2]) - offsetX;\n    const boundsHeight = Math.ceil(this._bounds[3]) - offsetY;\n    const width = Math.min(Math.ceil(Math.abs(boundsWidth * combinedScale[0] * EXPECTED_SCALE)), MAX_PATTERN_SIZE);\n    const height = Math.min(Math.ceil(Math.abs(boundsHeight * combinedScale[1] * EXPECTED_SCALE)), MAX_PATTERN_SIZE);\n    const scaleX = boundsWidth / width;\n    const scaleY = boundsHeight / height;\n    const context = {\n      coords: this._coords,\n      colors: this._colors,\n      offsetX: -offsetX,\n      offsetY: -offsetY,\n      scaleX: 1 / scaleX,\n      scaleY: 1 / scaleY\n    };\n    const paddedWidth = width + BORDER_SIZE * 2;\n    const paddedHeight = height + BORDER_SIZE * 2;\n    const tmpCanvas = cachedCanvases.getCanvas(\"mesh\", paddedWidth, paddedHeight, false);\n    const tmpCtx = tmpCanvas.context;\n    const data = tmpCtx.createImageData(width, height);\n    if (backgroundColor) {\n      const bytes = data.data;\n      for (let i = 0, ii = bytes.length; i < ii; i += 4) {\n        bytes[i] = backgroundColor[0];\n        bytes[i + 1] = backgroundColor[1];\n        bytes[i + 2] = backgroundColor[2];\n        bytes[i + 3] = 255;\n      }\n    }\n    for (const figure of this._figures) {\n      drawFigure(data, figure, context);\n    }\n    tmpCtx.putImageData(data, BORDER_SIZE, BORDER_SIZE);\n    const canvas = tmpCanvas.canvas;\n    return {\n      canvas,\n      offsetX: offsetX - BORDER_SIZE * scaleX,\n      offsetY: offsetY - BORDER_SIZE * scaleY,\n      scaleX,\n      scaleY\n    };\n  }\n  getPattern(ctx, owner, inverse, pathType) {\n    applyBoundingBox(ctx, this._bbox);\n    let scale;\n    if (pathType === PathType.SHADING) {\n      scale = _util.Util.singularValueDecompose2dScale((0, _display_utils.getCurrentTransform)(ctx));\n    } else {\n      scale = _util.Util.singularValueDecompose2dScale(owner.baseTransform);\n      if (this.matrix) {\n        const matrixScale = _util.Util.singularValueDecompose2dScale(this.matrix);\n        scale = [scale[0] * matrixScale[0], scale[1] * matrixScale[1]];\n      }\n    }\n    const temporaryPatternCanvas = this._createMeshCanvas(scale, pathType === PathType.SHADING ? null : this._background, owner.cachedCanvases);\n    if (pathType !== PathType.SHADING) {\n      ctx.setTransform(...owner.baseTransform);\n      if (this.matrix) {\n        ctx.transform(...this.matrix);\n      }\n    }\n    ctx.translate(temporaryPatternCanvas.offsetX, temporaryPatternCanvas.offsetY);\n    ctx.scale(temporaryPatternCanvas.scaleX, temporaryPatternCanvas.scaleY);\n    return ctx.createPattern(temporaryPatternCanvas.canvas, \"no-repeat\");\n  }\n}\nclass DummyShadingPattern extends BaseShadingPattern {\n  getPattern() {\n    return \"hotpink\";\n  }\n}\nfunction getShadingPattern(IR) {\n  switch (IR[0]) {\n    case \"RadialAxial\":\n      return new RadialAxialShadingPattern(IR);\n    case \"Mesh\":\n      return new MeshShadingPattern(IR);\n    case \"Dummy\":\n      return new DummyShadingPattern();\n  }\n  throw new Error(`Unknown IR type: ${IR[0]}`);\n}\nconst PaintType = {\n  COLORED: 1,\n  UNCOLORED: 2\n};\nclass TilingPattern {\n  static MAX_PATTERN_SIZE = 3000;\n  constructor(IR, color, ctx, canvasGraphicsFactory, baseTransform) {\n    this.operatorList = IR[2];\n    this.matrix = IR[3] || [1, 0, 0, 1, 0, 0];\n    this.bbox = IR[4];\n    this.xstep = IR[5];\n    this.ystep = IR[6];\n    this.paintType = IR[7];\n    this.tilingType = IR[8];\n    this.color = color;\n    this.ctx = ctx;\n    this.canvasGraphicsFactory = canvasGraphicsFactory;\n    this.baseTransform = baseTransform;\n  }\n  createPatternCanvas(owner) {\n    const operatorList = this.operatorList;\n    const bbox = this.bbox;\n    const xstep = this.xstep;\n    const ystep = this.ystep;\n    const paintType = this.paintType;\n    const tilingType = this.tilingType;\n    const color = this.color;\n    const canvasGraphicsFactory = this.canvasGraphicsFactory;\n    (0, _util.info)(\"TilingType: \" + tilingType);\n    const x0 = bbox[0],\n      y0 = bbox[1],\n      x1 = bbox[2],\n      y1 = bbox[3];\n    const matrixScale = _util.Util.singularValueDecompose2dScale(this.matrix);\n    const curMatrixScale = _util.Util.singularValueDecompose2dScale(this.baseTransform);\n    const combinedScale = [matrixScale[0] * curMatrixScale[0], matrixScale[1] * curMatrixScale[1]];\n    const dimx = this.getSizeAndScale(xstep, this.ctx.canvas.width, combinedScale[0]);\n    const dimy = this.getSizeAndScale(ystep, this.ctx.canvas.height, combinedScale[1]);\n    const tmpCanvas = owner.cachedCanvases.getCanvas(\"pattern\", dimx.size, dimy.size, true);\n    const tmpCtx = tmpCanvas.context;\n    const graphics = canvasGraphicsFactory.createCanvasGraphics(tmpCtx);\n    graphics.groupLevel = owner.groupLevel;\n    this.setFillAndStrokeStyleToContext(graphics, paintType, color);\n    let adjustedX0 = x0;\n    let adjustedY0 = y0;\n    let adjustedX1 = x1;\n    let adjustedY1 = y1;\n    if (x0 < 0) {\n      adjustedX0 = 0;\n      adjustedX1 += Math.abs(x0);\n    }\n    if (y0 < 0) {\n      adjustedY0 = 0;\n      adjustedY1 += Math.abs(y0);\n    }\n    tmpCtx.translate(-(dimx.scale * adjustedX0), -(dimy.scale * adjustedY0));\n    graphics.transform(dimx.scale, 0, 0, dimy.scale, 0, 0);\n    tmpCtx.save();\n    this.clipBbox(graphics, adjustedX0, adjustedY0, adjustedX1, adjustedY1);\n    graphics.baseTransform = (0, _display_utils.getCurrentTransform)(graphics.ctx);\n    graphics.executeOperatorList(operatorList);\n    graphics.endDrawing();\n    return {\n      canvas: tmpCanvas.canvas,\n      scaleX: dimx.scale,\n      scaleY: dimy.scale,\n      offsetX: adjustedX0,\n      offsetY: adjustedY0\n    };\n  }\n  getSizeAndScale(step, realOutputSize, scale) {\n    step = Math.abs(step);\n    const maxSize = Math.max(TilingPattern.MAX_PATTERN_SIZE, realOutputSize);\n    let size = Math.ceil(step * scale);\n    if (size >= maxSize) {\n      size = maxSize;\n    } else {\n      scale = size / step;\n    }\n    return {\n      scale,\n      size\n    };\n  }\n  clipBbox(graphics, x0, y0, x1, y1) {\n    const bboxWidth = x1 - x0;\n    const bboxHeight = y1 - y0;\n    graphics.ctx.rect(x0, y0, bboxWidth, bboxHeight);\n    graphics.current.updateRectMinMax((0, _display_utils.getCurrentTransform)(graphics.ctx), [x0, y0, x1, y1]);\n    graphics.clip();\n    graphics.endPath();\n  }\n  setFillAndStrokeStyleToContext(graphics, paintType, color) {\n    const context = graphics.ctx,\n      current = graphics.current;\n    switch (paintType) {\n      case PaintType.COLORED:\n        const ctx = this.ctx;\n        context.fillStyle = ctx.fillStyle;\n        context.strokeStyle = ctx.strokeStyle;\n        current.fillColor = ctx.fillStyle;\n        current.strokeColor = ctx.strokeStyle;\n        break;\n      case PaintType.UNCOLORED:\n        const cssColor = _util.Util.makeHexColor(color[0], color[1], color[2]);\n        context.fillStyle = cssColor;\n        context.strokeStyle = cssColor;\n        current.fillColor = cssColor;\n        current.strokeColor = cssColor;\n        break;\n      default:\n        throw new _util.FormatError(`Unsupported paint type: ${paintType}`);\n    }\n  }\n  getPattern(ctx, owner, inverse, pathType) {\n    let matrix = inverse;\n    if (pathType !== PathType.SHADING) {\n      matrix = _util.Util.transform(matrix, owner.baseTransform);\n      if (this.matrix) {\n        matrix = _util.Util.transform(matrix, this.matrix);\n      }\n    }\n    const temporaryPatternCanvas = this.createPatternCanvas(owner);\n    let domMatrix = new DOMMatrix(matrix);\n    domMatrix = domMatrix.translate(temporaryPatternCanvas.offsetX, temporaryPatternCanvas.offsetY);\n    domMatrix = domMatrix.scale(1 / temporaryPatternCanvas.scaleX, 1 / temporaryPatternCanvas.scaleY);\n    const pattern = ctx.createPattern(temporaryPatternCanvas.canvas, \"repeat\");\n    pattern.setTransform(domMatrix);\n    return pattern;\n  }\n}\nexports.TilingPattern = TilingPattern;\n\n/***/ }),\n/* 13 */\n/***/ ((__unused_webpack_module, exports, __w_pdfjs_require__) => {\n\n\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.convertBlackAndWhiteToRGBA = convertBlackAndWhiteToRGBA;\nexports.convertToRGBA = convertToRGBA;\nexports.grayToRGBA = grayToRGBA;\nvar _util = __w_pdfjs_require__(1);\nfunction convertToRGBA(params) {\n  switch (params.kind) {\n    case _util.ImageKind.GRAYSCALE_1BPP:\n      return convertBlackAndWhiteToRGBA(params);\n    case _util.ImageKind.RGB_24BPP:\n      return convertRGBToRGBA(params);\n  }\n  return null;\n}\nfunction convertBlackAndWhiteToRGBA({\n  src,\n  srcPos = 0,\n  dest,\n  width,\n  height,\n  nonBlackColor = 0xffffffff,\n  inverseDecode = false\n}) {\n  const black = _util.FeatureTest.isLittleEndian ? 0xff000000 : 0x000000ff;\n  const [zeroMapping, oneMapping] = inverseDecode ? [nonBlackColor, black] : [black, nonBlackColor];\n  const widthInSource = width >> 3;\n  const widthRemainder = width & 7;\n  const srcLength = src.length;\n  dest = new Uint32Array(dest.buffer);\n  let destPos = 0;\n  for (let i = 0; i < height; i++) {\n    for (const max = srcPos + widthInSource; srcPos < max; srcPos++) {\n      const elem = srcPos < srcLength ? src[srcPos] : 255;\n      dest[destPos++] = elem & 0b10000000 ? oneMapping : zeroMapping;\n      dest[destPos++] = elem & 0b1000000 ? oneMapping : zeroMapping;\n      dest[destPos++] = elem & 0b100000 ? oneMapping : zeroMapping;\n      dest[destPos++] = elem & 0b10000 ? oneMapping : zeroMapping;\n      dest[destPos++] = elem & 0b1000 ? oneMapping : zeroMapping;\n      dest[destPos++] = elem & 0b100 ? oneMapping : zeroMapping;\n      dest[destPos++] = elem & 0b10 ? oneMapping : zeroMapping;\n      dest[destPos++] = elem & 0b1 ? oneMapping : zeroMapping;\n    }\n    if (widthRemainder === 0) {\n      continue;\n    }\n    const elem = srcPos < srcLength ? src[srcPos++] : 255;\n    for (let j = 0; j < widthRemainder; j++) {\n      dest[destPos++] = elem & 1 << 7 - j ? oneMapping : zeroMapping;\n    }\n  }\n  return {\n    srcPos,\n    destPos\n  };\n}\nfunction convertRGBToRGBA({\n  src,\n  srcPos = 0,\n  dest,\n  destPos = 0,\n  width,\n  height\n}) {\n  let i = 0;\n  const len32 = src.length >> 2;\n  const src32 = new Uint32Array(src.buffer, srcPos, len32);\n  if (_util.FeatureTest.isLittleEndian) {\n    for (; i < len32 - 2; i += 3, destPos += 4) {\n      const s1 = src32[i];\n      const s2 = src32[i + 1];\n      const s3 = src32[i + 2];\n      dest[destPos] = s1 | 0xff000000;\n      dest[destPos + 1] = s1 >>> 24 | s2 << 8 | 0xff000000;\n      dest[destPos + 2] = s2 >>> 16 | s3 << 16 | 0xff000000;\n      dest[destPos + 3] = s3 >>> 8 | 0xff000000;\n    }\n    for (let j = i * 4, jj = src.length; j < jj; j += 3) {\n      dest[destPos++] = src[j] | src[j + 1] << 8 | src[j + 2] << 16 | 0xff000000;\n    }\n  } else {\n    for (; i < len32 - 2; i += 3, destPos += 4) {\n      const s1 = src32[i];\n      const s2 = src32[i + 1];\n      const s3 = src32[i + 2];\n      dest[destPos] = s1 | 0xff;\n      dest[destPos + 1] = s1 << 24 | s2 >>> 8 | 0xff;\n      dest[destPos + 2] = s2 << 16 | s3 >>> 16 | 0xff;\n      dest[destPos + 3] = s3 << 8 | 0xff;\n    }\n    for (let j = i * 4, jj = src.length; j < jj; j += 3) {\n      dest[destPos++] = src[j] << 24 | src[j + 1] << 16 | src[j + 2] << 8 | 0xff;\n    }\n  }\n  return {\n    srcPos,\n    destPos\n  };\n}\nfunction grayToRGBA(src, dest) {\n  if (_util.FeatureTest.isLittleEndian) {\n    for (let i = 0, ii = src.length; i < ii; i++) {\n      dest[i] = src[i] * 0x10101 | 0xff000000;\n    }\n  } else {\n    for (let i = 0, ii = src.length; i < ii; i++) {\n      dest[i] = src[i] * 0x1010100 | 0x000000ff;\n    }\n  }\n}\n\n/***/ }),\n/* 14 */\n/***/ ((__unused_webpack_module, exports) => {\n\n\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.GlobalWorkerOptions = void 0;\nconst GlobalWorkerOptions = Object.create(null);\nexports.GlobalWorkerOptions = GlobalWorkerOptions;\nGlobalWorkerOptions.workerPort = null;\nGlobalWorkerOptions.workerSrc = \"\";\n\n/***/ }),\n/* 15 */\n/***/ ((__unused_webpack_module, exports, __w_pdfjs_require__) => {\n\n\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.MessageHandler = void 0;\nvar _util = __w_pdfjs_require__(1);\nconst CallbackKind = {\n  UNKNOWN: 0,\n  DATA: 1,\n  ERROR: 2\n};\nconst StreamKind = {\n  UNKNOWN: 0,\n  CANCEL: 1,\n  CANCEL_COMPLETE: 2,\n  CLOSE: 3,\n  ENQUEUE: 4,\n  ERROR: 5,\n  PULL: 6,\n  PULL_COMPLETE: 7,\n  START_COMPLETE: 8\n};\nfunction wrapReason(reason) {\n  if (!(reason instanceof Error || typeof reason === \"object\" && reason !== null)) {\n    (0, _util.unreachable)('wrapReason: Expected \"reason\" to be a (possibly cloned) Error.');\n  }\n  switch (reason.name) {\n    case \"AbortException\":\n      return new _util.AbortException(reason.message);\n    case \"MissingPDFException\":\n      return new _util.MissingPDFException(reason.message);\n    case \"PasswordException\":\n      return new _util.PasswordException(reason.message, reason.code);\n    case \"UnexpectedResponseException\":\n      return new _util.UnexpectedResponseException(reason.message, reason.status);\n    case \"UnknownErrorException\":\n      return new _util.UnknownErrorException(reason.message, reason.details);\n    default:\n      return new _util.UnknownErrorException(reason.message, reason.toString());\n  }\n}\nclass MessageHandler {\n  constructor(sourceName, targetName, comObj) {\n    this.sourceName = sourceName;\n    this.targetName = targetName;\n    this.comObj = comObj;\n    this.callbackId = 1;\n    this.streamId = 1;\n    this.streamSinks = Object.create(null);\n    this.streamControllers = Object.create(null);\n    this.callbackCapabilities = Object.create(null);\n    this.actionHandler = Object.create(null);\n    this._onComObjOnMessage = event => {\n      const data = event.data;\n      if (data.targetName !== this.sourceName) {\n        return;\n      }\n      if (data.stream) {\n        this.#processStreamMessage(data);\n        return;\n      }\n      if (data.callback) {\n        const callbackId = data.callbackId;\n        const capability = this.callbackCapabilities[callbackId];\n        if (!capability) {\n          throw new Error(`Cannot resolve callback ${callbackId}`);\n        }\n        delete this.callbackCapabilities[callbackId];\n        if (data.callback === CallbackKind.DATA) {\n          capability.resolve(data.data);\n        } else if (data.callback === CallbackKind.ERROR) {\n          capability.reject(wrapReason(data.reason));\n        } else {\n          throw new Error(\"Unexpected callback case\");\n        }\n        return;\n      }\n      const action = this.actionHandler[data.action];\n      if (!action) {\n        throw new Error(`Unknown action from worker: ${data.action}`);\n      }\n      if (data.callbackId) {\n        const cbSourceName = this.sourceName;\n        const cbTargetName = data.sourceName;\n        new Promise(function (resolve) {\n          resolve(action(data.data));\n        }).then(function (result) {\n          comObj.postMessage({\n            sourceName: cbSourceName,\n            targetName: cbTargetName,\n            callback: CallbackKind.DATA,\n            callbackId: data.callbackId,\n            data: result\n          });\n        }, function (reason) {\n          comObj.postMessage({\n            sourceName: cbSourceName,\n            targetName: cbTargetName,\n            callback: CallbackKind.ERROR,\n            callbackId: data.callbackId,\n            reason: wrapReason(reason)\n          });\n        });\n        return;\n      }\n      if (data.streamId) {\n        this.#createStreamSink(data);\n        return;\n      }\n      action(data.data);\n    };\n    comObj.addEventListener(\"message\", this._onComObjOnMessage);\n  }\n  on(actionName, handler) {\n    const ah = this.actionHandler;\n    if (ah[actionName]) {\n      throw new Error(`There is already an actionName called \"${actionName}\"`);\n    }\n    ah[actionName] = handler;\n  }\n  send(actionName, data, transfers) {\n    this.comObj.postMessage({\n      sourceName: this.sourceName,\n      targetName: this.targetName,\n      action: actionName,\n      data\n    }, transfers);\n  }\n  sendWithPromise(actionName, data, transfers) {\n    const callbackId = this.callbackId++;\n    const capability = new _util.PromiseCapability();\n    this.callbackCapabilities[callbackId] = capability;\n    try {\n      this.comObj.postMessage({\n        sourceName: this.sourceName,\n        targetName: this.targetName,\n        action: actionName,\n        callbackId,\n        data\n      }, transfers);\n    } catch (ex) {\n      capability.reject(ex);\n    }\n    return capability.promise;\n  }\n  sendWithStream(actionName, data, queueingStrategy, transfers) {\n    const streamId = this.streamId++,\n      sourceName = this.sourceName,\n      targetName = this.targetName,\n      comObj = this.comObj;\n    return new ReadableStream({\n      start: controller => {\n        const startCapability = new _util.PromiseCapability();\n        this.streamControllers[streamId] = {\n          controller,\n          startCall: startCapability,\n          pullCall: null,\n          cancelCall: null,\n          isClosed: false\n        };\n        comObj.postMessage({\n          sourceName,\n          targetName,\n          action: actionName,\n          streamId,\n          data,\n          desiredSize: controller.desiredSize\n        }, transfers);\n        return startCapability.promise;\n      },\n      pull: controller => {\n        const pullCapability = new _util.PromiseCapability();\n        this.streamControllers[streamId].pullCall = pullCapability;\n        comObj.postMessage({\n          sourceName,\n          targetName,\n          stream: StreamKind.PULL,\n          streamId,\n          desiredSize: controller.desiredSize\n        });\n        return pullCapability.promise;\n      },\n      cancel: reason => {\n        (0, _util.assert)(reason instanceof Error, \"cancel must have a valid reason\");\n        const cancelCapability = new _util.PromiseCapability();\n        this.streamControllers[streamId].cancelCall = cancelCapability;\n        this.streamControllers[streamId].isClosed = true;\n        comObj.postMessage({\n          sourceName,\n          targetName,\n          stream: StreamKind.CANCEL,\n          streamId,\n          reason: wrapReason(reason)\n        });\n        return cancelCapability.promise;\n      }\n    }, queueingStrategy);\n  }\n  #createStreamSink(data) {\n    const streamId = data.streamId,\n      sourceName = this.sourceName,\n      targetName = data.sourceName,\n      comObj = this.comObj;\n    const self = this,\n      action = this.actionHandler[data.action];\n    const streamSink = {\n      enqueue(chunk, size = 1, transfers) {\n        if (this.isCancelled) {\n          return;\n        }\n        const lastDesiredSize = this.desiredSize;\n        this.desiredSize -= size;\n        if (lastDesiredSize > 0 && this.desiredSize <= 0) {\n          this.sinkCapability = new _util.PromiseCapability();\n          this.ready = this.sinkCapability.promise;\n        }\n        comObj.postMessage({\n          sourceName,\n          targetName,\n          stream: StreamKind.ENQUEUE,\n          streamId,\n          chunk\n        }, transfers);\n      },\n      close() {\n        if (this.isCancelled) {\n          return;\n        }\n        this.isCancelled = true;\n        comObj.postMessage({\n          sourceName,\n          targetName,\n          stream: StreamKind.CLOSE,\n          streamId\n        });\n        delete self.streamSinks[streamId];\n      },\n      error(reason) {\n        (0, _util.assert)(reason instanceof Error, \"error must have a valid reason\");\n        if (this.isCancelled) {\n          return;\n        }\n        this.isCancelled = true;\n        comObj.postMessage({\n          sourceName,\n          targetName,\n          stream: StreamKind.ERROR,\n          streamId,\n          reason: wrapReason(reason)\n        });\n      },\n      sinkCapability: new _util.PromiseCapability(),\n      onPull: null,\n      onCancel: null,\n      isCancelled: false,\n      desiredSize: data.desiredSize,\n      ready: null\n    };\n    streamSink.sinkCapability.resolve();\n    streamSink.ready = streamSink.sinkCapability.promise;\n    this.streamSinks[streamId] = streamSink;\n    new Promise(function (resolve) {\n      resolve(action(data.data, streamSink));\n    }).then(function () {\n      comObj.postMessage({\n        sourceName,\n        targetName,\n        stream: StreamKind.START_COMPLETE,\n        streamId,\n        success: true\n      });\n    }, function (reason) {\n      comObj.postMessage({\n        sourceName,\n        targetName,\n        stream: StreamKind.START_COMPLETE,\n        streamId,\n        reason: wrapReason(reason)\n      });\n    });\n  }\n  #processStreamMessage(data) {\n    const streamId = data.streamId,\n      sourceName = this.sourceName,\n      targetName = data.sourceName,\n      comObj = this.comObj;\n    const streamController = this.streamControllers[streamId],\n      streamSink = this.streamSinks[streamId];\n    switch (data.stream) {\n      case StreamKind.START_COMPLETE:\n        if (data.success) {\n          streamController.startCall.resolve();\n        } else {\n          streamController.startCall.reject(wrapReason(data.reason));\n        }\n        break;\n      case StreamKind.PULL_COMPLETE:\n        if (data.success) {\n          streamController.pullCall.resolve();\n        } else {\n          streamController.pullCall.reject(wrapReason(data.reason));\n        }\n        break;\n      case StreamKind.PULL:\n        if (!streamSink) {\n          comObj.postMessage({\n            sourceName,\n            targetName,\n            stream: StreamKind.PULL_COMPLETE,\n            streamId,\n            success: true\n          });\n          break;\n        }\n        if (streamSink.desiredSize <= 0 && data.desiredSize > 0) {\n          streamSink.sinkCapability.resolve();\n        }\n        streamSink.desiredSize = data.desiredSize;\n        new Promise(function (resolve) {\n          resolve(streamSink.onPull?.());\n        }).then(function () {\n          comObj.postMessage({\n            sourceName,\n            targetName,\n            stream: StreamKind.PULL_COMPLETE,\n            streamId,\n            success: true\n          });\n        }, function (reason) {\n          comObj.postMessage({\n            sourceName,\n            targetName,\n            stream: StreamKind.PULL_COMPLETE,\n            streamId,\n            reason: wrapReason(reason)\n          });\n        });\n        break;\n      case StreamKind.ENQUEUE:\n        (0, _util.assert)(streamController, \"enqueue should have stream controller\");\n        if (streamController.isClosed) {\n          break;\n        }\n        streamController.controller.enqueue(data.chunk);\n        break;\n      case StreamKind.CLOSE:\n        (0, _util.assert)(streamController, \"close should have stream controller\");\n        if (streamController.isClosed) {\n          break;\n        }\n        streamController.isClosed = true;\n        streamController.controller.close();\n        this.#deleteStreamController(streamController, streamId);\n        break;\n      case StreamKind.ERROR:\n        (0, _util.assert)(streamController, \"error should have stream controller\");\n        streamController.controller.error(wrapReason(data.reason));\n        this.#deleteStreamController(streamController, streamId);\n        break;\n      case StreamKind.CANCEL_COMPLETE:\n        if (data.success) {\n          streamController.cancelCall.resolve();\n        } else {\n          streamController.cancelCall.reject(wrapReason(data.reason));\n        }\n        this.#deleteStreamController(streamController, streamId);\n        break;\n      case StreamKind.CANCEL:\n        if (!streamSink) {\n          break;\n        }\n        new Promise(function (resolve) {\n          resolve(streamSink.onCancel?.(wrapReason(data.reason)));\n        }).then(function () {\n          comObj.postMessage({\n            sourceName,\n            targetName,\n            stream: StreamKind.CANCEL_COMPLETE,\n            streamId,\n            success: true\n          });\n        }, function (reason) {\n          comObj.postMessage({\n            sourceName,\n            targetName,\n            stream: StreamKind.CANCEL_COMPLETE,\n            streamId,\n            reason: wrapReason(reason)\n          });\n        });\n        streamSink.sinkCapability.reject(wrapReason(data.reason));\n        streamSink.isCancelled = true;\n        delete this.streamSinks[streamId];\n        break;\n      default:\n        throw new Error(\"Unexpected stream case\");\n    }\n  }\n  async #deleteStreamController(streamController, streamId) {\n    await Promise.allSettled([streamController.startCall?.promise, streamController.pullCall?.promise, streamController.cancelCall?.promise]);\n    delete this.streamControllers[streamId];\n  }\n  destroy() {\n    this.comObj.removeEventListener(\"message\", this._onComObjOnMessage);\n  }\n}\nexports.MessageHandler = MessageHandler;\n\n/***/ }),\n/* 16 */\n/***/ ((__unused_webpack_module, exports, __w_pdfjs_require__) => {\n\n\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.Metadata = void 0;\nvar _util = __w_pdfjs_require__(1);\nclass Metadata {\n  #metadataMap;\n  #data;\n  constructor({\n    parsedData,\n    rawData\n  }) {\n    this.#metadataMap = parsedData;\n    this.#data = rawData;\n  }\n  getRaw() {\n    return this.#data;\n  }\n  get(name) {\n    return this.#metadataMap.get(name) ?? null;\n  }\n  getAll() {\n    return (0, _util.objectFromMap)(this.#metadataMap);\n  }\n  has(name) {\n    return this.#metadataMap.has(name);\n  }\n}\nexports.Metadata = Metadata;\n\n/***/ }),\n/* 17 */\n/***/ ((__unused_webpack_module, exports, __w_pdfjs_require__) => {\n\n\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.OptionalContentConfig = void 0;\nvar _util = __w_pdfjs_require__(1);\nvar _murmurhash = __w_pdfjs_require__(8);\nconst INTERNAL = Symbol(\"INTERNAL\");\nclass OptionalContentGroup {\n  #visible = true;\n  constructor(name, intent) {\n    this.name = name;\n    this.intent = intent;\n  }\n  get visible() {\n    return this.#visible;\n  }\n  _setVisible(internal, visible) {\n    if (internal !== INTERNAL) {\n      (0, _util.unreachable)(\"Internal method `_setVisible` called.\");\n    }\n    this.#visible = visible;\n  }\n}\nclass OptionalContentConfig {\n  #cachedGetHash = null;\n  #groups = new Map();\n  #initialHash = null;\n  #order = null;\n  constructor(data) {\n    this.name = null;\n    this.creator = null;\n    if (data === null) {\n      return;\n    }\n    this.name = data.name;\n    this.creator = data.creator;\n    this.#order = data.order;\n    for (const group of data.groups) {\n      this.#groups.set(group.id, new OptionalContentGroup(group.name, group.intent));\n    }\n    if (data.baseState === \"OFF\") {\n      for (const group of this.#groups.values()) {\n        group._setVisible(INTERNAL, false);\n      }\n    }\n    for (const on of data.on) {\n      this.#groups.get(on)._setVisible(INTERNAL, true);\n    }\n    for (const off of data.off) {\n      this.#groups.get(off)._setVisible(INTERNAL, false);\n    }\n    this.#initialHash = this.getHash();\n  }\n  #evaluateVisibilityExpression(array) {\n    const length = array.length;\n    if (length < 2) {\n      return true;\n    }\n    const operator = array[0];\n    for (let i = 1; i < length; i++) {\n      const element = array[i];\n      let state;\n      if (Array.isArray(element)) {\n        state = this.#evaluateVisibilityExpression(element);\n      } else if (this.#groups.has(element)) {\n        state = this.#groups.get(element).visible;\n      } else {\n        (0, _util.warn)(`Optional content group not found: ${element}`);\n        return true;\n      }\n      switch (operator) {\n        case \"And\":\n          if (!state) {\n            return false;\n          }\n          break;\n        case \"Or\":\n          if (state) {\n            return true;\n          }\n          break;\n        case \"Not\":\n          return !state;\n        default:\n          return true;\n      }\n    }\n    return operator === \"And\";\n  }\n  isVisible(group) {\n    if (this.#groups.size === 0) {\n      return true;\n    }\n    if (!group) {\n      (0, _util.warn)(\"Optional content group not defined.\");\n      return true;\n    }\n    if (group.type === \"OCG\") {\n      if (!this.#groups.has(group.id)) {\n        (0, _util.warn)(`Optional content group not found: ${group.id}`);\n        return true;\n      }\n      return this.#groups.get(group.id).visible;\n    } else if (group.type === \"OCMD\") {\n      if (group.expression) {\n        return this.#evaluateVisibilityExpression(group.expression);\n      }\n      if (!group.policy || group.policy === \"AnyOn\") {\n        for (const id of group.ids) {\n          if (!this.#groups.has(id)) {\n            (0, _util.warn)(`Optional content group not found: ${id}`);\n            return true;\n          }\n          if (this.#groups.get(id).visible) {\n            return true;\n          }\n        }\n        return false;\n      } else if (group.policy === \"AllOn\") {\n        for (const id of group.ids) {\n          if (!this.#groups.has(id)) {\n            (0, _util.warn)(`Optional content group not found: ${id}`);\n            return true;\n          }\n          if (!this.#groups.get(id).visible) {\n            return false;\n          }\n        }\n        return true;\n      } else if (group.policy === \"AnyOff\") {\n        for (const id of group.ids) {\n          if (!this.#groups.has(id)) {\n            (0, _util.warn)(`Optional content group not found: ${id}`);\n            return true;\n          }\n          if (!this.#groups.get(id).visible) {\n            return true;\n          }\n        }\n        return false;\n      } else if (group.policy === \"AllOff\") {\n        for (const id of group.ids) {\n          if (!this.#groups.has(id)) {\n            (0, _util.warn)(`Optional content group not found: ${id}`);\n            return true;\n          }\n          if (this.#groups.get(id).visible) {\n            return false;\n          }\n        }\n        return true;\n      }\n      (0, _util.warn)(`Unknown optional content policy ${group.policy}.`);\n      return true;\n    }\n    (0, _util.warn)(`Unknown group type ${group.type}.`);\n    return true;\n  }\n  setVisibility(id, visible = true) {\n    if (!this.#groups.has(id)) {\n      (0, _util.warn)(`Optional content group not found: ${id}`);\n      return;\n    }\n    this.#groups.get(id)._setVisible(INTERNAL, !!visible);\n    this.#cachedGetHash = null;\n  }\n  get hasInitialVisibility() {\n    return this.#initialHash === null || this.getHash() === this.#initialHash;\n  }\n  getOrder() {\n    if (!this.#groups.size) {\n      return null;\n    }\n    if (this.#order) {\n      return this.#order.slice();\n    }\n    return [...this.#groups.keys()];\n  }\n  getGroups() {\n    return this.#groups.size > 0 ? (0, _util.objectFromMap)(this.#groups) : null;\n  }\n  getGroup(id) {\n    return this.#groups.get(id) || null;\n  }\n  getHash() {\n    if (this.#cachedGetHash !== null) {\n      return this.#cachedGetHash;\n    }\n    const hash = new _murmurhash.MurmurHash3_64();\n    for (const [id, group] of this.#groups) {\n      hash.update(`${id}:${group.visible}`);\n    }\n    return this.#cachedGetHash = hash.hexdigest();\n  }\n}\nexports.OptionalContentConfig = OptionalContentConfig;\n\n/***/ }),\n/* 18 */\n/***/ ((__unused_webpack_module, exports, __w_pdfjs_require__) => {\n\n\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.PDFDataTransportStream = void 0;\nvar _util = __w_pdfjs_require__(1);\nvar _display_utils = __w_pdfjs_require__(6);\nclass PDFDataTransportStream {\n  constructor({\n    length,\n    initialData,\n    progressiveDone = false,\n    contentDispositionFilename = null,\n    disableRange = false,\n    disableStream = false\n  }, pdfDataRangeTransport) {\n    (0, _util.assert)(pdfDataRangeTransport, 'PDFDataTransportStream - missing required \"pdfDataRangeTransport\" argument.');\n    this._queuedChunks = [];\n    this._progressiveDone = progressiveDone;\n    this._contentDispositionFilename = contentDispositionFilename;\n    if (initialData?.length > 0) {\n      const buffer = initialData instanceof Uint8Array && initialData.byteLength === initialData.buffer.byteLength ? initialData.buffer : new Uint8Array(initialData).buffer;\n      this._queuedChunks.push(buffer);\n    }\n    this._pdfDataRangeTransport = pdfDataRangeTransport;\n    this._isStreamingSupported = !disableStream;\n    this._isRangeSupported = !disableRange;\n    this._contentLength = length;\n    this._fullRequestReader = null;\n    this._rangeReaders = [];\n    this._pdfDataRangeTransport.addRangeListener((begin, chunk) => {\n      this._onReceiveData({\n        begin,\n        chunk\n      });\n    });\n    this._pdfDataRangeTransport.addProgressListener((loaded, total) => {\n      this._onProgress({\n        loaded,\n        total\n      });\n    });\n    this._pdfDataRangeTransport.addProgressiveReadListener(chunk => {\n      this._onReceiveData({\n        chunk\n      });\n    });\n    this._pdfDataRangeTransport.addProgressiveDoneListener(() => {\n      this._onProgressiveDone();\n    });\n    this._pdfDataRangeTransport.transportReady();\n  }\n  _onReceiveData({\n    begin,\n    chunk\n  }) {\n    const buffer = chunk instanceof Uint8Array && chunk.byteLength === chunk.buffer.byteLength ? chunk.buffer : new Uint8Array(chunk).buffer;\n    if (begin === undefined) {\n      if (this._fullRequestReader) {\n        this._fullRequestReader._enqueue(buffer);\n      } else {\n        this._queuedChunks.push(buffer);\n      }\n    } else {\n      const found = this._rangeReaders.some(function (rangeReader) {\n        if (rangeReader._begin !== begin) {\n          return false;\n        }\n        rangeReader._enqueue(buffer);\n        return true;\n      });\n      (0, _util.assert)(found, \"_onReceiveData - no `PDFDataTransportStreamRangeReader` instance found.\");\n    }\n  }\n  get _progressiveDataLength() {\n    return this._fullRequestReader?._loaded ?? 0;\n  }\n  _onProgress(evt) {\n    if (evt.total === undefined) {\n      this._rangeReaders[0]?.onProgress?.({\n        loaded: evt.loaded\n      });\n    } else {\n      this._fullRequestReader?.onProgress?.({\n        loaded: evt.loaded,\n        total: evt.total\n      });\n    }\n  }\n  _onProgressiveDone() {\n    this._fullRequestReader?.progressiveDone();\n    this._progressiveDone = true;\n  }\n  _removeRangeReader(reader) {\n    const i = this._rangeReaders.indexOf(reader);\n    if (i >= 0) {\n      this._rangeReaders.splice(i, 1);\n    }\n  }\n  getFullReader() {\n    (0, _util.assert)(!this._fullRequestReader, \"PDFDataTransportStream.getFullReader can only be called once.\");\n    const queuedChunks = this._queuedChunks;\n    this._queuedChunks = null;\n    return new PDFDataTransportStreamReader(this, queuedChunks, this._progressiveDone, this._contentDispositionFilename);\n  }\n  getRangeReader(begin, end) {\n    if (end <= this._progressiveDataLength) {\n      return null;\n    }\n    const reader = new PDFDataTransportStreamRangeReader(this, begin, end);\n    this._pdfDataRangeTransport.requestDataRange(begin, end);\n    this._rangeReaders.push(reader);\n    return reader;\n  }\n  cancelAllRequests(reason) {\n    this._fullRequestReader?.cancel(reason);\n    for (const reader of this._rangeReaders.slice(0)) {\n      reader.cancel(reason);\n    }\n    this._pdfDataRangeTransport.abort();\n  }\n}\nexports.PDFDataTransportStream = PDFDataTransportStream;\nclass PDFDataTransportStreamReader {\n  constructor(stream, queuedChunks, progressiveDone = false, contentDispositionFilename = null) {\n    this._stream = stream;\n    this._done = progressiveDone || false;\n    this._filename = (0, _display_utils.isPdfFile)(contentDispositionFilename) ? contentDispositionFilename : null;\n    this._queuedChunks = queuedChunks || [];\n    this._loaded = 0;\n    for (const chunk of this._queuedChunks) {\n      this._loaded += chunk.byteLength;\n    }\n    this._requests = [];\n    this._headersReady = Promise.resolve();\n    stream._fullRequestReader = this;\n    this.onProgress = null;\n  }\n  _enqueue(chunk) {\n    if (this._done) {\n      return;\n    }\n    if (this._requests.length > 0) {\n      const requestCapability = this._requests.shift();\n      requestCapability.resolve({\n        value: chunk,\n        done: false\n      });\n    } else {\n      this._queuedChunks.push(chunk);\n    }\n    this._loaded += chunk.byteLength;\n  }\n  get headersReady() {\n    return this._headersReady;\n  }\n  get filename() {\n    return this._filename;\n  }\n  get isRangeSupported() {\n    return this._stream._isRangeSupported;\n  }\n  get isStreamingSupported() {\n    return this._stream._isStreamingSupported;\n  }\n  get contentLength() {\n    return this._stream._contentLength;\n  }\n  async read() {\n    if (this._queuedChunks.length > 0) {\n      const chunk = this._queuedChunks.shift();\n      return {\n        value: chunk,\n        done: false\n      };\n    }\n    if (this._done) {\n      return {\n        value: undefined,\n        done: true\n      };\n    }\n    const requestCapability = new _util.PromiseCapability();\n    this._requests.push(requestCapability);\n    return requestCapability.promise;\n  }\n  cancel(reason) {\n    this._done = true;\n    for (const requestCapability of this._requests) {\n      requestCapability.resolve({\n        value: undefined,\n        done: true\n      });\n    }\n    this._requests.length = 0;\n  }\n  progressiveDone() {\n    if (this._done) {\n      return;\n    }\n    this._done = true;\n  }\n}\nclass PDFDataTransportStreamRangeReader {\n  constructor(stream, begin, end) {\n    this._stream = stream;\n    this._begin = begin;\n    this._end = end;\n    this._queuedChunk = null;\n    this._requests = [];\n    this._done = false;\n    this.onProgress = null;\n  }\n  _enqueue(chunk) {\n    if (this._done) {\n      return;\n    }\n    if (this._requests.length === 0) {\n      this._queuedChunk = chunk;\n    } else {\n      const requestsCapability = this._requests.shift();\n      requestsCapability.resolve({\n        value: chunk,\n        done: false\n      });\n      for (const requestCapability of this._requests) {\n        requestCapability.resolve({\n          value: undefined,\n          done: true\n        });\n      }\n      this._requests.length = 0;\n    }\n    this._done = true;\n    this._stream._removeRangeReader(this);\n  }\n  get isStreamingSupported() {\n    return false;\n  }\n  async read() {\n    if (this._queuedChunk) {\n      const chunk = this._queuedChunk;\n      this._queuedChunk = null;\n      return {\n        value: chunk,\n        done: false\n      };\n    }\n    if (this._done) {\n      return {\n        value: undefined,\n        done: true\n      };\n    }\n    const requestCapability = new _util.PromiseCapability();\n    this._requests.push(requestCapability);\n    return requestCapability.promise;\n  }\n  cancel(reason) {\n    this._done = true;\n    for (const requestCapability of this._requests) {\n      requestCapability.resolve({\n        value: undefined,\n        done: true\n      });\n    }\n    this._requests.length = 0;\n    this._stream._removeRangeReader(this);\n  }\n}\n\n/***/ }),\n/* 19 */\n/***/ ((__unused_webpack_module, exports, __w_pdfjs_require__) => {\n\n\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.PDFFetchStream = void 0;\nvar _util = __w_pdfjs_require__(1);\nvar _network_utils = __w_pdfjs_require__(20);\n;\nfunction createFetchOptions(headers, withCredentials, abortController) {\n  return {\n    method: \"GET\",\n    headers,\n    signal: abortController.signal,\n    mode: \"cors\",\n    credentials: withCredentials ? \"include\" : \"same-origin\",\n    redirect: \"follow\"\n  };\n}\nfunction createHeaders(httpHeaders) {\n  const headers = new Headers();\n  for (const property in httpHeaders) {\n    const value = httpHeaders[property];\n    if (value === undefined) {\n      continue;\n    }\n    headers.append(property, value);\n  }\n  return headers;\n}\nfunction getArrayBuffer(val) {\n  if (val instanceof Uint8Array) {\n    return val.buffer;\n  }\n  if (val instanceof ArrayBuffer) {\n    return val;\n  }\n  (0, _util.warn)(`getArrayBuffer - unexpected data format: ${val}`);\n  return new Uint8Array(val).buffer;\n}\nclass PDFFetchStream {\n  constructor(source) {\n    this.source = source;\n    this.isHttp = /^https?:/i.test(source.url);\n    this.httpHeaders = this.isHttp && source.httpHeaders || {};\n    this._fullRequestReader = null;\n    this._rangeRequestReaders = [];\n  }\n  get _progressiveDataLength() {\n    return this._fullRequestReader?._loaded ?? 0;\n  }\n  getFullReader() {\n    (0, _util.assert)(!this._fullRequestReader, \"PDFFetchStream.getFullReader can only be called once.\");\n    this._fullRequestReader = new PDFFetchStreamReader(this);\n    return this._fullRequestReader;\n  }\n  getRangeReader(begin, end) {\n    if (end <= this._progressiveDataLength) {\n      return null;\n    }\n    const reader = new PDFFetchStreamRangeReader(this, begin, end);\n    this._rangeRequestReaders.push(reader);\n    return reader;\n  }\n  cancelAllRequests(reason) {\n    this._fullRequestReader?.cancel(reason);\n    for (const reader of this._rangeRequestReaders.slice(0)) {\n      reader.cancel(reason);\n    }\n  }\n}\nexports.PDFFetchStream = PDFFetchStream;\nclass PDFFetchStreamReader {\n  constructor(stream) {\n    this._stream = stream;\n    this._reader = null;\n    this._loaded = 0;\n    this._filename = null;\n    const source = stream.source;\n    this._withCredentials = source.withCredentials || false;\n    this._contentLength = source.length;\n    this._headersCapability = new _util.PromiseCapability();\n    this._disableRange = source.disableRange || false;\n    this._rangeChunkSize = source.rangeChunkSize;\n    if (!this._rangeChunkSize && !this._disableRange) {\n      this._disableRange = true;\n    }\n    this._abortController = new AbortController();\n    this._isStreamingSupported = !source.disableStream;\n    this._isRangeSupported = !source.disableRange;\n    this._headers = createHeaders(this._stream.httpHeaders);\n    const url = source.url;\n    fetch(url, createFetchOptions(this._headers, this._withCredentials, this._abortController)).then(response => {\n      if (!(0, _network_utils.validateResponseStatus)(response.status)) {\n        throw (0, _network_utils.createResponseStatusError)(response.status, url);\n      }\n      this._reader = response.body.getReader();\n      this._headersCapability.resolve();\n      const getResponseHeader = name => {\n        return response.headers.get(name);\n      };\n      const {\n        allowRangeRequests,\n        suggestedLength\n      } = (0, _network_utils.validateRangeRequestCapabilities)({\n        getResponseHeader,\n        isHttp: this._stream.isHttp,\n        rangeChunkSize: this._rangeChunkSize,\n        disableRange: this._disableRange\n      });\n      this._isRangeSupported = allowRangeRequests;\n      this._contentLength = suggestedLength || this._contentLength;\n      this._filename = (0, _network_utils.extractFilenameFromHeader)(getResponseHeader);\n      if (!this._isStreamingSupported && this._isRangeSupported) {\n        this.cancel(new _util.AbortException(\"Streaming is disabled.\"));\n      }\n    }).catch(this._headersCapability.reject);\n    this.onProgress = null;\n  }\n  get headersReady() {\n    return this._headersCapability.promise;\n  }\n  get filename() {\n    return this._filename;\n  }\n  get contentLength() {\n    return this._contentLength;\n  }\n  get isRangeSupported() {\n    return this._isRangeSupported;\n  }\n  get isStreamingSupported() {\n    return this._isStreamingSupported;\n  }\n  async read() {\n    await this._headersCapability.promise;\n    const {\n      value,\n      done\n    } = await this._reader.read();\n    if (done) {\n      return {\n        value,\n        done\n      };\n    }\n    this._loaded += value.byteLength;\n    this.onProgress?.({\n      loaded: this._loaded,\n      total: this._contentLength\n    });\n    return {\n      value: getArrayBuffer(value),\n      done: false\n    };\n  }\n  cancel(reason) {\n    this._reader?.cancel(reason);\n    this._abortController.abort();\n  }\n}\nclass PDFFetchStreamRangeReader {\n  constructor(stream, begin, end) {\n    this._stream = stream;\n    this._reader = null;\n    this._loaded = 0;\n    const source = stream.source;\n    this._withCredentials = source.withCredentials || false;\n    this._readCapability = new _util.PromiseCapability();\n    this._isStreamingSupported = !source.disableStream;\n    this._abortController = new AbortController();\n    this._headers = createHeaders(this._stream.httpHeaders);\n    this._headers.append(\"Range\", `bytes=${begin}-${end - 1}`);\n    const url = source.url;\n    fetch(url, createFetchOptions(this._headers, this._withCredentials, this._abortController)).then(response => {\n      if (!(0, _network_utils.validateResponseStatus)(response.status)) {\n        throw (0, _network_utils.createResponseStatusError)(response.status, url);\n      }\n      this._readCapability.resolve();\n      this._reader = response.body.getReader();\n    }).catch(this._readCapability.reject);\n    this.onProgress = null;\n  }\n  get isStreamingSupported() {\n    return this._isStreamingSupported;\n  }\n  async read() {\n    await this._readCapability.promise;\n    const {\n      value,\n      done\n    } = await this._reader.read();\n    if (done) {\n      return {\n        value,\n        done\n      };\n    }\n    this._loaded += value.byteLength;\n    this.onProgress?.({\n      loaded: this._loaded\n    });\n    return {\n      value: getArrayBuffer(value),\n      done: false\n    };\n  }\n  cancel(reason) {\n    this._reader?.cancel(reason);\n    this._abortController.abort();\n  }\n}\n\n/***/ }),\n/* 20 */\n/***/ ((__unused_webpack_module, exports, __w_pdfjs_require__) => {\n\n\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.createResponseStatusError = createResponseStatusError;\nexports.extractFilenameFromHeader = extractFilenameFromHeader;\nexports.validateRangeRequestCapabilities = validateRangeRequestCapabilities;\nexports.validateResponseStatus = validateResponseStatus;\nvar _util = __w_pdfjs_require__(1);\nvar _content_disposition = __w_pdfjs_require__(21);\nvar _display_utils = __w_pdfjs_require__(6);\nfunction validateRangeRequestCapabilities({\n  getResponseHeader,\n  isHttp,\n  rangeChunkSize,\n  disableRange\n}) {\n  const returnValues = {\n    allowRangeRequests: false,\n    suggestedLength: undefined\n  };\n  const length = parseInt(getResponseHeader(\"Content-Length\"), 10);\n  if (!Number.isInteger(length)) {\n    return returnValues;\n  }\n  returnValues.suggestedLength = length;\n  if (length <= 2 * rangeChunkSize) {\n    return returnValues;\n  }\n  if (disableRange || !isHttp) {\n    return returnValues;\n  }\n  if (getResponseHeader(\"Accept-Ranges\") !== \"bytes\") {\n    return returnValues;\n  }\n  const contentEncoding = getResponseHeader(\"Content-Encoding\") || \"identity\";\n  if (contentEncoding !== \"identity\") {\n    return returnValues;\n  }\n  returnValues.allowRangeRequests = true;\n  return returnValues;\n}\nfunction extractFilenameFromHeader(getResponseHeader) {\n  const contentDisposition = getResponseHeader(\"Content-Disposition\");\n  if (contentDisposition) {\n    let filename = (0, _content_disposition.getFilenameFromContentDispositionHeader)(contentDisposition);\n    if (filename.includes(\"%\")) {\n      try {\n        filename = decodeURIComponent(filename);\n      } catch {}\n    }\n    if ((0, _display_utils.isPdfFile)(filename)) {\n      return filename;\n    }\n  }\n  return null;\n}\nfunction createResponseStatusError(status, url) {\n  if (status === 404 || status === 0 && url.startsWith(\"file:\")) {\n    return new _util.MissingPDFException('Missing PDF \"' + url + '\".');\n  }\n  return new _util.UnexpectedResponseException(`Unexpected server response (${status}) while retrieving PDF \"${url}\".`, status);\n}\nfunction validateResponseStatus(status) {\n  return status === 200 || status === 206;\n}\n\n/***/ }),\n/* 21 */\n/***/ ((__unused_webpack_module, exports, __w_pdfjs_require__) => {\n\n\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.getFilenameFromContentDispositionHeader = getFilenameFromContentDispositionHeader;\nvar _util = __w_pdfjs_require__(1);\nfunction getFilenameFromContentDispositionHeader(contentDisposition) {\n  let needsEncodingFixup = true;\n  let tmp = toParamRegExp(\"filename\\\\*\", \"i\").exec(contentDisposition);\n  if (tmp) {\n    tmp = tmp[1];\n    let filename = rfc2616unquote(tmp);\n    filename = unescape(filename);\n    filename = rfc5987decode(filename);\n    filename = rfc2047decode(filename);\n    return fixupEncoding(filename);\n  }\n  tmp = rfc2231getparam(contentDisposition);\n  if (tmp) {\n    const filename = rfc2047decode(tmp);\n    return fixupEncoding(filename);\n  }\n  tmp = toParamRegExp(\"filename\", \"i\").exec(contentDisposition);\n  if (tmp) {\n    tmp = tmp[1];\n    let filename = rfc2616unquote(tmp);\n    filename = rfc2047decode(filename);\n    return fixupEncoding(filename);\n  }\n  function toParamRegExp(attributePattern, flags) {\n    return new RegExp(\"(?:^|;)\\\\s*\" + attributePattern + \"\\\\s*=\\\\s*\" + \"(\" + '[^\";\\\\s][^;\\\\s]*' + \"|\" + '\"(?:[^\"\\\\\\\\]|\\\\\\\\\"?)+\"?' + \")\", flags);\n  }\n  function textdecode(encoding, value) {\n    if (encoding) {\n      if (!/^[\\x00-\\xFF]+$/.test(value)) {\n        return value;\n      }\n      try {\n        const decoder = new TextDecoder(encoding, {\n          fatal: true\n        });\n        const buffer = (0, _util.stringToBytes)(value);\n        value = decoder.decode(buffer);\n        needsEncodingFixup = false;\n      } catch {}\n    }\n    return value;\n  }\n  function fixupEncoding(value) {\n    if (needsEncodingFixup && /[\\x80-\\xff]/.test(value)) {\n      value = textdecode(\"utf-8\", value);\n      if (needsEncodingFixup) {\n        value = textdecode(\"iso-8859-1\", value);\n      }\n    }\n    return value;\n  }\n  function rfc2231getparam(contentDispositionStr) {\n    const matches = [];\n    let match;\n    const iter = toParamRegExp(\"filename\\\\*((?!0\\\\d)\\\\d+)(\\\\*?)\", \"ig\");\n    while ((match = iter.exec(contentDispositionStr)) !== null) {\n      let [, n, quot, part] = match;\n      n = parseInt(n, 10);\n      if (n in matches) {\n        if (n === 0) {\n          break;\n        }\n        continue;\n      }\n      matches[n] = [quot, part];\n    }\n    const parts = [];\n    for (let n = 0; n < matches.length; ++n) {\n      if (!(n in matches)) {\n        break;\n      }\n      let [quot, part] = matches[n];\n      part = rfc2616unquote(part);\n      if (quot) {\n        part = unescape(part);\n        if (n === 0) {\n          part = rfc5987decode(part);\n        }\n      }\n      parts.push(part);\n    }\n    return parts.join(\"\");\n  }\n  function rfc2616unquote(value) {\n    if (value.startsWith('\"')) {\n      const parts = value.slice(1).split('\\\\\"');\n      for (let i = 0; i < parts.length; ++i) {\n        const quotindex = parts[i].indexOf('\"');\n        if (quotindex !== -1) {\n          parts[i] = parts[i].slice(0, quotindex);\n          parts.length = i + 1;\n        }\n        parts[i] = parts[i].replaceAll(/\\\\(.)/g, \"$1\");\n      }\n      value = parts.join('\"');\n    }\n    return value;\n  }\n  function rfc5987decode(extvalue) {\n    const encodingend = extvalue.indexOf(\"'\");\n    if (encodingend === -1) {\n      return extvalue;\n    }\n    const encoding = extvalue.slice(0, encodingend);\n    const langvalue = extvalue.slice(encodingend + 1);\n    const value = langvalue.replace(/^[^']*'/, \"\");\n    return textdecode(encoding, value);\n  }\n  function rfc2047decode(value) {\n    if (!value.startsWith(\"=?\") || /[\\x00-\\x19\\x80-\\xff]/.test(value)) {\n      return value;\n    }\n    return value.replaceAll(/=\\?([\\w-]*)\\?([QqBb])\\?((?:[^?]|\\?(?!=))*)\\?=/g, function (matches, charset, encoding, text) {\n      if (encoding === \"q\" || encoding === \"Q\") {\n        text = text.replaceAll(\"_\", \" \");\n        text = text.replaceAll(/=([0-9a-fA-F]{2})/g, function (match, hex) {\n          return String.fromCharCode(parseInt(hex, 16));\n        });\n        return textdecode(charset, text);\n      }\n      try {\n        text = atob(text);\n      } catch {}\n      return textdecode(charset, text);\n    });\n  }\n  return \"\";\n}\n\n/***/ }),\n/* 22 */\n/***/ ((__unused_webpack_module, exports, __w_pdfjs_require__) => {\n\n\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.PDFNetworkStream = void 0;\nvar _util = __w_pdfjs_require__(1);\nvar _network_utils = __w_pdfjs_require__(20);\n;\nconst OK_RESPONSE = 200;\nconst PARTIAL_CONTENT_RESPONSE = 206;\nfunction getArrayBuffer(xhr) {\n  const data = xhr.response;\n  if (typeof data !== \"string\") {\n    return data;\n  }\n  return (0, _util.stringToBytes)(data).buffer;\n}\nclass NetworkManager {\n  constructor(url, args = {}) {\n    this.url = url;\n    this.isHttp = /^https?:/i.test(url);\n    this.httpHeaders = this.isHttp && args.httpHeaders || Object.create(null);\n    this.withCredentials = args.withCredentials || false;\n    this.currXhrId = 0;\n    this.pendingRequests = Object.create(null);\n  }\n  requestRange(begin, end, listeners) {\n    const args = {\n      begin,\n      end\n    };\n    for (const prop in listeners) {\n      args[prop] = listeners[prop];\n    }\n    return this.request(args);\n  }\n  requestFull(listeners) {\n    return this.request(listeners);\n  }\n  request(args) {\n    const xhr = new XMLHttpRequest();\n    const xhrId = this.currXhrId++;\n    const pendingRequest = this.pendingRequests[xhrId] = {\n      xhr\n    };\n    xhr.open(\"GET\", this.url);\n    xhr.withCredentials = this.withCredentials;\n    for (const property in this.httpHeaders) {\n      const value = this.httpHeaders[property];\n      if (value === undefined) {\n        continue;\n      }\n      xhr.setRequestHeader(property, value);\n    }\n    if (this.isHttp && \"begin\" in args && \"end\" in args) {\n      xhr.setRequestHeader(\"Range\", `bytes=${args.begin}-${args.end - 1}`);\n      pendingRequest.expectedStatus = PARTIAL_CONTENT_RESPONSE;\n    } else {\n      pendingRequest.expectedStatus = OK_RESPONSE;\n    }\n    xhr.responseType = \"arraybuffer\";\n    if (args.onError) {\n      xhr.onerror = function (evt) {\n        args.onError(xhr.status);\n      };\n    }\n    xhr.onreadystatechange = this.onStateChange.bind(this, xhrId);\n    xhr.onprogress = this.onProgress.bind(this, xhrId);\n    pendingRequest.onHeadersReceived = args.onHeadersReceived;\n    pendingRequest.onDone = args.onDone;\n    pendingRequest.onError = args.onError;\n    pendingRequest.onProgress = args.onProgress;\n    xhr.send(null);\n    return xhrId;\n  }\n  onProgress(xhrId, evt) {\n    const pendingRequest = this.pendingRequests[xhrId];\n    if (!pendingRequest) {\n      return;\n    }\n    pendingRequest.onProgress?.(evt);\n  }\n  onStateChange(xhrId, evt) {\n    const pendingRequest = this.pendingRequests[xhrId];\n    if (!pendingRequest) {\n      return;\n    }\n    const xhr = pendingRequest.xhr;\n    if (xhr.readyState >= 2 && pendingRequest.onHeadersReceived) {\n      pendingRequest.onHeadersReceived();\n      delete pendingRequest.onHeadersReceived;\n    }\n    if (xhr.readyState !== 4) {\n      return;\n    }\n    if (!(xhrId in this.pendingRequests)) {\n      return;\n    }\n    delete this.pendingRequests[xhrId];\n    if (xhr.status === 0 && this.isHttp) {\n      pendingRequest.onError?.(xhr.status);\n      return;\n    }\n    const xhrStatus = xhr.status || OK_RESPONSE;\n    const ok_response_on_range_request = xhrStatus === OK_RESPONSE && pendingRequest.expectedStatus === PARTIAL_CONTENT_RESPONSE;\n    if (!ok_response_on_range_request && xhrStatus !== pendingRequest.expectedStatus) {\n      pendingRequest.onError?.(xhr.status);\n      return;\n    }\n    const chunk = getArrayBuffer(xhr);\n    if (xhrStatus === PARTIAL_CONTENT_RESPONSE) {\n      const rangeHeader = xhr.getResponseHeader(\"Content-Range\");\n      const matches = /bytes (\\d+)-(\\d+)\\/(\\d+)/.exec(rangeHeader);\n      pendingRequest.onDone({\n        begin: parseInt(matches[1], 10),\n        chunk\n      });\n    } else if (chunk) {\n      pendingRequest.onDone({\n        begin: 0,\n        chunk\n      });\n    } else {\n      pendingRequest.onError?.(xhr.status);\n    }\n  }\n  getRequestXhr(xhrId) {\n    return this.pendingRequests[xhrId].xhr;\n  }\n  isPendingRequest(xhrId) {\n    return xhrId in this.pendingRequests;\n  }\n  abortRequest(xhrId) {\n    const xhr = this.pendingRequests[xhrId].xhr;\n    delete this.pendingRequests[xhrId];\n    xhr.abort();\n  }\n}\nclass PDFNetworkStream {\n  constructor(source) {\n    this._source = source;\n    this._manager = new NetworkManager(source.url, {\n      httpHeaders: source.httpHeaders,\n      withCredentials: source.withCredentials\n    });\n    this._rangeChunkSize = source.rangeChunkSize;\n    this._fullRequestReader = null;\n    this._rangeRequestReaders = [];\n  }\n  _onRangeRequestReaderClosed(reader) {\n    const i = this._rangeRequestReaders.indexOf(reader);\n    if (i >= 0) {\n      this._rangeRequestReaders.splice(i, 1);\n    }\n  }\n  getFullReader() {\n    (0, _util.assert)(!this._fullRequestReader, \"PDFNetworkStream.getFullReader can only be called once.\");\n    this._fullRequestReader = new PDFNetworkStreamFullRequestReader(this._manager, this._source);\n    return this._fullRequestReader;\n  }\n  getRangeReader(begin, end) {\n    const reader = new PDFNetworkStreamRangeRequestReader(this._manager, begin, end);\n    reader.onClosed = this._onRangeRequestReaderClosed.bind(this);\n    this._rangeRequestReaders.push(reader);\n    return reader;\n  }\n  cancelAllRequests(reason) {\n    this._fullRequestReader?.cancel(reason);\n    for (const reader of this._rangeRequestReaders.slice(0)) {\n      reader.cancel(reason);\n    }\n  }\n}\nexports.PDFNetworkStream = PDFNetworkStream;\nclass PDFNetworkStreamFullRequestReader {\n  constructor(manager, source) {\n    this._manager = manager;\n    const args = {\n      onHeadersReceived: this._onHeadersReceived.bind(this),\n      onDone: this._onDone.bind(this),\n      onError: this._onError.bind(this),\n      onProgress: this._onProgress.bind(this)\n    };\n    this._url = source.url;\n    this._fullRequestId = manager.requestFull(args);\n    this._headersReceivedCapability = new _util.PromiseCapability();\n    this._disableRange = source.disableRange || false;\n    this._contentLength = source.length;\n    this._rangeChunkSize = source.rangeChunkSize;\n    if (!this._rangeChunkSize && !this._disableRange) {\n      this._disableRange = true;\n    }\n    this._isStreamingSupported = false;\n    this._isRangeSupported = false;\n    this._cachedChunks = [];\n    this._requests = [];\n    this._done = false;\n    this._storedError = undefined;\n    this._filename = null;\n    this.onProgress = null;\n  }\n  _onHeadersReceived() {\n    const fullRequestXhrId = this._fullRequestId;\n    const fullRequestXhr = this._manager.getRequestXhr(fullRequestXhrId);\n    const getResponseHeader = name => {\n      return fullRequestXhr.getResponseHeader(name);\n    };\n    const {\n      allowRangeRequests,\n      suggestedLength\n    } = (0, _network_utils.validateRangeRequestCapabilities)({\n      getResponseHeader,\n      isHttp: this._manager.isHttp,\n      rangeChunkSize: this._rangeChunkSize,\n      disableRange: this._disableRange\n    });\n    if (allowRangeRequests) {\n      this._isRangeSupported = true;\n    }\n    this._contentLength = suggestedLength || this._contentLength;\n    this._filename = (0, _network_utils.extractFilenameFromHeader)(getResponseHeader);\n    if (this._isRangeSupported) {\n      this._manager.abortRequest(fullRequestXhrId);\n    }\n    this._headersReceivedCapability.resolve();\n  }\n  _onDone(data) {\n    if (data) {\n      if (this._requests.length > 0) {\n        const requestCapability = this._requests.shift();\n        requestCapability.resolve({\n          value: data.chunk,\n          done: false\n        });\n      } else {\n        this._cachedChunks.push(data.chunk);\n      }\n    }\n    this._done = true;\n    if (this._cachedChunks.length > 0) {\n      return;\n    }\n    for (const requestCapability of this._requests) {\n      requestCapability.resolve({\n        value: undefined,\n        done: true\n      });\n    }\n    this._requests.length = 0;\n  }\n  _onError(status) {\n    this._storedError = (0, _network_utils.createResponseStatusError)(status, this._url);\n    this._headersReceivedCapability.reject(this._storedError);\n    for (const requestCapability of this._requests) {\n      requestCapability.reject(this._storedError);\n    }\n    this._requests.length = 0;\n    this._cachedChunks.length = 0;\n  }\n  _onProgress(evt) {\n    this.onProgress?.({\n      loaded: evt.loaded,\n      total: evt.lengthComputable ? evt.total : this._contentLength\n    });\n  }\n  get filename() {\n    return this._filename;\n  }\n  get isRangeSupported() {\n    return this._isRangeSupported;\n  }\n  get isStreamingSupported() {\n    return this._isStreamingSupported;\n  }\n  get contentLength() {\n    return this._contentLength;\n  }\n  get headersReady() {\n    return this._headersReceivedCapability.promise;\n  }\n  async read() {\n    if (this._storedError) {\n      throw this._storedError;\n    }\n    if (this._cachedChunks.length > 0) {\n      const chunk = this._cachedChunks.shift();\n      return {\n        value: chunk,\n        done: false\n      };\n    }\n    if (this._done) {\n      return {\n        value: undefined,\n        done: true\n      };\n    }\n    const requestCapability = new _util.PromiseCapability();\n    this._requests.push(requestCapability);\n    return requestCapability.promise;\n  }\n  cancel(reason) {\n    this._done = true;\n    this._headersReceivedCapability.reject(reason);\n    for (const requestCapability of this._requests) {\n      requestCapability.resolve({\n        value: undefined,\n        done: true\n      });\n    }\n    this._requests.length = 0;\n    if (this._manager.isPendingRequest(this._fullRequestId)) {\n      this._manager.abortRequest(this._fullRequestId);\n    }\n    this._fullRequestReader = null;\n  }\n}\nclass PDFNetworkStreamRangeRequestReader {\n  constructor(manager, begin, end) {\n    this._manager = manager;\n    const args = {\n      onDone: this._onDone.bind(this),\n      onError: this._onError.bind(this),\n      onProgress: this._onProgress.bind(this)\n    };\n    this._url = manager.url;\n    this._requestId = manager.requestRange(begin, end, args);\n    this._requests = [];\n    this._queuedChunk = null;\n    this._done = false;\n    this._storedError = undefined;\n    this.onProgress = null;\n    this.onClosed = null;\n  }\n  _close() {\n    this.onClosed?.(this);\n  }\n  _onDone(data) {\n    const chunk = data.chunk;\n    if (this._requests.length > 0) {\n      const requestCapability = this._requests.shift();\n      requestCapability.resolve({\n        value: chunk,\n        done: false\n      });\n    } else {\n      this._queuedChunk = chunk;\n    }\n    this._done = true;\n    for (const requestCapability of this._requests) {\n      requestCapability.resolve({\n        value: undefined,\n        done: true\n      });\n    }\n    this._requests.length = 0;\n    this._close();\n  }\n  _onError(status) {\n    this._storedError = (0, _network_utils.createResponseStatusError)(status, this._url);\n    for (const requestCapability of this._requests) {\n      requestCapability.reject(this._storedError);\n    }\n    this._requests.length = 0;\n    this._queuedChunk = null;\n  }\n  _onProgress(evt) {\n    if (!this.isStreamingSupported) {\n      this.onProgress?.({\n        loaded: evt.loaded\n      });\n    }\n  }\n  get isStreamingSupported() {\n    return false;\n  }\n  async read() {\n    if (this._storedError) {\n      throw this._storedError;\n    }\n    if (this._queuedChunk !== null) {\n      const chunk = this._queuedChunk;\n      this._queuedChunk = null;\n      return {\n        value: chunk,\n        done: false\n      };\n    }\n    if (this._done) {\n      return {\n        value: undefined,\n        done: true\n      };\n    }\n    const requestCapability = new _util.PromiseCapability();\n    this._requests.push(requestCapability);\n    return requestCapability.promise;\n  }\n  cancel(reason) {\n    this._done = true;\n    for (const requestCapability of this._requests) {\n      requestCapability.resolve({\n        value: undefined,\n        done: true\n      });\n    }\n    this._requests.length = 0;\n    if (this._manager.isPendingRequest(this._requestId)) {\n      this._manager.abortRequest(this._requestId);\n    }\n    this._close();\n  }\n}\n\n/***/ }),\n/* 23 */\n/***/ ((__unused_webpack_module, exports, __w_pdfjs_require__) => {\n\n\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.PDFNodeStream = void 0;\nvar _util = __w_pdfjs_require__(1);\nvar _network_utils = __w_pdfjs_require__(20);\n;\nconst fileUriRegex = /^file:\\/\\/\\/[a-zA-Z]:\\//;\nfunction parseUrl(sourceUrl) {\n  const url = require(\"url\");\n  const parsedUrl = url.parse(sourceUrl);\n  if (parsedUrl.protocol === \"file:\" || parsedUrl.host) {\n    return parsedUrl;\n  }\n  if (/^[a-z]:[/\\\\]/i.test(sourceUrl)) {\n    return url.parse(`file:///${sourceUrl}`);\n  }\n  if (!parsedUrl.host) {\n    parsedUrl.protocol = \"file:\";\n  }\n  return parsedUrl;\n}\nclass PDFNodeStream {\n  constructor(source) {\n    this.source = source;\n    this.url = parseUrl(source.url);\n    this.isHttp = this.url.protocol === \"http:\" || this.url.protocol === \"https:\";\n    this.isFsUrl = this.url.protocol === \"file:\";\n    this.httpHeaders = this.isHttp && source.httpHeaders || {};\n    this._fullRequestReader = null;\n    this._rangeRequestReaders = [];\n  }\n  get _progressiveDataLength() {\n    return this._fullRequestReader?._loaded ?? 0;\n  }\n  getFullReader() {\n    (0, _util.assert)(!this._fullRequestReader, \"PDFNodeStream.getFullReader can only be called once.\");\n    this._fullRequestReader = this.isFsUrl ? new PDFNodeStreamFsFullReader(this) : new PDFNodeStreamFullReader(this);\n    return this._fullRequestReader;\n  }\n  getRangeReader(start, end) {\n    if (end <= this._progressiveDataLength) {\n      return null;\n    }\n    const rangeReader = this.isFsUrl ? new PDFNodeStreamFsRangeReader(this, start, end) : new PDFNodeStreamRangeReader(this, start, end);\n    this._rangeRequestReaders.push(rangeReader);\n    return rangeReader;\n  }\n  cancelAllRequests(reason) {\n    this._fullRequestReader?.cancel(reason);\n    for (const reader of this._rangeRequestReaders.slice(0)) {\n      reader.cancel(reason);\n    }\n  }\n}\nexports.PDFNodeStream = PDFNodeStream;\nclass BaseFullReader {\n  constructor(stream) {\n    this._url = stream.url;\n    this._done = false;\n    this._storedError = null;\n    this.onProgress = null;\n    const source = stream.source;\n    this._contentLength = source.length;\n    this._loaded = 0;\n    this._filename = null;\n    this._disableRange = source.disableRange || false;\n    this._rangeChunkSize = source.rangeChunkSize;\n    if (!this._rangeChunkSize && !this._disableRange) {\n      this._disableRange = true;\n    }\n    this._isStreamingSupported = !source.disableStream;\n    this._isRangeSupported = !source.disableRange;\n    this._readableStream = null;\n    this._readCapability = new _util.PromiseCapability();\n    this._headersCapability = new _util.PromiseCapability();\n  }\n  get headersReady() {\n    return this._headersCapability.promise;\n  }\n  get filename() {\n    return this._filename;\n  }\n  get contentLength() {\n    return this._contentLength;\n  }\n  get isRangeSupported() {\n    return this._isRangeSupported;\n  }\n  get isStreamingSupported() {\n    return this._isStreamingSupported;\n  }\n  async read() {\n    await this._readCapability.promise;\n    if (this._done) {\n      return {\n        value: undefined,\n        done: true\n      };\n    }\n    if (this._storedError) {\n      throw this._storedError;\n    }\n    const chunk = this._readableStream.read();\n    if (chunk === null) {\n      this._readCapability = new _util.PromiseCapability();\n      return this.read();\n    }\n    this._loaded += chunk.length;\n    this.onProgress?.({\n      loaded: this._loaded,\n      total: this._contentLength\n    });\n    const buffer = new Uint8Array(chunk).buffer;\n    return {\n      value: buffer,\n      done: false\n    };\n  }\n  cancel(reason) {\n    if (!this._readableStream) {\n      this._error(reason);\n      return;\n    }\n    this._readableStream.destroy(reason);\n  }\n  _error(reason) {\n    this._storedError = reason;\n    this._readCapability.resolve();\n  }\n  _setReadableStream(readableStream) {\n    this._readableStream = readableStream;\n    readableStream.on(\"readable\", () => {\n      this._readCapability.resolve();\n    });\n    readableStream.on(\"end\", () => {\n      readableStream.destroy();\n      this._done = true;\n      this._readCapability.resolve();\n    });\n    readableStream.on(\"error\", reason => {\n      this._error(reason);\n    });\n    if (!this._isStreamingSupported && this._isRangeSupported) {\n      this._error(new _util.AbortException(\"streaming is disabled\"));\n    }\n    if (this._storedError) {\n      this._readableStream.destroy(this._storedError);\n    }\n  }\n}\nclass BaseRangeReader {\n  constructor(stream) {\n    this._url = stream.url;\n    this._done = false;\n    this._storedError = null;\n    this.onProgress = null;\n    this._loaded = 0;\n    this._readableStream = null;\n    this._readCapability = new _util.PromiseCapability();\n    const source = stream.source;\n    this._isStreamingSupported = !source.disableStream;\n  }\n  get isStreamingSupported() {\n    return this._isStreamingSupported;\n  }\n  async read() {\n    await this._readCapability.promise;\n    if (this._done) {\n      return {\n        value: undefined,\n        done: true\n      };\n    }\n    if (this._storedError) {\n      throw this._storedError;\n    }\n    const chunk = this._readableStream.read();\n    if (chunk === null) {\n      this._readCapability = new _util.PromiseCapability();\n      return this.read();\n    }\n    this._loaded += chunk.length;\n    this.onProgress?.({\n      loaded: this._loaded\n    });\n    const buffer = new Uint8Array(chunk).buffer;\n    return {\n      value: buffer,\n      done: false\n    };\n  }\n  cancel(reason) {\n    if (!this._readableStream) {\n      this._error(reason);\n      return;\n    }\n    this._readableStream.destroy(reason);\n  }\n  _error(reason) {\n    this._storedError = reason;\n    this._readCapability.resolve();\n  }\n  _setReadableStream(readableStream) {\n    this._readableStream = readableStream;\n    readableStream.on(\"readable\", () => {\n      this._readCapability.resolve();\n    });\n    readableStream.on(\"end\", () => {\n      readableStream.destroy();\n      this._done = true;\n      this._readCapability.resolve();\n    });\n    readableStream.on(\"error\", reason => {\n      this._error(reason);\n    });\n    if (this._storedError) {\n      this._readableStream.destroy(this._storedError);\n    }\n  }\n}\nfunction createRequestOptions(parsedUrl, headers) {\n  return {\n    protocol: parsedUrl.protocol,\n    auth: parsedUrl.auth,\n    host: parsedUrl.hostname,\n    port: parsedUrl.port,\n    path: parsedUrl.path,\n    method: \"GET\",\n    headers\n  };\n}\nclass PDFNodeStreamFullReader extends BaseFullReader {\n  constructor(stream) {\n    super(stream);\n    const handleResponse = response => {\n      if (response.statusCode === 404) {\n        const error = new _util.MissingPDFException(`Missing PDF \"${this._url}\".`);\n        this._storedError = error;\n        this._headersCapability.reject(error);\n        return;\n      }\n      this._headersCapability.resolve();\n      this._setReadableStream(response);\n      const getResponseHeader = name => {\n        return this._readableStream.headers[name.toLowerCase()];\n      };\n      const {\n        allowRangeRequests,\n        suggestedLength\n      } = (0, _network_utils.validateRangeRequestCapabilities)({\n        getResponseHeader,\n        isHttp: stream.isHttp,\n        rangeChunkSize: this._rangeChunkSize,\n        disableRange: this._disableRange\n      });\n      this._isRangeSupported = allowRangeRequests;\n      this._contentLength = suggestedLength || this._contentLength;\n      this._filename = (0, _network_utils.extractFilenameFromHeader)(getResponseHeader);\n    };\n    this._request = null;\n    if (this._url.protocol === \"http:\") {\n      const http = require(\"http\");\n      this._request = http.request(createRequestOptions(this._url, stream.httpHeaders), handleResponse);\n    } else {\n      const https = require(\"https\");\n      this._request = https.request(createRequestOptions(this._url, stream.httpHeaders), handleResponse);\n    }\n    this._request.on(\"error\", reason => {\n      this._storedError = reason;\n      this._headersCapability.reject(reason);\n    });\n    this._request.end();\n  }\n}\nclass PDFNodeStreamRangeReader extends BaseRangeReader {\n  constructor(stream, start, end) {\n    super(stream);\n    this._httpHeaders = {};\n    for (const property in stream.httpHeaders) {\n      const value = stream.httpHeaders[property];\n      if (value === undefined) {\n        continue;\n      }\n      this._httpHeaders[property] = value;\n    }\n    this._httpHeaders.Range = `bytes=${start}-${end - 1}`;\n    const handleResponse = response => {\n      if (response.statusCode === 404) {\n        const error = new _util.MissingPDFException(`Missing PDF \"${this._url}\".`);\n        this._storedError = error;\n        return;\n      }\n      this._setReadableStream(response);\n    };\n    this._request = null;\n    if (this._url.protocol === \"http:\") {\n      const http = require(\"http\");\n      this._request = http.request(createRequestOptions(this._url, this._httpHeaders), handleResponse);\n    } else {\n      const https = require(\"https\");\n      this._request = https.request(createRequestOptions(this._url, this._httpHeaders), handleResponse);\n    }\n    this._request.on(\"error\", reason => {\n      this._storedError = reason;\n    });\n    this._request.end();\n  }\n}\nclass PDFNodeStreamFsFullReader extends BaseFullReader {\n  constructor(stream) {\n    super(stream);\n    let path = decodeURIComponent(this._url.path);\n    if (fileUriRegex.test(this._url.href)) {\n      path = path.replace(/^\\//, \"\");\n    }\n    const fs = require(\"fs\");\n    fs.lstat(path, (error, stat) => {\n      if (error) {\n        if (error.code === \"ENOENT\") {\n          error = new _util.MissingPDFException(`Missing PDF \"${path}\".`);\n        }\n        this._storedError = error;\n        this._headersCapability.reject(error);\n        return;\n      }\n      this._contentLength = stat.size;\n      this._setReadableStream(fs.createReadStream(path));\n      this._headersCapability.resolve();\n    });\n  }\n}\nclass PDFNodeStreamFsRangeReader extends BaseRangeReader {\n  constructor(stream, start, end) {\n    super(stream);\n    let path = decodeURIComponent(this._url.path);\n    if (fileUriRegex.test(this._url.href)) {\n      path = path.replace(/^\\//, \"\");\n    }\n    const fs = require(\"fs\");\n    this._setReadableStream(fs.createReadStream(path, {\n      start,\n      end: end - 1\n    }));\n  }\n}\n\n/***/ }),\n/* 24 */\n/***/ ((__unused_webpack_module, exports, __w_pdfjs_require__) => {\n\n\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.SVGGraphics = void 0;\nvar _display_utils = __w_pdfjs_require__(6);\nvar _util = __w_pdfjs_require__(1);\n;\nconst SVG_DEFAULTS = {\n  fontStyle: \"normal\",\n  fontWeight: \"normal\",\n  fillColor: \"#000000\"\n};\nconst XML_NS = \"http://www.w3.org/XML/1998/namespace\";\nconst XLINK_NS = \"http://www.w3.org/1999/xlink\";\nconst LINE_CAP_STYLES = [\"butt\", \"round\", \"square\"];\nconst LINE_JOIN_STYLES = [\"miter\", \"round\", \"bevel\"];\nconst createObjectURL = function (data, contentType = \"\", forceDataSchema = false) {\n  if (URL.createObjectURL && typeof Blob !== \"undefined\" && !forceDataSchema) {\n    return URL.createObjectURL(new Blob([data], {\n      type: contentType\n    }));\n  }\n  const digits = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\";\n  let buffer = `data:${contentType};base64,`;\n  for (let i = 0, ii = data.length; i < ii; i += 3) {\n    const b1 = data[i] & 0xff;\n    const b2 = data[i + 1] & 0xff;\n    const b3 = data[i + 2] & 0xff;\n    const d1 = b1 >> 2,\n      d2 = (b1 & 3) << 4 | b2 >> 4;\n    const d3 = i + 1 < ii ? (b2 & 0xf) << 2 | b3 >> 6 : 64;\n    const d4 = i + 2 < ii ? b3 & 0x3f : 64;\n    buffer += digits[d1] + digits[d2] + digits[d3] + digits[d4];\n  }\n  return buffer;\n};\nconst convertImgDataToPng = function () {\n  const PNG_HEADER = new Uint8Array([0x89, 0x50, 0x4e, 0x47, 0x0d, 0x0a, 0x1a, 0x0a]);\n  const CHUNK_WRAPPER_SIZE = 12;\n  const crcTable = new Int32Array(256);\n  for (let i = 0; i < 256; i++) {\n    let c = i;\n    for (let h = 0; h < 8; h++) {\n      c = c & 1 ? 0xedb88320 ^ c >> 1 & 0x7fffffff : c >> 1 & 0x7fffffff;\n    }\n    crcTable[i] = c;\n  }\n  function crc32(data, start, end) {\n    let crc = -1;\n    for (let i = start; i < end; i++) {\n      const a = (crc ^ data[i]) & 0xff;\n      const b = crcTable[a];\n      crc = crc >>> 8 ^ b;\n    }\n    return crc ^ -1;\n  }\n  function writePngChunk(type, body, data, offset) {\n    let p = offset;\n    const len = body.length;\n    data[p] = len >> 24 & 0xff;\n    data[p + 1] = len >> 16 & 0xff;\n    data[p + 2] = len >> 8 & 0xff;\n    data[p + 3] = len & 0xff;\n    p += 4;\n    data[p] = type.charCodeAt(0) & 0xff;\n    data[p + 1] = type.charCodeAt(1) & 0xff;\n    data[p + 2] = type.charCodeAt(2) & 0xff;\n    data[p + 3] = type.charCodeAt(3) & 0xff;\n    p += 4;\n    data.set(body, p);\n    p += body.length;\n    const crc = crc32(data, offset + 4, p);\n    data[p] = crc >> 24 & 0xff;\n    data[p + 1] = crc >> 16 & 0xff;\n    data[p + 2] = crc >> 8 & 0xff;\n    data[p + 3] = crc & 0xff;\n  }\n  function adler32(data, start, end) {\n    let a = 1;\n    let b = 0;\n    for (let i = start; i < end; ++i) {\n      a = (a + (data[i] & 0xff)) % 65521;\n      b = (b + a) % 65521;\n    }\n    return b << 16 | a;\n  }\n  function deflateSync(literals) {\n    if (!_util.isNodeJS) {\n      return deflateSyncUncompressed(literals);\n    }\n    try {\n      const input = parseInt(process.versions.node) >= 8 ? literals : Buffer.from(literals);\n      const output = require(\"zlib\").deflateSync(input, {\n        level: 9\n      });\n      return output instanceof Uint8Array ? output : new Uint8Array(output);\n    } catch (e) {\n      (0, _util.warn)(\"Not compressing PNG because zlib.deflateSync is unavailable: \" + e);\n    }\n    return deflateSyncUncompressed(literals);\n  }\n  function deflateSyncUncompressed(literals) {\n    let len = literals.length;\n    const maxBlockLength = 0xffff;\n    const deflateBlocks = Math.ceil(len / maxBlockLength);\n    const idat = new Uint8Array(2 + len + deflateBlocks * 5 + 4);\n    let pi = 0;\n    idat[pi++] = 0x78;\n    idat[pi++] = 0x9c;\n    let pos = 0;\n    while (len > maxBlockLength) {\n      idat[pi++] = 0x00;\n      idat[pi++] = 0xff;\n      idat[pi++] = 0xff;\n      idat[pi++] = 0x00;\n      idat[pi++] = 0x00;\n      idat.set(literals.subarray(pos, pos + maxBlockLength), pi);\n      pi += maxBlockLength;\n      pos += maxBlockLength;\n      len -= maxBlockLength;\n    }\n    idat[pi++] = 0x01;\n    idat[pi++] = len & 0xff;\n    idat[pi++] = len >> 8 & 0xff;\n    idat[pi++] = ~len & 0xffff & 0xff;\n    idat[pi++] = (~len & 0xffff) >> 8 & 0xff;\n    idat.set(literals.subarray(pos), pi);\n    pi += literals.length - pos;\n    const adler = adler32(literals, 0, literals.length);\n    idat[pi++] = adler >> 24 & 0xff;\n    idat[pi++] = adler >> 16 & 0xff;\n    idat[pi++] = adler >> 8 & 0xff;\n    idat[pi++] = adler & 0xff;\n    return idat;\n  }\n  function encode(imgData, kind, forceDataSchema, isMask) {\n    const width = imgData.width;\n    const height = imgData.height;\n    let bitDepth, colorType, lineSize;\n    const bytes = imgData.data;\n    switch (kind) {\n      case _util.ImageKind.GRAYSCALE_1BPP:\n        colorType = 0;\n        bitDepth = 1;\n        lineSize = width + 7 >> 3;\n        break;\n      case _util.ImageKind.RGB_24BPP:\n        colorType = 2;\n        bitDepth = 8;\n        lineSize = width * 3;\n        break;\n      case _util.ImageKind.RGBA_32BPP:\n        colorType = 6;\n        bitDepth = 8;\n        lineSize = width * 4;\n        break;\n      default:\n        throw new Error(\"invalid format\");\n    }\n    const literals = new Uint8Array((1 + lineSize) * height);\n    let offsetLiterals = 0,\n      offsetBytes = 0;\n    for (let y = 0; y < height; ++y) {\n      literals[offsetLiterals++] = 0;\n      literals.set(bytes.subarray(offsetBytes, offsetBytes + lineSize), offsetLiterals);\n      offsetBytes += lineSize;\n      offsetLiterals += lineSize;\n    }\n    if (kind === _util.ImageKind.GRAYSCALE_1BPP && isMask) {\n      offsetLiterals = 0;\n      for (let y = 0; y < height; y++) {\n        offsetLiterals++;\n        for (let i = 0; i < lineSize; i++) {\n          literals[offsetLiterals++] ^= 0xff;\n        }\n      }\n    }\n    const ihdr = new Uint8Array([width >> 24 & 0xff, width >> 16 & 0xff, width >> 8 & 0xff, width & 0xff, height >> 24 & 0xff, height >> 16 & 0xff, height >> 8 & 0xff, height & 0xff, bitDepth, colorType, 0x00, 0x00, 0x00]);\n    const idat = deflateSync(literals);\n    const pngLength = PNG_HEADER.length + CHUNK_WRAPPER_SIZE * 3 + ihdr.length + idat.length;\n    const data = new Uint8Array(pngLength);\n    let offset = 0;\n    data.set(PNG_HEADER, offset);\n    offset += PNG_HEADER.length;\n    writePngChunk(\"IHDR\", ihdr, data, offset);\n    offset += CHUNK_WRAPPER_SIZE + ihdr.length;\n    writePngChunk(\"IDATA\", idat, data, offset);\n    offset += CHUNK_WRAPPER_SIZE + idat.length;\n    writePngChunk(\"IEND\", new Uint8Array(0), data, offset);\n    return createObjectURL(data, \"image/png\", forceDataSchema);\n  }\n  return function convertImgDataToPng(imgData, forceDataSchema, isMask) {\n    const kind = imgData.kind === undefined ? _util.ImageKind.GRAYSCALE_1BPP : imgData.kind;\n    return encode(imgData, kind, forceDataSchema, isMask);\n  };\n}();\nclass SVGExtraState {\n  constructor() {\n    this.fontSizeScale = 1;\n    this.fontWeight = SVG_DEFAULTS.fontWeight;\n    this.fontSize = 0;\n    this.textMatrix = _util.IDENTITY_MATRIX;\n    this.fontMatrix = _util.FONT_IDENTITY_MATRIX;\n    this.leading = 0;\n    this.textRenderingMode = _util.TextRenderingMode.FILL;\n    this.textMatrixScale = 1;\n    this.x = 0;\n    this.y = 0;\n    this.lineX = 0;\n    this.lineY = 0;\n    this.charSpacing = 0;\n    this.wordSpacing = 0;\n    this.textHScale = 1;\n    this.textRise = 0;\n    this.fillColor = SVG_DEFAULTS.fillColor;\n    this.strokeColor = \"#000000\";\n    this.fillAlpha = 1;\n    this.strokeAlpha = 1;\n    this.lineWidth = 1;\n    this.lineJoin = \"\";\n    this.lineCap = \"\";\n    this.miterLimit = 0;\n    this.dashArray = [];\n    this.dashPhase = 0;\n    this.dependencies = [];\n    this.activeClipUrl = null;\n    this.clipGroup = null;\n    this.maskId = \"\";\n  }\n  clone() {\n    return Object.create(this);\n  }\n  setCurrentPoint(x, y) {\n    this.x = x;\n    this.y = y;\n  }\n}\nfunction opListToTree(opList) {\n  let opTree = [];\n  const tmp = [];\n  for (const opListElement of opList) {\n    if (opListElement.fn === \"save\") {\n      opTree.push({\n        fnId: 92,\n        fn: \"group\",\n        items: []\n      });\n      tmp.push(opTree);\n      opTree = opTree.at(-1).items;\n      continue;\n    }\n    if (opListElement.fn === \"restore\") {\n      opTree = tmp.pop();\n    } else {\n      opTree.push(opListElement);\n    }\n  }\n  return opTree;\n}\nfunction pf(value) {\n  if (Number.isInteger(value)) {\n    return value.toString();\n  }\n  const s = value.toFixed(10);\n  let i = s.length - 1;\n  if (s[i] !== \"0\") {\n    return s;\n  }\n  do {\n    i--;\n  } while (s[i] === \"0\");\n  return s.substring(0, s[i] === \".\" ? i : i + 1);\n}\nfunction pm(m) {\n  if (m[4] === 0 && m[5] === 0) {\n    if (m[1] === 0 && m[2] === 0) {\n      if (m[0] === 1 && m[3] === 1) {\n        return \"\";\n      }\n      return `scale(${pf(m[0])} ${pf(m[3])})`;\n    }\n    if (m[0] === m[3] && m[1] === -m[2]) {\n      const a = Math.acos(m[0]) * 180 / Math.PI;\n      return `rotate(${pf(a)})`;\n    }\n  } else if (m[0] === 1 && m[1] === 0 && m[2] === 0 && m[3] === 1) {\n    return `translate(${pf(m[4])} ${pf(m[5])})`;\n  }\n  return `matrix(${pf(m[0])} ${pf(m[1])} ${pf(m[2])} ${pf(m[3])} ${pf(m[4])} ` + `${pf(m[5])})`;\n}\nlet clipCount = 0;\nlet maskCount = 0;\nlet shadingCount = 0;\nclass SVGGraphics {\n  constructor(commonObjs, objs, forceDataSchema = false) {\n    (0, _display_utils.deprecated)(\"The SVG back-end is no longer maintained and *may* be removed in the future.\");\n    this.svgFactory = new _display_utils.DOMSVGFactory();\n    this.current = new SVGExtraState();\n    this.transformMatrix = _util.IDENTITY_MATRIX;\n    this.transformStack = [];\n    this.extraStack = [];\n    this.commonObjs = commonObjs;\n    this.objs = objs;\n    this.pendingClip = null;\n    this.pendingEOFill = false;\n    this.embedFonts = false;\n    this.embeddedFonts = Object.create(null);\n    this.cssStyle = null;\n    this.forceDataSchema = !!forceDataSchema;\n    this._operatorIdMapping = [];\n    for (const op in _util.OPS) {\n      this._operatorIdMapping[_util.OPS[op]] = op;\n    }\n  }\n  getObject(data, fallback = null) {\n    if (typeof data === \"string\") {\n      return data.startsWith(\"g_\") ? this.commonObjs.get(data) : this.objs.get(data);\n    }\n    return fallback;\n  }\n  save() {\n    this.transformStack.push(this.transformMatrix);\n    const old = this.current;\n    this.extraStack.push(old);\n    this.current = old.clone();\n  }\n  restore() {\n    this.transformMatrix = this.transformStack.pop();\n    this.current = this.extraStack.pop();\n    this.pendingClip = null;\n    this.tgrp = null;\n  }\n  group(items) {\n    this.save();\n    this.executeOpTree(items);\n    this.restore();\n  }\n  loadDependencies(operatorList) {\n    const fnArray = operatorList.fnArray;\n    const argsArray = operatorList.argsArray;\n    for (let i = 0, ii = fnArray.length; i < ii; i++) {\n      if (fnArray[i] !== _util.OPS.dependency) {\n        continue;\n      }\n      for (const obj of argsArray[i]) {\n        const objsPool = obj.startsWith(\"g_\") ? this.commonObjs : this.objs;\n        const promise = new Promise(resolve => {\n          objsPool.get(obj, resolve);\n        });\n        this.current.dependencies.push(promise);\n      }\n    }\n    return Promise.all(this.current.dependencies);\n  }\n  transform(a, b, c, d, e, f) {\n    const transformMatrix = [a, b, c, d, e, f];\n    this.transformMatrix = _util.Util.transform(this.transformMatrix, transformMatrix);\n    this.tgrp = null;\n  }\n  getSVG(operatorList, viewport) {\n    this.viewport = viewport;\n    const svgElement = this._initialize(viewport);\n    return this.loadDependencies(operatorList).then(() => {\n      this.transformMatrix = _util.IDENTITY_MATRIX;\n      this.executeOpTree(this.convertOpList(operatorList));\n      return svgElement;\n    });\n  }\n  convertOpList(operatorList) {\n    const operatorIdMapping = this._operatorIdMapping;\n    const argsArray = operatorList.argsArray;\n    const fnArray = operatorList.fnArray;\n    const opList = [];\n    for (let i = 0, ii = fnArray.length; i < ii; i++) {\n      const fnId = fnArray[i];\n      opList.push({\n        fnId,\n        fn: operatorIdMapping[fnId],\n        args: argsArray[i]\n      });\n    }\n    return opListToTree(opList);\n  }\n  executeOpTree(opTree) {\n    for (const opTreeElement of opTree) {\n      const fn = opTreeElement.fn;\n      const fnId = opTreeElement.fnId;\n      const args = opTreeElement.args;\n      switch (fnId | 0) {\n        case _util.OPS.beginText:\n          this.beginText();\n          break;\n        case _util.OPS.dependency:\n          break;\n        case _util.OPS.setLeading:\n          this.setLeading(args);\n          break;\n        case _util.OPS.setLeadingMoveText:\n          this.setLeadingMoveText(args[0], args[1]);\n          break;\n        case _util.OPS.setFont:\n          this.setFont(args);\n          break;\n        case _util.OPS.showText:\n          this.showText(args[0]);\n          break;\n        case _util.OPS.showSpacedText:\n          this.showText(args[0]);\n          break;\n        case _util.OPS.endText:\n          this.endText();\n          break;\n        case _util.OPS.moveText:\n          this.moveText(args[0], args[1]);\n          break;\n        case _util.OPS.setCharSpacing:\n          this.setCharSpacing(args[0]);\n          break;\n        case _util.OPS.setWordSpacing:\n          this.setWordSpacing(args[0]);\n          break;\n        case _util.OPS.setHScale:\n          this.setHScale(args[0]);\n          break;\n        case _util.OPS.setTextMatrix:\n          this.setTextMatrix(args[0], args[1], args[2], args[3], args[4], args[5]);\n          break;\n        case _util.OPS.setTextRise:\n          this.setTextRise(args[0]);\n          break;\n        case _util.OPS.setTextRenderingMode:\n          this.setTextRenderingMode(args[0]);\n          break;\n        case _util.OPS.setLineWidth:\n          this.setLineWidth(args[0]);\n          break;\n        case _util.OPS.setLineJoin:\n          this.setLineJoin(args[0]);\n          break;\n        case _util.OPS.setLineCap:\n          this.setLineCap(args[0]);\n          break;\n        case _util.OPS.setMiterLimit:\n          this.setMiterLimit(args[0]);\n          break;\n        case _util.OPS.setFillRGBColor:\n          this.setFillRGBColor(args[0], args[1], args[2]);\n          break;\n        case _util.OPS.setStrokeRGBColor:\n          this.setStrokeRGBColor(args[0], args[1], args[2]);\n          break;\n        case _util.OPS.setStrokeColorN:\n          this.setStrokeColorN(args);\n          break;\n        case _util.OPS.setFillColorN:\n          this.setFillColorN(args);\n          break;\n        case _util.OPS.shadingFill:\n          this.shadingFill(args[0]);\n          break;\n        case _util.OPS.setDash:\n          this.setDash(args[0], args[1]);\n          break;\n        case _util.OPS.setRenderingIntent:\n          this.setRenderingIntent(args[0]);\n          break;\n        case _util.OPS.setFlatness:\n          this.setFlatness(args[0]);\n          break;\n        case _util.OPS.setGState:\n          this.setGState(args[0]);\n          break;\n        case _util.OPS.fill:\n          this.fill();\n          break;\n        case _util.OPS.eoFill:\n          this.eoFill();\n          break;\n        case _util.OPS.stroke:\n          this.stroke();\n          break;\n        case _util.OPS.fillStroke:\n          this.fillStroke();\n          break;\n        case _util.OPS.eoFillStroke:\n          this.eoFillStroke();\n          break;\n        case _util.OPS.clip:\n          this.clip(\"nonzero\");\n          break;\n        case _util.OPS.eoClip:\n          this.clip(\"evenodd\");\n          break;\n        case _util.OPS.paintSolidColorImageMask:\n          this.paintSolidColorImageMask();\n          break;\n        case _util.OPS.paintImageXObject:\n          this.paintImageXObject(args[0]);\n          break;\n        case _util.OPS.paintInlineImageXObject:\n          this.paintInlineImageXObject(args[0]);\n          break;\n        case _util.OPS.paintImageMaskXObject:\n          this.paintImageMaskXObject(args[0]);\n          break;\n        case _util.OPS.paintFormXObjectBegin:\n          this.paintFormXObjectBegin(args[0], args[1]);\n          break;\n        case _util.OPS.paintFormXObjectEnd:\n          this.paintFormXObjectEnd();\n          break;\n        case _util.OPS.closePath:\n          this.closePath();\n          break;\n        case _util.OPS.closeStroke:\n          this.closeStroke();\n          break;\n        case _util.OPS.closeFillStroke:\n          this.closeFillStroke();\n          break;\n        case _util.OPS.closeEOFillStroke:\n          this.closeEOFillStroke();\n          break;\n        case _util.OPS.nextLine:\n          this.nextLine();\n          break;\n        case _util.OPS.transform:\n          this.transform(args[0], args[1], args[2], args[3], args[4], args[5]);\n          break;\n        case _util.OPS.constructPath:\n          this.constructPath(args[0], args[1]);\n          break;\n        case _util.OPS.endPath:\n          this.endPath();\n          break;\n        case 92:\n          this.group(opTreeElement.items);\n          break;\n        default:\n          (0, _util.warn)(`Unimplemented operator ${fn}`);\n          break;\n      }\n    }\n  }\n  setWordSpacing(wordSpacing) {\n    this.current.wordSpacing = wordSpacing;\n  }\n  setCharSpacing(charSpacing) {\n    this.current.charSpacing = charSpacing;\n  }\n  nextLine() {\n    this.moveText(0, this.current.leading);\n  }\n  setTextMatrix(a, b, c, d, e, f) {\n    const current = this.current;\n    current.textMatrix = current.lineMatrix = [a, b, c, d, e, f];\n    current.textMatrixScale = Math.hypot(a, b);\n    current.x = current.lineX = 0;\n    current.y = current.lineY = 0;\n    current.xcoords = [];\n    current.ycoords = [];\n    current.tspan = this.svgFactory.createElement(\"svg:tspan\");\n    current.tspan.setAttributeNS(null, \"font-family\", current.fontFamily);\n    current.tspan.setAttributeNS(null, \"font-size\", `${pf(current.fontSize)}px`);\n    current.tspan.setAttributeNS(null, \"y\", pf(-current.y));\n    current.txtElement = this.svgFactory.createElement(\"svg:text\");\n    current.txtElement.append(current.tspan);\n  }\n  beginText() {\n    const current = this.current;\n    current.x = current.lineX = 0;\n    current.y = current.lineY = 0;\n    current.textMatrix = _util.IDENTITY_MATRIX;\n    current.lineMatrix = _util.IDENTITY_MATRIX;\n    current.textMatrixScale = 1;\n    current.tspan = this.svgFactory.createElement(\"svg:tspan\");\n    current.txtElement = this.svgFactory.createElement(\"svg:text\");\n    current.txtgrp = this.svgFactory.createElement(\"svg:g\");\n    current.xcoords = [];\n    current.ycoords = [];\n  }\n  moveText(x, y) {\n    const current = this.current;\n    current.x = current.lineX += x;\n    current.y = current.lineY += y;\n    current.xcoords = [];\n    current.ycoords = [];\n    current.tspan = this.svgFactory.createElement(\"svg:tspan\");\n    current.tspan.setAttributeNS(null, \"font-family\", current.fontFamily);\n    current.tspan.setAttributeNS(null, \"font-size\", `${pf(current.fontSize)}px`);\n    current.tspan.setAttributeNS(null, \"y\", pf(-current.y));\n  }\n  showText(glyphs) {\n    const current = this.current;\n    const font = current.font;\n    const fontSize = current.fontSize;\n    if (fontSize === 0) {\n      return;\n    }\n    const fontSizeScale = current.fontSizeScale;\n    const charSpacing = current.charSpacing;\n    const wordSpacing = current.wordSpacing;\n    const fontDirection = current.fontDirection;\n    const textHScale = current.textHScale * fontDirection;\n    const vertical = font.vertical;\n    const spacingDir = vertical ? 1 : -1;\n    const defaultVMetrics = font.defaultVMetrics;\n    const widthAdvanceScale = fontSize * current.fontMatrix[0];\n    let x = 0;\n    for (const glyph of glyphs) {\n      if (glyph === null) {\n        x += fontDirection * wordSpacing;\n        continue;\n      } else if (typeof glyph === \"number\") {\n        x += spacingDir * glyph * fontSize / 1000;\n        continue;\n      }\n      const spacing = (glyph.isSpace ? wordSpacing : 0) + charSpacing;\n      const character = glyph.fontChar;\n      let scaledX, scaledY;\n      let width = glyph.width;\n      if (vertical) {\n        let vx;\n        const vmetric = glyph.vmetric || defaultVMetrics;\n        vx = glyph.vmetric ? vmetric[1] : width * 0.5;\n        vx = -vx * widthAdvanceScale;\n        const vy = vmetric[2] * widthAdvanceScale;\n        width = vmetric ? -vmetric[0] : width;\n        scaledX = vx / fontSizeScale;\n        scaledY = (x + vy) / fontSizeScale;\n      } else {\n        scaledX = x / fontSizeScale;\n        scaledY = 0;\n      }\n      if (glyph.isInFont || font.missingFile) {\n        current.xcoords.push(current.x + scaledX);\n        if (vertical) {\n          current.ycoords.push(-current.y + scaledY);\n        }\n        current.tspan.textContent += character;\n      } else {}\n      const charWidth = vertical ? width * widthAdvanceScale - spacing * fontDirection : width * widthAdvanceScale + spacing * fontDirection;\n      x += charWidth;\n    }\n    current.tspan.setAttributeNS(null, \"x\", current.xcoords.map(pf).join(\" \"));\n    if (vertical) {\n      current.tspan.setAttributeNS(null, \"y\", current.ycoords.map(pf).join(\" \"));\n    } else {\n      current.tspan.setAttributeNS(null, \"y\", pf(-current.y));\n    }\n    if (vertical) {\n      current.y -= x;\n    } else {\n      current.x += x * textHScale;\n    }\n    current.tspan.setAttributeNS(null, \"font-family\", current.fontFamily);\n    current.tspan.setAttributeNS(null, \"font-size\", `${pf(current.fontSize)}px`);\n    if (current.fontStyle !== SVG_DEFAULTS.fontStyle) {\n      current.tspan.setAttributeNS(null, \"font-style\", current.fontStyle);\n    }\n    if (current.fontWeight !== SVG_DEFAULTS.fontWeight) {\n      current.tspan.setAttributeNS(null, \"font-weight\", current.fontWeight);\n    }\n    const fillStrokeMode = current.textRenderingMode & _util.TextRenderingMode.FILL_STROKE_MASK;\n    if (fillStrokeMode === _util.TextRenderingMode.FILL || fillStrokeMode === _util.TextRenderingMode.FILL_STROKE) {\n      if (current.fillColor !== SVG_DEFAULTS.fillColor) {\n        current.tspan.setAttributeNS(null, \"fill\", current.fillColor);\n      }\n      if (current.fillAlpha < 1) {\n        current.tspan.setAttributeNS(null, \"fill-opacity\", current.fillAlpha);\n      }\n    } else if (current.textRenderingMode === _util.TextRenderingMode.ADD_TO_PATH) {\n      current.tspan.setAttributeNS(null, \"fill\", \"transparent\");\n    } else {\n      current.tspan.setAttributeNS(null, \"fill\", \"none\");\n    }\n    if (fillStrokeMode === _util.TextRenderingMode.STROKE || fillStrokeMode === _util.TextRenderingMode.FILL_STROKE) {\n      const lineWidthScale = 1 / (current.textMatrixScale || 1);\n      this._setStrokeAttributes(current.tspan, lineWidthScale);\n    }\n    let textMatrix = current.textMatrix;\n    if (current.textRise !== 0) {\n      textMatrix = textMatrix.slice();\n      textMatrix[5] += current.textRise;\n    }\n    current.txtElement.setAttributeNS(null, \"transform\", `${pm(textMatrix)} scale(${pf(textHScale)}, -1)`);\n    current.txtElement.setAttributeNS(XML_NS, \"xml:space\", \"preserve\");\n    current.txtElement.append(current.tspan);\n    current.txtgrp.append(current.txtElement);\n    this._ensureTransformGroup().append(current.txtElement);\n  }\n  setLeadingMoveText(x, y) {\n    this.setLeading(-y);\n    this.moveText(x, y);\n  }\n  addFontStyle(fontObj) {\n    if (!fontObj.data) {\n      throw new Error(\"addFontStyle: No font data available, \" + 'ensure that the \"fontExtraProperties\" API parameter is set.');\n    }\n    if (!this.cssStyle) {\n      this.cssStyle = this.svgFactory.createElement(\"svg:style\");\n      this.cssStyle.setAttributeNS(null, \"type\", \"text/css\");\n      this.defs.append(this.cssStyle);\n    }\n    const url = createObjectURL(fontObj.data, fontObj.mimetype, this.forceDataSchema);\n    this.cssStyle.textContent += `@font-face { font-family: \"${fontObj.loadedName}\";` + ` src: url(${url}); }\\n`;\n  }\n  setFont(details) {\n    const current = this.current;\n    const fontObj = this.commonObjs.get(details[0]);\n    let size = details[1];\n    current.font = fontObj;\n    if (this.embedFonts && !fontObj.missingFile && !this.embeddedFonts[fontObj.loadedName]) {\n      this.addFontStyle(fontObj);\n      this.embeddedFonts[fontObj.loadedName] = fontObj;\n    }\n    current.fontMatrix = fontObj.fontMatrix || _util.FONT_IDENTITY_MATRIX;\n    let bold = \"normal\";\n    if (fontObj.black) {\n      bold = \"900\";\n    } else if (fontObj.bold) {\n      bold = \"bold\";\n    }\n    const italic = fontObj.italic ? \"italic\" : \"normal\";\n    if (size < 0) {\n      size = -size;\n      current.fontDirection = -1;\n    } else {\n      current.fontDirection = 1;\n    }\n    current.fontSize = size;\n    current.fontFamily = fontObj.loadedName;\n    current.fontWeight = bold;\n    current.fontStyle = italic;\n    current.tspan = this.svgFactory.createElement(\"svg:tspan\");\n    current.tspan.setAttributeNS(null, \"y\", pf(-current.y));\n    current.xcoords = [];\n    current.ycoords = [];\n  }\n  endText() {\n    const current = this.current;\n    if (current.textRenderingMode & _util.TextRenderingMode.ADD_TO_PATH_FLAG && current.txtElement?.hasChildNodes()) {\n      current.element = current.txtElement;\n      this.clip(\"nonzero\");\n      this.endPath();\n    }\n  }\n  setLineWidth(width) {\n    if (width > 0) {\n      this.current.lineWidth = width;\n    }\n  }\n  setLineCap(style) {\n    this.current.lineCap = LINE_CAP_STYLES[style];\n  }\n  setLineJoin(style) {\n    this.current.lineJoin = LINE_JOIN_STYLES[style];\n  }\n  setMiterLimit(limit) {\n    this.current.miterLimit = limit;\n  }\n  setStrokeAlpha(strokeAlpha) {\n    this.current.strokeAlpha = strokeAlpha;\n  }\n  setStrokeRGBColor(r, g, b) {\n    this.current.strokeColor = _util.Util.makeHexColor(r, g, b);\n  }\n  setFillAlpha(fillAlpha) {\n    this.current.fillAlpha = fillAlpha;\n  }\n  setFillRGBColor(r, g, b) {\n    this.current.fillColor = _util.Util.makeHexColor(r, g, b);\n    this.current.tspan = this.svgFactory.createElement(\"svg:tspan\");\n    this.current.xcoords = [];\n    this.current.ycoords = [];\n  }\n  setStrokeColorN(args) {\n    this.current.strokeColor = this._makeColorN_Pattern(args);\n  }\n  setFillColorN(args) {\n    this.current.fillColor = this._makeColorN_Pattern(args);\n  }\n  shadingFill(args) {\n    const {\n      width,\n      height\n    } = this.viewport;\n    const inv = _util.Util.inverseTransform(this.transformMatrix);\n    const [x0, y0, x1, y1] = _util.Util.getAxialAlignedBoundingBox([0, 0, width, height], inv);\n    const rect = this.svgFactory.createElement(\"svg:rect\");\n    rect.setAttributeNS(null, \"x\", x0);\n    rect.setAttributeNS(null, \"y\", y0);\n    rect.setAttributeNS(null, \"width\", x1 - x0);\n    rect.setAttributeNS(null, \"height\", y1 - y0);\n    rect.setAttributeNS(null, \"fill\", this._makeShadingPattern(args));\n    if (this.current.fillAlpha < 1) {\n      rect.setAttributeNS(null, \"fill-opacity\", this.current.fillAlpha);\n    }\n    this._ensureTransformGroup().append(rect);\n  }\n  _makeColorN_Pattern(args) {\n    if (args[0] === \"TilingPattern\") {\n      return this._makeTilingPattern(args);\n    }\n    return this._makeShadingPattern(args);\n  }\n  _makeTilingPattern(args) {\n    const color = args[1];\n    const operatorList = args[2];\n    const matrix = args[3] || _util.IDENTITY_MATRIX;\n    const [x0, y0, x1, y1] = args[4];\n    const xstep = args[5];\n    const ystep = args[6];\n    const paintType = args[7];\n    const tilingId = `shading${shadingCount++}`;\n    const [tx0, ty0, tx1, ty1] = _util.Util.normalizeRect([..._util.Util.applyTransform([x0, y0], matrix), ..._util.Util.applyTransform([x1, y1], matrix)]);\n    const [xscale, yscale] = _util.Util.singularValueDecompose2dScale(matrix);\n    const txstep = xstep * xscale;\n    const tystep = ystep * yscale;\n    const tiling = this.svgFactory.createElement(\"svg:pattern\");\n    tiling.setAttributeNS(null, \"id\", tilingId);\n    tiling.setAttributeNS(null, \"patternUnits\", \"userSpaceOnUse\");\n    tiling.setAttributeNS(null, \"width\", txstep);\n    tiling.setAttributeNS(null, \"height\", tystep);\n    tiling.setAttributeNS(null, \"x\", `${tx0}`);\n    tiling.setAttributeNS(null, \"y\", `${ty0}`);\n    const svg = this.svg;\n    const transformMatrix = this.transformMatrix;\n    const fillColor = this.current.fillColor;\n    const strokeColor = this.current.strokeColor;\n    const bbox = this.svgFactory.create(tx1 - tx0, ty1 - ty0);\n    this.svg = bbox;\n    this.transformMatrix = matrix;\n    if (paintType === 2) {\n      const cssColor = _util.Util.makeHexColor(...color);\n      this.current.fillColor = cssColor;\n      this.current.strokeColor = cssColor;\n    }\n    this.executeOpTree(this.convertOpList(operatorList));\n    this.svg = svg;\n    this.transformMatrix = transformMatrix;\n    this.current.fillColor = fillColor;\n    this.current.strokeColor = strokeColor;\n    tiling.append(bbox.childNodes[0]);\n    this.defs.append(tiling);\n    return `url(#${tilingId})`;\n  }\n  _makeShadingPattern(args) {\n    if (typeof args === \"string\") {\n      args = this.objs.get(args);\n    }\n    switch (args[0]) {\n      case \"RadialAxial\":\n        const shadingId = `shading${shadingCount++}`;\n        const colorStops = args[3];\n        let gradient;\n        switch (args[1]) {\n          case \"axial\":\n            const point0 = args[4];\n            const point1 = args[5];\n            gradient = this.svgFactory.createElement(\"svg:linearGradient\");\n            gradient.setAttributeNS(null, \"id\", shadingId);\n            gradient.setAttributeNS(null, \"gradientUnits\", \"userSpaceOnUse\");\n            gradient.setAttributeNS(null, \"x1\", point0[0]);\n            gradient.setAttributeNS(null, \"y1\", point0[1]);\n            gradient.setAttributeNS(null, \"x2\", point1[0]);\n            gradient.setAttributeNS(null, \"y2\", point1[1]);\n            break;\n          case \"radial\":\n            const focalPoint = args[4];\n            const circlePoint = args[5];\n            const focalRadius = args[6];\n            const circleRadius = args[7];\n            gradient = this.svgFactory.createElement(\"svg:radialGradient\");\n            gradient.setAttributeNS(null, \"id\", shadingId);\n            gradient.setAttributeNS(null, \"gradientUnits\", \"userSpaceOnUse\");\n            gradient.setAttributeNS(null, \"cx\", circlePoint[0]);\n            gradient.setAttributeNS(null, \"cy\", circlePoint[1]);\n            gradient.setAttributeNS(null, \"r\", circleRadius);\n            gradient.setAttributeNS(null, \"fx\", focalPoint[0]);\n            gradient.setAttributeNS(null, \"fy\", focalPoint[1]);\n            gradient.setAttributeNS(null, \"fr\", focalRadius);\n            break;\n          default:\n            throw new Error(`Unknown RadialAxial type: ${args[1]}`);\n        }\n        for (const colorStop of colorStops) {\n          const stop = this.svgFactory.createElement(\"svg:stop\");\n          stop.setAttributeNS(null, \"offset\", colorStop[0]);\n          stop.setAttributeNS(null, \"stop-color\", colorStop[1]);\n          gradient.append(stop);\n        }\n        this.defs.append(gradient);\n        return `url(#${shadingId})`;\n      case \"Mesh\":\n        (0, _util.warn)(\"Unimplemented pattern Mesh\");\n        return null;\n      case \"Dummy\":\n        return \"hotpink\";\n      default:\n        throw new Error(`Unknown IR type: ${args[0]}`);\n    }\n  }\n  setDash(dashArray, dashPhase) {\n    this.current.dashArray = dashArray;\n    this.current.dashPhase = dashPhase;\n  }\n  constructPath(ops, args) {\n    const current = this.current;\n    let x = current.x,\n      y = current.y;\n    let d = [];\n    let j = 0;\n    for (const op of ops) {\n      switch (op | 0) {\n        case _util.OPS.rectangle:\n          x = args[j++];\n          y = args[j++];\n          const width = args[j++];\n          const height = args[j++];\n          const xw = x + width;\n          const yh = y + height;\n          d.push(\"M\", pf(x), pf(y), \"L\", pf(xw), pf(y), \"L\", pf(xw), pf(yh), \"L\", pf(x), pf(yh), \"Z\");\n          break;\n        case _util.OPS.moveTo:\n          x = args[j++];\n          y = args[j++];\n          d.push(\"M\", pf(x), pf(y));\n          break;\n        case _util.OPS.lineTo:\n          x = args[j++];\n          y = args[j++];\n          d.push(\"L\", pf(x), pf(y));\n          break;\n        case _util.OPS.curveTo:\n          x = args[j + 4];\n          y = args[j + 5];\n          d.push(\"C\", pf(args[j]), pf(args[j + 1]), pf(args[j + 2]), pf(args[j + 3]), pf(x), pf(y));\n          j += 6;\n          break;\n        case _util.OPS.curveTo2:\n          d.push(\"C\", pf(x), pf(y), pf(args[j]), pf(args[j + 1]), pf(args[j + 2]), pf(args[j + 3]));\n          x = args[j + 2];\n          y = args[j + 3];\n          j += 4;\n          break;\n        case _util.OPS.curveTo3:\n          x = args[j + 2];\n          y = args[j + 3];\n          d.push(\"C\", pf(args[j]), pf(args[j + 1]), pf(x), pf(y), pf(x), pf(y));\n          j += 4;\n          break;\n        case _util.OPS.closePath:\n          d.push(\"Z\");\n          break;\n      }\n    }\n    d = d.join(\" \");\n    if (current.path && ops.length > 0 && ops[0] !== _util.OPS.rectangle && ops[0] !== _util.OPS.moveTo) {\n      d = current.path.getAttributeNS(null, \"d\") + d;\n    } else {\n      current.path = this.svgFactory.createElement(\"svg:path\");\n      this._ensureTransformGroup().append(current.path);\n    }\n    current.path.setAttributeNS(null, \"d\", d);\n    current.path.setAttributeNS(null, \"fill\", \"none\");\n    current.element = current.path;\n    current.setCurrentPoint(x, y);\n  }\n  endPath() {\n    const current = this.current;\n    current.path = null;\n    if (!this.pendingClip) {\n      return;\n    }\n    if (!current.element) {\n      this.pendingClip = null;\n      return;\n    }\n    const clipId = `clippath${clipCount++}`;\n    const clipPath = this.svgFactory.createElement(\"svg:clipPath\");\n    clipPath.setAttributeNS(null, \"id\", clipId);\n    clipPath.setAttributeNS(null, \"transform\", pm(this.transformMatrix));\n    const clipElement = current.element.cloneNode(true);\n    if (this.pendingClip === \"evenodd\") {\n      clipElement.setAttributeNS(null, \"clip-rule\", \"evenodd\");\n    } else {\n      clipElement.setAttributeNS(null, \"clip-rule\", \"nonzero\");\n    }\n    this.pendingClip = null;\n    clipPath.append(clipElement);\n    this.defs.append(clipPath);\n    if (current.activeClipUrl) {\n      current.clipGroup = null;\n      for (const prev of this.extraStack) {\n        prev.clipGroup = null;\n      }\n      clipPath.setAttributeNS(null, \"clip-path\", current.activeClipUrl);\n    }\n    current.activeClipUrl = `url(#${clipId})`;\n    this.tgrp = null;\n  }\n  clip(type) {\n    this.pendingClip = type;\n  }\n  closePath() {\n    const current = this.current;\n    if (current.path) {\n      const d = `${current.path.getAttributeNS(null, \"d\")}Z`;\n      current.path.setAttributeNS(null, \"d\", d);\n    }\n  }\n  setLeading(leading) {\n    this.current.leading = -leading;\n  }\n  setTextRise(textRise) {\n    this.current.textRise = textRise;\n  }\n  setTextRenderingMode(textRenderingMode) {\n    this.current.textRenderingMode = textRenderingMode;\n  }\n  setHScale(scale) {\n    this.current.textHScale = scale / 100;\n  }\n  setRenderingIntent(intent) {}\n  setFlatness(flatness) {}\n  setGState(states) {\n    for (const [key, value] of states) {\n      switch (key) {\n        case \"LW\":\n          this.setLineWidth(value);\n          break;\n        case \"LC\":\n          this.setLineCap(value);\n          break;\n        case \"LJ\":\n          this.setLineJoin(value);\n          break;\n        case \"ML\":\n          this.setMiterLimit(value);\n          break;\n        case \"D\":\n          this.setDash(value[0], value[1]);\n          break;\n        case \"RI\":\n          this.setRenderingIntent(value);\n          break;\n        case \"FL\":\n          this.setFlatness(value);\n          break;\n        case \"Font\":\n          this.setFont(value);\n          break;\n        case \"CA\":\n          this.setStrokeAlpha(value);\n          break;\n        case \"ca\":\n          this.setFillAlpha(value);\n          break;\n        default:\n          (0, _util.warn)(`Unimplemented graphic state operator ${key}`);\n          break;\n      }\n    }\n  }\n  fill() {\n    const current = this.current;\n    if (current.element) {\n      current.element.setAttributeNS(null, \"fill\", current.fillColor);\n      current.element.setAttributeNS(null, \"fill-opacity\", current.fillAlpha);\n      this.endPath();\n    }\n  }\n  stroke() {\n    const current = this.current;\n    if (current.element) {\n      this._setStrokeAttributes(current.element);\n      current.element.setAttributeNS(null, \"fill\", \"none\");\n      this.endPath();\n    }\n  }\n  _setStrokeAttributes(element, lineWidthScale = 1) {\n    const current = this.current;\n    let dashArray = current.dashArray;\n    if (lineWidthScale !== 1 && dashArray.length > 0) {\n      dashArray = dashArray.map(function (value) {\n        return lineWidthScale * value;\n      });\n    }\n    element.setAttributeNS(null, \"stroke\", current.strokeColor);\n    element.setAttributeNS(null, \"stroke-opacity\", current.strokeAlpha);\n    element.setAttributeNS(null, \"stroke-miterlimit\", pf(current.miterLimit));\n    element.setAttributeNS(null, \"stroke-linecap\", current.lineCap);\n    element.setAttributeNS(null, \"stroke-linejoin\", current.lineJoin);\n    element.setAttributeNS(null, \"stroke-width\", pf(lineWidthScale * current.lineWidth) + \"px\");\n    element.setAttributeNS(null, \"stroke-dasharray\", dashArray.map(pf).join(\" \"));\n    element.setAttributeNS(null, \"stroke-dashoffset\", pf(lineWidthScale * current.dashPhase) + \"px\");\n  }\n  eoFill() {\n    this.current.element?.setAttributeNS(null, \"fill-rule\", \"evenodd\");\n    this.fill();\n  }\n  fillStroke() {\n    this.stroke();\n    this.fill();\n  }\n  eoFillStroke() {\n    this.current.element?.setAttributeNS(null, \"fill-rule\", \"evenodd\");\n    this.fillStroke();\n  }\n  closeStroke() {\n    this.closePath();\n    this.stroke();\n  }\n  closeFillStroke() {\n    this.closePath();\n    this.fillStroke();\n  }\n  closeEOFillStroke() {\n    this.closePath();\n    this.eoFillStroke();\n  }\n  paintSolidColorImageMask() {\n    const rect = this.svgFactory.createElement(\"svg:rect\");\n    rect.setAttributeNS(null, \"x\", \"0\");\n    rect.setAttributeNS(null, \"y\", \"0\");\n    rect.setAttributeNS(null, \"width\", \"1px\");\n    rect.setAttributeNS(null, \"height\", \"1px\");\n    rect.setAttributeNS(null, \"fill\", this.current.fillColor);\n    this._ensureTransformGroup().append(rect);\n  }\n  paintImageXObject(objId) {\n    const imgData = this.getObject(objId);\n    if (!imgData) {\n      (0, _util.warn)(`Dependent image with object ID ${objId} is not ready yet`);\n      return;\n    }\n    this.paintInlineImageXObject(imgData);\n  }\n  paintInlineImageXObject(imgData, mask) {\n    const width = imgData.width;\n    const height = imgData.height;\n    const imgSrc = convertImgDataToPng(imgData, this.forceDataSchema, !!mask);\n    const cliprect = this.svgFactory.createElement(\"svg:rect\");\n    cliprect.setAttributeNS(null, \"x\", \"0\");\n    cliprect.setAttributeNS(null, \"y\", \"0\");\n    cliprect.setAttributeNS(null, \"width\", pf(width));\n    cliprect.setAttributeNS(null, \"height\", pf(height));\n    this.current.element = cliprect;\n    this.clip(\"nonzero\");\n    const imgEl = this.svgFactory.createElement(\"svg:image\");\n    imgEl.setAttributeNS(XLINK_NS, \"xlink:href\", imgSrc);\n    imgEl.setAttributeNS(null, \"x\", \"0\");\n    imgEl.setAttributeNS(null, \"y\", pf(-height));\n    imgEl.setAttributeNS(null, \"width\", pf(width) + \"px\");\n    imgEl.setAttributeNS(null, \"height\", pf(height) + \"px\");\n    imgEl.setAttributeNS(null, \"transform\", `scale(${pf(1 / width)} ${pf(-1 / height)})`);\n    if (mask) {\n      mask.append(imgEl);\n    } else {\n      this._ensureTransformGroup().append(imgEl);\n    }\n  }\n  paintImageMaskXObject(img) {\n    const imgData = this.getObject(img.data, img);\n    if (imgData.bitmap) {\n      (0, _util.warn)(\"paintImageMaskXObject: ImageBitmap support is not implemented, \" + \"ensure that the `isOffscreenCanvasSupported` API parameter is disabled.\");\n      return;\n    }\n    const current = this.current;\n    const width = imgData.width;\n    const height = imgData.height;\n    const fillColor = current.fillColor;\n    current.maskId = `mask${maskCount++}`;\n    const mask = this.svgFactory.createElement(\"svg:mask\");\n    mask.setAttributeNS(null, \"id\", current.maskId);\n    const rect = this.svgFactory.createElement(\"svg:rect\");\n    rect.setAttributeNS(null, \"x\", \"0\");\n    rect.setAttributeNS(null, \"y\", \"0\");\n    rect.setAttributeNS(null, \"width\", pf(width));\n    rect.setAttributeNS(null, \"height\", pf(height));\n    rect.setAttributeNS(null, \"fill\", fillColor);\n    rect.setAttributeNS(null, \"mask\", `url(#${current.maskId})`);\n    this.defs.append(mask);\n    this._ensureTransformGroup().append(rect);\n    this.paintInlineImageXObject(imgData, mask);\n  }\n  paintFormXObjectBegin(matrix, bbox) {\n    if (Array.isArray(matrix) && matrix.length === 6) {\n      this.transform(matrix[0], matrix[1], matrix[2], matrix[3], matrix[4], matrix[5]);\n    }\n    if (bbox) {\n      const width = bbox[2] - bbox[0];\n      const height = bbox[3] - bbox[1];\n      const cliprect = this.svgFactory.createElement(\"svg:rect\");\n      cliprect.setAttributeNS(null, \"x\", bbox[0]);\n      cliprect.setAttributeNS(null, \"y\", bbox[1]);\n      cliprect.setAttributeNS(null, \"width\", pf(width));\n      cliprect.setAttributeNS(null, \"height\", pf(height));\n      this.current.element = cliprect;\n      this.clip(\"nonzero\");\n      this.endPath();\n    }\n  }\n  paintFormXObjectEnd() {}\n  _initialize(viewport) {\n    const svg = this.svgFactory.create(viewport.width, viewport.height);\n    const definitions = this.svgFactory.createElement(\"svg:defs\");\n    svg.append(definitions);\n    this.defs = definitions;\n    const rootGroup = this.svgFactory.createElement(\"svg:g\");\n    rootGroup.setAttributeNS(null, \"transform\", pm(viewport.transform));\n    svg.append(rootGroup);\n    this.svg = rootGroup;\n    return svg;\n  }\n  _ensureClipGroup() {\n    if (!this.current.clipGroup) {\n      const clipGroup = this.svgFactory.createElement(\"svg:g\");\n      clipGroup.setAttributeNS(null, \"clip-path\", this.current.activeClipUrl);\n      this.svg.append(clipGroup);\n      this.current.clipGroup = clipGroup;\n    }\n    return this.current.clipGroup;\n  }\n  _ensureTransformGroup() {\n    if (!this.tgrp) {\n      this.tgrp = this.svgFactory.createElement(\"svg:g\");\n      this.tgrp.setAttributeNS(null, \"transform\", pm(this.transformMatrix));\n      if (this.current.activeClipUrl) {\n        this._ensureClipGroup().append(this.tgrp);\n      } else {\n        this.svg.append(this.tgrp);\n      }\n    }\n    return this.tgrp;\n  }\n}\nexports.SVGGraphics = SVGGraphics;\n\n/***/ }),\n/* 25 */\n/***/ ((__unused_webpack_module, exports) => {\n\n\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.XfaText = void 0;\nclass XfaText {\n  static textContent(xfa) {\n    const items = [];\n    const output = {\n      items,\n      styles: Object.create(null)\n    };\n    function walk(node) {\n      if (!node) {\n        return;\n      }\n      let str = null;\n      const name = node.name;\n      if (name === \"#text\") {\n        str = node.value;\n      } else if (!XfaText.shouldBuildText(name)) {\n        return;\n      } else if (node?.attributes?.textContent) {\n        str = node.attributes.textContent;\n      } else if (node.value) {\n        str = node.value;\n      }\n      if (str !== null) {\n        items.push({\n          str\n        });\n      }\n      if (!node.children) {\n        return;\n      }\n      for (const child of node.children) {\n        walk(child);\n      }\n    }\n    walk(xfa);\n    return output;\n  }\n  static shouldBuildText(name) {\n    return !(name === \"textarea\" || name === \"input\" || name === \"option\" || name === \"select\");\n  }\n}\nexports.XfaText = XfaText;\n\n/***/ }),\n/* 26 */\n/***/ ((__unused_webpack_module, exports, __w_pdfjs_require__) => {\n\n\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.TextLayerRenderTask = void 0;\nexports.renderTextLayer = renderTextLayer;\nexports.updateTextLayer = updateTextLayer;\nvar _util = __w_pdfjs_require__(1);\nvar _display_utils = __w_pdfjs_require__(6);\nconst MAX_TEXT_DIVS_TO_RENDER = 100000;\nconst DEFAULT_FONT_SIZE = 30;\nconst DEFAULT_FONT_ASCENT = 0.8;\nconst ascentCache = new Map();\nfunction getCtx(size, isOffscreenCanvasSupported) {\n  let ctx;\n  if (isOffscreenCanvasSupported && _util.FeatureTest.isOffscreenCanvasSupported) {\n    ctx = new OffscreenCanvas(size, size).getContext(\"2d\", {\n      alpha: false\n    });\n  } else {\n    const canvas = document.createElement(\"canvas\");\n    canvas.width = canvas.height = size;\n    ctx = canvas.getContext(\"2d\", {\n      alpha: false\n    });\n  }\n  return ctx;\n}\nfunction getAscent(fontFamily, isOffscreenCanvasSupported) {\n  const cachedAscent = ascentCache.get(fontFamily);\n  if (cachedAscent) {\n    return cachedAscent;\n  }\n  const ctx = getCtx(DEFAULT_FONT_SIZE, isOffscreenCanvasSupported);\n  ctx.font = `${DEFAULT_FONT_SIZE}px ${fontFamily}`;\n  const metrics = ctx.measureText(\"\");\n  let ascent = metrics.fontBoundingBoxAscent;\n  let descent = Math.abs(metrics.fontBoundingBoxDescent);\n  if (ascent) {\n    const ratio = ascent / (ascent + descent);\n    ascentCache.set(fontFamily, ratio);\n    ctx.canvas.width = ctx.canvas.height = 0;\n    return ratio;\n  }\n  ctx.strokeStyle = \"red\";\n  ctx.clearRect(0, 0, DEFAULT_FONT_SIZE, DEFAULT_FONT_SIZE);\n  ctx.strokeText(\"g\", 0, 0);\n  let pixels = ctx.getImageData(0, 0, DEFAULT_FONT_SIZE, DEFAULT_FONT_SIZE).data;\n  descent = 0;\n  for (let i = pixels.length - 1 - 3; i >= 0; i -= 4) {\n    if (pixels[i] > 0) {\n      descent = Math.ceil(i / 4 / DEFAULT_FONT_SIZE);\n      break;\n    }\n  }\n  ctx.clearRect(0, 0, DEFAULT_FONT_SIZE, DEFAULT_FONT_SIZE);\n  ctx.strokeText(\"A\", 0, DEFAULT_FONT_SIZE);\n  pixels = ctx.getImageData(0, 0, DEFAULT_FONT_SIZE, DEFAULT_FONT_SIZE).data;\n  ascent = 0;\n  for (let i = 0, ii = pixels.length; i < ii; i += 4) {\n    if (pixels[i] > 0) {\n      ascent = DEFAULT_FONT_SIZE - Math.floor(i / 4 / DEFAULT_FONT_SIZE);\n      break;\n    }\n  }\n  ctx.canvas.width = ctx.canvas.height = 0;\n  if (ascent) {\n    const ratio = ascent / (ascent + descent);\n    ascentCache.set(fontFamily, ratio);\n    return ratio;\n  }\n  ascentCache.set(fontFamily, DEFAULT_FONT_ASCENT);\n  return DEFAULT_FONT_ASCENT;\n}\nfunction appendText(task, geom, styles) {\n  const textDiv = document.createElement(\"span\");\n  const textDivProperties = {\n    angle: 0,\n    canvasWidth: 0,\n    hasText: geom.str !== \"\",\n    hasEOL: geom.hasEOL,\n    fontSize: 0\n  };\n  task._textDivs.push(textDiv);\n  const tx = _util.Util.transform(task._transform, geom.transform);\n  let angle = Math.atan2(tx[1], tx[0]);\n  const style = styles[geom.fontName];\n  if (style.vertical) {\n    angle += Math.PI / 2;\n  }\n  const fontHeight = Math.hypot(tx[2], tx[3]);\n  const fontAscent = fontHeight * getAscent(style.fontFamily, task._isOffscreenCanvasSupported);\n  let left, top;\n  if (angle === 0) {\n    left = tx[4];\n    top = tx[5] - fontAscent;\n  } else {\n    left = tx[4] + fontAscent * Math.sin(angle);\n    top = tx[5] - fontAscent * Math.cos(angle);\n  }\n  const scaleFactorStr = \"calc(var(--scale-factor)*\";\n  const divStyle = textDiv.style;\n  if (task._container === task._rootContainer) {\n    divStyle.left = `${(100 * left / task._pageWidth).toFixed(2)}%`;\n    divStyle.top = `${(100 * top / task._pageHeight).toFixed(2)}%`;\n  } else {\n    divStyle.left = `${scaleFactorStr}${left.toFixed(2)}px)`;\n    divStyle.top = `${scaleFactorStr}${top.toFixed(2)}px)`;\n  }\n  divStyle.fontSize = `${scaleFactorStr}${fontHeight.toFixed(2)}px)`;\n  divStyle.fontFamily = style.fontFamily;\n  textDivProperties.fontSize = fontHeight;\n  textDiv.setAttribute(\"role\", \"presentation\");\n  textDiv.textContent = geom.str;\n  textDiv.dir = geom.dir;\n  if (task._fontInspectorEnabled) {\n    textDiv.dataset.fontName = geom.fontName;\n  }\n  if (angle !== 0) {\n    textDivProperties.angle = angle * (180 / Math.PI);\n  }\n  let shouldScaleText = false;\n  if (geom.str.length > 1) {\n    shouldScaleText = true;\n  } else if (geom.str !== \" \" && geom.transform[0] !== geom.transform[3]) {\n    const absScaleX = Math.abs(geom.transform[0]),\n      absScaleY = Math.abs(geom.transform[3]);\n    if (absScaleX !== absScaleY && Math.max(absScaleX, absScaleY) / Math.min(absScaleX, absScaleY) > 1.5) {\n      shouldScaleText = true;\n    }\n  }\n  if (shouldScaleText) {\n    textDivProperties.canvasWidth = style.vertical ? geom.height : geom.width;\n  }\n  task._textDivProperties.set(textDiv, textDivProperties);\n  if (task._isReadableStream) {\n    task._layoutText(textDiv);\n  }\n}\nfunction layout(params) {\n  const {\n    div,\n    scale,\n    properties,\n    ctx,\n    prevFontSize,\n    prevFontFamily\n  } = params;\n  const {\n    style\n  } = div;\n  let transform = \"\";\n  if (properties.canvasWidth !== 0 && properties.hasText) {\n    const {\n      fontFamily\n    } = style;\n    const {\n      canvasWidth,\n      fontSize\n    } = properties;\n    if (prevFontSize !== fontSize || prevFontFamily !== fontFamily) {\n      ctx.font = `${fontSize * scale}px ${fontFamily}`;\n      params.prevFontSize = fontSize;\n      params.prevFontFamily = fontFamily;\n    }\n    const {\n      width\n    } = ctx.measureText(div.textContent);\n    if (width > 0) {\n      transform = `scaleX(${canvasWidth * scale / width})`;\n    }\n  }\n  if (properties.angle !== 0) {\n    transform = `rotate(${properties.angle}deg) ${transform}`;\n  }\n  if (transform.length > 0) {\n    style.transform = transform;\n  }\n}\nfunction render(task) {\n  if (task._canceled) {\n    return;\n  }\n  const textDivs = task._textDivs;\n  const capability = task._capability;\n  const textDivsLength = textDivs.length;\n  if (textDivsLength > MAX_TEXT_DIVS_TO_RENDER) {\n    capability.resolve();\n    return;\n  }\n  if (!task._isReadableStream) {\n    for (const textDiv of textDivs) {\n      task._layoutText(textDiv);\n    }\n  }\n  capability.resolve();\n}\nclass TextLayerRenderTask {\n  constructor({\n    textContentSource,\n    container,\n    viewport,\n    textDivs,\n    textDivProperties,\n    textContentItemsStr,\n    isOffscreenCanvasSupported\n  }) {\n    this._textContentSource = textContentSource;\n    this._isReadableStream = textContentSource instanceof ReadableStream;\n    this._container = this._rootContainer = container;\n    this._textDivs = textDivs || [];\n    this._textContentItemsStr = textContentItemsStr || [];\n    this._isOffscreenCanvasSupported = isOffscreenCanvasSupported;\n    this._fontInspectorEnabled = !!globalThis.FontInspector?.enabled;\n    this._reader = null;\n    this._textDivProperties = textDivProperties || new WeakMap();\n    this._canceled = false;\n    this._capability = new _util.PromiseCapability();\n    this._layoutTextParams = {\n      prevFontSize: null,\n      prevFontFamily: null,\n      div: null,\n      scale: viewport.scale * (globalThis.devicePixelRatio || 1),\n      properties: null,\n      ctx: getCtx(0, isOffscreenCanvasSupported)\n    };\n    const {\n      pageWidth,\n      pageHeight,\n      pageX,\n      pageY\n    } = viewport.rawDims;\n    this._transform = [1, 0, 0, -1, -pageX, pageY + pageHeight];\n    this._pageWidth = pageWidth;\n    this._pageHeight = pageHeight;\n    (0, _display_utils.setLayerDimensions)(container, viewport);\n    this._capability.promise.finally(() => {\n      this._layoutTextParams = null;\n    }).catch(() => {});\n  }\n  get promise() {\n    return this._capability.promise;\n  }\n  cancel() {\n    this._canceled = true;\n    if (this._reader) {\n      this._reader.cancel(new _util.AbortException(\"TextLayer task cancelled.\")).catch(() => {});\n      this._reader = null;\n    }\n    this._capability.reject(new _util.AbortException(\"TextLayer task cancelled.\"));\n  }\n  _processItems(items, styleCache) {\n    for (const item of items) {\n      if (item.str === undefined) {\n        if (item.type === \"beginMarkedContentProps\" || item.type === \"beginMarkedContent\") {\n          const parent = this._container;\n          this._container = document.createElement(\"span\");\n          this._container.classList.add(\"markedContent\");\n          if (item.id !== null) {\n            this._container.setAttribute(\"id\", `${item.id}`);\n          }\n          parent.append(this._container);\n        } else if (item.type === \"endMarkedContent\") {\n          this._container = this._container.parentNode;\n        }\n        continue;\n      }\n      this._textContentItemsStr.push(item.str);\n      appendText(this, item, styleCache);\n    }\n  }\n  _layoutText(textDiv) {\n    const textDivProperties = this._layoutTextParams.properties = this._textDivProperties.get(textDiv);\n    this._layoutTextParams.div = textDiv;\n    layout(this._layoutTextParams);\n    if (textDivProperties.hasText) {\n      this._container.append(textDiv);\n    }\n    if (textDivProperties.hasEOL) {\n      const br = document.createElement(\"br\");\n      br.setAttribute(\"role\", \"presentation\");\n      this._container.append(br);\n    }\n  }\n  _render() {\n    const capability = new _util.PromiseCapability();\n    let styleCache = Object.create(null);\n    if (this._isReadableStream) {\n      const pump = () => {\n        this._reader.read().then(({\n          value,\n          done\n        }) => {\n          if (done) {\n            capability.resolve();\n            return;\n          }\n          Object.assign(styleCache, value.styles);\n          this._processItems(value.items, styleCache);\n          pump();\n        }, capability.reject);\n      };\n      this._reader = this._textContentSource.getReader();\n      pump();\n    } else if (this._textContentSource) {\n      const {\n        items,\n        styles\n      } = this._textContentSource;\n      this._processItems(items, styles);\n      capability.resolve();\n    } else {\n      throw new Error('No \"textContentSource\" parameter specified.');\n    }\n    capability.promise.then(() => {\n      styleCache = null;\n      render(this);\n    }, this._capability.reject);\n  }\n}\nexports.TextLayerRenderTask = TextLayerRenderTask;\nfunction renderTextLayer(params) {\n  if (!params.textContentSource && (params.textContent || params.textContentStream)) {\n    (0, _display_utils.deprecated)(\"The TextLayerRender `textContent`/`textContentStream` parameters \" + \"will be removed in the future, please use `textContentSource` instead.\");\n    params.textContentSource = params.textContent || params.textContentStream;\n  }\n  const {\n    container,\n    viewport\n  } = params;\n  const style = getComputedStyle(container);\n  const visibility = style.getPropertyValue(\"visibility\");\n  const scaleFactor = parseFloat(style.getPropertyValue(\"--scale-factor\"));\n  if (visibility === \"visible\" && (!scaleFactor || Math.abs(scaleFactor - viewport.scale) > 1e-5)) {\n    console.error(\"The `--scale-factor` CSS-variable must be set, \" + \"to the same value as `viewport.scale`, \" + \"either on the `container`-element itself or higher up in the DOM.\");\n  }\n  const task = new TextLayerRenderTask(params);\n  task._render();\n  return task;\n}\nfunction updateTextLayer({\n  container,\n  viewport,\n  textDivs,\n  textDivProperties,\n  isOffscreenCanvasSupported,\n  mustRotate = true,\n  mustRescale = true\n}) {\n  if (mustRotate) {\n    (0, _display_utils.setLayerDimensions)(container, {\n      rotation: viewport.rotation\n    });\n  }\n  if (mustRescale) {\n    const ctx = getCtx(0, isOffscreenCanvasSupported);\n    const scale = viewport.scale * (globalThis.devicePixelRatio || 1);\n    const params = {\n      prevFontSize: null,\n      prevFontFamily: null,\n      div: null,\n      scale,\n      properties: null,\n      ctx\n    };\n    for (const div of textDivs) {\n      params.properties = textDivProperties.get(div);\n      params.div = div;\n      layout(params);\n    }\n  }\n}\n\n/***/ }),\n/* 27 */\n/***/ ((__unused_webpack_module, exports, __w_pdfjs_require__) => {\n\n\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.AnnotationEditorLayer = void 0;\nvar _util = __w_pdfjs_require__(1);\nvar _editor = __w_pdfjs_require__(4);\nvar _freetext = __w_pdfjs_require__(28);\nvar _ink = __w_pdfjs_require__(33);\nvar _display_utils = __w_pdfjs_require__(6);\nvar _stamp = __w_pdfjs_require__(34);\nclass AnnotationEditorLayer {\n  #accessibilityManager;\n  #allowClick = false;\n  #annotationLayer = null;\n  #boundPointerup = this.pointerup.bind(this);\n  #boundPointerdown = this.pointerdown.bind(this);\n  #editors = new Map();\n  #hadPointerDown = false;\n  #isCleaningUp = false;\n  #isDisabling = false;\n  #uiManager;\n  static _initialized = false;\n  constructor({\n    uiManager,\n    pageIndex,\n    div,\n    accessibilityManager,\n    annotationLayer,\n    viewport,\n    l10n\n  }) {\n    const editorTypes = [_freetext.FreeTextEditor, _ink.InkEditor, _stamp.StampEditor];\n    if (!AnnotationEditorLayer._initialized) {\n      AnnotationEditorLayer._initialized = true;\n      for (const editorType of editorTypes) {\n        editorType.initialize(l10n);\n      }\n    }\n    uiManager.registerEditorTypes(editorTypes);\n    this.#uiManager = uiManager;\n    this.pageIndex = pageIndex;\n    this.div = div;\n    this.#accessibilityManager = accessibilityManager;\n    this.#annotationLayer = annotationLayer;\n    this.viewport = viewport;\n    this.#uiManager.addLayer(this);\n  }\n  get isEmpty() {\n    return this.#editors.size === 0;\n  }\n  updateToolbar(mode) {\n    this.#uiManager.updateToolbar(mode);\n  }\n  updateMode(mode = this.#uiManager.getMode()) {\n    this.#cleanup();\n    if (mode === _util.AnnotationEditorType.INK) {\n      this.addInkEditorIfNeeded(false);\n      this.disableClick();\n    } else {\n      this.enableClick();\n    }\n    if (mode !== _util.AnnotationEditorType.NONE) {\n      this.div.classList.toggle(\"freeTextEditing\", mode === _util.AnnotationEditorType.FREETEXT);\n      this.div.classList.toggle(\"inkEditing\", mode === _util.AnnotationEditorType.INK);\n      this.div.classList.toggle(\"stampEditing\", mode === _util.AnnotationEditorType.STAMP);\n      this.div.hidden = false;\n    }\n  }\n  addInkEditorIfNeeded(isCommitting) {\n    if (!isCommitting && this.#uiManager.getMode() !== _util.AnnotationEditorType.INK) {\n      return;\n    }\n    if (!isCommitting) {\n      for (const editor of this.#editors.values()) {\n        if (editor.isEmpty()) {\n          editor.setInBackground();\n          return;\n        }\n      }\n    }\n    const editor = this.#createAndAddNewEditor({\n      offsetX: 0,\n      offsetY: 0\n    }, false);\n    editor.setInBackground();\n  }\n  setEditingState(isEditing) {\n    this.#uiManager.setEditingState(isEditing);\n  }\n  addCommands(params) {\n    this.#uiManager.addCommands(params);\n  }\n  enable() {\n    this.div.style.pointerEvents = \"auto\";\n    const annotationElementIds = new Set();\n    for (const editor of this.#editors.values()) {\n      editor.enableEditing();\n      if (editor.annotationElementId) {\n        annotationElementIds.add(editor.annotationElementId);\n      }\n    }\n    if (!this.#annotationLayer) {\n      return;\n    }\n    const editables = this.#annotationLayer.getEditableAnnotations();\n    for (const editable of editables) {\n      editable.hide();\n      if (this.#uiManager.isDeletedAnnotationElement(editable.data.id)) {\n        continue;\n      }\n      if (annotationElementIds.has(editable.data.id)) {\n        continue;\n      }\n      const editor = this.deserialize(editable);\n      if (!editor) {\n        continue;\n      }\n      this.addOrRebuild(editor);\n      editor.enableEditing();\n    }\n  }\n  disable() {\n    this.#isDisabling = true;\n    this.div.style.pointerEvents = \"none\";\n    const hiddenAnnotationIds = new Set();\n    for (const editor of this.#editors.values()) {\n      editor.disableEditing();\n      if (!editor.annotationElementId || editor.serialize() !== null) {\n        hiddenAnnotationIds.add(editor.annotationElementId);\n        continue;\n      }\n      this.getEditableAnnotation(editor.annotationElementId)?.show();\n      editor.remove();\n    }\n    if (this.#annotationLayer) {\n      const editables = this.#annotationLayer.getEditableAnnotations();\n      for (const editable of editables) {\n        const {\n          id\n        } = editable.data;\n        if (hiddenAnnotationIds.has(id) || this.#uiManager.isDeletedAnnotationElement(id)) {\n          continue;\n        }\n        editable.show();\n      }\n    }\n    this.#cleanup();\n    if (this.isEmpty) {\n      this.div.hidden = true;\n    }\n    this.#isDisabling = false;\n  }\n  getEditableAnnotation(id) {\n    return this.#annotationLayer?.getEditableAnnotation(id) || null;\n  }\n  setActiveEditor(editor) {\n    const currentActive = this.#uiManager.getActive();\n    if (currentActive === editor) {\n      return;\n    }\n    this.#uiManager.setActiveEditor(editor);\n  }\n  enableClick() {\n    this.div.addEventListener(\"pointerdown\", this.#boundPointerdown);\n    this.div.addEventListener(\"pointerup\", this.#boundPointerup);\n  }\n  disableClick() {\n    this.div.removeEventListener(\"pointerdown\", this.#boundPointerdown);\n    this.div.removeEventListener(\"pointerup\", this.#boundPointerup);\n  }\n  attach(editor) {\n    this.#editors.set(editor.id, editor);\n    const {\n      annotationElementId\n    } = editor;\n    if (annotationElementId && this.#uiManager.isDeletedAnnotationElement(annotationElementId)) {\n      this.#uiManager.removeDeletedAnnotationElement(editor);\n    }\n  }\n  detach(editor) {\n    this.#editors.delete(editor.id);\n    this.#accessibilityManager?.removePointerInTextLayer(editor.contentDiv);\n    if (!this.#isDisabling && editor.annotationElementId) {\n      this.#uiManager.addDeletedAnnotationElement(editor);\n    }\n  }\n  remove(editor) {\n    this.detach(editor);\n    this.#uiManager.removeEditor(editor);\n    if (editor.div.contains(document.activeElement)) {\n      setTimeout(() => {\n        this.#uiManager.focusMainContainer();\n      }, 0);\n    }\n    editor.div.remove();\n    editor.isAttachedToDOM = false;\n    if (!this.#isCleaningUp) {\n      this.addInkEditorIfNeeded(false);\n    }\n  }\n  changeParent(editor) {\n    if (editor.parent === this) {\n      return;\n    }\n    if (editor.annotationElementId) {\n      this.#uiManager.addDeletedAnnotationElement(editor.annotationElementId);\n      _editor.AnnotationEditor.deleteAnnotationElement(editor);\n      editor.annotationElementId = null;\n    }\n    this.attach(editor);\n    editor.parent?.detach(editor);\n    editor.setParent(this);\n    if (editor.div && editor.isAttachedToDOM) {\n      editor.div.remove();\n      this.div.append(editor.div);\n    }\n  }\n  add(editor) {\n    this.changeParent(editor);\n    this.#uiManager.addEditor(editor);\n    this.attach(editor);\n    if (!editor.isAttachedToDOM) {\n      const div = editor.render();\n      this.div.append(div);\n      editor.isAttachedToDOM = true;\n    }\n    editor.fixAndSetPosition();\n    editor.onceAdded();\n    this.#uiManager.addToAnnotationStorage(editor);\n  }\n  moveEditorInDOM(editor) {\n    if (!editor.isAttachedToDOM) {\n      return;\n    }\n    const {\n      activeElement\n    } = document;\n    if (editor.div.contains(activeElement)) {\n      editor._focusEventsAllowed = false;\n      setTimeout(() => {\n        if (!editor.div.contains(document.activeElement)) {\n          editor.div.addEventListener(\"focusin\", () => {\n            editor._focusEventsAllowed = true;\n          }, {\n            once: true\n          });\n          activeElement.focus();\n        } else {\n          editor._focusEventsAllowed = true;\n        }\n      }, 0);\n    }\n    editor._structTreeParentId = this.#accessibilityManager?.moveElementInDOM(this.div, editor.div, editor.contentDiv, true);\n  }\n  addOrRebuild(editor) {\n    if (editor.needsToBeRebuilt()) {\n      editor.rebuild();\n    } else {\n      this.add(editor);\n    }\n  }\n  addUndoableEditor(editor) {\n    const cmd = () => editor._uiManager.rebuild(editor);\n    const undo = () => {\n      editor.remove();\n    };\n    this.addCommands({\n      cmd,\n      undo,\n      mustExec: false\n    });\n  }\n  getNextId() {\n    return this.#uiManager.getId();\n  }\n  #createNewEditor(params) {\n    switch (this.#uiManager.getMode()) {\n      case _util.AnnotationEditorType.FREETEXT:\n        return new _freetext.FreeTextEditor(params);\n      case _util.AnnotationEditorType.INK:\n        return new _ink.InkEditor(params);\n      case _util.AnnotationEditorType.STAMP:\n        return new _stamp.StampEditor(params);\n    }\n    return null;\n  }\n  pasteEditor(mode, params) {\n    this.#uiManager.updateToolbar(mode);\n    this.#uiManager.updateMode(mode);\n    const {\n      offsetX,\n      offsetY\n    } = this.#getCenterPoint();\n    const id = this.getNextId();\n    const editor = this.#createNewEditor({\n      parent: this,\n      id,\n      x: offsetX,\n      y: offsetY,\n      uiManager: this.#uiManager,\n      isCentered: true,\n      ...params\n    });\n    if (editor) {\n      this.add(editor);\n    }\n  }\n  deserialize(data) {\n    switch (data.annotationType ?? data.annotationEditorType) {\n      case _util.AnnotationEditorType.FREETEXT:\n        return _freetext.FreeTextEditor.deserialize(data, this, this.#uiManager);\n      case _util.AnnotationEditorType.INK:\n        return _ink.InkEditor.deserialize(data, this, this.#uiManager);\n      case _util.AnnotationEditorType.STAMP:\n        return _stamp.StampEditor.deserialize(data, this, this.#uiManager);\n    }\n    return null;\n  }\n  #createAndAddNewEditor(event, isCentered) {\n    const id = this.getNextId();\n    const editor = this.#createNewEditor({\n      parent: this,\n      id,\n      x: event.offsetX,\n      y: event.offsetY,\n      uiManager: this.#uiManager,\n      isCentered\n    });\n    if (editor) {\n      this.add(editor);\n    }\n    return editor;\n  }\n  #getCenterPoint() {\n    const {\n      x,\n      y,\n      width,\n      height\n    } = this.div.getBoundingClientRect();\n    const tlX = Math.max(0, x);\n    const tlY = Math.max(0, y);\n    const brX = Math.min(window.innerWidth, x + width);\n    const brY = Math.min(window.innerHeight, y + height);\n    const centerX = (tlX + brX) / 2 - x;\n    const centerY = (tlY + brY) / 2 - y;\n    const [offsetX, offsetY] = this.viewport.rotation % 180 === 0 ? [centerX, centerY] : [centerY, centerX];\n    return {\n      offsetX,\n      offsetY\n    };\n  }\n  addNewEditor() {\n    this.#createAndAddNewEditor(this.#getCenterPoint(), true);\n  }\n  setSelected(editor) {\n    this.#uiManager.setSelected(editor);\n  }\n  toggleSelected(editor) {\n    this.#uiManager.toggleSelected(editor);\n  }\n  isSelected(editor) {\n    return this.#uiManager.isSelected(editor);\n  }\n  unselect(editor) {\n    this.#uiManager.unselect(editor);\n  }\n  pointerup(event) {\n    const {\n      isMac\n    } = _util.FeatureTest.platform;\n    if (event.button !== 0 || event.ctrlKey && isMac) {\n      return;\n    }\n    if (event.target !== this.div) {\n      return;\n    }\n    if (!this.#hadPointerDown) {\n      return;\n    }\n    this.#hadPointerDown = false;\n    if (!this.#allowClick) {\n      this.#allowClick = true;\n      return;\n    }\n    if (this.#uiManager.getMode() === _util.AnnotationEditorType.STAMP) {\n      this.#uiManager.unselectAll();\n      return;\n    }\n    this.#createAndAddNewEditor(event, false);\n  }\n  pointerdown(event) {\n    if (this.#hadPointerDown) {\n      this.#hadPointerDown = false;\n      return;\n    }\n    const {\n      isMac\n    } = _util.FeatureTest.platform;\n    if (event.button !== 0 || event.ctrlKey && isMac) {\n      return;\n    }\n    if (event.target !== this.div) {\n      return;\n    }\n    this.#hadPointerDown = true;\n    const editor = this.#uiManager.getActive();\n    this.#allowClick = !editor || editor.isEmpty();\n  }\n  findNewParent(editor, x, y) {\n    const layer = this.#uiManager.findParent(x, y);\n    if (layer === null || layer === this) {\n      return false;\n    }\n    layer.changeParent(editor);\n    return true;\n  }\n  destroy() {\n    if (this.#uiManager.getActive()?.parent === this) {\n      this.#uiManager.commitOrRemove();\n      this.#uiManager.setActiveEditor(null);\n    }\n    for (const editor of this.#editors.values()) {\n      this.#accessibilityManager?.removePointerInTextLayer(editor.contentDiv);\n      editor.setParent(null);\n      editor.isAttachedToDOM = false;\n      editor.div.remove();\n    }\n    this.div = null;\n    this.#editors.clear();\n    this.#uiManager.removeLayer(this);\n  }\n  #cleanup() {\n    this.#isCleaningUp = true;\n    for (const editor of this.#editors.values()) {\n      if (editor.isEmpty()) {\n        editor.remove();\n      }\n    }\n    this.#isCleaningUp = false;\n  }\n  render({\n    viewport\n  }) {\n    this.viewport = viewport;\n    (0, _display_utils.setLayerDimensions)(this.div, viewport);\n    for (const editor of this.#uiManager.getEditors(this.pageIndex)) {\n      this.add(editor);\n    }\n    this.updateMode();\n  }\n  update({\n    viewport\n  }) {\n    this.#uiManager.commitOrRemove();\n    this.viewport = viewport;\n    (0, _display_utils.setLayerDimensions)(this.div, {\n      rotation: viewport.rotation\n    });\n    this.updateMode();\n  }\n  get pageDimensions() {\n    const {\n      pageWidth,\n      pageHeight\n    } = this.viewport.rawDims;\n    return [pageWidth, pageHeight];\n  }\n}\nexports.AnnotationEditorLayer = AnnotationEditorLayer;\n\n/***/ }),\n/* 28 */\n/***/ ((__unused_webpack_module, exports, __w_pdfjs_require__) => {\n\n\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.FreeTextEditor = void 0;\nvar _util = __w_pdfjs_require__(1);\nvar _tools = __w_pdfjs_require__(5);\nvar _editor = __w_pdfjs_require__(4);\nvar _annotation_layer = __w_pdfjs_require__(29);\nclass FreeTextEditor extends _editor.AnnotationEditor {\n  #boundEditorDivBlur = this.editorDivBlur.bind(this);\n  #boundEditorDivFocus = this.editorDivFocus.bind(this);\n  #boundEditorDivInput = this.editorDivInput.bind(this);\n  #boundEditorDivKeydown = this.editorDivKeydown.bind(this);\n  #color;\n  #content = \"\";\n  #editorDivId = `${this.id}-editor`;\n  #fontSize;\n  #initialData = null;\n  static _freeTextDefaultContent = \"\";\n  static _internalPadding = 0;\n  static _defaultColor = null;\n  static _defaultFontSize = 10;\n  static get _keyboardManager() {\n    const proto = FreeTextEditor.prototype;\n    const arrowChecker = self => self.isEmpty();\n    const small = _tools.AnnotationEditorUIManager.TRANSLATE_SMALL;\n    const big = _tools.AnnotationEditorUIManager.TRANSLATE_BIG;\n    return (0, _util.shadow)(this, \"_keyboardManager\", new _tools.KeyboardManager([[[\"ctrl+s\", \"mac+meta+s\", \"ctrl+p\", \"mac+meta+p\"], proto.commitOrRemove, {\n      bubbles: true\n    }], [[\"ctrl+Enter\", \"mac+meta+Enter\", \"Escape\", \"mac+Escape\"], proto.commitOrRemove], [[\"ArrowLeft\", \"mac+ArrowLeft\"], proto._translateEmpty, {\n      args: [-small, 0],\n      checker: arrowChecker\n    }], [[\"ctrl+ArrowLeft\", \"mac+shift+ArrowLeft\"], proto._translateEmpty, {\n      args: [-big, 0],\n      checker: arrowChecker\n    }], [[\"ArrowRight\", \"mac+ArrowRight\"], proto._translateEmpty, {\n      args: [small, 0],\n      checker: arrowChecker\n    }], [[\"ctrl+ArrowRight\", \"mac+shift+ArrowRight\"], proto._translateEmpty, {\n      args: [big, 0],\n      checker: arrowChecker\n    }], [[\"ArrowUp\", \"mac+ArrowUp\"], proto._translateEmpty, {\n      args: [0, -small],\n      checker: arrowChecker\n    }], [[\"ctrl+ArrowUp\", \"mac+shift+ArrowUp\"], proto._translateEmpty, {\n      args: [0, -big],\n      checker: arrowChecker\n    }], [[\"ArrowDown\", \"mac+ArrowDown\"], proto._translateEmpty, {\n      args: [0, small],\n      checker: arrowChecker\n    }], [[\"ctrl+ArrowDown\", \"mac+shift+ArrowDown\"], proto._translateEmpty, {\n      args: [0, big],\n      checker: arrowChecker\n    }]]));\n  }\n  static _type = \"freetext\";\n  constructor(params) {\n    super({\n      ...params,\n      name: \"freeTextEditor\"\n    });\n    this.#color = params.color || FreeTextEditor._defaultColor || _editor.AnnotationEditor._defaultLineColor;\n    this.#fontSize = params.fontSize || FreeTextEditor._defaultFontSize;\n  }\n  static initialize(l10n) {\n    _editor.AnnotationEditor.initialize(l10n, {\n      strings: [\"free_text2_default_content\", \"editor_free_text2_aria_label\"]\n    });\n    const style = getComputedStyle(document.documentElement);\n    this._internalPadding = parseFloat(style.getPropertyValue(\"--freetext-padding\"));\n  }\n  static updateDefaultParams(type, value) {\n    switch (type) {\n      case _util.AnnotationEditorParamsType.FREETEXT_SIZE:\n        FreeTextEditor._defaultFontSize = value;\n        break;\n      case _util.AnnotationEditorParamsType.FREETEXT_COLOR:\n        FreeTextEditor._defaultColor = value;\n        break;\n    }\n  }\n  updateParams(type, value) {\n    switch (type) {\n      case _util.AnnotationEditorParamsType.FREETEXT_SIZE:\n        this.#updateFontSize(value);\n        break;\n      case _util.AnnotationEditorParamsType.FREETEXT_COLOR:\n        this.#updateColor(value);\n        break;\n    }\n  }\n  static get defaultPropertiesToUpdate() {\n    return [[_util.AnnotationEditorParamsType.FREETEXT_SIZE, FreeTextEditor._defaultFontSize], [_util.AnnotationEditorParamsType.FREETEXT_COLOR, FreeTextEditor._defaultColor || _editor.AnnotationEditor._defaultLineColor]];\n  }\n  get propertiesToUpdate() {\n    return [[_util.AnnotationEditorParamsType.FREETEXT_SIZE, this.#fontSize], [_util.AnnotationEditorParamsType.FREETEXT_COLOR, this.#color]];\n  }\n  #updateFontSize(fontSize) {\n    const setFontsize = size => {\n      this.editorDiv.style.fontSize = `calc(${size}px * var(--scale-factor))`;\n      this.translate(0, -(size - this.#fontSize) * this.parentScale);\n      this.#fontSize = size;\n      this.#setEditorDimensions();\n    };\n    const savedFontsize = this.#fontSize;\n    this.addCommands({\n      cmd: () => {\n        setFontsize(fontSize);\n      },\n      undo: () => {\n        setFontsize(savedFontsize);\n      },\n      mustExec: true,\n      type: _util.AnnotationEditorParamsType.FREETEXT_SIZE,\n      overwriteIfSameType: true,\n      keepUndo: true\n    });\n  }\n  #updateColor(color) {\n    const savedColor = this.#color;\n    this.addCommands({\n      cmd: () => {\n        this.#color = this.editorDiv.style.color = color;\n      },\n      undo: () => {\n        this.#color = this.editorDiv.style.color = savedColor;\n      },\n      mustExec: true,\n      type: _util.AnnotationEditorParamsType.FREETEXT_COLOR,\n      overwriteIfSameType: true,\n      keepUndo: true\n    });\n  }\n  _translateEmpty(x, y) {\n    this._uiManager.translateSelectedEditors(x, y, true);\n  }\n  getInitialTranslation() {\n    const scale = this.parentScale;\n    return [-FreeTextEditor._internalPadding * scale, -(FreeTextEditor._internalPadding + this.#fontSize) * scale];\n  }\n  rebuild() {\n    if (!this.parent) {\n      return;\n    }\n    super.rebuild();\n    if (this.div === null) {\n      return;\n    }\n    if (!this.isAttachedToDOM) {\n      this.parent.add(this);\n    }\n  }\n  enableEditMode() {\n    if (this.isInEditMode()) {\n      return;\n    }\n    this.parent.setEditingState(false);\n    this.parent.updateToolbar(_util.AnnotationEditorType.FREETEXT);\n    super.enableEditMode();\n    this.overlayDiv.classList.remove(\"enabled\");\n    this.editorDiv.contentEditable = true;\n    this._isDraggable = false;\n    this.div.removeAttribute(\"aria-activedescendant\");\n    this.editorDiv.addEventListener(\"keydown\", this.#boundEditorDivKeydown);\n    this.editorDiv.addEventListener(\"focus\", this.#boundEditorDivFocus);\n    this.editorDiv.addEventListener(\"blur\", this.#boundEditorDivBlur);\n    this.editorDiv.addEventListener(\"input\", this.#boundEditorDivInput);\n  }\n  disableEditMode() {\n    if (!this.isInEditMode()) {\n      return;\n    }\n    this.parent.setEditingState(true);\n    super.disableEditMode();\n    this.overlayDiv.classList.add(\"enabled\");\n    this.editorDiv.contentEditable = false;\n    this.div.setAttribute(\"aria-activedescendant\", this.#editorDivId);\n    this._isDraggable = true;\n    this.editorDiv.removeEventListener(\"keydown\", this.#boundEditorDivKeydown);\n    this.editorDiv.removeEventListener(\"focus\", this.#boundEditorDivFocus);\n    this.editorDiv.removeEventListener(\"blur\", this.#boundEditorDivBlur);\n    this.editorDiv.removeEventListener(\"input\", this.#boundEditorDivInput);\n    this.div.focus({\n      preventScroll: true\n    });\n    this.isEditing = false;\n    this.parent.div.classList.add(\"freeTextEditing\");\n  }\n  focusin(event) {\n    if (!this._focusEventsAllowed) {\n      return;\n    }\n    super.focusin(event);\n    if (event.target !== this.editorDiv) {\n      this.editorDiv.focus();\n    }\n  }\n  onceAdded() {\n    if (this.width) {\n      this.#cheatInitialRect();\n      return;\n    }\n    this.enableEditMode();\n    this.editorDiv.focus();\n    if (this._initialOptions?.isCentered) {\n      this.center();\n    }\n    this._initialOptions = null;\n  }\n  isEmpty() {\n    return !this.editorDiv || this.editorDiv.innerText.trim() === \"\";\n  }\n  remove() {\n    this.isEditing = false;\n    if (this.parent) {\n      this.parent.setEditingState(true);\n      this.parent.div.classList.add(\"freeTextEditing\");\n    }\n    super.remove();\n  }\n  #extractText() {\n    const divs = this.editorDiv.getElementsByTagName(\"div\");\n    if (divs.length === 0) {\n      return this.editorDiv.innerText;\n    }\n    const buffer = [];\n    for (const div of divs) {\n      buffer.push(div.innerText.replace(/\\r\\n?|\\n/, \"\"));\n    }\n    return buffer.join(\"\\n\");\n  }\n  #setEditorDimensions() {\n    const [parentWidth, parentHeight] = this.parentDimensions;\n    let rect;\n    if (this.isAttachedToDOM) {\n      rect = this.div.getBoundingClientRect();\n    } else {\n      const {\n        currentLayer,\n        div\n      } = this;\n      const savedDisplay = div.style.display;\n      div.style.display = \"hidden\";\n      currentLayer.div.append(this.div);\n      rect = div.getBoundingClientRect();\n      div.remove();\n      div.style.display = savedDisplay;\n    }\n    if (this.rotation % 180 === this.parentRotation % 180) {\n      this.width = rect.width / parentWidth;\n      this.height = rect.height / parentHeight;\n    } else {\n      this.width = rect.height / parentWidth;\n      this.height = rect.width / parentHeight;\n    }\n    this.fixAndSetPosition();\n  }\n  commit() {\n    if (!this.isInEditMode()) {\n      return;\n    }\n    super.commit();\n    this.disableEditMode();\n    const savedText = this.#content;\n    const newText = this.#content = this.#extractText().trimEnd();\n    if (savedText === newText) {\n      return;\n    }\n    const setText = text => {\n      this.#content = text;\n      if (!text) {\n        this.remove();\n        return;\n      }\n      this.#setContent();\n      this._uiManager.rebuild(this);\n      this.#setEditorDimensions();\n    };\n    this.addCommands({\n      cmd: () => {\n        setText(newText);\n      },\n      undo: () => {\n        setText(savedText);\n      },\n      mustExec: false\n    });\n    this.#setEditorDimensions();\n  }\n  shouldGetKeyboardEvents() {\n    return this.isInEditMode();\n  }\n  enterInEditMode() {\n    this.enableEditMode();\n    this.editorDiv.focus();\n  }\n  dblclick(event) {\n    this.enterInEditMode();\n  }\n  keydown(event) {\n    if (event.target === this.div && event.key === \"Enter\") {\n      this.enterInEditMode();\n      event.preventDefault();\n    }\n  }\n  editorDivKeydown(event) {\n    FreeTextEditor._keyboardManager.exec(this, event);\n  }\n  editorDivFocus(event) {\n    this.isEditing = true;\n  }\n  editorDivBlur(event) {\n    this.isEditing = false;\n  }\n  editorDivInput(event) {\n    this.parent.div.classList.toggle(\"freeTextEditing\", this.isEmpty());\n  }\n  disableEditing() {\n    this.editorDiv.setAttribute(\"role\", \"comment\");\n    this.editorDiv.removeAttribute(\"aria-multiline\");\n  }\n  enableEditing() {\n    this.editorDiv.setAttribute(\"role\", \"textbox\");\n    this.editorDiv.setAttribute(\"aria-multiline\", true);\n  }\n  render() {\n    if (this.div) {\n      return this.div;\n    }\n    let baseX, baseY;\n    if (this.width) {\n      baseX = this.x;\n      baseY = this.y;\n    }\n    super.render();\n    this.editorDiv = document.createElement(\"div\");\n    this.editorDiv.className = \"internal\";\n    this.editorDiv.setAttribute(\"id\", this.#editorDivId);\n    this.enableEditing();\n    _editor.AnnotationEditor._l10nPromise.get(\"editor_free_text2_aria_label\").then(msg => this.editorDiv?.setAttribute(\"aria-label\", msg));\n    _editor.AnnotationEditor._l10nPromise.get(\"free_text2_default_content\").then(msg => this.editorDiv?.setAttribute(\"default-content\", msg));\n    this.editorDiv.contentEditable = true;\n    const {\n      style\n    } = this.editorDiv;\n    style.fontSize = `calc(${this.#fontSize}px * var(--scale-factor))`;\n    style.color = this.#color;\n    this.div.append(this.editorDiv);\n    this.overlayDiv = document.createElement(\"div\");\n    this.overlayDiv.classList.add(\"overlay\", \"enabled\");\n    this.div.append(this.overlayDiv);\n    (0, _tools.bindEvents)(this, this.div, [\"dblclick\", \"keydown\"]);\n    if (this.width) {\n      const [parentWidth, parentHeight] = this.parentDimensions;\n      if (this.annotationElementId) {\n        const {\n          position\n        } = this.#initialData;\n        let [tx, ty] = this.getInitialTranslation();\n        [tx, ty] = this.pageTranslationToScreen(tx, ty);\n        const [pageWidth, pageHeight] = this.pageDimensions;\n        const [pageX, pageY] = this.pageTranslation;\n        let posX, posY;\n        switch (this.rotation) {\n          case 0:\n            posX = baseX + (position[0] - pageX) / pageWidth;\n            posY = baseY + this.height - (position[1] - pageY) / pageHeight;\n            break;\n          case 90:\n            posX = baseX + (position[0] - pageX) / pageWidth;\n            posY = baseY - (position[1] - pageY) / pageHeight;\n            [tx, ty] = [ty, -tx];\n            break;\n          case 180:\n            posX = baseX - this.width + (position[0] - pageX) / pageWidth;\n            posY = baseY - (position[1] - pageY) / pageHeight;\n            [tx, ty] = [-tx, -ty];\n            break;\n          case 270:\n            posX = baseX + (position[0] - pageX - this.height * pageHeight) / pageWidth;\n            posY = baseY + (position[1] - pageY - this.width * pageWidth) / pageHeight;\n            [tx, ty] = [-ty, tx];\n            break;\n        }\n        this.setAt(posX * parentWidth, posY * parentHeight, tx, ty);\n      } else {\n        this.setAt(baseX * parentWidth, baseY * parentHeight, this.width * parentWidth, this.height * parentHeight);\n      }\n      this.#setContent();\n      this._isDraggable = true;\n      this.editorDiv.contentEditable = false;\n    } else {\n      this._isDraggable = false;\n      this.editorDiv.contentEditable = true;\n    }\n    return this.div;\n  }\n  #setContent() {\n    this.editorDiv.replaceChildren();\n    if (!this.#content) {\n      return;\n    }\n    for (const line of this.#content.split(\"\\n\")) {\n      const div = document.createElement(\"div\");\n      div.append(line ? document.createTextNode(line) : document.createElement(\"br\"));\n      this.editorDiv.append(div);\n    }\n  }\n  get contentDiv() {\n    return this.editorDiv;\n  }\n  static deserialize(data, parent, uiManager) {\n    let initialData = null;\n    if (data instanceof _annotation_layer.FreeTextAnnotationElement) {\n      const {\n        data: {\n          defaultAppearanceData: {\n            fontSize,\n            fontColor\n          },\n          rect,\n          rotation,\n          id\n        },\n        textContent,\n        textPosition,\n        parent: {\n          page: {\n            pageNumber\n          }\n        }\n      } = data;\n      if (!textContent || textContent.length === 0) {\n        return null;\n      }\n      initialData = data = {\n        annotationType: _util.AnnotationEditorType.FREETEXT,\n        color: Array.from(fontColor),\n        fontSize,\n        value: textContent.join(\"\\n\"),\n        position: textPosition,\n        pageIndex: pageNumber - 1,\n        rect,\n        rotation,\n        id,\n        deleted: false\n      };\n    }\n    const editor = super.deserialize(data, parent, uiManager);\n    editor.#fontSize = data.fontSize;\n    editor.#color = _util.Util.makeHexColor(...data.color);\n    editor.#content = data.value;\n    editor.annotationElementId = data.id || null;\n    editor.#initialData = initialData;\n    return editor;\n  }\n  serialize(isForCopying = false) {\n    if (this.isEmpty()) {\n      return null;\n    }\n    if (this.deleted) {\n      return {\n        pageIndex: this.pageIndex,\n        id: this.annotationElementId,\n        deleted: true\n      };\n    }\n    const padding = FreeTextEditor._internalPadding * this.parentScale;\n    const rect = this.getRect(padding, padding);\n    const color = _editor.AnnotationEditor._colorManager.convert(this.isAttachedToDOM ? getComputedStyle(this.editorDiv).color : this.#color);\n    const serialized = {\n      annotationType: _util.AnnotationEditorType.FREETEXT,\n      color,\n      fontSize: this.#fontSize,\n      value: this.#content,\n      pageIndex: this.pageIndex,\n      rect,\n      rotation: this.rotation,\n      structTreeParentId: this._structTreeParentId\n    };\n    if (isForCopying) {\n      return serialized;\n    }\n    if (this.annotationElementId && !this.#hasElementChanged(serialized)) {\n      return null;\n    }\n    serialized.id = this.annotationElementId;\n    return serialized;\n  }\n  #hasElementChanged(serialized) {\n    const {\n      value,\n      fontSize,\n      color,\n      rect,\n      pageIndex\n    } = this.#initialData;\n    return serialized.value !== value || serialized.fontSize !== fontSize || serialized.rect.some((x, i) => Math.abs(x - rect[i]) >= 1) || serialized.color.some((c, i) => c !== color[i]) || serialized.pageIndex !== pageIndex;\n  }\n  #cheatInitialRect(delayed = false) {\n    if (!this.annotationElementId) {\n      return;\n    }\n    this.#setEditorDimensions();\n    if (!delayed && (this.width === 0 || this.height === 0)) {\n      setTimeout(() => this.#cheatInitialRect(true), 0);\n      return;\n    }\n    const padding = FreeTextEditor._internalPadding * this.parentScale;\n    this.#initialData.rect = this.getRect(padding, padding);\n  }\n}\nexports.FreeTextEditor = FreeTextEditor;\n\n/***/ }),\n/* 29 */\n/***/ ((__unused_webpack_module, exports, __w_pdfjs_require__) => {\n\n\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.StampAnnotationElement = exports.InkAnnotationElement = exports.FreeTextAnnotationElement = exports.AnnotationLayer = void 0;\nvar _util = __w_pdfjs_require__(1);\nvar _display_utils = __w_pdfjs_require__(6);\nvar _annotation_storage = __w_pdfjs_require__(3);\nvar _scripting_utils = __w_pdfjs_require__(30);\nvar _displayL10n_utils = __w_pdfjs_require__(31);\nvar _xfa_layer = __w_pdfjs_require__(32);\nconst DEFAULT_TAB_INDEX = 1000;\nconst DEFAULT_FONT_SIZE = 9;\nconst GetElementsByNameSet = new WeakSet();\nfunction getRectDims(rect) {\n  return {\n    width: rect[2] - rect[0],\n    height: rect[3] - rect[1]\n  };\n}\nclass AnnotationElementFactory {\n  static create(parameters) {\n    const subtype = parameters.data.annotationType;\n    switch (subtype) {\n      case _util.AnnotationType.LINK:\n        return new LinkAnnotationElement(parameters);\n      case _util.AnnotationType.TEXT:\n        return new TextAnnotationElement(parameters);\n      case _util.AnnotationType.WIDGET:\n        const fieldType = parameters.data.fieldType;\n        switch (fieldType) {\n          case \"Tx\":\n            return new TextWidgetAnnotationElement(parameters);\n          case \"Btn\":\n            if (parameters.data.radioButton) {\n              return new RadioButtonWidgetAnnotationElement(parameters);\n            } else if (parameters.data.checkBox) {\n              return new CheckboxWidgetAnnotationElement(parameters);\n            }\n            return new PushButtonWidgetAnnotationElement(parameters);\n          case \"Ch\":\n            return new ChoiceWidgetAnnotationElement(parameters);\n          case \"Sig\":\n            return new SignatureWidgetAnnotationElement(parameters);\n        }\n        return new WidgetAnnotationElement(parameters);\n      case _util.AnnotationType.POPUP:\n        return new PopupAnnotationElement(parameters);\n      case _util.AnnotationType.FREETEXT:\n        return new FreeTextAnnotationElement(parameters);\n      case _util.AnnotationType.LINE:\n        return new LineAnnotationElement(parameters);\n      case _util.AnnotationType.SQUARE:\n        return new SquareAnnotationElement(parameters);\n      case _util.AnnotationType.CIRCLE:\n        return new CircleAnnotationElement(parameters);\n      case _util.AnnotationType.POLYLINE:\n        return new PolylineAnnotationElement(parameters);\n      case _util.AnnotationType.CARET:\n        return new CaretAnnotationElement(parameters);\n      case _util.AnnotationType.INK:\n        return new InkAnnotationElement(parameters);\n      case _util.AnnotationType.POLYGON:\n        return new PolygonAnnotationElement(parameters);\n      case _util.AnnotationType.HIGHLIGHT:\n        return new HighlightAnnotationElement(parameters);\n      case _util.AnnotationType.UNDERLINE:\n        return new UnderlineAnnotationElement(parameters);\n      case _util.AnnotationType.SQUIGGLY:\n        return new SquigglyAnnotationElement(parameters);\n      case _util.AnnotationType.STRIKEOUT:\n        return new StrikeOutAnnotationElement(parameters);\n      case _util.AnnotationType.STAMP:\n        return new StampAnnotationElement(parameters);\n      case _util.AnnotationType.FILEATTACHMENT:\n        return new FileAttachmentAnnotationElement(parameters);\n      default:\n        return new AnnotationElement(parameters);\n    }\n  }\n}\nclass AnnotationElement {\n  #hasBorder = false;\n  constructor(parameters, {\n    isRenderable = false,\n    ignoreBorder = false,\n    createQuadrilaterals = false\n  } = {}) {\n    this.isRenderable = isRenderable;\n    this.data = parameters.data;\n    this.layer = parameters.layer;\n    this.linkService = parameters.linkService;\n    this.downloadManager = parameters.downloadManager;\n    this.imageResourcesPath = parameters.imageResourcesPath;\n    this.renderForms = parameters.renderForms;\n    this.svgFactory = parameters.svgFactory;\n    this.annotationStorage = parameters.annotationStorage;\n    this.enableScripting = parameters.enableScripting;\n    this.hasJSActions = parameters.hasJSActions;\n    this._fieldObjects = parameters.fieldObjects;\n    this.parent = parameters.parent;\n    if (isRenderable) {\n      this.container = this._createContainer(ignoreBorder);\n    }\n    if (createQuadrilaterals) {\n      this._createQuadrilaterals();\n    }\n  }\n  static _hasPopupData({\n    titleObj,\n    contentsObj,\n    richText\n  }) {\n    return !!(titleObj?.str || contentsObj?.str || richText?.str);\n  }\n  get hasPopupData() {\n    return AnnotationElement._hasPopupData(this.data);\n  }\n  _createContainer(ignoreBorder) {\n    const {\n      data,\n      parent: {\n        page,\n        viewport\n      }\n    } = this;\n    const container = document.createElement(\"section\");\n    container.setAttribute(\"data-annotation-id\", data.id);\n    if (!(this instanceof WidgetAnnotationElement)) {\n      container.tabIndex = DEFAULT_TAB_INDEX;\n    }\n    container.style.zIndex = this.parent.zIndex++;\n    if (this.data.popupRef) {\n      container.setAttribute(\"aria-haspopup\", \"dialog\");\n    }\n    if (data.noRotate) {\n      container.classList.add(\"norotate\");\n    }\n    const {\n      pageWidth,\n      pageHeight,\n      pageX,\n      pageY\n    } = viewport.rawDims;\n    if (!data.rect || this instanceof PopupAnnotationElement) {\n      const {\n        rotation\n      } = data;\n      if (!data.hasOwnCanvas && rotation !== 0) {\n        this.setRotation(rotation, container);\n      }\n      return container;\n    }\n    const {\n      width,\n      height\n    } = getRectDims(data.rect);\n    const rect = _util.Util.normalizeRect([data.rect[0], page.view[3] - data.rect[1] + page.view[1], data.rect[2], page.view[3] - data.rect[3] + page.view[1]]);\n    if (!ignoreBorder && data.borderStyle.width > 0) {\n      container.style.borderWidth = `${data.borderStyle.width}px`;\n      const horizontalRadius = data.borderStyle.horizontalCornerRadius;\n      const verticalRadius = data.borderStyle.verticalCornerRadius;\n      if (horizontalRadius > 0 || verticalRadius > 0) {\n        const radius = `calc(${horizontalRadius}px * var(--scale-factor)) / calc(${verticalRadius}px * var(--scale-factor))`;\n        container.style.borderRadius = radius;\n      } else if (this instanceof RadioButtonWidgetAnnotationElement) {\n        const radius = `calc(${width}px * var(--scale-factor)) / calc(${height}px * var(--scale-factor))`;\n        container.style.borderRadius = radius;\n      }\n      switch (data.borderStyle.style) {\n        case _util.AnnotationBorderStyleType.SOLID:\n          container.style.borderStyle = \"solid\";\n          break;\n        case _util.AnnotationBorderStyleType.DASHED:\n          container.style.borderStyle = \"dashed\";\n          break;\n        case _util.AnnotationBorderStyleType.BEVELED:\n          (0, _util.warn)(\"Unimplemented border style: beveled\");\n          break;\n        case _util.AnnotationBorderStyleType.INSET:\n          (0, _util.warn)(\"Unimplemented border style: inset\");\n          break;\n        case _util.AnnotationBorderStyleType.UNDERLINE:\n          container.style.borderBottomStyle = \"solid\";\n          break;\n        default:\n          break;\n      }\n      const borderColor = data.borderColor || null;\n      if (borderColor) {\n        this.#hasBorder = true;\n        container.style.borderColor = _util.Util.makeHexColor(borderColor[0] | 0, borderColor[1] | 0, borderColor[2] | 0);\n      } else {\n        container.style.borderWidth = 0;\n      }\n    }\n    container.style.left = `${100 * (rect[0] - pageX) / pageWidth}%`;\n    container.style.top = `${100 * (rect[1] - pageY) / pageHeight}%`;\n    const {\n      rotation\n    } = data;\n    if (data.hasOwnCanvas || rotation === 0) {\n      container.style.width = `${100 * width / pageWidth}%`;\n      container.style.height = `${100 * height / pageHeight}%`;\n    } else {\n      this.setRotation(rotation, container);\n    }\n    return container;\n  }\n  setRotation(angle, container = this.container) {\n    if (!this.data.rect) {\n      return;\n    }\n    const {\n      pageWidth,\n      pageHeight\n    } = this.parent.viewport.rawDims;\n    const {\n      width,\n      height\n    } = getRectDims(this.data.rect);\n    let elementWidth, elementHeight;\n    if (angle % 180 === 0) {\n      elementWidth = 100 * width / pageWidth;\n      elementHeight = 100 * height / pageHeight;\n    } else {\n      elementWidth = 100 * height / pageWidth;\n      elementHeight = 100 * width / pageHeight;\n    }\n    container.style.width = `${elementWidth}%`;\n    container.style.height = `${elementHeight}%`;\n    container.setAttribute(\"data-main-rotation\", (360 - angle) % 360);\n  }\n  get _commonActions() {\n    const setColor = (jsName, styleName, event) => {\n      const color = event.detail[jsName];\n      const colorType = color[0];\n      const colorArray = color.slice(1);\n      event.target.style[styleName] = _scripting_utils.ColorConverters[`${colorType}_HTML`](colorArray);\n      this.annotationStorage.setValue(this.data.id, {\n        [styleName]: _scripting_utils.ColorConverters[`${colorType}_rgb`](colorArray)\n      });\n    };\n    return (0, _util.shadow)(this, \"_commonActions\", {\n      display: event => {\n        const {\n          display\n        } = event.detail;\n        const hidden = display % 2 === 1;\n        this.container.style.visibility = hidden ? \"hidden\" : \"visible\";\n        this.annotationStorage.setValue(this.data.id, {\n          noView: hidden,\n          noPrint: display === 1 || display === 2\n        });\n      },\n      print: event => {\n        this.annotationStorage.setValue(this.data.id, {\n          noPrint: !event.detail.print\n        });\n      },\n      hidden: event => {\n        const {\n          hidden\n        } = event.detail;\n        this.container.style.visibility = hidden ? \"hidden\" : \"visible\";\n        this.annotationStorage.setValue(this.data.id, {\n          noPrint: hidden,\n          noView: hidden\n        });\n      },\n      focus: event => {\n        setTimeout(() => event.target.focus({\n          preventScroll: false\n        }), 0);\n      },\n      userName: event => {\n        event.target.title = event.detail.userName;\n      },\n      readonly: event => {\n        event.target.disabled = event.detail.readonly;\n      },\n      required: event => {\n        this._setRequired(event.target, event.detail.required);\n      },\n      bgColor: event => {\n        setColor(\"bgColor\", \"backgroundColor\", event);\n      },\n      fillColor: event => {\n        setColor(\"fillColor\", \"backgroundColor\", event);\n      },\n      fgColor: event => {\n        setColor(\"fgColor\", \"color\", event);\n      },\n      textColor: event => {\n        setColor(\"textColor\", \"color\", event);\n      },\n      borderColor: event => {\n        setColor(\"borderColor\", \"borderColor\", event);\n      },\n      strokeColor: event => {\n        setColor(\"strokeColor\", \"borderColor\", event);\n      },\n      rotation: event => {\n        const angle = event.detail.rotation;\n        this.setRotation(angle);\n        this.annotationStorage.setValue(this.data.id, {\n          rotation: angle\n        });\n      }\n    });\n  }\n  _dispatchEventFromSandbox(actions, jsEvent) {\n    const commonActions = this._commonActions;\n    for (const name of Object.keys(jsEvent.detail)) {\n      const action = actions[name] || commonActions[name];\n      action?.(jsEvent);\n    }\n  }\n  _setDefaultPropertiesFromJS(element) {\n    if (!this.enableScripting) {\n      return;\n    }\n    const storedData = this.annotationStorage.getRawValue(this.data.id);\n    if (!storedData) {\n      return;\n    }\n    const commonActions = this._commonActions;\n    for (const [actionName, detail] of Object.entries(storedData)) {\n      const action = commonActions[actionName];\n      if (action) {\n        const eventProxy = {\n          detail: {\n            [actionName]: detail\n          },\n          target: element\n        };\n        action(eventProxy);\n        delete storedData[actionName];\n      }\n    }\n  }\n  _createQuadrilaterals() {\n    if (!this.container) {\n      return;\n    }\n    const {\n      quadPoints\n    } = this.data;\n    if (!quadPoints) {\n      return;\n    }\n    const [rectBlX, rectBlY, rectTrX, rectTrY] = this.data.rect;\n    if (quadPoints.length === 1) {\n      const [, {\n        x: trX,\n        y: trY\n      }, {\n        x: blX,\n        y: blY\n      }] = quadPoints[0];\n      if (rectTrX === trX && rectTrY === trY && rectBlX === blX && rectBlY === blY) {\n        return;\n      }\n    }\n    const {\n      style\n    } = this.container;\n    let svgBuffer;\n    if (this.#hasBorder) {\n      const {\n        borderColor,\n        borderWidth\n      } = style;\n      style.borderWidth = 0;\n      svgBuffer = [\"url('data:image/svg+xml;utf8,\", `<svg xmlns=\"http://www.w3.org/2000/svg\"`, ` preserveAspectRatio=\"none\" viewBox=\"0 0 1 1\">`, `<g fill=\"transparent\" stroke=\"${borderColor}\" stroke-width=\"${borderWidth}\">`];\n      this.container.classList.add(\"hasBorder\");\n    }\n    const width = rectTrX - rectBlX;\n    const height = rectTrY - rectBlY;\n    const {\n      svgFactory\n    } = this;\n    const svg = svgFactory.createElement(\"svg\");\n    svg.classList.add(\"quadrilateralsContainer\");\n    svg.setAttribute(\"width\", 0);\n    svg.setAttribute(\"height\", 0);\n    const defs = svgFactory.createElement(\"defs\");\n    svg.append(defs);\n    const clipPath = svgFactory.createElement(\"clipPath\");\n    const id = `clippath_${this.data.id}`;\n    clipPath.setAttribute(\"id\", id);\n    clipPath.setAttribute(\"clipPathUnits\", \"objectBoundingBox\");\n    defs.append(clipPath);\n    for (const [, {\n      x: trX,\n      y: trY\n    }, {\n      x: blX,\n      y: blY\n    }] of quadPoints) {\n      const rect = svgFactory.createElement(\"rect\");\n      const x = (blX - rectBlX) / width;\n      const y = (rectTrY - trY) / height;\n      const rectWidth = (trX - blX) / width;\n      const rectHeight = (trY - blY) / height;\n      rect.setAttribute(\"x\", x);\n      rect.setAttribute(\"y\", y);\n      rect.setAttribute(\"width\", rectWidth);\n      rect.setAttribute(\"height\", rectHeight);\n      clipPath.append(rect);\n      svgBuffer?.push(`<rect vector-effect=\"non-scaling-stroke\" x=\"${x}\" y=\"${y}\" width=\"${rectWidth}\" height=\"${rectHeight}\"/>`);\n    }\n    if (this.#hasBorder) {\n      svgBuffer.push(`</g></svg>')`);\n      style.backgroundImage = svgBuffer.join(\"\");\n    }\n    this.container.append(svg);\n    this.container.style.clipPath = `url(#${id})`;\n  }\n  _createPopup() {\n    const {\n      container,\n      data\n    } = this;\n    container.setAttribute(\"aria-haspopup\", \"dialog\");\n    const popup = new PopupAnnotationElement({\n      data: {\n        color: data.color,\n        titleObj: data.titleObj,\n        modificationDate: data.modificationDate,\n        contentsObj: data.contentsObj,\n        richText: data.richText,\n        parentRect: data.rect,\n        borderStyle: 0,\n        id: `popup_${data.id}`,\n        rotation: data.rotation\n      },\n      parent: this.parent,\n      elements: [this]\n    });\n    this.parent.div.append(popup.render());\n  }\n  render() {\n    (0, _util.unreachable)(\"Abstract method `AnnotationElement.render` called\");\n  }\n  _getElementsByName(name, skipId = null) {\n    const fields = [];\n    if (this._fieldObjects) {\n      const fieldObj = this._fieldObjects[name];\n      if (fieldObj) {\n        for (const {\n          page,\n          id,\n          exportValues\n        } of fieldObj) {\n          if (page === -1) {\n            continue;\n          }\n          if (id === skipId) {\n            continue;\n          }\n          const exportValue = typeof exportValues === \"string\" ? exportValues : null;\n          const domElement = document.querySelector(`[data-element-id=\"${id}\"]`);\n          if (domElement && !GetElementsByNameSet.has(domElement)) {\n            (0, _util.warn)(`_getElementsByName - element not allowed: ${id}`);\n            continue;\n          }\n          fields.push({\n            id,\n            exportValue,\n            domElement\n          });\n        }\n      }\n      return fields;\n    }\n    for (const domElement of document.getElementsByName(name)) {\n      const {\n        exportValue\n      } = domElement;\n      const id = domElement.getAttribute(\"data-element-id\");\n      if (id === skipId) {\n        continue;\n      }\n      if (!GetElementsByNameSet.has(domElement)) {\n        continue;\n      }\n      fields.push({\n        id,\n        exportValue,\n        domElement\n      });\n    }\n    return fields;\n  }\n  show() {\n    if (this.container) {\n      this.container.hidden = false;\n    }\n    this.popup?.maybeShow();\n  }\n  hide() {\n    if (this.container) {\n      this.container.hidden = true;\n    }\n    this.popup?.forceHide();\n  }\n  getElementsToTriggerPopup() {\n    return this.container;\n  }\n  addHighlightArea() {\n    const triggers = this.getElementsToTriggerPopup();\n    if (Array.isArray(triggers)) {\n      for (const element of triggers) {\n        element.classList.add(\"highlightArea\");\n      }\n    } else {\n      triggers.classList.add(\"highlightArea\");\n    }\n  }\n  _editOnDoubleClick() {\n    const {\n      annotationEditorType: mode,\n      data: {\n        id: editId\n      }\n    } = this;\n    this.container.addEventListener(\"dblclick\", () => {\n      this.linkService.eventBus?.dispatch(\"switchannotationeditormode\", {\n        source: this,\n        mode,\n        editId\n      });\n    });\n  }\n}\nclass LinkAnnotationElement extends AnnotationElement {\n  constructor(parameters, options = null) {\n    super(parameters, {\n      isRenderable: true,\n      ignoreBorder: !!options?.ignoreBorder,\n      createQuadrilaterals: true\n    });\n    this.isTooltipOnly = parameters.data.isTooltipOnly;\n  }\n  render() {\n    const {\n      data,\n      linkService\n    } = this;\n    const link = document.createElement(\"a\");\n    link.setAttribute(\"data-element-id\", data.id);\n    let isBound = false;\n    if (data.url) {\n      linkService.addLinkAttributes(link, data.url, data.newWindow);\n      isBound = true;\n    } else if (data.action) {\n      this._bindNamedAction(link, data.action);\n      isBound = true;\n    } else if (data.attachment) {\n      this._bindAttachment(link, data.attachment);\n      isBound = true;\n    } else if (data.setOCGState) {\n      this.#bindSetOCGState(link, data.setOCGState);\n      isBound = true;\n    } else if (data.dest) {\n      this._bindLink(link, data.dest);\n      isBound = true;\n    } else {\n      if (data.actions && (data.actions.Action || data.actions[\"Mouse Up\"] || data.actions[\"Mouse Down\"]) && this.enableScripting && this.hasJSActions) {\n        this._bindJSAction(link, data);\n        isBound = true;\n      }\n      if (data.resetForm) {\n        this._bindResetFormAction(link, data.resetForm);\n        isBound = true;\n      } else if (this.isTooltipOnly && !isBound) {\n        this._bindLink(link, \"\");\n        isBound = true;\n      }\n    }\n    this.container.classList.add(\"linkAnnotation\");\n    if (isBound) {\n      this.container.append(link);\n    }\n    return this.container;\n  }\n  #setInternalLink() {\n    this.container.setAttribute(\"data-internal-link\", \"\");\n  }\n  _bindLink(link, destination) {\n    link.href = this.linkService.getDestinationHash(destination);\n    link.onclick = () => {\n      if (destination) {\n        this.linkService.goToDestination(destination);\n      }\n      return false;\n    };\n    if (destination || destination === \"\") {\n      this.#setInternalLink();\n    }\n  }\n  _bindNamedAction(link, action) {\n    link.href = this.linkService.getAnchorUrl(\"\");\n    link.onclick = () => {\n      this.linkService.executeNamedAction(action);\n      return false;\n    };\n    this.#setInternalLink();\n  }\n  _bindAttachment(link, attachment) {\n    link.href = this.linkService.getAnchorUrl(\"\");\n    link.onclick = () => {\n      this.downloadManager?.openOrDownloadData(this.container, attachment.content, attachment.filename);\n      return false;\n    };\n    this.#setInternalLink();\n  }\n  #bindSetOCGState(link, action) {\n    link.href = this.linkService.getAnchorUrl(\"\");\n    link.onclick = () => {\n      this.linkService.executeSetOCGState(action);\n      return false;\n    };\n    this.#setInternalLink();\n  }\n  _bindJSAction(link, data) {\n    link.href = this.linkService.getAnchorUrl(\"\");\n    const map = new Map([[\"Action\", \"onclick\"], [\"Mouse Up\", \"onmouseup\"], [\"Mouse Down\", \"onmousedown\"]]);\n    for (const name of Object.keys(data.actions)) {\n      const jsName = map.get(name);\n      if (!jsName) {\n        continue;\n      }\n      link[jsName] = () => {\n        this.linkService.eventBus?.dispatch(\"dispatcheventinsandbox\", {\n          source: this,\n          detail: {\n            id: data.id,\n            name\n          }\n        });\n        return false;\n      };\n    }\n    if (!link.onclick) {\n      link.onclick = () => false;\n    }\n    this.#setInternalLink();\n  }\n  _bindResetFormAction(link, resetForm) {\n    const otherClickAction = link.onclick;\n    if (!otherClickAction) {\n      link.href = this.linkService.getAnchorUrl(\"\");\n    }\n    this.#setInternalLink();\n    if (!this._fieldObjects) {\n      (0, _util.warn)(`_bindResetFormAction - \"resetForm\" action not supported, ` + \"ensure that the `fieldObjects` parameter is provided.\");\n      if (!otherClickAction) {\n        link.onclick = () => false;\n      }\n      return;\n    }\n    link.onclick = () => {\n      otherClickAction?.();\n      const {\n        fields: resetFormFields,\n        refs: resetFormRefs,\n        include\n      } = resetForm;\n      const allFields = [];\n      if (resetFormFields.length !== 0 || resetFormRefs.length !== 0) {\n        const fieldIds = new Set(resetFormRefs);\n        for (const fieldName of resetFormFields) {\n          const fields = this._fieldObjects[fieldName] || [];\n          for (const {\n            id\n          } of fields) {\n            fieldIds.add(id);\n          }\n        }\n        for (const fields of Object.values(this._fieldObjects)) {\n          for (const field of fields) {\n            if (fieldIds.has(field.id) === include) {\n              allFields.push(field);\n            }\n          }\n        }\n      } else {\n        for (const fields of Object.values(this._fieldObjects)) {\n          allFields.push(...fields);\n        }\n      }\n      const storage = this.annotationStorage;\n      const allIds = [];\n      for (const field of allFields) {\n        const {\n          id\n        } = field;\n        allIds.push(id);\n        switch (field.type) {\n          case \"text\":\n            {\n              const value = field.defaultValue || \"\";\n              storage.setValue(id, {\n                value\n              });\n              break;\n            }\n          case \"checkbox\":\n          case \"radiobutton\":\n            {\n              const value = field.defaultValue === field.exportValues;\n              storage.setValue(id, {\n                value\n              });\n              break;\n            }\n          case \"combobox\":\n          case \"listbox\":\n            {\n              const value = field.defaultValue || \"\";\n              storage.setValue(id, {\n                value\n              });\n              break;\n            }\n          default:\n            continue;\n        }\n        const domElement = document.querySelector(`[data-element-id=\"${id}\"]`);\n        if (!domElement) {\n          continue;\n        } else if (!GetElementsByNameSet.has(domElement)) {\n          (0, _util.warn)(`_bindResetFormAction - element not allowed: ${id}`);\n          continue;\n        }\n        domElement.dispatchEvent(new Event(\"resetform\"));\n      }\n      if (this.enableScripting) {\n        this.linkService.eventBus?.dispatch(\"dispatcheventinsandbox\", {\n          source: this,\n          detail: {\n            id: \"app\",\n            ids: allIds,\n            name: \"ResetForm\"\n          }\n        });\n      }\n      return false;\n    };\n  }\n}\nclass TextAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    super(parameters, {\n      isRenderable: true\n    });\n  }\n  render() {\n    this.container.classList.add(\"textAnnotation\");\n    const image = document.createElement(\"img\");\n    image.src = this.imageResourcesPath + \"annotation-\" + this.data.name.toLowerCase() + \".svg\";\n    image.alt = \"[{{type}} Annotation]\";\n    image.dataset.l10nId = \"text_annotation_type\";\n    image.dataset.l10nArgs = JSON.stringify({\n      type: this.data.name\n    });\n    if (!this.data.popupRef && this.hasPopupData) {\n      this._createPopup();\n    }\n    this.container.append(image);\n    return this.container;\n  }\n}\nclass WidgetAnnotationElement extends AnnotationElement {\n  render() {\n    if (this.data.alternativeText) {\n      this.container.title = this.data.alternativeText;\n    }\n    return this.container;\n  }\n  showElementAndHideCanvas(element) {\n    if (this.data.hasOwnCanvas) {\n      if (element.previousSibling?.nodeName === \"CANVAS\") {\n        element.previousSibling.hidden = true;\n      }\n      element.hidden = false;\n    }\n  }\n  _getKeyModifier(event) {\n    const {\n      isWin,\n      isMac\n    } = _util.FeatureTest.platform;\n    return isWin && event.ctrlKey || isMac && event.metaKey;\n  }\n  _setEventListener(element, elementData, baseName, eventName, valueGetter) {\n    if (baseName.includes(\"mouse\")) {\n      element.addEventListener(baseName, event => {\n        this.linkService.eventBus?.dispatch(\"dispatcheventinsandbox\", {\n          source: this,\n          detail: {\n            id: this.data.id,\n            name: eventName,\n            value: valueGetter(event),\n            shift: event.shiftKey,\n            modifier: this._getKeyModifier(event)\n          }\n        });\n      });\n    } else {\n      element.addEventListener(baseName, event => {\n        if (baseName === \"blur\") {\n          if (!elementData.focused || !event.relatedTarget) {\n            return;\n          }\n          elementData.focused = false;\n        } else if (baseName === \"focus\") {\n          if (elementData.focused) {\n            return;\n          }\n          elementData.focused = true;\n        }\n        if (!valueGetter) {\n          return;\n        }\n        this.linkService.eventBus?.dispatch(\"dispatcheventinsandbox\", {\n          source: this,\n          detail: {\n            id: this.data.id,\n            name: eventName,\n            value: valueGetter(event)\n          }\n        });\n      });\n    }\n  }\n  _setEventListeners(element, elementData, names, getter) {\n    for (const [baseName, eventName] of names) {\n      if (eventName === \"Action\" || this.data.actions?.[eventName]) {\n        if (eventName === \"Focus\" || eventName === \"Blur\") {\n          elementData ||= {\n            focused: false\n          };\n        }\n        this._setEventListener(element, elementData, baseName, eventName, getter);\n        if (eventName === \"Focus\" && !this.data.actions?.Blur) {\n          this._setEventListener(element, elementData, \"blur\", \"Blur\", null);\n        } else if (eventName === \"Blur\" && !this.data.actions?.Focus) {\n          this._setEventListener(element, elementData, \"focus\", \"Focus\", null);\n        }\n      }\n    }\n  }\n  _setBackgroundColor(element) {\n    const color = this.data.backgroundColor || null;\n    element.style.backgroundColor = color === null ? \"transparent\" : _util.Util.makeHexColor(color[0], color[1], color[2]);\n  }\n  _setTextStyle(element) {\n    const TEXT_ALIGNMENT = [\"left\", \"center\", \"right\"];\n    const {\n      fontColor\n    } = this.data.defaultAppearanceData;\n    const fontSize = this.data.defaultAppearanceData.fontSize || DEFAULT_FONT_SIZE;\n    const style = element.style;\n    let computedFontSize;\n    const BORDER_SIZE = 2;\n    const roundToOneDecimal = x => Math.round(10 * x) / 10;\n    if (this.data.multiLine) {\n      const height = Math.abs(this.data.rect[3] - this.data.rect[1] - BORDER_SIZE);\n      const numberOfLines = Math.round(height / (_util.LINE_FACTOR * fontSize)) || 1;\n      const lineHeight = height / numberOfLines;\n      computedFontSize = Math.min(fontSize, roundToOneDecimal(lineHeight / _util.LINE_FACTOR));\n    } else {\n      const height = Math.abs(this.data.rect[3] - this.data.rect[1] - BORDER_SIZE);\n      computedFontSize = Math.min(fontSize, roundToOneDecimal(height / _util.LINE_FACTOR));\n    }\n    style.fontSize = `calc(${computedFontSize}px * var(--scale-factor))`;\n    style.color = _util.Util.makeHexColor(fontColor[0], fontColor[1], fontColor[2]);\n    if (this.data.textAlignment !== null) {\n      style.textAlign = TEXT_ALIGNMENT[this.data.textAlignment];\n    }\n  }\n  _setRequired(element, isRequired) {\n    if (isRequired) {\n      element.setAttribute(\"required\", true);\n    } else {\n      element.removeAttribute(\"required\");\n    }\n    element.setAttribute(\"aria-required\", isRequired);\n  }\n}\nclass TextWidgetAnnotationElement extends WidgetAnnotationElement {\n  constructor(parameters) {\n    const isRenderable = parameters.renderForms || !parameters.data.hasAppearance && !!parameters.data.fieldValue;\n    super(parameters, {\n      isRenderable\n    });\n  }\n  setPropertyOnSiblings(base, key, value, keyInStorage) {\n    const storage = this.annotationStorage;\n    for (const element of this._getElementsByName(base.name, base.id)) {\n      if (element.domElement) {\n        element.domElement[key] = value;\n      }\n      storage.setValue(element.id, {\n        [keyInStorage]: value\n      });\n    }\n  }\n  render() {\n    const storage = this.annotationStorage;\n    const id = this.data.id;\n    this.container.classList.add(\"textWidgetAnnotation\");\n    let element = null;\n    if (this.renderForms) {\n      const storedData = storage.getValue(id, {\n        value: this.data.fieldValue\n      });\n      let textContent = storedData.value || \"\";\n      const maxLen = storage.getValue(id, {\n        charLimit: this.data.maxLen\n      }).charLimit;\n      if (maxLen && textContent.length > maxLen) {\n        textContent = textContent.slice(0, maxLen);\n      }\n      let fieldFormattedValues = storedData.formattedValue || this.data.textContent?.join(\"\\n\") || null;\n      if (fieldFormattedValues && this.data.comb) {\n        fieldFormattedValues = fieldFormattedValues.replaceAll(/\\s+/g, \"\");\n      }\n      const elementData = {\n        userValue: textContent,\n        formattedValue: fieldFormattedValues,\n        lastCommittedValue: null,\n        commitKey: 1,\n        focused: false\n      };\n      if (this.data.multiLine) {\n        element = document.createElement(\"textarea\");\n        element.textContent = fieldFormattedValues ?? textContent;\n        if (this.data.doNotScroll) {\n          element.style.overflowY = \"hidden\";\n        }\n      } else {\n        element = document.createElement(\"input\");\n        element.type = \"text\";\n        element.setAttribute(\"value\", fieldFormattedValues ?? textContent);\n        if (this.data.doNotScroll) {\n          element.style.overflowX = \"hidden\";\n        }\n      }\n      if (this.data.hasOwnCanvas) {\n        element.hidden = true;\n      }\n      GetElementsByNameSet.add(element);\n      element.setAttribute(\"data-element-id\", id);\n      element.disabled = this.data.readOnly;\n      element.name = this.data.fieldName;\n      element.tabIndex = DEFAULT_TAB_INDEX;\n      this._setRequired(element, this.data.required);\n      if (maxLen) {\n        element.maxLength = maxLen;\n      }\n      element.addEventListener(\"input\", event => {\n        storage.setValue(id, {\n          value: event.target.value\n        });\n        this.setPropertyOnSiblings(element, \"value\", event.target.value, \"value\");\n        elementData.formattedValue = null;\n      });\n      element.addEventListener(\"resetform\", event => {\n        const defaultValue = this.data.defaultFieldValue ?? \"\";\n        element.value = elementData.userValue = defaultValue;\n        elementData.formattedValue = null;\n      });\n      let blurListener = event => {\n        const {\n          formattedValue\n        } = elementData;\n        if (formattedValue !== null && formattedValue !== undefined) {\n          event.target.value = formattedValue;\n        }\n        event.target.scrollLeft = 0;\n      };\n      if (this.enableScripting && this.hasJSActions) {\n        element.addEventListener(\"focus\", event => {\n          if (elementData.focused) {\n            return;\n          }\n          const {\n            target\n          } = event;\n          if (elementData.userValue) {\n            target.value = elementData.userValue;\n          }\n          elementData.lastCommittedValue = target.value;\n          elementData.commitKey = 1;\n          elementData.focused = true;\n        });\n        element.addEventListener(\"updatefromsandbox\", jsEvent => {\n          this.showElementAndHideCanvas(jsEvent.target);\n          const actions = {\n            value(event) {\n              elementData.userValue = event.detail.value ?? \"\";\n              storage.setValue(id, {\n                value: elementData.userValue.toString()\n              });\n              event.target.value = elementData.userValue;\n            },\n            formattedValue(event) {\n              const {\n                formattedValue\n              } = event.detail;\n              elementData.formattedValue = formattedValue;\n              if (formattedValue !== null && formattedValue !== undefined && event.target !== document.activeElement) {\n                event.target.value = formattedValue;\n              }\n              storage.setValue(id, {\n                formattedValue\n              });\n            },\n            selRange(event) {\n              event.target.setSelectionRange(...event.detail.selRange);\n            },\n            charLimit: event => {\n              const {\n                charLimit\n              } = event.detail;\n              const {\n                target\n              } = event;\n              if (charLimit === 0) {\n                target.removeAttribute(\"maxLength\");\n                return;\n              }\n              target.setAttribute(\"maxLength\", charLimit);\n              let value = elementData.userValue;\n              if (!value || value.length <= charLimit) {\n                return;\n              }\n              value = value.slice(0, charLimit);\n              target.value = elementData.userValue = value;\n              storage.setValue(id, {\n                value\n              });\n              this.linkService.eventBus?.dispatch(\"dispatcheventinsandbox\", {\n                source: this,\n                detail: {\n                  id,\n                  name: \"Keystroke\",\n                  value,\n                  willCommit: true,\n                  commitKey: 1,\n                  selStart: target.selectionStart,\n                  selEnd: target.selectionEnd\n                }\n              });\n            }\n          };\n          this._dispatchEventFromSandbox(actions, jsEvent);\n        });\n        element.addEventListener(\"keydown\", event => {\n          elementData.commitKey = 1;\n          let commitKey = -1;\n          if (event.key === \"Escape\") {\n            commitKey = 0;\n          } else if (event.key === \"Enter\" && !this.data.multiLine) {\n            commitKey = 2;\n          } else if (event.key === \"Tab\") {\n            elementData.commitKey = 3;\n          }\n          if (commitKey === -1) {\n            return;\n          }\n          const {\n            value\n          } = event.target;\n          if (elementData.lastCommittedValue === value) {\n            return;\n          }\n          elementData.lastCommittedValue = value;\n          elementData.userValue = value;\n          this.linkService.eventBus?.dispatch(\"dispatcheventinsandbox\", {\n            source: this,\n            detail: {\n              id,\n              name: \"Keystroke\",\n              value,\n              willCommit: true,\n              commitKey,\n              selStart: event.target.selectionStart,\n              selEnd: event.target.selectionEnd\n            }\n          });\n        });\n        const _blurListener = blurListener;\n        blurListener = null;\n        element.addEventListener(\"blur\", event => {\n          if (!elementData.focused || !event.relatedTarget) {\n            return;\n          }\n          elementData.focused = false;\n          const {\n            value\n          } = event.target;\n          elementData.userValue = value;\n          if (elementData.lastCommittedValue !== value) {\n            this.linkService.eventBus?.dispatch(\"dispatcheventinsandbox\", {\n              source: this,\n              detail: {\n                id,\n                name: \"Keystroke\",\n                value,\n                willCommit: true,\n                commitKey: elementData.commitKey,\n                selStart: event.target.selectionStart,\n                selEnd: event.target.selectionEnd\n              }\n            });\n          }\n          _blurListener(event);\n        });\n        if (this.data.actions?.Keystroke) {\n          element.addEventListener(\"beforeinput\", event => {\n            elementData.lastCommittedValue = null;\n            const {\n              data,\n              target\n            } = event;\n            const {\n              value,\n              selectionStart,\n              selectionEnd\n            } = target;\n            let selStart = selectionStart,\n              selEnd = selectionEnd;\n            switch (event.inputType) {\n              case \"deleteWordBackward\":\n                {\n                  const match = value.substring(0, selectionStart).match(/\\w*[^\\w]*$/);\n                  if (match) {\n                    selStart -= match[0].length;\n                  }\n                  break;\n                }\n              case \"deleteWordForward\":\n                {\n                  const match = value.substring(selectionStart).match(/^[^\\w]*\\w*/);\n                  if (match) {\n                    selEnd += match[0].length;\n                  }\n                  break;\n                }\n              case \"deleteContentBackward\":\n                if (selectionStart === selectionEnd) {\n                  selStart -= 1;\n                }\n                break;\n              case \"deleteContentForward\":\n                if (selectionStart === selectionEnd) {\n                  selEnd += 1;\n                }\n                break;\n            }\n            event.preventDefault();\n            this.linkService.eventBus?.dispatch(\"dispatcheventinsandbox\", {\n              source: this,\n              detail: {\n                id,\n                name: \"Keystroke\",\n                value,\n                change: data || \"\",\n                willCommit: false,\n                selStart,\n                selEnd\n              }\n            });\n          });\n        }\n        this._setEventListeners(element, elementData, [[\"focus\", \"Focus\"], [\"blur\", \"Blur\"], [\"mousedown\", \"Mouse Down\"], [\"mouseenter\", \"Mouse Enter\"], [\"mouseleave\", \"Mouse Exit\"], [\"mouseup\", \"Mouse Up\"]], event => event.target.value);\n      }\n      if (blurListener) {\n        element.addEventListener(\"blur\", blurListener);\n      }\n      if (this.data.comb) {\n        const fieldWidth = this.data.rect[2] - this.data.rect[0];\n        const combWidth = fieldWidth / maxLen;\n        element.classList.add(\"comb\");\n        element.style.letterSpacing = `calc(${combWidth}px * var(--scale-factor) - 1ch)`;\n      }\n    } else {\n      element = document.createElement(\"div\");\n      element.textContent = this.data.fieldValue;\n      element.style.verticalAlign = \"middle\";\n      element.style.display = \"table-cell\";\n    }\n    this._setTextStyle(element);\n    this._setBackgroundColor(element);\n    this._setDefaultPropertiesFromJS(element);\n    this.container.append(element);\n    return this.container;\n  }\n}\nclass SignatureWidgetAnnotationElement extends WidgetAnnotationElement {\n  constructor(parameters) {\n    super(parameters, {\n      isRenderable: !!parameters.data.hasOwnCanvas\n    });\n  }\n}\nclass CheckboxWidgetAnnotationElement extends WidgetAnnotationElement {\n  constructor(parameters) {\n    super(parameters, {\n      isRenderable: parameters.renderForms\n    });\n  }\n  render() {\n    const storage = this.annotationStorage;\n    const data = this.data;\n    const id = data.id;\n    let value = storage.getValue(id, {\n      value: data.exportValue === data.fieldValue\n    }).value;\n    if (typeof value === \"string\") {\n      value = value !== \"Off\";\n      storage.setValue(id, {\n        value\n      });\n    }\n    this.container.classList.add(\"buttonWidgetAnnotation\", \"checkBox\");\n    const element = document.createElement(\"input\");\n    GetElementsByNameSet.add(element);\n    element.setAttribute(\"data-element-id\", id);\n    element.disabled = data.readOnly;\n    this._setRequired(element, this.data.required);\n    element.type = \"checkbox\";\n    element.name = data.fieldName;\n    if (value) {\n      element.setAttribute(\"checked\", true);\n    }\n    element.setAttribute(\"exportValue\", data.exportValue);\n    element.tabIndex = DEFAULT_TAB_INDEX;\n    element.addEventListener(\"change\", event => {\n      const {\n        name,\n        checked\n      } = event.target;\n      for (const checkbox of this._getElementsByName(name, id)) {\n        const curChecked = checked && checkbox.exportValue === data.exportValue;\n        if (checkbox.domElement) {\n          checkbox.domElement.checked = curChecked;\n        }\n        storage.setValue(checkbox.id, {\n          value: curChecked\n        });\n      }\n      storage.setValue(id, {\n        value: checked\n      });\n    });\n    element.addEventListener(\"resetform\", event => {\n      const defaultValue = data.defaultFieldValue || \"Off\";\n      event.target.checked = defaultValue === data.exportValue;\n    });\n    if (this.enableScripting && this.hasJSActions) {\n      element.addEventListener(\"updatefromsandbox\", jsEvent => {\n        const actions = {\n          value(event) {\n            event.target.checked = event.detail.value !== \"Off\";\n            storage.setValue(id, {\n              value: event.target.checked\n            });\n          }\n        };\n        this._dispatchEventFromSandbox(actions, jsEvent);\n      });\n      this._setEventListeners(element, null, [[\"change\", \"Validate\"], [\"change\", \"Action\"], [\"focus\", \"Focus\"], [\"blur\", \"Blur\"], [\"mousedown\", \"Mouse Down\"], [\"mouseenter\", \"Mouse Enter\"], [\"mouseleave\", \"Mouse Exit\"], [\"mouseup\", \"Mouse Up\"]], event => event.target.checked);\n    }\n    this._setBackgroundColor(element);\n    this._setDefaultPropertiesFromJS(element);\n    this.container.append(element);\n    return this.container;\n  }\n}\nclass RadioButtonWidgetAnnotationElement extends WidgetAnnotationElement {\n  constructor(parameters) {\n    super(parameters, {\n      isRenderable: parameters.renderForms\n    });\n  }\n  render() {\n    this.container.classList.add(\"buttonWidgetAnnotation\", \"radioButton\");\n    const storage = this.annotationStorage;\n    const data = this.data;\n    const id = data.id;\n    let value = storage.getValue(id, {\n      value: data.fieldValue === data.buttonValue\n    }).value;\n    if (typeof value === \"string\") {\n      value = value !== data.buttonValue;\n      storage.setValue(id, {\n        value\n      });\n    }\n    const element = document.createElement(\"input\");\n    GetElementsByNameSet.add(element);\n    element.setAttribute(\"data-element-id\", id);\n    element.disabled = data.readOnly;\n    this._setRequired(element, this.data.required);\n    element.type = \"radio\";\n    element.name = data.fieldName;\n    if (value) {\n      element.setAttribute(\"checked\", true);\n    }\n    element.tabIndex = DEFAULT_TAB_INDEX;\n    element.addEventListener(\"change\", event => {\n      const {\n        name,\n        checked\n      } = event.target;\n      for (const radio of this._getElementsByName(name, id)) {\n        storage.setValue(radio.id, {\n          value: false\n        });\n      }\n      storage.setValue(id, {\n        value: checked\n      });\n    });\n    element.addEventListener(\"resetform\", event => {\n      const defaultValue = data.defaultFieldValue;\n      event.target.checked = defaultValue !== null && defaultValue !== undefined && defaultValue === data.buttonValue;\n    });\n    if (this.enableScripting && this.hasJSActions) {\n      const pdfButtonValue = data.buttonValue;\n      element.addEventListener(\"updatefromsandbox\", jsEvent => {\n        const actions = {\n          value: event => {\n            const checked = pdfButtonValue === event.detail.value;\n            for (const radio of this._getElementsByName(event.target.name)) {\n              const curChecked = checked && radio.id === id;\n              if (radio.domElement) {\n                radio.domElement.checked = curChecked;\n              }\n              storage.setValue(radio.id, {\n                value: curChecked\n              });\n            }\n          }\n        };\n        this._dispatchEventFromSandbox(actions, jsEvent);\n      });\n      this._setEventListeners(element, null, [[\"change\", \"Validate\"], [\"change\", \"Action\"], [\"focus\", \"Focus\"], [\"blur\", \"Blur\"], [\"mousedown\", \"Mouse Down\"], [\"mouseenter\", \"Mouse Enter\"], [\"mouseleave\", \"Mouse Exit\"], [\"mouseup\", \"Mouse Up\"]], event => event.target.checked);\n    }\n    this._setBackgroundColor(element);\n    this._setDefaultPropertiesFromJS(element);\n    this.container.append(element);\n    return this.container;\n  }\n}\nclass PushButtonWidgetAnnotationElement extends LinkAnnotationElement {\n  constructor(parameters) {\n    super(parameters, {\n      ignoreBorder: parameters.data.hasAppearance\n    });\n  }\n  render() {\n    const container = super.render();\n    container.classList.add(\"buttonWidgetAnnotation\", \"pushButton\");\n    if (this.data.alternativeText) {\n      container.title = this.data.alternativeText;\n    }\n    const linkElement = container.lastChild;\n    if (this.enableScripting && this.hasJSActions && linkElement) {\n      this._setDefaultPropertiesFromJS(linkElement);\n      linkElement.addEventListener(\"updatefromsandbox\", jsEvent => {\n        this._dispatchEventFromSandbox({}, jsEvent);\n      });\n    }\n    return container;\n  }\n}\nclass ChoiceWidgetAnnotationElement extends WidgetAnnotationElement {\n  constructor(parameters) {\n    super(parameters, {\n      isRenderable: parameters.renderForms\n    });\n  }\n  render() {\n    this.container.classList.add(\"choiceWidgetAnnotation\");\n    const storage = this.annotationStorage;\n    const id = this.data.id;\n    const storedData = storage.getValue(id, {\n      value: this.data.fieldValue\n    });\n    const selectElement = document.createElement(\"select\");\n    GetElementsByNameSet.add(selectElement);\n    selectElement.setAttribute(\"data-element-id\", id);\n    selectElement.disabled = this.data.readOnly;\n    this._setRequired(selectElement, this.data.required);\n    selectElement.name = this.data.fieldName;\n    selectElement.tabIndex = DEFAULT_TAB_INDEX;\n    let addAnEmptyEntry = this.data.combo && this.data.options.length > 0;\n    if (!this.data.combo) {\n      selectElement.size = this.data.options.length;\n      if (this.data.multiSelect) {\n        selectElement.multiple = true;\n      }\n    }\n    selectElement.addEventListener(\"resetform\", event => {\n      const defaultValue = this.data.defaultFieldValue;\n      for (const option of selectElement.options) {\n        option.selected = option.value === defaultValue;\n      }\n    });\n    for (const option of this.data.options) {\n      const optionElement = document.createElement(\"option\");\n      optionElement.textContent = option.displayValue;\n      optionElement.value = option.exportValue;\n      if (storedData.value.includes(option.exportValue)) {\n        optionElement.setAttribute(\"selected\", true);\n        addAnEmptyEntry = false;\n      }\n      selectElement.append(optionElement);\n    }\n    let removeEmptyEntry = null;\n    if (addAnEmptyEntry) {\n      const noneOptionElement = document.createElement(\"option\");\n      noneOptionElement.value = \" \";\n      noneOptionElement.setAttribute(\"hidden\", true);\n      noneOptionElement.setAttribute(\"selected\", true);\n      selectElement.prepend(noneOptionElement);\n      removeEmptyEntry = () => {\n        noneOptionElement.remove();\n        selectElement.removeEventListener(\"input\", removeEmptyEntry);\n        removeEmptyEntry = null;\n      };\n      selectElement.addEventListener(\"input\", removeEmptyEntry);\n    }\n    const getValue = isExport => {\n      const name = isExport ? \"value\" : \"textContent\";\n      const {\n        options,\n        multiple\n      } = selectElement;\n      if (!multiple) {\n        return options.selectedIndex === -1 ? null : options[options.selectedIndex][name];\n      }\n      return Array.prototype.filter.call(options, option => option.selected).map(option => option[name]);\n    };\n    let selectedValues = getValue(false);\n    const getItems = event => {\n      const options = event.target.options;\n      return Array.prototype.map.call(options, option => {\n        return {\n          displayValue: option.textContent,\n          exportValue: option.value\n        };\n      });\n    };\n    if (this.enableScripting && this.hasJSActions) {\n      selectElement.addEventListener(\"updatefromsandbox\", jsEvent => {\n        const actions = {\n          value(event) {\n            removeEmptyEntry?.();\n            const value = event.detail.value;\n            const values = new Set(Array.isArray(value) ? value : [value]);\n            for (const option of selectElement.options) {\n              option.selected = values.has(option.value);\n            }\n            storage.setValue(id, {\n              value: getValue(true)\n            });\n            selectedValues = getValue(false);\n          },\n          multipleSelection(event) {\n            selectElement.multiple = true;\n          },\n          remove(event) {\n            const options = selectElement.options;\n            const index = event.detail.remove;\n            options[index].selected = false;\n            selectElement.remove(index);\n            if (options.length > 0) {\n              const i = Array.prototype.findIndex.call(options, option => option.selected);\n              if (i === -1) {\n                options[0].selected = true;\n              }\n            }\n            storage.setValue(id, {\n              value: getValue(true),\n              items: getItems(event)\n            });\n            selectedValues = getValue(false);\n          },\n          clear(event) {\n            while (selectElement.length !== 0) {\n              selectElement.remove(0);\n            }\n            storage.setValue(id, {\n              value: null,\n              items: []\n            });\n            selectedValues = getValue(false);\n          },\n          insert(event) {\n            const {\n              index,\n              displayValue,\n              exportValue\n            } = event.detail.insert;\n            const selectChild = selectElement.children[index];\n            const optionElement = document.createElement(\"option\");\n            optionElement.textContent = displayValue;\n            optionElement.value = exportValue;\n            if (selectChild) {\n              selectChild.before(optionElement);\n            } else {\n              selectElement.append(optionElement);\n            }\n            storage.setValue(id, {\n              value: getValue(true),\n              items: getItems(event)\n            });\n            selectedValues = getValue(false);\n          },\n          items(event) {\n            const {\n              items\n            } = event.detail;\n            while (selectElement.length !== 0) {\n              selectElement.remove(0);\n            }\n            for (const item of items) {\n              const {\n                displayValue,\n                exportValue\n              } = item;\n              const optionElement = document.createElement(\"option\");\n              optionElement.textContent = displayValue;\n              optionElement.value = exportValue;\n              selectElement.append(optionElement);\n            }\n            if (selectElement.options.length > 0) {\n              selectElement.options[0].selected = true;\n            }\n            storage.setValue(id, {\n              value: getValue(true),\n              items: getItems(event)\n            });\n            selectedValues = getValue(false);\n          },\n          indices(event) {\n            const indices = new Set(event.detail.indices);\n            for (const option of event.target.options) {\n              option.selected = indices.has(option.index);\n            }\n            storage.setValue(id, {\n              value: getValue(true)\n            });\n            selectedValues = getValue(false);\n          },\n          editable(event) {\n            event.target.disabled = !event.detail.editable;\n          }\n        };\n        this._dispatchEventFromSandbox(actions, jsEvent);\n      });\n      selectElement.addEventListener(\"input\", event => {\n        const exportValue = getValue(true);\n        storage.setValue(id, {\n          value: exportValue\n        });\n        event.preventDefault();\n        this.linkService.eventBus?.dispatch(\"dispatcheventinsandbox\", {\n          source: this,\n          detail: {\n            id,\n            name: \"Keystroke\",\n            value: selectedValues,\n            changeEx: exportValue,\n            willCommit: false,\n            commitKey: 1,\n            keyDown: false\n          }\n        });\n      });\n      this._setEventListeners(selectElement, null, [[\"focus\", \"Focus\"], [\"blur\", \"Blur\"], [\"mousedown\", \"Mouse Down\"], [\"mouseenter\", \"Mouse Enter\"], [\"mouseleave\", \"Mouse Exit\"], [\"mouseup\", \"Mouse Up\"], [\"input\", \"Action\"], [\"input\", \"Validate\"]], event => event.target.value);\n    } else {\n      selectElement.addEventListener(\"input\", function (event) {\n        storage.setValue(id, {\n          value: getValue(true)\n        });\n      });\n    }\n    if (this.data.combo) {\n      this._setTextStyle(selectElement);\n    } else {}\n    this._setBackgroundColor(selectElement);\n    this._setDefaultPropertiesFromJS(selectElement);\n    this.container.append(selectElement);\n    return this.container;\n  }\n}\nclass PopupAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    const {\n      data,\n      elements\n    } = parameters;\n    super(parameters, {\n      isRenderable: AnnotationElement._hasPopupData(data)\n    });\n    this.elements = elements;\n  }\n  render() {\n    this.container.classList.add(\"popupAnnotation\");\n    const popup = new PopupElement({\n      container: this.container,\n      color: this.data.color,\n      titleObj: this.data.titleObj,\n      modificationDate: this.data.modificationDate,\n      contentsObj: this.data.contentsObj,\n      richText: this.data.richText,\n      rect: this.data.rect,\n      parentRect: this.data.parentRect || null,\n      parent: this.parent,\n      elements: this.elements,\n      open: this.data.open\n    });\n    const elementIds = [];\n    for (const element of this.elements) {\n      element.popup = popup;\n      elementIds.push(element.data.id);\n      element.addHighlightArea();\n    }\n    this.container.setAttribute(\"aria-controls\", elementIds.map(id => `${_util.AnnotationPrefix}${id}`).join(\",\"));\n    return this.container;\n  }\n}\nclass PopupElement {\n  #dateTimePromise = null;\n  #boundKeyDown = this.#keyDown.bind(this);\n  #boundHide = this.#hide.bind(this);\n  #boundShow = this.#show.bind(this);\n  #boundToggle = this.#toggle.bind(this);\n  #color = null;\n  #container = null;\n  #contentsObj = null;\n  #elements = null;\n  #parent = null;\n  #parentRect = null;\n  #pinned = false;\n  #popup = null;\n  #rect = null;\n  #richText = null;\n  #titleObj = null;\n  #wasVisible = false;\n  constructor({\n    container,\n    color,\n    elements,\n    titleObj,\n    modificationDate,\n    contentsObj,\n    richText,\n    parent,\n    rect,\n    parentRect,\n    open\n  }) {\n    this.#container = container;\n    this.#titleObj = titleObj;\n    this.#contentsObj = contentsObj;\n    this.#richText = richText;\n    this.#parent = parent;\n    this.#color = color;\n    this.#rect = rect;\n    this.#parentRect = parentRect;\n    this.#elements = elements;\n    const dateObject = _display_utils.PDFDateString.toDateObject(modificationDate);\n    if (dateObject) {\n      this.#dateTimePromise = parent.l10n.get(\"annotation_date_string\", {\n        date: dateObject.toLocaleDateString(),\n        time: dateObject.toLocaleTimeString()\n      });\n    }\n    this.trigger = elements.flatMap(e => e.getElementsToTriggerPopup());\n    for (const element of this.trigger) {\n      element.addEventListener(\"click\", this.#boundToggle);\n      element.addEventListener(\"mouseenter\", this.#boundShow);\n      element.addEventListener(\"mouseleave\", this.#boundHide);\n      element.classList.add(\"popupTriggerArea\");\n    }\n    for (const element of elements) {\n      element.container?.addEventListener(\"keydown\", this.#boundKeyDown);\n    }\n    this.#container.hidden = true;\n    if (open) {\n      this.#toggle();\n    }\n  }\n  render() {\n    if (this.#popup) {\n      return;\n    }\n    const {\n      page: {\n        view\n      },\n      viewport: {\n        rawDims: {\n          pageWidth,\n          pageHeight,\n          pageX,\n          pageY\n        }\n      }\n    } = this.#parent;\n    const popup = this.#popup = document.createElement(\"div\");\n    popup.className = \"popup\";\n    if (this.#color) {\n      const baseColor = popup.style.outlineColor = _util.Util.makeHexColor(...this.#color);\n      if (CSS.supports(\"background-color\", \"color-mix(in srgb, red 30%, white)\")) {\n        popup.style.backgroundColor = `color-mix(in srgb, ${baseColor} 30%, white)`;\n      } else {\n        const BACKGROUND_ENLIGHT = 0.7;\n        popup.style.backgroundColor = _util.Util.makeHexColor(...this.#color.map(c => Math.floor(BACKGROUND_ENLIGHT * (255 - c) + c)));\n      }\n    }\n    const header = document.createElement(\"span\");\n    header.className = \"header\";\n    const title = document.createElement(\"h1\");\n    header.append(title);\n    ({\n      dir: title.dir,\n      str: title.textContent\n    } = this.#titleObj);\n    popup.append(header);\n    if (this.#dateTimePromise) {\n      const modificationDate = document.createElement(\"span\");\n      modificationDate.classList.add(\"popupDate\");\n      this.#dateTimePromise.then(localized => {\n        modificationDate.textContent = localized;\n      });\n      header.append(modificationDate);\n    }\n    const contentsObj = this.#contentsObj;\n    const richText = this.#richText;\n    if (richText?.str && (!contentsObj?.str || contentsObj.str === richText.str)) {\n      _xfa_layer.XfaLayer.render({\n        xfaHtml: richText.html,\n        intent: \"richText\",\n        div: popup\n      });\n      popup.lastChild.classList.add(\"richText\", \"popupContent\");\n    } else {\n      const contents = this._formatContents(contentsObj);\n      popup.append(contents);\n    }\n    let useParentRect = !!this.#parentRect;\n    let rect = useParentRect ? this.#parentRect : this.#rect;\n    for (const element of this.#elements) {\n      if (!rect || _util.Util.intersect(element.data.rect, rect) !== null) {\n        rect = element.data.rect;\n        useParentRect = true;\n        break;\n      }\n    }\n    const normalizedRect = _util.Util.normalizeRect([rect[0], view[3] - rect[1] + view[1], rect[2], view[3] - rect[3] + view[1]]);\n    const HORIZONTAL_SPACE_AFTER_ANNOTATION = 5;\n    const parentWidth = useParentRect ? rect[2] - rect[0] + HORIZONTAL_SPACE_AFTER_ANNOTATION : 0;\n    const popupLeft = normalizedRect[0] + parentWidth;\n    const popupTop = normalizedRect[1];\n    const {\n      style\n    } = this.#container;\n    style.left = `${100 * (popupLeft - pageX) / pageWidth}%`;\n    style.top = `${100 * (popupTop - pageY) / pageHeight}%`;\n    this.#container.append(popup);\n  }\n  _formatContents({\n    str,\n    dir\n  }) {\n    const p = document.createElement(\"p\");\n    p.classList.add(\"popupContent\");\n    p.dir = dir;\n    const lines = str.split(/(?:\\r\\n?|\\n)/);\n    for (let i = 0, ii = lines.length; i < ii; ++i) {\n      const line = lines[i];\n      p.append(document.createTextNode(line));\n      if (i < ii - 1) {\n        p.append(document.createElement(\"br\"));\n      }\n    }\n    return p;\n  }\n  #keyDown(event) {\n    if (event.altKey || event.shiftKey || event.ctrlKey || event.metaKey) {\n      return;\n    }\n    if (event.key === \"Enter\" || event.key === \"Escape\" && this.#pinned) {\n      this.#toggle();\n    }\n  }\n  #toggle() {\n    this.#pinned = !this.#pinned;\n    if (this.#pinned) {\n      this.#show();\n      this.#container.addEventListener(\"click\", this.#boundToggle);\n      this.#container.addEventListener(\"keydown\", this.#boundKeyDown);\n    } else {\n      this.#hide();\n      this.#container.removeEventListener(\"click\", this.#boundToggle);\n      this.#container.removeEventListener(\"keydown\", this.#boundKeyDown);\n    }\n  }\n  #show() {\n    if (!this.#popup) {\n      this.render();\n    }\n    if (!this.isVisible) {\n      this.#container.hidden = false;\n      this.#container.style.zIndex = parseInt(this.#container.style.zIndex) + 1000;\n    } else if (this.#pinned) {\n      this.#container.classList.add(\"focused\");\n    }\n  }\n  #hide() {\n    this.#container.classList.remove(\"focused\");\n    if (this.#pinned || !this.isVisible) {\n      return;\n    }\n    this.#container.hidden = true;\n    this.#container.style.zIndex = parseInt(this.#container.style.zIndex) - 1000;\n  }\n  forceHide() {\n    this.#wasVisible = this.isVisible;\n    if (!this.#wasVisible) {\n      return;\n    }\n    this.#container.hidden = true;\n  }\n  maybeShow() {\n    if (!this.#wasVisible) {\n      return;\n    }\n    this.#wasVisible = false;\n    this.#container.hidden = false;\n  }\n  get isVisible() {\n    return this.#container.hidden === false;\n  }\n}\nclass FreeTextAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    super(parameters, {\n      isRenderable: true,\n      ignoreBorder: true\n    });\n    this.textContent = parameters.data.textContent;\n    this.textPosition = parameters.data.textPosition;\n    this.annotationEditorType = _util.AnnotationEditorType.FREETEXT;\n  }\n  render() {\n    this.container.classList.add(\"freeTextAnnotation\");\n    if (this.textContent) {\n      const content = document.createElement(\"div\");\n      content.classList.add(\"annotationTextContent\");\n      content.setAttribute(\"role\", \"comment\");\n      for (const line of this.textContent) {\n        const lineSpan = document.createElement(\"span\");\n        lineSpan.textContent = line;\n        content.append(lineSpan);\n      }\n      this.container.append(content);\n    }\n    if (!this.data.popupRef && this.hasPopupData) {\n      this._createPopup();\n    }\n    this._editOnDoubleClick();\n    return this.container;\n  }\n}\nexports.FreeTextAnnotationElement = FreeTextAnnotationElement;\nclass LineAnnotationElement extends AnnotationElement {\n  #line = null;\n  constructor(parameters) {\n    super(parameters, {\n      isRenderable: true,\n      ignoreBorder: true\n    });\n  }\n  render() {\n    this.container.classList.add(\"lineAnnotation\");\n    const data = this.data;\n    const {\n      width,\n      height\n    } = getRectDims(data.rect);\n    const svg = this.svgFactory.create(width, height, true);\n    const line = this.#line = this.svgFactory.createElement(\"svg:line\");\n    line.setAttribute(\"x1\", data.rect[2] - data.lineCoordinates[0]);\n    line.setAttribute(\"y1\", data.rect[3] - data.lineCoordinates[1]);\n    line.setAttribute(\"x2\", data.rect[2] - data.lineCoordinates[2]);\n    line.setAttribute(\"y2\", data.rect[3] - data.lineCoordinates[3]);\n    line.setAttribute(\"stroke-width\", data.borderStyle.width || 1);\n    line.setAttribute(\"stroke\", \"transparent\");\n    line.setAttribute(\"fill\", \"transparent\");\n    svg.append(line);\n    this.container.append(svg);\n    if (!data.popupRef && this.hasPopupData) {\n      this._createPopup();\n    }\n    return this.container;\n  }\n  getElementsToTriggerPopup() {\n    return this.#line;\n  }\n  addHighlightArea() {\n    this.container.classList.add(\"highlightArea\");\n  }\n}\nclass SquareAnnotationElement extends AnnotationElement {\n  #square = null;\n  constructor(parameters) {\n    super(parameters, {\n      isRenderable: true,\n      ignoreBorder: true\n    });\n  }\n  render() {\n    this.container.classList.add(\"squareAnnotation\");\n    const data = this.data;\n    const {\n      width,\n      height\n    } = getRectDims(data.rect);\n    const svg = this.svgFactory.create(width, height, true);\n    const borderWidth = data.borderStyle.width;\n    const square = this.#square = this.svgFactory.createElement(\"svg:rect\");\n    square.setAttribute(\"x\", borderWidth / 2);\n    square.setAttribute(\"y\", borderWidth / 2);\n    square.setAttribute(\"width\", width - borderWidth);\n    square.setAttribute(\"height\", height - borderWidth);\n    square.setAttribute(\"stroke-width\", borderWidth || 1);\n    square.setAttribute(\"stroke\", \"transparent\");\n    square.setAttribute(\"fill\", \"transparent\");\n    svg.append(square);\n    this.container.append(svg);\n    if (!data.popupRef && this.hasPopupData) {\n      this._createPopup();\n    }\n    return this.container;\n  }\n  getElementsToTriggerPopup() {\n    return this.#square;\n  }\n  addHighlightArea() {\n    this.container.classList.add(\"highlightArea\");\n  }\n}\nclass CircleAnnotationElement extends AnnotationElement {\n  #circle = null;\n  constructor(parameters) {\n    super(parameters, {\n      isRenderable: true,\n      ignoreBorder: true\n    });\n  }\n  render() {\n    this.container.classList.add(\"circleAnnotation\");\n    const data = this.data;\n    const {\n      width,\n      height\n    } = getRectDims(data.rect);\n    const svg = this.svgFactory.create(width, height, true);\n    const borderWidth = data.borderStyle.width;\n    const circle = this.#circle = this.svgFactory.createElement(\"svg:ellipse\");\n    circle.setAttribute(\"cx\", width / 2);\n    circle.setAttribute(\"cy\", height / 2);\n    circle.setAttribute(\"rx\", width / 2 - borderWidth / 2);\n    circle.setAttribute(\"ry\", height / 2 - borderWidth / 2);\n    circle.setAttribute(\"stroke-width\", borderWidth || 1);\n    circle.setAttribute(\"stroke\", \"transparent\");\n    circle.setAttribute(\"fill\", \"transparent\");\n    svg.append(circle);\n    this.container.append(svg);\n    if (!data.popupRef && this.hasPopupData) {\n      this._createPopup();\n    }\n    return this.container;\n  }\n  getElementsToTriggerPopup() {\n    return this.#circle;\n  }\n  addHighlightArea() {\n    this.container.classList.add(\"highlightArea\");\n  }\n}\nclass PolylineAnnotationElement extends AnnotationElement {\n  #polyline = null;\n  constructor(parameters) {\n    super(parameters, {\n      isRenderable: true,\n      ignoreBorder: true\n    });\n    this.containerClassName = \"polylineAnnotation\";\n    this.svgElementName = \"svg:polyline\";\n  }\n  render() {\n    this.container.classList.add(this.containerClassName);\n    const data = this.data;\n    const {\n      width,\n      height\n    } = getRectDims(data.rect);\n    const svg = this.svgFactory.create(width, height, true);\n    let points = [];\n    for (const coordinate of data.vertices) {\n      const x = coordinate.x - data.rect[0];\n      const y = data.rect[3] - coordinate.y;\n      points.push(x + \",\" + y);\n    }\n    points = points.join(\" \");\n    const polyline = this.#polyline = this.svgFactory.createElement(this.svgElementName);\n    polyline.setAttribute(\"points\", points);\n    polyline.setAttribute(\"stroke-width\", data.borderStyle.width || 1);\n    polyline.setAttribute(\"stroke\", \"transparent\");\n    polyline.setAttribute(\"fill\", \"transparent\");\n    svg.append(polyline);\n    this.container.append(svg);\n    if (!data.popupRef && this.hasPopupData) {\n      this._createPopup();\n    }\n    return this.container;\n  }\n  getElementsToTriggerPopup() {\n    return this.#polyline;\n  }\n  addHighlightArea() {\n    this.container.classList.add(\"highlightArea\");\n  }\n}\nclass PolygonAnnotationElement extends PolylineAnnotationElement {\n  constructor(parameters) {\n    super(parameters);\n    this.containerClassName = \"polygonAnnotation\";\n    this.svgElementName = \"svg:polygon\";\n  }\n}\nclass CaretAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    super(parameters, {\n      isRenderable: true,\n      ignoreBorder: true\n    });\n  }\n  render() {\n    this.container.classList.add(\"caretAnnotation\");\n    if (!this.data.popupRef && this.hasPopupData) {\n      this._createPopup();\n    }\n    return this.container;\n  }\n}\nclass InkAnnotationElement extends AnnotationElement {\n  #polylines = [];\n  constructor(parameters) {\n    super(parameters, {\n      isRenderable: true,\n      ignoreBorder: true\n    });\n    this.containerClassName = \"inkAnnotation\";\n    this.svgElementName = \"svg:polyline\";\n    this.annotationEditorType = _util.AnnotationEditorType.INK;\n  }\n  render() {\n    this.container.classList.add(this.containerClassName);\n    const data = this.data;\n    const {\n      width,\n      height\n    } = getRectDims(data.rect);\n    const svg = this.svgFactory.create(width, height, true);\n    for (const inkList of data.inkLists) {\n      let points = [];\n      for (const coordinate of inkList) {\n        const x = coordinate.x - data.rect[0];\n        const y = data.rect[3] - coordinate.y;\n        points.push(`${x},${y}`);\n      }\n      points = points.join(\" \");\n      const polyline = this.svgFactory.createElement(this.svgElementName);\n      this.#polylines.push(polyline);\n      polyline.setAttribute(\"points\", points);\n      polyline.setAttribute(\"stroke-width\", data.borderStyle.width || 1);\n      polyline.setAttribute(\"stroke\", \"transparent\");\n      polyline.setAttribute(\"fill\", \"transparent\");\n      if (!data.popupRef && this.hasPopupData) {\n        this._createPopup();\n      }\n      svg.append(polyline);\n    }\n    this.container.append(svg);\n    return this.container;\n  }\n  getElementsToTriggerPopup() {\n    return this.#polylines;\n  }\n  addHighlightArea() {\n    this.container.classList.add(\"highlightArea\");\n  }\n}\nexports.InkAnnotationElement = InkAnnotationElement;\nclass HighlightAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    super(parameters, {\n      isRenderable: true,\n      ignoreBorder: true,\n      createQuadrilaterals: true\n    });\n  }\n  render() {\n    if (!this.data.popupRef && this.hasPopupData) {\n      this._createPopup();\n    }\n    this.container.classList.add(\"highlightAnnotation\");\n    return this.container;\n  }\n}\nclass UnderlineAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    super(parameters, {\n      isRenderable: true,\n      ignoreBorder: true,\n      createQuadrilaterals: true\n    });\n  }\n  render() {\n    if (!this.data.popupRef && this.hasPopupData) {\n      this._createPopup();\n    }\n    this.container.classList.add(\"underlineAnnotation\");\n    return this.container;\n  }\n}\nclass SquigglyAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    super(parameters, {\n      isRenderable: true,\n      ignoreBorder: true,\n      createQuadrilaterals: true\n    });\n  }\n  render() {\n    if (!this.data.popupRef && this.hasPopupData) {\n      this._createPopup();\n    }\n    this.container.classList.add(\"squigglyAnnotation\");\n    return this.container;\n  }\n}\nclass StrikeOutAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    super(parameters, {\n      isRenderable: true,\n      ignoreBorder: true,\n      createQuadrilaterals: true\n    });\n  }\n  render() {\n    if (!this.data.popupRef && this.hasPopupData) {\n      this._createPopup();\n    }\n    this.container.classList.add(\"strikeoutAnnotation\");\n    return this.container;\n  }\n}\nclass StampAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    super(parameters, {\n      isRenderable: true,\n      ignoreBorder: true\n    });\n  }\n  render() {\n    this.container.classList.add(\"stampAnnotation\");\n    if (!this.data.popupRef && this.hasPopupData) {\n      this._createPopup();\n    }\n    return this.container;\n  }\n}\nexports.StampAnnotationElement = StampAnnotationElement;\nclass FileAttachmentAnnotationElement extends AnnotationElement {\n  #trigger = null;\n  constructor(parameters) {\n    super(parameters, {\n      isRenderable: true\n    });\n    const {\n      filename,\n      content\n    } = this.data.file;\n    this.filename = (0, _display_utils.getFilenameFromUrl)(filename, true);\n    this.content = content;\n    this.linkService.eventBus?.dispatch(\"fileattachmentannotation\", {\n      source: this,\n      filename,\n      content\n    });\n  }\n  render() {\n    this.container.classList.add(\"fileAttachmentAnnotation\");\n    const {\n      container,\n      data\n    } = this;\n    let trigger;\n    if (data.hasAppearance || data.fillAlpha === 0) {\n      trigger = document.createElement(\"div\");\n    } else {\n      trigger = document.createElement(\"img\");\n      trigger.src = `${this.imageResourcesPath}annotation-${/paperclip/i.test(data.name) ? \"paperclip\" : \"pushpin\"}.svg`;\n      if (data.fillAlpha && data.fillAlpha < 1) {\n        trigger.style = `filter: opacity(${Math.round(data.fillAlpha * 100)}%);`;\n      }\n    }\n    trigger.addEventListener(\"dblclick\", this.#download.bind(this));\n    this.#trigger = trigger;\n    const {\n      isMac\n    } = _util.FeatureTest.platform;\n    container.addEventListener(\"keydown\", evt => {\n      if (evt.key === \"Enter\" && (isMac ? evt.metaKey : evt.ctrlKey)) {\n        this.#download();\n      }\n    });\n    if (!data.popupRef && this.hasPopupData) {\n      this._createPopup();\n    } else {\n      trigger.classList.add(\"popupTriggerArea\");\n    }\n    container.append(trigger);\n    return container;\n  }\n  getElementsToTriggerPopup() {\n    return this.#trigger;\n  }\n  addHighlightArea() {\n    this.container.classList.add(\"highlightArea\");\n  }\n  #download() {\n    this.downloadManager?.openOrDownloadData(this.container, this.content, this.filename);\n  }\n}\nclass AnnotationLayer {\n  #accessibilityManager = null;\n  #annotationCanvasMap = null;\n  #editableAnnotations = new Map();\n  constructor({\n    div,\n    accessibilityManager,\n    annotationCanvasMap,\n    l10n,\n    page,\n    viewport\n  }) {\n    this.div = div;\n    this.#accessibilityManager = accessibilityManager;\n    this.#annotationCanvasMap = annotationCanvasMap;\n    this.l10n = l10n;\n    this.page = page;\n    this.viewport = viewport;\n    this.zIndex = 0;\n    this.l10n ||= _displayL10n_utils.NullL10n;\n  }\n  #appendElement(element, id) {\n    const contentElement = element.firstChild || element;\n    contentElement.id = `${_util.AnnotationPrefix}${id}`;\n    this.div.append(element);\n    this.#accessibilityManager?.moveElementInDOM(this.div, element, contentElement, false);\n  }\n  async render(params) {\n    const {\n      annotations\n    } = params;\n    const layer = this.div;\n    (0, _display_utils.setLayerDimensions)(layer, this.viewport);\n    const popupToElements = new Map();\n    const elementParams = {\n      data: null,\n      layer,\n      linkService: params.linkService,\n      downloadManager: params.downloadManager,\n      imageResourcesPath: params.imageResourcesPath || \"\",\n      renderForms: params.renderForms !== false,\n      svgFactory: new _display_utils.DOMSVGFactory(),\n      annotationStorage: params.annotationStorage || new _annotation_storage.AnnotationStorage(),\n      enableScripting: params.enableScripting === true,\n      hasJSActions: params.hasJSActions,\n      fieldObjects: params.fieldObjects,\n      parent: this,\n      elements: null\n    };\n    for (const data of annotations) {\n      if (data.noHTML) {\n        continue;\n      }\n      const isPopupAnnotation = data.annotationType === _util.AnnotationType.POPUP;\n      if (!isPopupAnnotation) {\n        const {\n          width,\n          height\n        } = getRectDims(data.rect);\n        if (width <= 0 || height <= 0) {\n          continue;\n        }\n      } else {\n        const elements = popupToElements.get(data.id);\n        if (!elements) {\n          continue;\n        }\n        elementParams.elements = elements;\n      }\n      elementParams.data = data;\n      const element = AnnotationElementFactory.create(elementParams);\n      if (!element.isRenderable) {\n        continue;\n      }\n      if (!isPopupAnnotation && data.popupRef) {\n        const elements = popupToElements.get(data.popupRef);\n        if (!elements) {\n          popupToElements.set(data.popupRef, [element]);\n        } else {\n          elements.push(element);\n        }\n      }\n      if (element.annotationEditorType > 0) {\n        this.#editableAnnotations.set(element.data.id, element);\n      }\n      const rendered = element.render();\n      if (data.hidden) {\n        rendered.style.visibility = \"hidden\";\n      }\n      this.#appendElement(rendered, data.id);\n    }\n    this.#setAnnotationCanvasMap();\n    await this.l10n.translate(layer);\n  }\n  update({\n    viewport\n  }) {\n    const layer = this.div;\n    this.viewport = viewport;\n    (0, _display_utils.setLayerDimensions)(layer, {\n      rotation: viewport.rotation\n    });\n    this.#setAnnotationCanvasMap();\n    layer.hidden = false;\n  }\n  #setAnnotationCanvasMap() {\n    if (!this.#annotationCanvasMap) {\n      return;\n    }\n    const layer = this.div;\n    for (const [id, canvas] of this.#annotationCanvasMap) {\n      const element = layer.querySelector(`[data-annotation-id=\"${id}\"]`);\n      if (!element) {\n        continue;\n      }\n      const {\n        firstChild\n      } = element;\n      if (!firstChild) {\n        element.append(canvas);\n      } else if (firstChild.nodeName === \"CANVAS\") {\n        firstChild.replaceWith(canvas);\n      } else {\n        firstChild.before(canvas);\n      }\n    }\n    this.#annotationCanvasMap.clear();\n  }\n  getEditableAnnotations() {\n    return Array.from(this.#editableAnnotations.values());\n  }\n  getEditableAnnotation(id) {\n    return this.#editableAnnotations.get(id);\n  }\n}\nexports.AnnotationLayer = AnnotationLayer;\n\n/***/ }),\n/* 30 */\n/***/ ((__unused_webpack_module, exports) => {\n\n\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.ColorConverters = void 0;\nfunction makeColorComp(n) {\n  return Math.floor(Math.max(0, Math.min(1, n)) * 255).toString(16).padStart(2, \"0\");\n}\nfunction scaleAndClamp(x) {\n  return Math.max(0, Math.min(255, 255 * x));\n}\nclass ColorConverters {\n  static CMYK_G([c, y, m, k]) {\n    return [\"G\", 1 - Math.min(1, 0.3 * c + 0.59 * m + 0.11 * y + k)];\n  }\n  static G_CMYK([g]) {\n    return [\"CMYK\", 0, 0, 0, 1 - g];\n  }\n  static G_RGB([g]) {\n    return [\"RGB\", g, g, g];\n  }\n  static G_rgb([g]) {\n    g = scaleAndClamp(g);\n    return [g, g, g];\n  }\n  static G_HTML([g]) {\n    const G = makeColorComp(g);\n    return `#${G}${G}${G}`;\n  }\n  static RGB_G([r, g, b]) {\n    return [\"G\", 0.3 * r + 0.59 * g + 0.11 * b];\n  }\n  static RGB_rgb(color) {\n    return color.map(scaleAndClamp);\n  }\n  static RGB_HTML(color) {\n    return `#${color.map(makeColorComp).join(\"\")}`;\n  }\n  static T_HTML() {\n    return \"#00000000\";\n  }\n  static T_rgb() {\n    return [null];\n  }\n  static CMYK_RGB([c, y, m, k]) {\n    return [\"RGB\", 1 - Math.min(1, c + k), 1 - Math.min(1, m + k), 1 - Math.min(1, y + k)];\n  }\n  static CMYK_rgb([c, y, m, k]) {\n    return [scaleAndClamp(1 - Math.min(1, c + k)), scaleAndClamp(1 - Math.min(1, m + k)), scaleAndClamp(1 - Math.min(1, y + k))];\n  }\n  static CMYK_HTML(components) {\n    const rgb = this.CMYK_RGB(components).slice(1);\n    return this.RGB_HTML(rgb);\n  }\n  static RGB_CMYK([r, g, b]) {\n    const c = 1 - r;\n    const m = 1 - g;\n    const y = 1 - b;\n    const k = Math.min(c, m, y);\n    return [\"CMYK\", c, m, y, k];\n  }\n}\nexports.ColorConverters = ColorConverters;\n\n/***/ }),\n/* 31 */\n/***/ ((__unused_webpack_module, exports) => {\n\n\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.NullL10n = void 0;\nexports.getL10nFallback = getL10nFallback;\nconst DEFAULT_L10N_STRINGS = {\n  of_pages: \"of {{pagesCount}}\",\n  page_of_pages: \"({{pageNumber}} of {{pagesCount}})\",\n  document_properties_kb: \"{{size_kb}} KB ({{size_b}} bytes)\",\n  document_properties_mb: \"{{size_mb}} MB ({{size_b}} bytes)\",\n  document_properties_date_string: \"{{date}}, {{time}}\",\n  document_properties_page_size_unit_inches: \"in\",\n  document_properties_page_size_unit_millimeters: \"mm\",\n  document_properties_page_size_orientation_portrait: \"portrait\",\n  document_properties_page_size_orientation_landscape: \"landscape\",\n  document_properties_page_size_name_a3: \"A3\",\n  document_properties_page_size_name_a4: \"A4\",\n  document_properties_page_size_name_letter: \"Letter\",\n  document_properties_page_size_name_legal: \"Legal\",\n  document_properties_page_size_dimension_string: \"{{width}} × {{height}} {{unit}} ({{orientation}})\",\n  document_properties_page_size_dimension_name_string: \"{{width}} × {{height}} {{unit}} ({{name}}, {{orientation}})\",\n  document_properties_linearized_yes: \"Yes\",\n  document_properties_linearized_no: \"No\",\n  additional_layers: \"Additional Layers\",\n  page_landmark: \"Page {{page}}\",\n  thumb_page_title: \"Page {{page}}\",\n  thumb_page_canvas: \"Thumbnail of Page {{page}}\",\n  find_reached_top: \"Reached top of document, continued from bottom\",\n  find_reached_bottom: \"Reached end of document, continued from top\",\n  \"find_match_count[one]\": \"{{current}} of {{total}} match\",\n  \"find_match_count[other]\": \"{{current}} of {{total}} matches\",\n  \"find_match_count_limit[one]\": \"More than {{limit}} match\",\n  \"find_match_count_limit[other]\": \"More than {{limit}} matches\",\n  find_not_found: \"Phrase not found\",\n  page_scale_width: \"Page Width\",\n  page_scale_fit: \"Page Fit\",\n  page_scale_auto: \"Automatic Zoom\",\n  page_scale_actual: \"Actual Size\",\n  page_scale_percent: \"{{scale}}%\",\n  loading_error: \"An error occurred while loading the PDF.\",\n  invalid_file_error: \"Invalid or corrupted PDF file.\",\n  missing_file_error: \"Missing PDF file.\",\n  unexpected_response_error: \"Unexpected server response.\",\n  rendering_error: \"An error occurred while rendering the page.\",\n  annotation_date_string: \"{{date}}, {{time}}\",\n  printing_not_supported: \"Warning: Printing is not fully supported by this browser.\",\n  printing_not_ready: \"Warning: The PDF is not fully loaded for printing.\",\n  web_fonts_disabled: \"Web fonts are disabled: unable to use embedded PDF fonts.\",\n  free_text2_default_content: \"Start typing…\",\n  editor_free_text2_aria_label: \"Text Editor\",\n  editor_ink2_aria_label: \"Draw Editor\",\n  editor_ink_canvas_aria_label: \"User-created image\",\n  editor_alt_text_button_label: \"Alt text\",\n  editor_alt_text_edit_button_label: \"Edit alt text\",\n  editor_alt_text_decorative_tooltip: \"Marked as decorative\"\n};\n{\n  DEFAULT_L10N_STRINGS.print_progress_percent = \"{{progress}}%\";\n}\nfunction getL10nFallback(key, args) {\n  switch (key) {\n    case \"find_match_count\":\n      key = `find_match_count[${args.total === 1 ? \"one\" : \"other\"}]`;\n      break;\n    case \"find_match_count_limit\":\n      key = `find_match_count_limit[${args.limit === 1 ? \"one\" : \"other\"}]`;\n      break;\n  }\n  return DEFAULT_L10N_STRINGS[key] || \"\";\n}\nfunction formatL10nValue(text, args) {\n  if (!args) {\n    return text;\n  }\n  return text.replaceAll(/\\{\\{\\s*(\\w+)\\s*\\}\\}/g, (all, name) => {\n    return name in args ? args[name] : \"{{\" + name + \"}}\";\n  });\n}\nconst NullL10n = {\n  async getLanguage() {\n    return \"en-us\";\n  },\n  async getDirection() {\n    return \"ltr\";\n  },\n  async get(key, args = null, fallback = getL10nFallback(key, args)) {\n    return formatL10nValue(fallback, args);\n  },\n  async translate(element) {}\n};\nexports.NullL10n = NullL10n;\n\n/***/ }),\n/* 32 */\n/***/ ((__unused_webpack_module, exports, __w_pdfjs_require__) => {\n\n\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.XfaLayer = void 0;\nvar _xfa_text = __w_pdfjs_require__(25);\nclass XfaLayer {\n  static setupStorage(html, id, element, storage, intent) {\n    const storedData = storage.getValue(id, {\n      value: null\n    });\n    switch (element.name) {\n      case \"textarea\":\n        if (storedData.value !== null) {\n          html.textContent = storedData.value;\n        }\n        if (intent === \"print\") {\n          break;\n        }\n        html.addEventListener(\"input\", event => {\n          storage.setValue(id, {\n            value: event.target.value\n          });\n        });\n        break;\n      case \"input\":\n        if (element.attributes.type === \"radio\" || element.attributes.type === \"checkbox\") {\n          if (storedData.value === element.attributes.xfaOn) {\n            html.setAttribute(\"checked\", true);\n          } else if (storedData.value === element.attributes.xfaOff) {\n            html.removeAttribute(\"checked\");\n          }\n          if (intent === \"print\") {\n            break;\n          }\n          html.addEventListener(\"change\", event => {\n            storage.setValue(id, {\n              value: event.target.checked ? event.target.getAttribute(\"xfaOn\") : event.target.getAttribute(\"xfaOff\")\n            });\n          });\n        } else {\n          if (storedData.value !== null) {\n            html.setAttribute(\"value\", storedData.value);\n          }\n          if (intent === \"print\") {\n            break;\n          }\n          html.addEventListener(\"input\", event => {\n            storage.setValue(id, {\n              value: event.target.value\n            });\n          });\n        }\n        break;\n      case \"select\":\n        if (storedData.value !== null) {\n          html.setAttribute(\"value\", storedData.value);\n          for (const option of element.children) {\n            if (option.attributes.value === storedData.value) {\n              option.attributes.selected = true;\n            } else if (option.attributes.hasOwnProperty(\"selected\")) {\n              delete option.attributes.selected;\n            }\n          }\n        }\n        html.addEventListener(\"input\", event => {\n          const options = event.target.options;\n          const value = options.selectedIndex === -1 ? \"\" : options[options.selectedIndex].value;\n          storage.setValue(id, {\n            value\n          });\n        });\n        break;\n    }\n  }\n  static setAttributes({\n    html,\n    element,\n    storage = null,\n    intent,\n    linkService\n  }) {\n    const {\n      attributes\n    } = element;\n    const isHTMLAnchorElement = html instanceof HTMLAnchorElement;\n    if (attributes.type === \"radio\") {\n      attributes.name = `${attributes.name}-${intent}`;\n    }\n    for (const [key, value] of Object.entries(attributes)) {\n      if (value === null || value === undefined) {\n        continue;\n      }\n      switch (key) {\n        case \"class\":\n          if (value.length) {\n            html.setAttribute(key, value.join(\" \"));\n          }\n          break;\n        case \"dataId\":\n          break;\n        case \"id\":\n          html.setAttribute(\"data-element-id\", value);\n          break;\n        case \"style\":\n          Object.assign(html.style, value);\n          break;\n        case \"textContent\":\n          html.textContent = value;\n          break;\n        default:\n          if (!isHTMLAnchorElement || key !== \"href\" && key !== \"newWindow\") {\n            html.setAttribute(key, value);\n          }\n      }\n    }\n    if (isHTMLAnchorElement) {\n      linkService.addLinkAttributes(html, attributes.href, attributes.newWindow);\n    }\n    if (storage && attributes.dataId) {\n      this.setupStorage(html, attributes.dataId, element, storage);\n    }\n  }\n  static render(parameters) {\n    const storage = parameters.annotationStorage;\n    const linkService = parameters.linkService;\n    const root = parameters.xfaHtml;\n    const intent = parameters.intent || \"display\";\n    const rootHtml = document.createElement(root.name);\n    if (root.attributes) {\n      this.setAttributes({\n        html: rootHtml,\n        element: root,\n        intent,\n        linkService\n      });\n    }\n    const stack = [[root, -1, rootHtml]];\n    const rootDiv = parameters.div;\n    rootDiv.append(rootHtml);\n    if (parameters.viewport) {\n      const transform = `matrix(${parameters.viewport.transform.join(\",\")})`;\n      rootDiv.style.transform = transform;\n    }\n    if (intent !== \"richText\") {\n      rootDiv.setAttribute(\"class\", \"xfaLayer xfaFont\");\n    }\n    const textDivs = [];\n    while (stack.length > 0) {\n      const [parent, i, html] = stack.at(-1);\n      if (i + 1 === parent.children.length) {\n        stack.pop();\n        continue;\n      }\n      const child = parent.children[++stack.at(-1)[1]];\n      if (child === null) {\n        continue;\n      }\n      const {\n        name\n      } = child;\n      if (name === \"#text\") {\n        const node = document.createTextNode(child.value);\n        textDivs.push(node);\n        html.append(node);\n        continue;\n      }\n      const childHtml = child?.attributes?.xmlns ? document.createElementNS(child.attributes.xmlns, name) : document.createElement(name);\n      html.append(childHtml);\n      if (child.attributes) {\n        this.setAttributes({\n          html: childHtml,\n          element: child,\n          storage,\n          intent,\n          linkService\n        });\n      }\n      if (child.children && child.children.length > 0) {\n        stack.push([child, -1, childHtml]);\n      } else if (child.value) {\n        const node = document.createTextNode(child.value);\n        if (_xfa_text.XfaText.shouldBuildText(name)) {\n          textDivs.push(node);\n        }\n        childHtml.append(node);\n      }\n    }\n    for (const el of rootDiv.querySelectorAll(\".xfaNonInteractive input, .xfaNonInteractive textarea\")) {\n      el.setAttribute(\"readOnly\", true);\n    }\n    return {\n      textDivs\n    };\n  }\n  static update(parameters) {\n    const transform = `matrix(${parameters.viewport.transform.join(\",\")})`;\n    parameters.div.style.transform = transform;\n    parameters.div.hidden = false;\n  }\n}\nexports.XfaLayer = XfaLayer;\n\n/***/ }),\n/* 33 */\n/***/ ((__unused_webpack_module, exports, __w_pdfjs_require__) => {\n\n\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.InkEditor = void 0;\nvar _util = __w_pdfjs_require__(1);\nvar _editor = __w_pdfjs_require__(4);\nvar _annotation_layer = __w_pdfjs_require__(29);\nvar _display_utils = __w_pdfjs_require__(6);\nvar _tools = __w_pdfjs_require__(5);\nclass InkEditor extends _editor.AnnotationEditor {\n  #baseHeight = 0;\n  #baseWidth = 0;\n  #boundCanvasPointermove = this.canvasPointermove.bind(this);\n  #boundCanvasPointerleave = this.canvasPointerleave.bind(this);\n  #boundCanvasPointerup = this.canvasPointerup.bind(this);\n  #boundCanvasPointerdown = this.canvasPointerdown.bind(this);\n  #currentPath2D = new Path2D();\n  #disableEditing = false;\n  #hasSomethingToDraw = false;\n  #isCanvasInitialized = false;\n  #observer = null;\n  #realWidth = 0;\n  #realHeight = 0;\n  #requestFrameCallback = null;\n  static _defaultColor = null;\n  static _defaultOpacity = 1;\n  static _defaultThickness = 1;\n  static _type = \"ink\";\n  constructor(params) {\n    super({\n      ...params,\n      name: \"inkEditor\"\n    });\n    this.color = params.color || null;\n    this.thickness = params.thickness || null;\n    this.opacity = params.opacity || null;\n    this.paths = [];\n    this.bezierPath2D = [];\n    this.allRawPaths = [];\n    this.currentPath = [];\n    this.scaleFactor = 1;\n    this.translationX = this.translationY = 0;\n    this.x = 0;\n    this.y = 0;\n    this._willKeepAspectRatio = true;\n  }\n  static initialize(l10n) {\n    _editor.AnnotationEditor.initialize(l10n, {\n      strings: [\"editor_ink_canvas_aria_label\", \"editor_ink2_aria_label\"]\n    });\n  }\n  static updateDefaultParams(type, value) {\n    switch (type) {\n      case _util.AnnotationEditorParamsType.INK_THICKNESS:\n        InkEditor._defaultThickness = value;\n        break;\n      case _util.AnnotationEditorParamsType.INK_COLOR:\n        InkEditor._defaultColor = value;\n        break;\n      case _util.AnnotationEditorParamsType.INK_OPACITY:\n        InkEditor._defaultOpacity = value / 100;\n        break;\n    }\n  }\n  updateParams(type, value) {\n    switch (type) {\n      case _util.AnnotationEditorParamsType.INK_THICKNESS:\n        this.#updateThickness(value);\n        break;\n      case _util.AnnotationEditorParamsType.INK_COLOR:\n        this.#updateColor(value);\n        break;\n      case _util.AnnotationEditorParamsType.INK_OPACITY:\n        this.#updateOpacity(value);\n        break;\n    }\n  }\n  static get defaultPropertiesToUpdate() {\n    return [[_util.AnnotationEditorParamsType.INK_THICKNESS, InkEditor._defaultThickness], [_util.AnnotationEditorParamsType.INK_COLOR, InkEditor._defaultColor || _editor.AnnotationEditor._defaultLineColor], [_util.AnnotationEditorParamsType.INK_OPACITY, Math.round(InkEditor._defaultOpacity * 100)]];\n  }\n  get propertiesToUpdate() {\n    return [[_util.AnnotationEditorParamsType.INK_THICKNESS, this.thickness || InkEditor._defaultThickness], [_util.AnnotationEditorParamsType.INK_COLOR, this.color || InkEditor._defaultColor || _editor.AnnotationEditor._defaultLineColor], [_util.AnnotationEditorParamsType.INK_OPACITY, Math.round(100 * (this.opacity ?? InkEditor._defaultOpacity))]];\n  }\n  #updateThickness(thickness) {\n    const savedThickness = this.thickness;\n    this.addCommands({\n      cmd: () => {\n        this.thickness = thickness;\n        this.#fitToContent();\n      },\n      undo: () => {\n        this.thickness = savedThickness;\n        this.#fitToContent();\n      },\n      mustExec: true,\n      type: _util.AnnotationEditorParamsType.INK_THICKNESS,\n      overwriteIfSameType: true,\n      keepUndo: true\n    });\n  }\n  #updateColor(color) {\n    const savedColor = this.color;\n    this.addCommands({\n      cmd: () => {\n        this.color = color;\n        this.#redraw();\n      },\n      undo: () => {\n        this.color = savedColor;\n        this.#redraw();\n      },\n      mustExec: true,\n      type: _util.AnnotationEditorParamsType.INK_COLOR,\n      overwriteIfSameType: true,\n      keepUndo: true\n    });\n  }\n  #updateOpacity(opacity) {\n    opacity /= 100;\n    const savedOpacity = this.opacity;\n    this.addCommands({\n      cmd: () => {\n        this.opacity = opacity;\n        this.#redraw();\n      },\n      undo: () => {\n        this.opacity = savedOpacity;\n        this.#redraw();\n      },\n      mustExec: true,\n      type: _util.AnnotationEditorParamsType.INK_OPACITY,\n      overwriteIfSameType: true,\n      keepUndo: true\n    });\n  }\n  rebuild() {\n    if (!this.parent) {\n      return;\n    }\n    super.rebuild();\n    if (this.div === null) {\n      return;\n    }\n    if (!this.canvas) {\n      this.#createCanvas();\n      this.#createObserver();\n    }\n    if (!this.isAttachedToDOM) {\n      this.parent.add(this);\n      this.#setCanvasDims();\n    }\n    this.#fitToContent();\n  }\n  remove() {\n    if (this.canvas === null) {\n      return;\n    }\n    if (!this.isEmpty()) {\n      this.commit();\n    }\n    this.canvas.width = this.canvas.height = 0;\n    this.canvas.remove();\n    this.canvas = null;\n    this.#observer.disconnect();\n    this.#observer = null;\n    super.remove();\n  }\n  setParent(parent) {\n    if (!this.parent && parent) {\n      this._uiManager.removeShouldRescale(this);\n    } else if (this.parent && parent === null) {\n      this._uiManager.addShouldRescale(this);\n    }\n    super.setParent(parent);\n  }\n  onScaleChanging() {\n    const [parentWidth, parentHeight] = this.parentDimensions;\n    const width = this.width * parentWidth;\n    const height = this.height * parentHeight;\n    this.setDimensions(width, height);\n  }\n  enableEditMode() {\n    if (this.#disableEditing || this.canvas === null) {\n      return;\n    }\n    super.enableEditMode();\n    this._isDraggable = false;\n    this.canvas.addEventListener(\"pointerdown\", this.#boundCanvasPointerdown);\n  }\n  disableEditMode() {\n    if (!this.isInEditMode() || this.canvas === null) {\n      return;\n    }\n    super.disableEditMode();\n    this._isDraggable = !this.isEmpty();\n    this.div.classList.remove(\"editing\");\n    this.canvas.removeEventListener(\"pointerdown\", this.#boundCanvasPointerdown);\n  }\n  onceAdded() {\n    this._isDraggable = !this.isEmpty();\n  }\n  isEmpty() {\n    return this.paths.length === 0 || this.paths.length === 1 && this.paths[0].length === 0;\n  }\n  #getInitialBBox() {\n    const {\n      parentRotation,\n      parentDimensions: [width, height]\n    } = this;\n    switch (parentRotation) {\n      case 90:\n        return [0, height, height, width];\n      case 180:\n        return [width, height, width, height];\n      case 270:\n        return [width, 0, height, width];\n      default:\n        return [0, 0, width, height];\n    }\n  }\n  #setStroke() {\n    const {\n      ctx,\n      color,\n      opacity,\n      thickness,\n      parentScale,\n      scaleFactor\n    } = this;\n    ctx.lineWidth = thickness * parentScale / scaleFactor;\n    ctx.lineCap = \"round\";\n    ctx.lineJoin = \"round\";\n    ctx.miterLimit = 10;\n    ctx.strokeStyle = `${color}${(0, _tools.opacityToHex)(opacity)}`;\n  }\n  #startDrawing(x, y) {\n    this.canvas.addEventListener(\"contextmenu\", _display_utils.noContextMenu);\n    this.canvas.addEventListener(\"pointerleave\", this.#boundCanvasPointerleave);\n    this.canvas.addEventListener(\"pointermove\", this.#boundCanvasPointermove);\n    this.canvas.addEventListener(\"pointerup\", this.#boundCanvasPointerup);\n    this.canvas.removeEventListener(\"pointerdown\", this.#boundCanvasPointerdown);\n    this.isEditing = true;\n    if (!this.#isCanvasInitialized) {\n      this.#isCanvasInitialized = true;\n      this.#setCanvasDims();\n      this.thickness ||= InkEditor._defaultThickness;\n      this.color ||= InkEditor._defaultColor || _editor.AnnotationEditor._defaultLineColor;\n      this.opacity ??= InkEditor._defaultOpacity;\n    }\n    this.currentPath.push([x, y]);\n    this.#hasSomethingToDraw = false;\n    this.#setStroke();\n    this.#requestFrameCallback = () => {\n      this.#drawPoints();\n      if (this.#requestFrameCallback) {\n        window.requestAnimationFrame(this.#requestFrameCallback);\n      }\n    };\n    window.requestAnimationFrame(this.#requestFrameCallback);\n  }\n  #draw(x, y) {\n    const [lastX, lastY] = this.currentPath.at(-1);\n    if (this.currentPath.length > 1 && x === lastX && y === lastY) {\n      return;\n    }\n    const currentPath = this.currentPath;\n    let path2D = this.#currentPath2D;\n    currentPath.push([x, y]);\n    this.#hasSomethingToDraw = true;\n    if (currentPath.length <= 2) {\n      path2D.moveTo(...currentPath[0]);\n      path2D.lineTo(x, y);\n      return;\n    }\n    if (currentPath.length === 3) {\n      this.#currentPath2D = path2D = new Path2D();\n      path2D.moveTo(...currentPath[0]);\n    }\n    this.#makeBezierCurve(path2D, ...currentPath.at(-3), ...currentPath.at(-2), x, y);\n  }\n  #endPath() {\n    if (this.currentPath.length === 0) {\n      return;\n    }\n    const lastPoint = this.currentPath.at(-1);\n    this.#currentPath2D.lineTo(...lastPoint);\n  }\n  #stopDrawing(x, y) {\n    this.#requestFrameCallback = null;\n    x = Math.min(Math.max(x, 0), this.canvas.width);\n    y = Math.min(Math.max(y, 0), this.canvas.height);\n    this.#draw(x, y);\n    this.#endPath();\n    let bezier;\n    if (this.currentPath.length !== 1) {\n      bezier = this.#generateBezierPoints();\n    } else {\n      const xy = [x, y];\n      bezier = [[xy, xy.slice(), xy.slice(), xy]];\n    }\n    const path2D = this.#currentPath2D;\n    const currentPath = this.currentPath;\n    this.currentPath = [];\n    this.#currentPath2D = new Path2D();\n    const cmd = () => {\n      this.allRawPaths.push(currentPath);\n      this.paths.push(bezier);\n      this.bezierPath2D.push(path2D);\n      this.rebuild();\n    };\n    const undo = () => {\n      this.allRawPaths.pop();\n      this.paths.pop();\n      this.bezierPath2D.pop();\n      if (this.paths.length === 0) {\n        this.remove();\n      } else {\n        if (!this.canvas) {\n          this.#createCanvas();\n          this.#createObserver();\n        }\n        this.#fitToContent();\n      }\n    };\n    this.addCommands({\n      cmd,\n      undo,\n      mustExec: true\n    });\n  }\n  #drawPoints() {\n    if (!this.#hasSomethingToDraw) {\n      return;\n    }\n    this.#hasSomethingToDraw = false;\n    const thickness = Math.ceil(this.thickness * this.parentScale);\n    const lastPoints = this.currentPath.slice(-3);\n    const x = lastPoints.map(xy => xy[0]);\n    const y = lastPoints.map(xy => xy[1]);\n    const xMin = Math.min(...x) - thickness;\n    const xMax = Math.max(...x) + thickness;\n    const yMin = Math.min(...y) - thickness;\n    const yMax = Math.max(...y) + thickness;\n    const {\n      ctx\n    } = this;\n    ctx.save();\n    ctx.clearRect(0, 0, this.canvas.width, this.canvas.height);\n    for (const path of this.bezierPath2D) {\n      ctx.stroke(path);\n    }\n    ctx.stroke(this.#currentPath2D);\n    ctx.restore();\n  }\n  #makeBezierCurve(path2D, x0, y0, x1, y1, x2, y2) {\n    const prevX = (x0 + x1) / 2;\n    const prevY = (y0 + y1) / 2;\n    const x3 = (x1 + x2) / 2;\n    const y3 = (y1 + y2) / 2;\n    path2D.bezierCurveTo(prevX + 2 * (x1 - prevX) / 3, prevY + 2 * (y1 - prevY) / 3, x3 + 2 * (x1 - x3) / 3, y3 + 2 * (y1 - y3) / 3, x3, y3);\n  }\n  #generateBezierPoints() {\n    const path = this.currentPath;\n    if (path.length <= 2) {\n      return [[path[0], path[0], path.at(-1), path.at(-1)]];\n    }\n    const bezierPoints = [];\n    let i;\n    let [x0, y0] = path[0];\n    for (i = 1; i < path.length - 2; i++) {\n      const [x1, y1] = path[i];\n      const [x2, y2] = path[i + 1];\n      const x3 = (x1 + x2) / 2;\n      const y3 = (y1 + y2) / 2;\n      const control1 = [x0 + 2 * (x1 - x0) / 3, y0 + 2 * (y1 - y0) / 3];\n      const control2 = [x3 + 2 * (x1 - x3) / 3, y3 + 2 * (y1 - y3) / 3];\n      bezierPoints.push([[x0, y0], control1, control2, [x3, y3]]);\n      [x0, y0] = [x3, y3];\n    }\n    const [x1, y1] = path[i];\n    const [x2, y2] = path[i + 1];\n    const control1 = [x0 + 2 * (x1 - x0) / 3, y0 + 2 * (y1 - y0) / 3];\n    const control2 = [x2 + 2 * (x1 - x2) / 3, y2 + 2 * (y1 - y2) / 3];\n    bezierPoints.push([[x0, y0], control1, control2, [x2, y2]]);\n    return bezierPoints;\n  }\n  #redraw() {\n    if (this.isEmpty()) {\n      this.#updateTransform();\n      return;\n    }\n    this.#setStroke();\n    const {\n      canvas,\n      ctx\n    } = this;\n    ctx.setTransform(1, 0, 0, 1, 0, 0);\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n    this.#updateTransform();\n    for (const path of this.bezierPath2D) {\n      ctx.stroke(path);\n    }\n  }\n  commit() {\n    if (this.#disableEditing) {\n      return;\n    }\n    super.commit();\n    this.isEditing = false;\n    this.disableEditMode();\n    this.setInForeground();\n    this.#disableEditing = true;\n    this.div.classList.add(\"disabled\");\n    this.#fitToContent(true);\n    this.makeResizable();\n    this.parent.addInkEditorIfNeeded(true);\n    this.moveInDOM();\n    this.div.focus({\n      preventScroll: true\n    });\n  }\n  focusin(event) {\n    if (!this._focusEventsAllowed) {\n      return;\n    }\n    super.focusin(event);\n    this.enableEditMode();\n  }\n  canvasPointerdown(event) {\n    if (event.button !== 0 || !this.isInEditMode() || this.#disableEditing) {\n      return;\n    }\n    this.setInForeground();\n    event.preventDefault();\n    if (event.type !== \"mouse\") {\n      this.div.focus();\n    }\n    this.#startDrawing(event.offsetX, event.offsetY);\n  }\n  canvasPointermove(event) {\n    event.preventDefault();\n    this.#draw(event.offsetX, event.offsetY);\n  }\n  canvasPointerup(event) {\n    event.preventDefault();\n    this.#endDrawing(event);\n  }\n  canvasPointerleave(event) {\n    this.#endDrawing(event);\n  }\n  #endDrawing(event) {\n    this.canvas.removeEventListener(\"pointerleave\", this.#boundCanvasPointerleave);\n    this.canvas.removeEventListener(\"pointermove\", this.#boundCanvasPointermove);\n    this.canvas.removeEventListener(\"pointerup\", this.#boundCanvasPointerup);\n    this.canvas.addEventListener(\"pointerdown\", this.#boundCanvasPointerdown);\n    setTimeout(() => {\n      this.canvas.removeEventListener(\"contextmenu\", _display_utils.noContextMenu);\n    }, 10);\n    this.#stopDrawing(event.offsetX, event.offsetY);\n    this.addToAnnotationStorage();\n    this.setInBackground();\n  }\n  #createCanvas() {\n    this.canvas = document.createElement(\"canvas\");\n    this.canvas.width = this.canvas.height = 0;\n    this.canvas.className = \"inkEditorCanvas\";\n    _editor.AnnotationEditor._l10nPromise.get(\"editor_ink_canvas_aria_label\").then(msg => this.canvas?.setAttribute(\"aria-label\", msg));\n    this.div.append(this.canvas);\n    this.ctx = this.canvas.getContext(\"2d\");\n  }\n  #createObserver() {\n    this.#observer = new ResizeObserver(entries => {\n      const rect = entries[0].contentRect;\n      if (rect.width && rect.height) {\n        this.setDimensions(rect.width, rect.height);\n      }\n    });\n    this.#observer.observe(this.div);\n  }\n  get isResizable() {\n    return !this.isEmpty() && this.#disableEditing;\n  }\n  render() {\n    if (this.div) {\n      return this.div;\n    }\n    let baseX, baseY;\n    if (this.width) {\n      baseX = this.x;\n      baseY = this.y;\n    }\n    super.render();\n    _editor.AnnotationEditor._l10nPromise.get(\"editor_ink2_aria_label\").then(msg => this.div?.setAttribute(\"aria-label\", msg));\n    const [x, y, w, h] = this.#getInitialBBox();\n    this.setAt(x, y, 0, 0);\n    this.setDims(w, h);\n    this.#createCanvas();\n    if (this.width) {\n      const [parentWidth, parentHeight] = this.parentDimensions;\n      this.setAspectRatio(this.width * parentWidth, this.height * parentHeight);\n      this.setAt(baseX * parentWidth, baseY * parentHeight, this.width * parentWidth, this.height * parentHeight);\n      this.#isCanvasInitialized = true;\n      this.#setCanvasDims();\n      this.setDims(this.width * parentWidth, this.height * parentHeight);\n      this.#redraw();\n      this.div.classList.add(\"disabled\");\n    } else {\n      this.div.classList.add(\"editing\");\n      this.enableEditMode();\n    }\n    this.#createObserver();\n    return this.div;\n  }\n  #setCanvasDims() {\n    if (!this.#isCanvasInitialized) {\n      return;\n    }\n    const [parentWidth, parentHeight] = this.parentDimensions;\n    this.canvas.width = Math.ceil(this.width * parentWidth);\n    this.canvas.height = Math.ceil(this.height * parentHeight);\n    this.#updateTransform();\n  }\n  setDimensions(width, height) {\n    const roundedWidth = Math.round(width);\n    const roundedHeight = Math.round(height);\n    if (this.#realWidth === roundedWidth && this.#realHeight === roundedHeight) {\n      return;\n    }\n    this.#realWidth = roundedWidth;\n    this.#realHeight = roundedHeight;\n    this.canvas.style.visibility = \"hidden\";\n    const [parentWidth, parentHeight] = this.parentDimensions;\n    this.width = width / parentWidth;\n    this.height = height / parentHeight;\n    this.fixAndSetPosition();\n    if (this.#disableEditing) {\n      this.#setScaleFactor(width, height);\n    }\n    this.#setCanvasDims();\n    this.#redraw();\n    this.canvas.style.visibility = \"visible\";\n    this.fixDims();\n  }\n  #setScaleFactor(width, height) {\n    const padding = this.#getPadding();\n    const scaleFactorW = (width - padding) / this.#baseWidth;\n    const scaleFactorH = (height - padding) / this.#baseHeight;\n    this.scaleFactor = Math.min(scaleFactorW, scaleFactorH);\n  }\n  #updateTransform() {\n    const padding = this.#getPadding() / 2;\n    this.ctx.setTransform(this.scaleFactor, 0, 0, this.scaleFactor, this.translationX * this.scaleFactor + padding, this.translationY * this.scaleFactor + padding);\n  }\n  static #buildPath2D(bezier) {\n    const path2D = new Path2D();\n    for (let i = 0, ii = bezier.length; i < ii; i++) {\n      const [first, control1, control2, second] = bezier[i];\n      if (i === 0) {\n        path2D.moveTo(...first);\n      }\n      path2D.bezierCurveTo(control1[0], control1[1], control2[0], control2[1], second[0], second[1]);\n    }\n    return path2D;\n  }\n  static #toPDFCoordinates(points, rect, rotation) {\n    const [blX, blY, trX, trY] = rect;\n    switch (rotation) {\n      case 0:\n        for (let i = 0, ii = points.length; i < ii; i += 2) {\n          points[i] += blX;\n          points[i + 1] = trY - points[i + 1];\n        }\n        break;\n      case 90:\n        for (let i = 0, ii = points.length; i < ii; i += 2) {\n          const x = points[i];\n          points[i] = points[i + 1] + blX;\n          points[i + 1] = x + blY;\n        }\n        break;\n      case 180:\n        for (let i = 0, ii = points.length; i < ii; i += 2) {\n          points[i] = trX - points[i];\n          points[i + 1] += blY;\n        }\n        break;\n      case 270:\n        for (let i = 0, ii = points.length; i < ii; i += 2) {\n          const x = points[i];\n          points[i] = trX - points[i + 1];\n          points[i + 1] = trY - x;\n        }\n        break;\n      default:\n        throw new Error(\"Invalid rotation\");\n    }\n    return points;\n  }\n  static #fromPDFCoordinates(points, rect, rotation) {\n    const [blX, blY, trX, trY] = rect;\n    switch (rotation) {\n      case 0:\n        for (let i = 0, ii = points.length; i < ii; i += 2) {\n          points[i] -= blX;\n          points[i + 1] = trY - points[i + 1];\n        }\n        break;\n      case 90:\n        for (let i = 0, ii = points.length; i < ii; i += 2) {\n          const x = points[i];\n          points[i] = points[i + 1] - blY;\n          points[i + 1] = x - blX;\n        }\n        break;\n      case 180:\n        for (let i = 0, ii = points.length; i < ii; i += 2) {\n          points[i] = trX - points[i];\n          points[i + 1] -= blY;\n        }\n        break;\n      case 270:\n        for (let i = 0, ii = points.length; i < ii; i += 2) {\n          const x = points[i];\n          points[i] = trY - points[i + 1];\n          points[i + 1] = trX - x;\n        }\n        break;\n      default:\n        throw new Error(\"Invalid rotation\");\n    }\n    return points;\n  }\n  #serializePaths(s, tx, ty, rect) {\n    const paths = [];\n    const padding = this.thickness / 2;\n    const shiftX = s * tx + padding;\n    const shiftY = s * ty + padding;\n    for (const bezier of this.paths) {\n      const buffer = [];\n      const points = [];\n      for (let j = 0, jj = bezier.length; j < jj; j++) {\n        const [first, control1, control2, second] = bezier[j];\n        const p10 = s * first[0] + shiftX;\n        const p11 = s * first[1] + shiftY;\n        const p20 = s * control1[0] + shiftX;\n        const p21 = s * control1[1] + shiftY;\n        const p30 = s * control2[0] + shiftX;\n        const p31 = s * control2[1] + shiftY;\n        const p40 = s * second[0] + shiftX;\n        const p41 = s * second[1] + shiftY;\n        if (j === 0) {\n          buffer.push(p10, p11);\n          points.push(p10, p11);\n        }\n        buffer.push(p20, p21, p30, p31, p40, p41);\n        points.push(p20, p21);\n        if (j === jj - 1) {\n          points.push(p40, p41);\n        }\n      }\n      paths.push({\n        bezier: InkEditor.#toPDFCoordinates(buffer, rect, this.rotation),\n        points: InkEditor.#toPDFCoordinates(points, rect, this.rotation)\n      });\n    }\n    return paths;\n  }\n  #getBbox() {\n    let xMin = Infinity;\n    let xMax = -Infinity;\n    let yMin = Infinity;\n    let yMax = -Infinity;\n    for (const path of this.paths) {\n      for (const [first, control1, control2, second] of path) {\n        const bbox = _util.Util.bezierBoundingBox(...first, ...control1, ...control2, ...second);\n        xMin = Math.min(xMin, bbox[0]);\n        yMin = Math.min(yMin, bbox[1]);\n        xMax = Math.max(xMax, bbox[2]);\n        yMax = Math.max(yMax, bbox[3]);\n      }\n    }\n    return [xMin, yMin, xMax, yMax];\n  }\n  #getPadding() {\n    return this.#disableEditing ? Math.ceil(this.thickness * this.parentScale) : 0;\n  }\n  #fitToContent(firstTime = false) {\n    if (this.isEmpty()) {\n      return;\n    }\n    if (!this.#disableEditing) {\n      this.#redraw();\n      return;\n    }\n    const bbox = this.#getBbox();\n    const padding = this.#getPadding();\n    this.#baseWidth = Math.max(_editor.AnnotationEditor.MIN_SIZE, bbox[2] - bbox[0]);\n    this.#baseHeight = Math.max(_editor.AnnotationEditor.MIN_SIZE, bbox[3] - bbox[1]);\n    const width = Math.ceil(padding + this.#baseWidth * this.scaleFactor);\n    const height = Math.ceil(padding + this.#baseHeight * this.scaleFactor);\n    const [parentWidth, parentHeight] = this.parentDimensions;\n    this.width = width / parentWidth;\n    this.height = height / parentHeight;\n    this.setAspectRatio(width, height);\n    const prevTranslationX = this.translationX;\n    const prevTranslationY = this.translationY;\n    this.translationX = -bbox[0];\n    this.translationY = -bbox[1];\n    this.#setCanvasDims();\n    this.#redraw();\n    this.#realWidth = width;\n    this.#realHeight = height;\n    this.setDims(width, height);\n    const unscaledPadding = firstTime ? padding / this.scaleFactor / 2 : 0;\n    this.translate(prevTranslationX - this.translationX - unscaledPadding, prevTranslationY - this.translationY - unscaledPadding);\n  }\n  static deserialize(data, parent, uiManager) {\n    if (data instanceof _annotation_layer.InkAnnotationElement) {\n      return null;\n    }\n    const editor = super.deserialize(data, parent, uiManager);\n    editor.thickness = data.thickness;\n    editor.color = _util.Util.makeHexColor(...data.color);\n    editor.opacity = data.opacity;\n    const [pageWidth, pageHeight] = editor.pageDimensions;\n    const width = editor.width * pageWidth;\n    const height = editor.height * pageHeight;\n    const scaleFactor = editor.parentScale;\n    const padding = data.thickness / 2;\n    editor.#disableEditing = true;\n    editor.#realWidth = Math.round(width);\n    editor.#realHeight = Math.round(height);\n    const {\n      paths,\n      rect,\n      rotation\n    } = data;\n    for (let {\n      bezier\n    } of paths) {\n      bezier = InkEditor.#fromPDFCoordinates(bezier, rect, rotation);\n      const path = [];\n      editor.paths.push(path);\n      let p0 = scaleFactor * (bezier[0] - padding);\n      let p1 = scaleFactor * (bezier[1] - padding);\n      for (let i = 2, ii = bezier.length; i < ii; i += 6) {\n        const p10 = scaleFactor * (bezier[i] - padding);\n        const p11 = scaleFactor * (bezier[i + 1] - padding);\n        const p20 = scaleFactor * (bezier[i + 2] - padding);\n        const p21 = scaleFactor * (bezier[i + 3] - padding);\n        const p30 = scaleFactor * (bezier[i + 4] - padding);\n        const p31 = scaleFactor * (bezier[i + 5] - padding);\n        path.push([[p0, p1], [p10, p11], [p20, p21], [p30, p31]]);\n        p0 = p30;\n        p1 = p31;\n      }\n      const path2D = this.#buildPath2D(path);\n      editor.bezierPath2D.push(path2D);\n    }\n    const bbox = editor.#getBbox();\n    editor.#baseWidth = Math.max(_editor.AnnotationEditor.MIN_SIZE, bbox[2] - bbox[0]);\n    editor.#baseHeight = Math.max(_editor.AnnotationEditor.MIN_SIZE, bbox[3] - bbox[1]);\n    editor.#setScaleFactor(width, height);\n    return editor;\n  }\n  serialize() {\n    if (this.isEmpty()) {\n      return null;\n    }\n    const rect = this.getRect(0, 0);\n    const color = _editor.AnnotationEditor._colorManager.convert(this.ctx.strokeStyle);\n    return {\n      annotationType: _util.AnnotationEditorType.INK,\n      color,\n      thickness: this.thickness,\n      opacity: this.opacity,\n      paths: this.#serializePaths(this.scaleFactor / this.parentScale, this.translationX, this.translationY, rect),\n      pageIndex: this.pageIndex,\n      rect,\n      rotation: this.rotation,\n      structTreeParentId: this._structTreeParentId\n    };\n  }\n}\nexports.InkEditor = InkEditor;\n\n/***/ }),\n/* 34 */\n/***/ ((__unused_webpack_module, exports, __w_pdfjs_require__) => {\n\n\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.StampEditor = void 0;\nvar _util = __w_pdfjs_require__(1);\nvar _editor = __w_pdfjs_require__(4);\nvar _display_utils = __w_pdfjs_require__(6);\nvar _annotation_layer = __w_pdfjs_require__(29);\nclass StampEditor extends _editor.AnnotationEditor {\n  #bitmap = null;\n  #bitmapId = null;\n  #bitmapPromise = null;\n  #bitmapUrl = null;\n  #bitmapFile = null;\n  #canvas = null;\n  #observer = null;\n  #resizeTimeoutId = null;\n  #isSvg = false;\n  #hasBeenAddedInUndoStack = false;\n  static _type = \"stamp\";\n  constructor(params) {\n    super({\n      ...params,\n      name: \"stampEditor\"\n    });\n    this.#bitmapUrl = params.bitmapUrl;\n    this.#bitmapFile = params.bitmapFile;\n  }\n  static initialize(l10n) {\n    _editor.AnnotationEditor.initialize(l10n);\n  }\n  static get supportedTypes() {\n    const types = [\"apng\", \"avif\", \"bmp\", \"gif\", \"jpeg\", \"png\", \"svg+xml\", \"webp\", \"x-icon\"];\n    return (0, _util.shadow)(this, \"supportedTypes\", types.map(type => `image/${type}`));\n  }\n  static get supportedTypesStr() {\n    return (0, _util.shadow)(this, \"supportedTypesStr\", this.supportedTypes.join(\",\"));\n  }\n  static isHandlingMimeForPasting(mime) {\n    return this.supportedTypes.includes(mime);\n  }\n  static paste(item, parent) {\n    parent.pasteEditor(_util.AnnotationEditorType.STAMP, {\n      bitmapFile: item.getAsFile()\n    });\n  }\n  #getBitmapFetched(data, fromId = false) {\n    if (!data) {\n      this.remove();\n      return;\n    }\n    this.#bitmap = data.bitmap;\n    if (!fromId) {\n      this.#bitmapId = data.id;\n      this.#isSvg = data.isSvg;\n    }\n    this.#createCanvas();\n  }\n  #getBitmapDone() {\n    this.#bitmapPromise = null;\n    this._uiManager.enableWaiting(false);\n    if (this.#canvas) {\n      this.div.focus();\n    }\n  }\n  #getBitmap() {\n    if (this.#bitmapId) {\n      this._uiManager.enableWaiting(true);\n      this._uiManager.imageManager.getFromId(this.#bitmapId).then(data => this.#getBitmapFetched(data, true)).finally(() => this.#getBitmapDone());\n      return;\n    }\n    if (this.#bitmapUrl) {\n      const url = this.#bitmapUrl;\n      this.#bitmapUrl = null;\n      this._uiManager.enableWaiting(true);\n      this.#bitmapPromise = this._uiManager.imageManager.getFromUrl(url).then(data => this.#getBitmapFetched(data)).finally(() => this.#getBitmapDone());\n      return;\n    }\n    if (this.#bitmapFile) {\n      const file = this.#bitmapFile;\n      this.#bitmapFile = null;\n      this._uiManager.enableWaiting(true);\n      this.#bitmapPromise = this._uiManager.imageManager.getFromFile(file).then(data => this.#getBitmapFetched(data)).finally(() => this.#getBitmapDone());\n      return;\n    }\n    const input = document.createElement(\"input\");\n    input.type = \"file\";\n    input.accept = StampEditor.supportedTypesStr;\n    this.#bitmapPromise = new Promise(resolve => {\n      input.addEventListener(\"change\", async () => {\n        if (!input.files || input.files.length === 0) {\n          this.remove();\n        } else {\n          this._uiManager.enableWaiting(true);\n          const data = await this._uiManager.imageManager.getFromFile(input.files[0]);\n          this.#getBitmapFetched(data);\n        }\n        resolve();\n      });\n      input.addEventListener(\"cancel\", () => {\n        this.remove();\n        resolve();\n      });\n    }).finally(() => this.#getBitmapDone());\n    input.click();\n  }\n  remove() {\n    if (this.#bitmapId) {\n      this.#bitmap = null;\n      this._uiManager.imageManager.deleteId(this.#bitmapId);\n      this.#canvas?.remove();\n      this.#canvas = null;\n      this.#observer?.disconnect();\n      this.#observer = null;\n    }\n    super.remove();\n  }\n  rebuild() {\n    if (!this.parent) {\n      if (this.#bitmapId) {\n        this.#getBitmap();\n      }\n      return;\n    }\n    super.rebuild();\n    if (this.div === null) {\n      return;\n    }\n    if (this.#bitmapId) {\n      this.#getBitmap();\n    }\n    if (!this.isAttachedToDOM) {\n      this.parent.add(this);\n    }\n  }\n  onceAdded() {\n    this._isDraggable = true;\n    this.div.focus();\n  }\n  isEmpty() {\n    return !(this.#bitmapPromise || this.#bitmap || this.#bitmapUrl || this.#bitmapFile);\n  }\n  get isResizable() {\n    return true;\n  }\n  render() {\n    if (this.div) {\n      return this.div;\n    }\n    let baseX, baseY;\n    if (this.width) {\n      baseX = this.x;\n      baseY = this.y;\n    }\n    super.render();\n    this.div.hidden = true;\n    if (this.#bitmap) {\n      this.#createCanvas();\n    } else {\n      this.#getBitmap();\n    }\n    if (this.width) {\n      const [parentWidth, parentHeight] = this.parentDimensions;\n      this.setAt(baseX * parentWidth, baseY * parentHeight, this.width * parentWidth, this.height * parentHeight);\n    }\n    return this.div;\n  }\n  #createCanvas() {\n    const {\n      div\n    } = this;\n    let {\n      width,\n      height\n    } = this.#bitmap;\n    const [pageWidth, pageHeight] = this.pageDimensions;\n    const MAX_RATIO = 0.75;\n    if (this.width) {\n      width = this.width * pageWidth;\n      height = this.height * pageHeight;\n    } else if (width > MAX_RATIO * pageWidth || height > MAX_RATIO * pageHeight) {\n      const factor = Math.min(MAX_RATIO * pageWidth / width, MAX_RATIO * pageHeight / height);\n      width *= factor;\n      height *= factor;\n    }\n    const [parentWidth, parentHeight] = this.parentDimensions;\n    this.setDims(width * parentWidth / pageWidth, height * parentHeight / pageHeight);\n    this._uiManager.enableWaiting(false);\n    const canvas = this.#canvas = document.createElement(\"canvas\");\n    div.append(canvas);\n    div.hidden = false;\n    this.#drawBitmap(width, height);\n    this.#createObserver();\n    if (!this.#hasBeenAddedInUndoStack) {\n      this.parent.addUndoableEditor(this);\n      this.#hasBeenAddedInUndoStack = true;\n    }\n    this._uiManager._eventBus.dispatch(\"reporttelemetry\", {\n      source: this,\n      details: {\n        type: \"editing\",\n        subtype: this.editorType,\n        data: {\n          action: \"inserted_image\"\n        }\n      }\n    });\n    this.addAltTextButton();\n  }\n  #setDimensions(width, height) {\n    const [parentWidth, parentHeight] = this.parentDimensions;\n    this.width = width / parentWidth;\n    this.height = height / parentHeight;\n    this.setDims(width, height);\n    if (this._initialOptions?.isCentered) {\n      this.center();\n    } else {\n      this.fixAndSetPosition();\n    }\n    this._initialOptions = null;\n    if (this.#resizeTimeoutId !== null) {\n      clearTimeout(this.#resizeTimeoutId);\n    }\n    const TIME_TO_WAIT = 200;\n    this.#resizeTimeoutId = setTimeout(() => {\n      this.#resizeTimeoutId = null;\n      this.#drawBitmap(width, height);\n    }, TIME_TO_WAIT);\n  }\n  #scaleBitmap(width, height) {\n    const {\n      width: bitmapWidth,\n      height: bitmapHeight\n    } = this.#bitmap;\n    let newWidth = bitmapWidth;\n    let newHeight = bitmapHeight;\n    let bitmap = this.#bitmap;\n    while (newWidth > 2 * width || newHeight > 2 * height) {\n      const prevWidth = newWidth;\n      const prevHeight = newHeight;\n      if (newWidth > 2 * width) {\n        newWidth = newWidth >= 16384 ? Math.floor(newWidth / 2) - 1 : Math.ceil(newWidth / 2);\n      }\n      if (newHeight > 2 * height) {\n        newHeight = newHeight >= 16384 ? Math.floor(newHeight / 2) - 1 : Math.ceil(newHeight / 2);\n      }\n      const offscreen = new OffscreenCanvas(newWidth, newHeight);\n      const ctx = offscreen.getContext(\"2d\");\n      ctx.drawImage(bitmap, 0, 0, prevWidth, prevHeight, 0, 0, newWidth, newHeight);\n      bitmap = offscreen.transferToImageBitmap();\n    }\n    return bitmap;\n  }\n  #drawBitmap(width, height) {\n    width = Math.ceil(width);\n    height = Math.ceil(height);\n    const canvas = this.#canvas;\n    if (!canvas || canvas.width === width && canvas.height === height) {\n      return;\n    }\n    canvas.width = width;\n    canvas.height = height;\n    const bitmap = this.#isSvg ? this.#bitmap : this.#scaleBitmap(width, height);\n    const ctx = canvas.getContext(\"2d\");\n    ctx.filter = this._uiManager.hcmFilter;\n    ctx.drawImage(bitmap, 0, 0, bitmap.width, bitmap.height, 0, 0, width, height);\n  }\n  #serializeBitmap(toUrl) {\n    if (toUrl) {\n      if (this.#isSvg) {\n        const url = this._uiManager.imageManager.getSvgUrl(this.#bitmapId);\n        if (url) {\n          return url;\n        }\n      }\n      const canvas = document.createElement(\"canvas\");\n      ({\n        width: canvas.width,\n        height: canvas.height\n      } = this.#bitmap);\n      const ctx = canvas.getContext(\"2d\");\n      ctx.drawImage(this.#bitmap, 0, 0);\n      return canvas.toDataURL();\n    }\n    if (this.#isSvg) {\n      const [pageWidth, pageHeight] = this.pageDimensions;\n      const width = Math.round(this.width * pageWidth * _display_utils.PixelsPerInch.PDF_TO_CSS_UNITS);\n      const height = Math.round(this.height * pageHeight * _display_utils.PixelsPerInch.PDF_TO_CSS_UNITS);\n      const offscreen = new OffscreenCanvas(width, height);\n      const ctx = offscreen.getContext(\"2d\");\n      ctx.drawImage(this.#bitmap, 0, 0, this.#bitmap.width, this.#bitmap.height, 0, 0, width, height);\n      return offscreen.transferToImageBitmap();\n    }\n    return structuredClone(this.#bitmap);\n  }\n  #createObserver() {\n    this.#observer = new ResizeObserver(entries => {\n      const rect = entries[0].contentRect;\n      if (rect.width && rect.height) {\n        this.#setDimensions(rect.width, rect.height);\n      }\n    });\n    this.#observer.observe(this.div);\n  }\n  static deserialize(data, parent, uiManager) {\n    if (data instanceof _annotation_layer.StampAnnotationElement) {\n      return null;\n    }\n    const editor = super.deserialize(data, parent, uiManager);\n    const {\n      rect,\n      bitmapUrl,\n      bitmapId,\n      isSvg,\n      accessibilityData\n    } = data;\n    if (bitmapId && uiManager.imageManager.isValidId(bitmapId)) {\n      editor.#bitmapId = bitmapId;\n    } else {\n      editor.#bitmapUrl = bitmapUrl;\n    }\n    editor.#isSvg = isSvg;\n    const [parentWidth, parentHeight] = editor.pageDimensions;\n    editor.width = (rect[2] - rect[0]) / parentWidth;\n    editor.height = (rect[3] - rect[1]) / parentHeight;\n    if (accessibilityData) {\n      editor.altTextData = accessibilityData;\n    }\n    return editor;\n  }\n  serialize(isForCopying = false, context = null) {\n    if (this.isEmpty()) {\n      return null;\n    }\n    const serialized = {\n      annotationType: _util.AnnotationEditorType.STAMP,\n      bitmapId: this.#bitmapId,\n      pageIndex: this.pageIndex,\n      rect: this.getRect(0, 0),\n      rotation: this.rotation,\n      isSvg: this.#isSvg,\n      structTreeParentId: this._structTreeParentId\n    };\n    if (isForCopying) {\n      serialized.bitmapUrl = this.#serializeBitmap(true);\n      serialized.accessibilityData = this.altTextData;\n      return serialized;\n    }\n    const {\n      decorative,\n      altText\n    } = this.altTextData;\n    if (!decorative && altText) {\n      serialized.accessibilityData = {\n        type: \"Figure\",\n        alt: altText\n      };\n    }\n    if (context === null) {\n      return serialized;\n    }\n    context.stamps ||= new Map();\n    const area = this.#isSvg ? (serialized.rect[2] - serialized.rect[0]) * (serialized.rect[3] - serialized.rect[1]) : null;\n    if (!context.stamps.has(this.#bitmapId)) {\n      context.stamps.set(this.#bitmapId, {\n        area,\n        serialized\n      });\n      serialized.bitmap = this.#serializeBitmap(false);\n    } else if (this.#isSvg) {\n      const prevData = context.stamps.get(this.#bitmapId);\n      if (area > prevData.area) {\n        prevData.area = area;\n        prevData.serialized.bitmap.close();\n        prevData.serialized.bitmap = this.#serializeBitmap(false);\n      }\n    }\n    return serialized;\n  }\n}\nexports.StampEditor = StampEditor;\n\n/***/ })\n/******/ \t]);\n/************************************************************************/\n/******/ \t// The module cache\n/******/ \tvar __webpack_module_cache__ = {};\n/******/ \t\n/******/ \t// The require function\n/******/ \tfunction __w_pdfjs_require__(moduleId) {\n/******/ \t\t// Check if module is in cache\n/******/ \t\tvar cachedModule = __webpack_module_cache__[moduleId];\n/******/ \t\tif (cachedModule !== undefined) {\n/******/ \t\t\treturn cachedModule.exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = __webpack_module_cache__[moduleId] = {\n/******/ \t\t\t// no module.id needed\n/******/ \t\t\t// no module.loaded needed\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/ \t\n/******/ \t\t// Execute the module function\n/******/ \t\t__webpack_modules__[moduleId](module, module.exports, __w_pdfjs_require__);\n/******/ \t\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/ \t\n/************************************************************************/\nvar __webpack_exports__ = {};\n// This entry need to be wrapped in an IIFE because it need to be isolated against other modules in the chunk.\n(() => {\nvar exports = __webpack_exports__;\n\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nObject.defineProperty(exports, \"AbortException\", ({\n  enumerable: true,\n  get: function () {\n    return _util.AbortException;\n  }\n}));\nObject.defineProperty(exports, \"AnnotationEditorLayer\", ({\n  enumerable: true,\n  get: function () {\n    return _annotation_editor_layer.AnnotationEditorLayer;\n  }\n}));\nObject.defineProperty(exports, \"AnnotationEditorParamsType\", ({\n  enumerable: true,\n  get: function () {\n    return _util.AnnotationEditorParamsType;\n  }\n}));\nObject.defineProperty(exports, \"AnnotationEditorType\", ({\n  enumerable: true,\n  get: function () {\n    return _util.AnnotationEditorType;\n  }\n}));\nObject.defineProperty(exports, \"AnnotationEditorUIManager\", ({\n  enumerable: true,\n  get: function () {\n    return _tools.AnnotationEditorUIManager;\n  }\n}));\nObject.defineProperty(exports, \"AnnotationLayer\", ({\n  enumerable: true,\n  get: function () {\n    return _annotation_layer.AnnotationLayer;\n  }\n}));\nObject.defineProperty(exports, \"AnnotationMode\", ({\n  enumerable: true,\n  get: function () {\n    return _util.AnnotationMode;\n  }\n}));\nObject.defineProperty(exports, \"CMapCompressionType\", ({\n  enumerable: true,\n  get: function () {\n    return _util.CMapCompressionType;\n  }\n}));\nObject.defineProperty(exports, \"DOMSVGFactory\", ({\n  enumerable: true,\n  get: function () {\n    return _display_utils.DOMSVGFactory;\n  }\n}));\nObject.defineProperty(exports, \"FeatureTest\", ({\n  enumerable: true,\n  get: function () {\n    return _util.FeatureTest;\n  }\n}));\nObject.defineProperty(exports, \"GlobalWorkerOptions\", ({\n  enumerable: true,\n  get: function () {\n    return _worker_options.GlobalWorkerOptions;\n  }\n}));\nObject.defineProperty(exports, \"ImageKind\", ({\n  enumerable: true,\n  get: function () {\n    return _util.ImageKind;\n  }\n}));\nObject.defineProperty(exports, \"InvalidPDFException\", ({\n  enumerable: true,\n  get: function () {\n    return _util.InvalidPDFException;\n  }\n}));\nObject.defineProperty(exports, \"MissingPDFException\", ({\n  enumerable: true,\n  get: function () {\n    return _util.MissingPDFException;\n  }\n}));\nObject.defineProperty(exports, \"OPS\", ({\n  enumerable: true,\n  get: function () {\n    return _util.OPS;\n  }\n}));\nObject.defineProperty(exports, \"PDFDataRangeTransport\", ({\n  enumerable: true,\n  get: function () {\n    return _api.PDFDataRangeTransport;\n  }\n}));\nObject.defineProperty(exports, \"PDFDateString\", ({\n  enumerable: true,\n  get: function () {\n    return _display_utils.PDFDateString;\n  }\n}));\nObject.defineProperty(exports, \"PDFWorker\", ({\n  enumerable: true,\n  get: function () {\n    return _api.PDFWorker;\n  }\n}));\nObject.defineProperty(exports, \"PasswordResponses\", ({\n  enumerable: true,\n  get: function () {\n    return _util.PasswordResponses;\n  }\n}));\nObject.defineProperty(exports, \"PermissionFlag\", ({\n  enumerable: true,\n  get: function () {\n    return _util.PermissionFlag;\n  }\n}));\nObject.defineProperty(exports, \"PixelsPerInch\", ({\n  enumerable: true,\n  get: function () {\n    return _display_utils.PixelsPerInch;\n  }\n}));\nObject.defineProperty(exports, \"PromiseCapability\", ({\n  enumerable: true,\n  get: function () {\n    return _util.PromiseCapability;\n  }\n}));\nObject.defineProperty(exports, \"RenderingCancelledException\", ({\n  enumerable: true,\n  get: function () {\n    return _display_utils.RenderingCancelledException;\n  }\n}));\nObject.defineProperty(exports, \"SVGGraphics\", ({\n  enumerable: true,\n  get: function () {\n    return _api.SVGGraphics;\n  }\n}));\nObject.defineProperty(exports, \"UnexpectedResponseException\", ({\n  enumerable: true,\n  get: function () {\n    return _util.UnexpectedResponseException;\n  }\n}));\nObject.defineProperty(exports, \"Util\", ({\n  enumerable: true,\n  get: function () {\n    return _util.Util;\n  }\n}));\nObject.defineProperty(exports, \"VerbosityLevel\", ({\n  enumerable: true,\n  get: function () {\n    return _util.VerbosityLevel;\n  }\n}));\nObject.defineProperty(exports, \"XfaLayer\", ({\n  enumerable: true,\n  get: function () {\n    return _xfa_layer.XfaLayer;\n  }\n}));\nObject.defineProperty(exports, \"build\", ({\n  enumerable: true,\n  get: function () {\n    return _api.build;\n  }\n}));\nObject.defineProperty(exports, \"createValidAbsoluteUrl\", ({\n  enumerable: true,\n  get: function () {\n    return _util.createValidAbsoluteUrl;\n  }\n}));\nObject.defineProperty(exports, \"getDocument\", ({\n  enumerable: true,\n  get: function () {\n    return _api.getDocument;\n  }\n}));\nObject.defineProperty(exports, \"getFilenameFromUrl\", ({\n  enumerable: true,\n  get: function () {\n    return _display_utils.getFilenameFromUrl;\n  }\n}));\nObject.defineProperty(exports, \"getPdfFilenameFromUrl\", ({\n  enumerable: true,\n  get: function () {\n    return _display_utils.getPdfFilenameFromUrl;\n  }\n}));\nObject.defineProperty(exports, \"getXfaPageViewport\", ({\n  enumerable: true,\n  get: function () {\n    return _display_utils.getXfaPageViewport;\n  }\n}));\nObject.defineProperty(exports, \"isDataScheme\", ({\n  enumerable: true,\n  get: function () {\n    return _display_utils.isDataScheme;\n  }\n}));\nObject.defineProperty(exports, \"isPdfFile\", ({\n  enumerable: true,\n  get: function () {\n    return _display_utils.isPdfFile;\n  }\n}));\nObject.defineProperty(exports, \"loadScript\", ({\n  enumerable: true,\n  get: function () {\n    return _display_utils.loadScript;\n  }\n}));\nObject.defineProperty(exports, \"noContextMenu\", ({\n  enumerable: true,\n  get: function () {\n    return _display_utils.noContextMenu;\n  }\n}));\nObject.defineProperty(exports, \"normalizeUnicode\", ({\n  enumerable: true,\n  get: function () {\n    return _util.normalizeUnicode;\n  }\n}));\nObject.defineProperty(exports, \"renderTextLayer\", ({\n  enumerable: true,\n  get: function () {\n    return _text_layer.renderTextLayer;\n  }\n}));\nObject.defineProperty(exports, \"setLayerDimensions\", ({\n  enumerable: true,\n  get: function () {\n    return _display_utils.setLayerDimensions;\n  }\n}));\nObject.defineProperty(exports, \"shadow\", ({\n  enumerable: true,\n  get: function () {\n    return _util.shadow;\n  }\n}));\nObject.defineProperty(exports, \"updateTextLayer\", ({\n  enumerable: true,\n  get: function () {\n    return _text_layer.updateTextLayer;\n  }\n}));\nObject.defineProperty(exports, \"version\", ({\n  enumerable: true,\n  get: function () {\n    return _api.version;\n  }\n}));\nvar _util = __w_pdfjs_require__(1);\nvar _api = __w_pdfjs_require__(2);\nvar _display_utils = __w_pdfjs_require__(6);\nvar _text_layer = __w_pdfjs_require__(26);\nvar _annotation_editor_layer = __w_pdfjs_require__(27);\nvar _tools = __w_pdfjs_require__(5);\nvar _annotation_layer = __w_pdfjs_require__(29);\nvar _worker_options = __w_pdfjs_require__(14);\nvar _xfa_layer = __w_pdfjs_require__(32);\nconst pdfjsVersion = '3.11.174';\nconst pdfjsBuild = 'ce8716743';\n})();\n\n/******/ \treturn __webpack_exports__;\n/******/ })()\n;\n});\n//# sourceMappingURL=pdf.js.map"],"names":["root","factory","module","exports","pdfjsLib","globalThis","__webpack_modules__","__unused_webpack_module","Object","defineProperty","value","VerbosityLevel","Util","UnknownErrorException","UnexpectedResponseException","TextRenderingMode","RenderingIntentFlag","PromiseCapability","PermissionFlag","PasswordResponses","PasswordException","PageActionEventType","OPS","MissingPDFException","MAX_IMAGE_SIZE_TO_CACHE","LINE_FACTOR","LINE_DESCENT_FACTOR","InvalidPDFException","ImageKind","IDENTITY_MATRIX","FormatError","FeatureTest","FONT_IDENTITY_MATRIX","DocumentActionEventType","CMapCompressionType","BaseException","BASELINE_FACTOR","AnnotationType","AnnotationReplyType","AnnotationPrefix","AnnotationMode","AnnotationFlag","AnnotationFieldFlag","AnnotationEditorType","AnnotationEditorPrefix","AnnotationEditorParamsType","AnnotationBorderStyleType","AnnotationActionEventType","AbortException","assert","bytesToString","createValidAbsoluteUrl","getModificationDate","getUuid","getVerbosityLevel","info","isArrayBuffer","isArrayEqual","isNodeJS","normalizeUnicode","objectFromMap","objectSize","setVerbosityLevel","shadow","string32","stringToBytes","stringToPDFString","stringToUTF8String","unreachable","utf8StringToString","warn","process","versions","nw","electron","type","ANY","DISPLAY","PRINT","SAVE","ANNOTATIONS_FORMS","ANNOTATIONS_STORAGE","ANNOTATIONS_DISABLE","OPLIST","DISABLE","ENABLE","ENABLE_FORMS","ENABLE_STORAGE","NONE","FREETEXT","STAMP","INK","RESIZE","CREATE","FREETEXT_SIZE","FREETEXT_COLOR","FREETEXT_OPACITY","INK_COLOR","INK_THICKNESS","INK_OPACITY","MODIFY_CONTENTS","COPY","MODIFY_ANNOTATIONS","FILL_INTERACTIVE_FORMS","COPY_FOR_ACCESSIBILITY","ASSEMBLE","PRINT_HIGH_QUALITY","FILL","STROKE","FILL_STROKE","INVISIBLE","FILL_ADD_TO_PATH","STROKE_ADD_TO_PATH","FILL_STROKE_ADD_TO_PATH","ADD_TO_PATH","FILL_STROKE_MASK","ADD_TO_PATH_FLAG","GRAYSCALE_1BPP","RGB_24BPP","RGBA_32BPP","TEXT","LINK","LINE","SQUARE","CIRCLE","POLYGON","POLYLINE","HIGHLIGHT","UNDERLINE","SQUIGGLY","STRIKEOUT","CARET","POPUP","FILEATTACHMENT","SOUND","MOVIE","WIDGET","SCREEN","PRINTERMARK","TRAPNET","WATERMARK","THREED","REDACT","GROUP","REPLY","HIDDEN","NOZOOM","NOROTATE","NOVIEW","READONLY","LOCKED","TOGGLENOVIEW","LOCKEDCONTENTS","REQUIRED","NOEXPORT","MULTILINE","PASSWORD","NOTOGGLETOOFF","RADIO","PUSHBUTTON","COMBO","EDIT","SORT","FILESELECT","MULTISELECT","DONOTSPELLCHECK","DONOTSCROLL","COMB","RICHTEXT","RADIOSINUNISON","COMMITONSELCHANGE","SOLID","DASHED","BEVELED","INSET","E","X","D","U","Fo","Bl","PO","PC","PV","PI","K","F","V","C","WC","WS","DS","WP","DP","O","ERRORS","WARNINGS","INFOS","BINARY","dependency","setLineWidth","setLineCap","setLineJoin","setMiterLimit","setDash","setRenderingIntent","setFlatness","setGState","save","restore","transform","moveTo","lineTo","curveTo","curveTo2","curveTo3","closePath","rectangle","stroke","closeStroke","fill","eoFill","fillStroke","eoFillStroke","closeFillStroke","closeEOFillStroke","endPath","clip","eoClip","beginText","endText","setCharSpacing","setWordSpacing","setHScale","setLeading","setFont","setTextRenderingMode","setTextRise","moveText","setLeadingMoveText","setTextMatrix","nextLine","showText","showSpacedText","nextLineShowText","nextLineSetSpacingShowText","setCharWidth","setCharWidthAndBounds","setStrokeColorSpace","setFillColorSpace","setStrokeColor","setStrokeColorN","setFillColor","setFillColorN","setStrokeGray","setFillGray","setStrokeRGBColor","setFillRGBColor","setStrokeCMYKColor","setFillCMYKColor","shadingFill","beginInlineImage","beginImageData","endInlineImage","paintXObject","markPoint","markPointProps","beginMarkedContent","beginMarkedContentProps","endMarkedContent","beginCompat","endCompat","paintFormXObjectBegin","paintFormXObjectEnd","beginGroup","endGroup","beginAnnotation","endAnnotation","paintImageMaskXObject","paintImageMaskXObjectGroup","paintImageXObject","paintInlineImageXObject","paintInlineImageXObjectGroup","paintImageXObjectRepeat","paintImageMaskXObjectRepeat","paintSolidColorImageMask","constructPath","NEED_PASSWORD","INCORRECT_PASSWORD","verbosity","level","Number","isInteger","msg","console","log","cond","_isValidProtocol","url","protocol","baseUrl","options","addDefaultProtocol","startsWith","dots","match","length","tryConvertEncoding","absoluteUrl","URL","obj","prop","nonSerializable","enumerable","configurable","writable","message","name","constructor","prototype","code","details","status","bytes","undefined","MAX_ARGUMENT_COUNT","String","fromCharCode","apply","strBuf","i","chunkEnd","Math","min","chunk","subarray","push","join","str","Uint8Array","charCodeAt","keys","map","create","key","isLittleEndian","buffer8","view32","Uint32Array","buffer","isEvalSupported","isOffscreenCanvasSupported","OffscreenCanvas","platform","navigator","isWin","isMac","includes","isCSSRoundSupported","CSS","supports","hexNumbers","Array","n","toString","padStart","makeHexColor","r","g","b","scaleMinMax","minMax","temp","m1","m2","applyTransform","p","m","xt","yt","applyInverseTransform","d","getAxialAlignedBoundingBox","p1","p2","slice","p3","p4","max","inverseTransform","singularValueDecompose2dScale","transpose","a","c","first","second","sqrt","sx","sy","normalizeRect","rect","intersect","rect1","rect2","xLow","xHigh","yLow","yHigh","bezierBoundingBox","x0","y0","x1","y1","x2","y2","x3","y3","t","t1","t2","b2ac","sqrtb2ac","tvalues","bounds","abs","j","mt","jlen","PDFStringTranslateTable","encoding","decoder","TextDecoder","fatal","decode","ex","ii","charAt","decodeURIComponent","escape","unescape","encodeURIComponent","v","byteLength","arr1","arr2","date","Date","getUTCFullYear","getUTCMonth","getUTCDate","getUTCHours","getUTCMinutes","getUTCSeconds","settled","promise","Promise","resolve","reject","data","reason","NormalizeRegex","NormalizationMap","Map","replaceAll","_","normalize","get","crypto","randomUUID","buf","getRandomValues","floor","random","__w_pdfjs_require__","RenderTask","PDFWorkerUtil","PDFWorker","PDFPageProxy","PDFDocumentProxy","PDFDocumentLoadingTask","PDFDataRangeTransport","LoopbackPort","DefaultStandardFontDataFactory","DefaultFilterFactory","DefaultCanvasFactory","DefaultCMapReaderFactory","_displaySvg","SVGGraphics","build","getDocument","version","_util","_annotation_storage","_display_utils","_font_loader","_displayNode_utils","_canvas","_worker_options","_message_handler","_metadata","_optional_content_config","_transport_stream","_displayFetch_stream","_displayNetwork","_displayNode_stream","_xfa_text","DEFAULT_RANGE_CHUNK_SIZE","RENDERING_CANCELLED_TIMEOUT","DELAYED_CLEANUP_TIMEOUT","NodeCanvasFactory","DOMCanvasFactory","NodeCMapReaderFactory","DOMCMapReaderFactory","NodeFilterFactory","DOMFilterFactory","NodeStandardFontDataFactory","DOMStandardFontDataFactory","src","range","task","docId","getUrlProp","getDataProp","httpHeaders","withCredentials","password","rangeTransport","rangeChunkSize","worker","docBaseUrl","isDataScheme","cMapUrl","cMapPacked","CMapReaderFactory","standardFontDataUrl","StandardFontDataFactory","ignoreErrors","stopAtErrors","maxImageSize","canvasMaxAreaInBytes","disableFontFace","fontExtraProperties","enableXfa","ownerDocument","document","disableRange","disableStream","disableAutoFetch","pdfBug","NaN","useSystemFonts","useWorkerFetch","isValidFetchUrl","baseURI","canvasFactory","filterFactory","styleElement","transportFactory","cMapReaderFactory","isCompressed","standardFontDataFactory","workerParams","port","GlobalWorkerOptions","workerPort","fromPort","_worker","fetchDocParams","apiVersion","evaluatorOptions","transportParams","then","destroyed","workerIdPromise","_fetchDocument","networkStreamPromise","networkStream","PDFDataTransportStream","initialData","progressiveDone","contentDispositionFilename","createPDFNetworkStream","params","PDFNodeStream","PDFFetchStream","PDFNetworkStream","all","workerId","messageHandler","MessageHandler","transport","WorkerTransport","_transport","send","catch","_capability","source","sendWithPromise","val","href","window","location","Buffer","isNaN","onPassword","onProgress","destroy","_pendingDestroy","_rangeListeners","_progressListeners","_progressiveReadListeners","_progressiveDoneListeners","_readyCapability","addRangeListener","listener","addProgressListener","addProgressiveReadListener","addProgressiveDoneListener","onDataRange","begin","onDataProgress","loaded","total","onDataProgressiveRead","onDataProgressiveDone","transportReady","requestDataRange","end","abort","pdfInfo","_pdfInfo","deprecated","getJSActions","js","jsArr","annotationStorage","numPages","fingerprints","isPureXfa","_htmlForXfa","allXfaHtml","getPage","pageNumber","getPageIndex","ref","getDestinations","getDestination","id","getPageLabels","getPageLayout","getPageMode","getViewerPreferences","getOpenAction","getAttachments","getDocJSActions","getOutline","getOptionalContentConfig","getPermissions","getMetadata","getMarkInfo","getData","saveDocument","getDownloadInfo","downloadInfoCapability","cleanup","keepLoadedFonts","startCleanup","loadingTask","loadingParams","getFieldObjects","hasJSActions","getCalculationOrderIds","delayedCleanupTimeout","pendingCleanup","pageIndex","pageInfo","_pageIndex","_pageInfo","_stats","StatTimer","_pdfBug","commonObjs","objs","PDFObjects","_maybeCleanupAfterRender","_intentStates","rotate","userUnit","view","getViewport","scale","rotation","offsetX","offsetY","dontFlip","PageViewport","viewBox","getAnnotations","intent","intentArgs","getRenderingIntent","renderingIntent","getPageJSActions","getXfa","children","render","canvasContext","viewport","annotationMode","background","optionalContentConfigPromise","annotationCanvasMap","pageColors","printAnnotationStorage","time","abortDelayedCleanup","intentState","cacheKey","set","streamReaderCancelTimeout","clearTimeout","intentPrint","displayReadyCapability","operatorList","fnArray","argsArray","lastChunk","separateAnnots","_pumpOperatorList","complete","error","renderTasks","delete","internalRenderTask","tryCleanup","capability","_abortOperatorList","Error","timeEnd","InternalRenderTask","callback","useRequestAnimationFrame","Set","add","renderTask","transparency","optionalContentConfig","initializeGraphics","operatorListChanged","getOperatorList","opListTask","opListReadCapability","streamTextContent","includeMarkedContent","disableNormalization","TEXT_CONTENT_CHUNK_SIZE","sendWithStream","highWaterMark","size","textContent","items","getTextContent","xfa","XfaText","readableStream","pump","reader","read","done","assign","styles","getReader","getStructTree","_destroy","waitOn","values","force","completed","cancel","clear","resetStats","success","delayed","setTimeout","_startRenderPage","_renderPageChunk","operatorListChunk","annotationStorageSerializable","transfers","streamReader","RenderingCancelledException","delay","extraDelay","curCacheKey","curIntentState","stats","listeners","deferred","postMessage","transfer","event","structuredClone","call","addEventListener","removeEventListener","terminate","isWorkerDisabled","fallbackWorkerSrc","fakeWorkerId","pdfjsFilePath","currentScript","replace","isSameOrigin","otherUrl","base","origin","other","createCDNWrapper","wrapper","createObjectURL","Blob","workerPorts","_port","_webWorker","_messageHandler","has","WeakMap","_initializeFromPort","_initialize","on","_mainThreadWorkerMessageHandler","workerSrc","Worker","terminateEarly","onWorkerError","_setupFakeWorker","sendTest","testObj","_setupFakeWorkerGlobal","WorkerMessageHandler","workerHandler","setup","cachedPort","pdfjsWorker","loader","mainWorkerMessageHandler","eval","loadScript","methodPromises","pageCache","pagePromises","passwordCapability","fontLoader","FontLoader","_params","destroyCapability","_networkStream","_fullReader","_lastProgress","setupMessageHandler","cacheSimpleMethod","cachedPromise","AnnotationStorage","isOpList","SerializableEmpty","PrintAnnotationStorage","serializable","hash","page","hasOwnProperty","resetModified","terminated","cancelAllRequests","sink","getFullReader","evt","onPull","close","ArrayBuffer","enqueue","onCancel","ready","readyReason","headersCapability","fullReader","headersReady","isStreamingSupported","isRangeSupported","contentLength","rangeReader","getRangeReader","_numPages","htmlForXfa","exception","updatePassword","exportedData","exportedError","inspectFont","FontInspector","enabled","font","fontAdded","FontFaceObject","bind","finally","imageData","pageProxy","bitmap","width","height","fetch","filename","num","gen","results","OptionalContentConfig","metadata","Metadata","cleanupSuccessful","ensureObj","objId","onContinue","form","canvas","canvasInUse","WeakSet","operatorListIdx","running","graphicsReadyCallback","graphicsReady","_useRequestAnimationFrame","cancelled","_cancelBound","_continueBound","_continue","_scheduleNextBound","_scheduleNext","_nextBound","_next","StepperManager","stepper","init","nextBreakPoint","getNextBreakPoint","gfx","CanvasGraphics","beginDrawing","endDrawing","updateOperatorList","requestAnimationFrame","executeOperatorList","_editor","_murmurhash","freeze","modified","storage","onSetModified","onResetModified","onAnnotationEditor","getValue","defaultValue","getRawValue","remove","AnnotationEditor","setValue","entry","entries","setModified","_type","getAll","setAll","print","MurmurHash3_64","context","hasBitmap","serialized","serialize","update","JSON","stringify","hexdigest","parent","clone","_tools","altText","altTextDecorative","altTextButton","altTextTooltip","altTextTooltipTimeout","keepAspectRatio","resizersDiv","boundFocusin","focusin","boundFocusout","focusout","hasBeenClicked","isEditing","isInEditMode","_initialOptions","_uiManager","_focusEventsAllowed","_l10nPromise","isDraggable","zIndex","_zIndex","_borderLineWidth","_colorManager","ColorManager","SMALL_EDITOR_SIZE","parameters","div","uiManager","annotationElementId","_willKeepAspectRatio","isCentered","_structTreeParentId","rawDims","pageWidth","pageHeight","pageX","pageY","pageRotation","viewParameters","pageDimensions","pageTranslation","parentDimensions","x","y","isAttachedToDOM","deleted","editorType","getPrototypeOf","_defaultLineColor","getHexCode","deleteAnnotationElement","editor","fakeEditor","FakeEditor","getNextId","addToAnnotationStorage","initialize","l10n","strings","style","getComputedStyle","documentElement","parseFloat","getPropertyValue","updateDefaultParams","_value","defaultPropertiesToUpdate","isHandlingMimeForPasting","mime","paste","item","propertiesToUpdate","_isDraggable","classList","toggle","center","parentRotation","fixAndSetPosition","addCommands","currentLayer","setInBackground","setInForeground","setParent","setSelected","target","relatedTarget","closest","preventDefault","isMultipleSelection","commitOrRemove","isEmpty","commit","setAt","tx","ty","screenToPageTranslation","translate","translateInPage","scrollIntoView","block","drag","parentWidth","parentHeight","getBoundingClientRect","findNewParent","bx","by","getBaseTranslation","left","toFixed","top","moveInDOM","rotatePoint","angle","pageTranslationToScreen","getRotationMatrix","parentScale","realScale","scaledWidth","scaledHeight","round","setDims","fixDims","widthPercent","endsWith","heightPercent","getInitialTranslation","createResizers","createElement","classes","append","resizerPointerdown","noContextMenu","prepend","button","ctrlKey","boundResizerPointermove","resizerPointermove","savedDraggable","pointerMoveOptions","passive","capture","savedX","savedY","savedWidth","savedHeight","savedParentCursor","cursor","savedCursor","pointerUpCallback","newX","newY","newWidth","newHeight","cmd","undo","mustExec","getPoint","getOpposite","minWidth","MIN_SIZE","minHeight","rotationMatrix","transf","invRotationMatrix","invTransf","isDiagonal","isHorizontal","w","h","point","oppositePoint","transfOppositePoint","oppositeX","oppositeY","ratioX","ratioY","deltaX","deltaY","movementX","movementY","oldDiag","hypot","addAltTextButton","className","setAttribute","tabIndex","stopPropagation","editAltText","setAltTextButtonState","PERCENT","tooltip","DELAY_TO_SHOW_TOOLTIP","_eventBus","dispatch","subtype","action","innerText","parentNode","getClientDimensions","altTextData","decorative","maxWidth","maxHeight","bindEvents","pointerdown","setUpDragSession","pointerMoveCallback","isSelected","e","dragSelectedEditors","endDragSession","shiftKey","metaKey","toggleSelected","moveEditorInDOM","_setParentAndPosition","changeParent","getRect","shiftX","shiftY","getRectInCurrentCoords","onceAdded","enableEditMode","disableEditMode","shouldGetKeyboardEvents","needsToBeRebuilt","rebuild","isForCopying","deserialize","removeEditor","isResizable","makeResizable","select","unselect","contains","activeElement","focus","updateParams","disableEditing","hidden","enableEditing","enterInEditMode","contentDiv","setActiveEditor","setAspectRatio","aspectRatio","KeyboardManager","CommandManager","AnnotationEditorUIManager","opacityToHex","element","names","opacity","IdManager","getId","ImageManager","baseId","cache","_isSVGFittingCanvas","svg","ctx","getContext","image","Image","drawImage","getImageData","rawData","refCounter","isSvg","response","ok","statusText","blob","file","mustRemoveAspectRatioPromise","fileReader","FileReader","imageElement","imagePromise","onload","svgUrl","result","onerror","readAsDataURL","createImageBitmap","getFromFile","lastModified","getFromUrl","getFromId","getSvgUrl","deleteId","isValidId","commands","locked","maxSize","position","overwriteIfSameType","keepUndo","next","splice","redo","hasSomethingToUndo","hasSomethingToRedo","callbacks","allKeys","isMacKey","split","at","altKey","exec","self","bubbles","args","checker","_colorsMapping","_colors","colors","getColorValues","convert","color","rgb","getRGB","matchMedia","matches","RGB","every","activeEditor","allEditors","allLayers","altTextManager","commandManager","currentPageIndex","deletedAnnotationsElementIds","draggingEditors","editorTypes","editorsToRescale","idManager","isEnabled","isWaiting","lastActiveElement","mode","selectedEditors","boundBlur","blur","boundFocus","boundCopy","copy","boundCut","cut","boundPaste","boundKeydown","keydown","boundOnEditingAction","onEditingAction","boundOnPageChanging","onPageChanging","boundOnScaleChanging","onScaleChanging","boundOnRotationChanging","onRotationChanging","previousStates","hasSelectedEditor","translation","translationTimeoutId","container","viewer","TRANSLATE_SMALL","TRANSLATE_BIG","_keyboardManager","proto","arrowChecker","hasSomethingToControl","small","big","selectAll","unselectAll","translateSelectedEditors","eventBus","pdfDocument","_on","PixelsPerInch","PDF_TO_CSS_UNITS","layer","removeKeyboardManager","removeFocusManager","_off","hcmFilter","addHCMFilter","foreground","direction","focusMainContainer","findParent","layerX","layerY","disableUserSelect","addShouldRescale","removeShouldRescale","pagesRotation","addFocusManager","hasSelection","lastEditor","once","addKeyboardManager","addCopyPasteListeners","removeCopyPasteListeners","addEditListeners","removeEditListeners","editors","clipboardData","setData","parse","isArray","newEditors","deserializedEditor","addEditorToLayer","selectEditors","getActive","dispatchUpdateStates","hasChanged","some","dispatchUpdateUI","setEditingState","registerEditorTypes","types","getLayer","addLayer","enable","disable","removeLayer","updateMode","editId","disableAll","enableAll","updateToolbar","addNewEditor","enableWaiting","mustWait","disableClick","enableClick","getEditors","getEditor","addEditor","addDeletedAnnotationElement","isDeletedAnnotationElement","removeDeletedAnnotationElement","addOrRebuild","ed","noCommit","totalX","totalY","TIME_TO_WAIT","savedPageIndex","newPageIndex","mustBeAddedInUndoStack","move","isActive","getMode","imageManager","pdfDateStringRegex","PDFDateString","DOMSVGFactory","getCurrentTransform","getCurrentTransformInverse","getFilenameFromUrl","getPdfFilenameFromUrl","getXfaPageViewport","isPdfFile","setLayerDimensions","_base_factory","SVG_NS","PDF","BaseFilterFactory","_cache","_defs","hcmKey","hcmUrl","hcmHighlightFilter","hcmHighlightKey","hcmHighlightUrl","defs","visibility","contain","createElementNS","body","addFilter","maps","tableR","tableG","tableB","mapR","mapG","mapB","bufferR","bufferG","bufferB","filter","createFilter","addTransferMapConversion","fgColor","bgColor","fgRGB","bgRGB","table","addGrayConversion","getSteps","start","arr","addHighlightHCMFilter","newFgColor","newBgColor","fgGray","bgGray","newFgRGB","newBgRGB","fg","bg","step","newStart","newStep","prev","k","keepHCM","feColorMatrix","appendFeFunc","feComponentTransfer","func","feFunc","rTable","gTable","bTable","BaseCanvasFactory","_document","_createCanvas","fetchData","asTypedArray","arrayBuffer","text","request","XMLHttpRequest","open","responseType","onreadystatechange","readyState","DONE","responseText","BaseCMapReaderFactory","_fetchData","compressionType","cMapData","BaseStandardFontDataFactory","BaseSVGFactory","_createSVG","rotateA","rotateB","rotateC","rotateD","offsetCanvasX","offsetCanvasY","centerX","centerY","convertToViewportPoint","convertToViewportRectangle","topLeft","bottomRight","convertToPdfPoint","trim","substring","toLowerCase","test","onlyStripPath","lastIndexOf","defaultFilename","reURI","reFilename","splitURI","suggestedFilename","started","times","now","outBuf","longest","padEnd","removeScriptElement","script","head","toDateObject","input","year","parseInt","month","day","hour","minute","universalTimeRelation","offsetHour","offsetMinute","UTC","xfaPage","attributes","colorRGB","span","computedColor","f","getTransform","invertSelf","mustFlip","mustRotate","useRound","widthStr","heightStr","reset","canvasAndContext","skipDimensions","SEED","MASK_HIGH","MASK_LOW","seed","h1","h2","blockCounts","tailLength","dataUint32","k1","k2","C1","C2","C1_LOW","C2_LOW","systemFonts","nativeFontFaces","loadingRequests","loadTestFontId","addNativeFontFace","nativeFontFace","fonts","removeNativeFontFace","insertRule","rule","getElementsByTagName","styleSheet","sheet","cssRules","loadSystemFont","loadedName","isFontLoadingAPISupported","fontFace","FontFace","load","baseFontName","attached","missingFile","systemFontInfo","createNativeFontFace","family","createFontFaceRule","isSyncFontLoadingSupported","_queueLoadingCallback","_prepareFontLoadEvent","hasFonts","supported","userAgent","completeRequest","otherRequest","shift","_loadTestFont","testFont","atob","int32","offset","spliceString","s","insert","chunk1","chunk2","called","isFontReady","fillText","COMMENT_OFFSET","CFF_CHECKSUM_OFFSET","XXXX_VALUE","checksum","btoa","fontFamily","translatedData","compiledGlyphs","_inspectFont","cssFontInfo","css","weight","fontWeight","italicAngle","mimetype","getPathGenerator","character","cmds","jsBuf","current","fs","__webpack_require__","readFile","Canvas","createCanvas","_pattern_helper","_image_utils","MIN_FONT_SIZE","MAX_FONT_SIZE","MAX_GROUP_SIZE","EXECUTION_TIME","EXECUTION_STEPS","MAX_SIZE_TO_COMPILE","FULL_CHUNK_HEIGHT","mirrorContextOperations","destCtx","_removeMirroring","__originalSave","__originalRestore","__originalRotate","__originalScale","__originalTranslate","__originalTransform","__originalSetTransform","setTransform","__originalResetTransform","resetTransform","__originalClip","__originalMoveTo","__originalLineTo","__originalBezierCurveTo","bezierCurveTo","__originalRect","__originalClosePath","__originalBeginPath","beginPath","cp1x","cp1y","cp2x","cp2y","CachedCanvases","getCanvas","canvasEntry","drawImageAtIntegerCoords","srcImg","srcX","srcY","srcW","srcH","destX","destY","destW","destH","tlX","rTlX","tlY","rTlY","brX","rWidth","brY","rHeight","sign","scaleX","scaleY","compileType3Glyph","imgData","j0","POINT_TO_PROCESS_LIMIT","POINT_TYPES","width1","points","lineSize","pos","elem","mask","count","sum","steps","Int32Array","path","Path2D","p0","pp","drawOutline","CanvasExtraState","alphaIsShape","fontSize","fontSizeScale","textMatrix","textMatrixScale","fontMatrix","leading","lineX","lineY","charSpacing","wordSpacing","textHScale","textRenderingMode","textRise","fillColor","strokeColor","patternFill","fillAlpha","strokeAlpha","lineWidth","activeSMask","transferMaps","startNewPathAndClipBox","clipBox","setCurrentPoint","updatePathMinMax","minX","minY","maxX","maxY","updateRectMinMax","updateScalingPathMinMax","updateCurvePathMinMax","box","getPathBoundingBox","pathType","PathType","xStrokePad","yStrokePad","updateClipFromPath","isEmptyClip","Infinity","getClippedPathBoundingBox","putBinaryImageData","thisChunkHeight","elemsInThisChunk","ImageData","putImageData","partialChunkHeight","fullChunks","totalChunks","chunkImgData","createImageData","srcPos","destPos","dest","kind","srcLength","dest32","dest32DataLength","fullSrcDiff","white","black","srcDiff","kEnd","kEndUnrolled","srcByte","putBinaryImageMask","convertBlackAndWhiteToRGBA","nonBlackColor","copyCtxState","sourceCtx","properties","property","setLineDash","getLineDash","lineDashOffset","resetCtxToDefault","strokeStyle","fillStyle","fillRule","globalAlpha","lineCap","lineJoin","miterLimit","globalCompositeOperation","composeSMaskBackdrop","r0","g0","b0","alpha","alpha_","composeSMaskAlpha","maskData","layerData","transferMap","composeSMaskLuminosity","genericComposeSMask","maskCtx","layerCtx","backdrop","layerOffsetX","layerOffsetY","maskOffsetX","maskOffsetY","hasBackdrop","composeFn","PIXELS_TO_PROCESS","chunkSize","ceil","row","chunkHeight","composeSMask","smask","layerBox","layerWidth","layerHeight","getImageSmoothingEnabled","interpolate","fround","actualScale","devicePixelRatio","LINE_CAP_STYLES","LINE_JOIN_STYLES","NORMAL_CLIP","EO_CLIP","canvasCtx","markedContentStack","stateStack","pendingClip","pendingEOFill","res","xobjs","groupStack","processingType3","baseTransform","baseTransformStack","groupLevel","smaskStack","smaskCounter","tempSMask","suspendedCtx","contentVisible","cachedCanvases","cachedPatterns","viewportScale","outputScaleX","outputScaleY","_cachedScaleForStroking","_cachedGetSinglePixelWidth","_cachedBitmapsMap","getObject","fallback","savedFillStyle","fillRect","transparentCanvas","compositeCtx","executionStartIdx","continueCallback","fnId","argsArrayLen","chunkOperations","endTime","breakIt","depObjId","objsPool","restoreInitialState","inSMaskMode","HTMLCanvasElement","drawFilter","hcmFilterId","savedFilter","_scaleImage","img","tmpCanvas","tmpCtx","widthScale","heightScale","paintWidth","paintHeight","tmpCanvasId","clearRect","_createMaskCanvas","scaled","maskCanvas","isPatternFill","currentTransform","mainKey","cachedImage","maskToCanvas","cord1","cord2","drawnWidth","drawnHeight","fillCanvas","fillCtx","imageSmoothingEnabled","inverse","getPattern","limit","dashArray","dashPhase","flatness","states","checkSMaskState","beginSMaskMode","endSMaskMode","cacheId","scratchCanvas","compose","dirtyBox","old","pop","ops","startX","startY","isScalingMatrix","minMaxForBezier","xw","yh","consumePath","rescaleAndStroke","needRestore","paths","pendingTextPaths","addToPath","spacing","fontRefName","fontObj","fontDirection","isType3Font","typeface","fallbackName","bold","italic","browserFontSize","rise","paintChar","patternTransform","fillStrokeMode","isAddToPathSet","strokeText","isFontSubpixelAAEnabled","glyphs","showType3Text","glyphsLength","vertical","spacingDir","defaultVMetrics","widthAdvanceScale","simpleFillText","pattern","getSinglePixelWidth","isInvalidPDFjsFont","chars","glyph","unicode","scaledX","scaledY","restoreNeeded","isSpace","fontChar","accent","vmetric","vx","vy","remeasure","measuredWidth","measureText","characterScaleX","isInFont","scaledAccentX","scaledAccentY","charWidth","spacingLength","isTextInvisible","charProcOperatorList","operatorListId","transformed","xWidth","yWidth","llx","lly","urx","ury","getColorN_Pattern","IR","canvasGraphicsFactory","createCanvasGraphics","TilingPattern","_getPattern","arguments","matrix","getShadingPattern","SHADING","inv","bbox","group","currentCtx","isolated","knockout","canvasBounds","groupCtx","startTransformInverse","currentMtx","hasOwnCanvas","canvasWidth","canvasHeight","annotationCanvas","savedCtx","compiled","skewX","skewY","positions","trans","images","applyTransferMapsToCanvas","applyTransferMapsToBitmap","imgToPaint","HTMLElement","tag","visible","isVisible","isContentVisible","absDet","normX","normY","getScaleForStroking","scaledLineWidth","scaledXLineWidth","scaledYLineWidth","baseArea","saveRestore","dashes","op","applyBoundingBox","region","BaseShadingPattern","RadialAxialShadingPattern","_bbox","_colorStops","_p0","_p1","_r0","_r1","_createGradient","grad","colorStop","createLinearGradient","createRadialGradient","addColorStop","owner","ownerBBox","createPattern","domMatrix","DOMMatrix","drawTriangle","c1","c2","c3","tmp","xa","car","cag","cab","xb","cbr","cbg","cbb","coords","rowSize","c1r","c1g","c1b","c2r","c2g","c2b","c3r","c3g","c3b","x1_","x2_","drawFigure","figure","ps","cs","verticesPerRow","rows","cols","q","MeshShadingPattern","_coords","_figures","_bounds","_background","_createMeshCanvas","combinedScale","backgroundColor","EXPECTED_SCALE","MAX_PATTERN_SIZE","BORDER_SIZE","boundsWidth","boundsHeight","paddedWidth","paddedHeight","matrixScale","temporaryPatternCanvas","DummyShadingPattern","PaintType","COLORED","UNCOLORED","xstep","ystep","paintType","tilingType","createPatternCanvas","curMatrixScale","dimx","getSizeAndScale","dimy","graphics","setFillAndStrokeStyleToContext","adjustedX0","adjustedY0","adjustedX1","adjustedY1","clipBbox","realOutputSize","bboxWidth","bboxHeight","cssColor","convertToRGBA","grayToRGBA","convertRGBToRGBA","inverseDecode","zeroMapping","oneMapping","widthInSource","widthRemainder","len32","src32","s1","s2","s3","jj","CallbackKind","DATA","ERROR","StreamKind","CANCEL","CANCEL_COMPLETE","CLOSE","ENQUEUE","PULL","PULL_COMPLETE","START_COMPLETE","wrapReason","sourceName","targetName","comObj","callbackId","streamId","streamSinks","streamControllers","callbackCapabilities","actionHandler","_onComObjOnMessage","stream","processStreamMessage","cbSourceName","cbTargetName","createStreamSink","actionName","handler","ah","queueingStrategy","ReadableStream","controller","startCapability","startCall","pullCall","cancelCall","isClosed","desiredSize","pull","pullCapability","cancelCapability","streamSink","isCancelled","lastDesiredSize","sinkCapability","streamController","deleteStreamController","allSettled","metadataMap","parsedData","getRaw","INTERNAL","Symbol","OptionalContentGroup","_setVisible","internal","cachedGetHash","groups","initialHash","order","creator","baseState","off","getHash","evaluateVisibilityExpression","array","operator","state","expression","policy","ids","setVisibility","hasInitialVisibility","getOrder","getGroups","getGroup","pdfDataRangeTransport","_queuedChunks","_progressiveDone","_contentDispositionFilename","_pdfDataRangeTransport","_isStreamingSupported","_isRangeSupported","_contentLength","_fullRequestReader","_rangeReaders","_onReceiveData","_onProgress","_onProgressiveDone","_enqueue","found","_begin","_progressiveDataLength","_loaded","_removeRangeReader","indexOf","queuedChunks","PDFDataTransportStreamReader","PDFDataTransportStreamRangeReader","_stream","_done","_filename","_requests","_headersReady","requestCapability","_end","_queuedChunk","requestsCapability","_network_utils","createFetchOptions","headers","abortController","method","signal","credentials","redirect","createHeaders","Headers","getArrayBuffer","isHttp","_rangeRequestReaders","PDFFetchStreamReader","PDFFetchStreamRangeReader","_reader","_withCredentials","_headersCapability","_disableRange","_rangeChunkSize","_abortController","AbortController","_headers","validateResponseStatus","createResponseStatusError","getResponseHeader","allowRangeRequests","suggestedLength","validateRangeRequestCapabilities","extractFilenameFromHeader","_readCapability","_content_disposition","returnValues","contentEncoding","contentDisposition","getFilenameFromContentDispositionHeader","needsEncodingFixup","toParamRegExp","rfc2616unquote","fixupEncoding","rfc2047decode","rfc5987decode","rfc2231getparam","attributePattern","flags","textdecode","contentDispositionStr","iter","quot","part","parts","quotindex","extvalue","encodingend","langvalue","charset","hex","OK_RESPONSE","PARTIAL_CONTENT_RESPONSE","xhr","NetworkManager","currXhrId","pendingRequests","requestRange","requestFull","xhrId","pendingRequest","setRequestHeader","expectedStatus","onError","onStateChange","onprogress","onHeadersReceived","onDone","xhrStatus","ok_response_on_range_request","rangeHeader","getRequestXhr","isPendingRequest","abortRequest","_source","_manager","_onRangeRequestReaderClosed","PDFNetworkStreamFullRequestReader","PDFNetworkStreamRangeRequestReader","onClosed","manager","_onHeadersReceived","_onDone","_onError","_url","_fullRequestId","_headersReceivedCapability","_cachedChunks","_storedError","fullRequestXhrId","fullRequestXhr","lengthComputable","_requestId","_close","fileUriRegex","parseUrl","sourceUrl","parsedUrl","host","isFsUrl","PDFNodeStreamFsFullReader","PDFNodeStreamFullReader","PDFNodeStreamFsRangeReader","PDFNodeStreamRangeReader","BaseFullReader","_readableStream","_error","_setReadableStream","BaseRangeReader","createRequestOptions","auth","hostname","handleResponse","statusCode","_request","http","https","_httpHeaders","Range","lstat","stat","createReadStream","SVG_DEFAULTS","fontStyle","XML_NS","XLINK_NS","contentType","forceDataSchema","digits","b1","b2","b3","d1","d2","d3","d4","convertImgDataToPng","PNG_HEADER","CHUNK_WRAPPER_SIZE","crcTable","crc32","crc","writePngChunk","len","adler32","deflateSync","literals","deflateSyncUncompressed","node","from","output","maxBlockLength","deflateBlocks","idat","pi","adler","encode","isMask","bitDepth","colorType","offsetLiterals","offsetBytes","ihdr","pngLength","SVGExtraState","dependencies","activeClipUrl","clipGroup","maskId","opListToTree","opList","opTree","opListElement","fn","pf","pm","acos","clipCount","maskCount","shadingCount","svgFactory","transformMatrix","transformStack","extraStack","embedFonts","embeddedFonts","cssStyle","_operatorIdMapping","tgrp","executeOpTree","loadDependencies","getSVG","svgElement","convertOpList","operatorIdMapping","opTreeElement","lineMatrix","xcoords","ycoords","tspan","setAttributeNS","txtElement","txtgrp","lineWidthScale","_setStrokeAttributes","_ensureTransformGroup","addFontStyle","hasChildNodes","setStrokeAlpha","setFillAlpha","_makeColorN_Pattern","_makeShadingPattern","_makeTilingPattern","tilingId","tx0","ty0","tx1","ty1","xscale","yscale","txstep","tystep","tiling","childNodes","gradient","shadingId","colorStops","point0","point1","focalPoint","circlePoint","focalRadius","circleRadius","stop","getAttributeNS","clipId","clipPath","clipElement","cloneNode","imgSrc","cliprect","imgEl","definitions","rootGroup","_ensureClipGroup","walk","shouldBuildText","child","TextLayerRenderTask","renderTextLayer","updateTextLayer","MAX_TEXT_DIVS_TO_RENDER","DEFAULT_FONT_SIZE","DEFAULT_FONT_ASCENT","ascentCache","getCtx","getAscent","cachedAscent","metrics","ascent","fontBoundingBoxAscent","descent","fontBoundingBoxDescent","ratio","pixels","appendText","geom","textDiv","textDivProperties","hasText","hasEOL","_textDivs","_transform","atan2","fontName","fontHeight","fontAscent","_isOffscreenCanvasSupported","sin","cos","scaleFactorStr","divStyle","_container","_rootContainer","_pageWidth","_pageHeight","dir","_fontInspectorEnabled","dataset","shouldScaleText","absScaleX","absScaleY","_textDivProperties","_isReadableStream","_layoutText","layout","prevFontSize","prevFontFamily","_canceled","textDivs","textDivsLength","textContentSource","textContentItemsStr","_textContentSource","_textContentItemsStr","_layoutTextParams","_processItems","styleCache","br","_render","textContentStream","scaleFactor","mustRescale","AnnotationEditorLayer","_freetext","_ink","_stamp","accessibilityManager","allowClick","annotationLayer","boundPointerup","pointerup","boundPointerdown","hadPointerDown","isCleaningUp","isDisabling","_initialized","FreeTextEditor","InkEditor","StampEditor","addInkEditorIfNeeded","isCommitting","createAndAddNewEditor","pointerEvents","annotationElementIds","editables","getEditableAnnotations","editable","hide","hiddenAnnotationIds","getEditableAnnotation","show","currentActive","attach","detach","removePointerInTextLayer","moveElementInDOM","addUndoableEditor","createNewEditor","pasteEditor","getCenterPoint","annotationType","annotationEditorType","innerWidth","innerHeight","_annotation_layer","boundEditorDivBlur","editorDivBlur","boundEditorDivFocus","editorDivFocus","boundEditorDivInput","editorDivInput","boundEditorDivKeydown","editorDivKeydown","content","editorDivId","_freeTextDefaultContent","_internalPadding","_defaultColor","_defaultFontSize","_translateEmpty","updateFontSize","updateColor","setFontsize","editorDiv","setEditorDimensions","savedFontsize","savedColor","overlayDiv","contentEditable","removeAttribute","preventScroll","cheatInitialRect","extractText","divs","savedDisplay","display","savedText","newText","trimEnd","setText","setContent","dblclick","baseX","baseY","posX","posY","replaceChildren","line","createTextNode","FreeTextAnnotationElement","defaultAppearanceData","fontColor","textPosition","padding","structTreeParentId","hasElementChanged","StampAnnotationElement","InkAnnotationElement","AnnotationLayer","_scripting_utils","_displayL10n_utils","_xfa_layer","DEFAULT_TAB_INDEX","GetElementsByNameSet","getRectDims","AnnotationElementFactory","LinkAnnotationElement","TextAnnotationElement","fieldType","TextWidgetAnnotationElement","radioButton","RadioButtonWidgetAnnotationElement","checkBox","CheckboxWidgetAnnotationElement","PushButtonWidgetAnnotationElement","ChoiceWidgetAnnotationElement","SignatureWidgetAnnotationElement","WidgetAnnotationElement","PopupAnnotationElement","LineAnnotationElement","SquareAnnotationElement","CircleAnnotationElement","PolylineAnnotationElement","CaretAnnotationElement","PolygonAnnotationElement","HighlightAnnotationElement","UnderlineAnnotationElement","SquigglyAnnotationElement","StrikeOutAnnotationElement","FileAttachmentAnnotationElement","AnnotationElement","hasBorder","isRenderable","ignoreBorder","createQuadrilaterals","linkService","downloadManager","imageResourcesPath","renderForms","enableScripting","_fieldObjects","fieldObjects","_createContainer","_createQuadrilaterals","_hasPopupData","titleObj","contentsObj","richText","hasPopupData","popupRef","noRotate","setRotation","borderStyle","borderWidth","horizontalRadius","horizontalCornerRadius","verticalRadius","verticalCornerRadius","radius","borderRadius","borderBottomStyle","borderColor","elementWidth","elementHeight","_commonActions","setColor","jsName","styleName","detail","colorArray","ColorConverters","noView","noPrint","userName","title","readonly","disabled","required","_setRequired","textColor","_dispatchEventFromSandbox","actions","jsEvent","commonActions","_setDefaultPropertiesFromJS","storedData","eventProxy","svgBuffer","quadPoints","rectBlX","rectBlY","rectTrX","rectTrY","trX","trY","blX","blY","rectWidth","rectHeight","backgroundImage","_createPopup","popup","modificationDate","parentRect","elements","_getElementsByName","skipId","fields","fieldObj","exportValues","exportValue","domElement","querySelector","getElementsByName","getAttribute","maybeShow","forceHide","getElementsToTriggerPopup","addHighlightArea","triggers","_editOnDoubleClick","isTooltipOnly","link","isBound","addLinkAttributes","newWindow","_bindNamedAction","attachment","_bindAttachment","setOCGState","bindSetOCGState","_bindLink","Action","_bindJSAction","resetForm","_bindResetFormAction","setInternalLink","destination","getDestinationHash","onclick","goToDestination","getAnchorUrl","executeNamedAction","openOrDownloadData","executeSetOCGState","otherClickAction","resetFormFields","refs","resetFormRefs","include","allFields","fieldIds","fieldName","field","allIds","dispatchEvent","Event","alt","l10nId","l10nArgs","alternativeText","showElementAndHideCanvas","previousSibling","nodeName","_getKeyModifier","_setEventListener","elementData","baseName","eventName","valueGetter","modifier","focused","_setEventListeners","getter","Blur","Focus","_setBackgroundColor","_setTextStyle","computedFontSize","TEXT_ALIGNMENT","roundToOneDecimal","multiLine","numberOfLines","lineHeight","textAlignment","textAlign","isRequired","hasAppearance","fieldValue","setPropertyOnSiblings","keyInStorage","maxLen","charLimit","fieldFormattedValues","formattedValue","comb","userValue","lastCommittedValue","commitKey","doNotScroll","overflowY","overflowX","readOnly","maxLength","defaultFieldValue","blurListener","scrollLeft","selRange","setSelectionRange","willCommit","selStart","selectionStart","selEnd","selectionEnd","_blurListener","Keystroke","inputType","change","fieldWidth","combWidth","letterSpacing","verticalAlign","checked","checkbox","curChecked","buttonValue","radio","pdfButtonValue","linkElement","lastChild","selectElement","addAnEmptyEntry","combo","option","multiSelect","multiple","selected","optionElement","displayValue","removeEmptyEntry","noneOptionElement","isExport","selectedIndex","selectedValues","getItems","multipleSelection","index","findIndex","selectChild","before","indices","changeEx","keyDown","PopupElement","elementIds","dateTimePromise","boundKeyDown","boundHide","boundShow","boundToggle","pinned","wasVisible","dateObject","toLocaleDateString","toLocaleTimeString","trigger","flatMap","baseColor","outlineColor","BACKGROUND_ENLIGHT","header","localized","XfaLayer","xfaHtml","html","contents","_formatContents","useParentRect","normalizedRect","HORIZONTAL_SPACE_AFTER_ANNOTATION","popupLeft","popupTop","lines","lineSpan","lineCoordinates","square","circle","polyline","containerClassName","svgElementName","coordinate","vertices","polylines","inkList","inkLists","download","editableAnnotations","NullL10n","appendElement","contentElement","firstChild","annotations","popupToElements","elementParams","noHTML","isPopupAnnotation","rendered","setAnnotationCanvasMap","replaceWith","makeColorComp","scaleAndClamp","CMYK_G","G_CMYK","G_RGB","G_rgb","G_HTML","G","RGB_G","RGB_rgb","RGB_HTML","T_HTML","T_rgb","CMYK_RGB","CMYK_rgb","CMYK_HTML","components","RGB_CMYK","getL10nFallback","DEFAULT_L10N_STRINGS","of_pages","page_of_pages","document_properties_kb","document_properties_mb","document_properties_date_string","document_properties_page_size_unit_inches","document_properties_page_size_unit_millimeters","document_properties_page_size_orientation_portrait","document_properties_page_size_orientation_landscape","document_properties_page_size_name_a3","document_properties_page_size_name_a4","document_properties_page_size_name_letter","document_properties_page_size_name_legal","document_properties_page_size_dimension_string","document_properties_page_size_dimension_name_string","document_properties_linearized_yes","document_properties_linearized_no","additional_layers","page_landmark","thumb_page_title","thumb_page_canvas","find_reached_top","find_reached_bottom","find_not_found","page_scale_width","page_scale_fit","page_scale_auto","page_scale_actual","page_scale_percent","loading_error","invalid_file_error","missing_file_error","unexpected_response_error","rendering_error","annotation_date_string","printing_not_supported","printing_not_ready","web_fonts_disabled","free_text2_default_content","editor_free_text2_aria_label","editor_ink2_aria_label","editor_ink_canvas_aria_label","editor_alt_text_button_label","editor_alt_text_edit_button_label","editor_alt_text_decorative_tooltip","formatL10nValue","print_progress_percent","getLanguage","getDirection","setupStorage","xfaOn","xfaOff","setAttributes","isHTMLAnchorElement","HTMLAnchorElement","dataId","rootHtml","stack","rootDiv","childHtml","xmlns","el","querySelectorAll","baseHeight","baseWidth","boundCanvasPointermove","canvasPointermove","boundCanvasPointerleave","canvasPointerleave","boundCanvasPointerup","canvasPointerup","boundCanvasPointerdown","canvasPointerdown","currentPath2D","hasSomethingToDraw","isCanvasInitialized","observer","realWidth","realHeight","requestFrameCallback","_defaultOpacity","_defaultThickness","thickness","bezierPath2D","allRawPaths","currentPath","translationX","translationY","updateThickness","updateOpacity","savedThickness","fitToContent","redraw","savedOpacity","createObserver","setCanvasDims","disconnect","setDimensions","getInitialBBox","setStroke","startDrawing","drawPoints","draw","lastX","lastY","path2D","makeBezierCurve","lastPoint","stopDrawing","bezier","generateBezierPoints","xy","lastPoints","prevX","prevY","bezierPoints","control1","control2","updateTransform","ResizeObserver","contentRect","observe","roundedWidth","roundedHeight","setScaleFactor","getPadding","scaleFactorW","scaleFactorH","buildPath2D","toPDFCoordinates","fromPDFCoordinates","serializePaths","p10","p11","p20","p21","p30","p31","p40","p41","getBbox","xMin","xMax","yMin","yMax","firstTime","prevTranslationX","prevTranslationY","unscaledPadding","bitmapId","bitmapPromise","bitmapUrl","bitmapFile","resizeTimeoutId","hasBeenAddedInUndoStack","supportedTypes","supportedTypesStr","getAsFile","getBitmapFetched","fromId","getBitmapDone","getBitmap","accept","files","click","MAX_RATIO","factor","drawBitmap","scaleBitmap","bitmapWidth","bitmapHeight","prevWidth","prevHeight","offscreen","transferToImageBitmap","serializeBitmap","toUrl","toDataURL","accessibilityData","stamps","area","prevData","__webpack_module_cache__","moduleId","cachedModule","__nested_webpack_exports__","_annotation_editor_layer","_api","_text_layer"],"sourceRoot":""}