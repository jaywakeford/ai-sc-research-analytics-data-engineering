{"version":3,"file":"static/chunks/910-9fef6c7988791f20.js","mappings":"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A,OACAC,KAAA,OACAC,KAAA,OACAC,OAAA,IACAC,QAAA,IACAC,KAAA,IACAC,KAAA,IACAC,QAAA,IACAC,SAAA,IACAC,cAAA,IACAC,QAAA,IACAC,QAAA,IACAC,QAAA,IACAC,QAAA,IACAC,MAAA,IACAC,MAAA,IACAC,QAAA,IACAC,OAAA,IACAC,OAAA,IACAC,SAAA,IACAC,UAAA,IACAC,UAAA,IACAC,WAAA,IACAC,OAAA,IACAC,OAAA,IACAC,OAAA,IACAC,OAAA,IACAC,MAAA,IACAC,MAAA,IACAC,QAAA,IACAC,OAAA,IACAC,MAAA,OACAC,IAAA,IACAxkE,OAAA,IACAykE,IAAA,IACAC,IAAA,IACAC,KAAA,IACAC,OAAA,IACAC,OAAA,IACAC,OAAA,IACAC,OAAA,IACAC,IAAA,IACAC,IAAA,IACAC,KAAA,IACAC,OAAA,IACAC,IAAA,eACAC,IAAA,eACAC,OAAA,IACAC,UAAA,IACAC,UAAA,IACAC,MAAA,IACAC,MAAA,IACAC,SAAA,IACAC,OAAA,IACAC,YAAA,IACAC,SAAA,IACAC,WAAA,KACAC,OAAA,IACAC,UAAA,IACAC,MAAA,IACAC,OAAA,IACAC,MAAA,OACAC,MAAA,OACAC,MAAA,IACAC,MAAA,IACAC,WAAA,IACAC,eAAA,IACAC,WAAA,IACAC,MAAA,OACAC,OAAA,IACAC,SAAA,IACAC,OAAA,IACAC,KAAA,IACAC,KAAA,IACAC,IAAA,IACAC,OAAA,IACAC,OAAA,IACAC,KAAA,eACAC,KAAA,eACAC,QAAA,IACAC,KAAA,IACAC,OAAA,IACAC,MAAA,IACAC,MAAA,IACAC,SAAA,IACAC,aAAA,IACAC,aAAA,IACAC,eAAA,IACAC,UAAA,IACAC,cAAA,IACAC,gBAAA,IACAC,OAAA,IACAC,KAAA,IACAC,SAAA,IACAC,UAAA,IACAC,QAAA,IACAC,MAAA,IACAC,QAAA,IACAC,SAAA,IACAC,KAAA,eACAC,KAAA,eACAC,KAAA,IACAC,KAAA,IACAC,MAAA,IACAC,MAAA,IACAC,OAAA,IACAC,OAAA,IACAC,MAAA,IACAC,iBAAA,IACA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","sources":["webpack://_N_E/./node_modules/@videojs/vhs-utils/es/byte-helpers.js","webpack://_N_E/./node_modules/@videojs/vhs-utils/es/codecs.js","webpack://_N_E/./node_modules/@videojs/vhs-utils/es/codec-helpers.js","webpack://_N_E/./node_modules/@videojs/vhs-utils/es/opus-helpers.js","webpack://_N_E/./node_modules/@videojs/vhs-utils/es/mp4-helpers.js","webpack://_N_E/./node_modules/@videojs/vhs-utils/es/ebml-helpers.js","webpack://_N_E/./node_modules/@videojs/vhs-utils/es/nal-helpers.js","webpack://_N_E/./node_modules/@videojs/vhs-utils/es/containers.js","webpack://_N_E/./node_modules/@videojs/vhs-utils/es/decode-b64-to-uint8-array.js","webpack://_N_E/./node_modules/@videojs/vhs-utils/es/id3-helpers.js","webpack://_N_E/./node_modules/@videojs/vhs-utils/es/media-types.js","webpack://_N_E/./node_modules/@videojs/vhs-utils/es/resolve-url.js","webpack://_N_E/./node_modules/@videojs/xhr/lib/http-handler.js","webpack://_N_E/./node_modules/@videojs/xhr/lib/index.js","webpack://_N_E/./node_modules/@videojs/xhr/lib/interceptors.js","webpack://_N_E/./node_modules/@videojs/xhr/lib/retry.js","webpack://_N_E/./node_modules/@xmldom/xmldom/lib/conventions.js","webpack://_N_E/./node_modules/@xmldom/xmldom/lib/dom-parser.js","webpack://_N_E/./node_modules/@xmldom/xmldom/lib/dom.js","webpack://_N_E/./node_modules/@xmldom/xmldom/lib/entities.js","webpack://_N_E/./node_modules/@xmldom/xmldom/lib/index.js","webpack://_N_E/./node_modules/@xmldom/xmldom/lib/sax.js","webpack://_N_E/./node_modules/global/document.js","webpack://_N_E/./node_modules/global/window.js","webpack://_N_E/./node_modules/is-function/index.js","webpack://_N_E/./node_modules/@videojs/vhs-utils/es/stream.js","webpack://_N_E/./node_modules/m3u8-parser/dist/m3u8-parser.es.js","webpack://_N_E/./node_modules/@videojs/vhs-utils/es/media-groups.js","webpack://_N_E/./node_modules/mpd-parser/dist/mpd-parser.es.js","webpack://_N_E/./node_modules/mux.js/lib/tools/parse-sidx.js","webpack://_N_E/./node_modules/mux.js/lib/utils/clock.js","webpack://_N_E/./node_modules/mux.js/lib/utils/numbers.js","webpack://_N_E/./node_modules/video.js/dist/video-js.css","webpack://_N_E/./node_modules/videojs-vtt.js/lib/browser-index.js","webpack://_N_E/./node_modules/videojs-vtt.js/lib/vtt.js","webpack://_N_E/./node_modules/videojs-vtt.js/lib/vttcue.js","webpack://_N_E/./node_modules/videojs-vtt.js/lib/vttregion.js","webpack://_N_E/./node_modules/@babel/runtime/helpers/extends.js","webpack://_N_E/<anon>"],"sourcesContent":["import window from 'global/window'; // const log2 = Math.log2 ? Math.log2 : (x) => (Math.log(x) / Math.log(2));\n\nvar repeat = function repeat(str, len) {\n  var acc = '';\n\n  while (len--) {\n    acc += str;\n  }\n\n  return acc;\n}; // count the number of bits it would take to represent a number\n// we used to do this with log2 but BigInt does not support builtin math\n// Math.ceil(log2(x));\n\n\nexport var countBits = function countBits(x) {\n  return x.toString(2).length;\n}; // count the number of whole bytes it would take to represent a number\n\nexport var countBytes = function countBytes(x) {\n  return Math.ceil(countBits(x) / 8);\n};\nexport var padStart = function padStart(b, len, str) {\n  if (str === void 0) {\n    str = ' ';\n  }\n\n  return (repeat(str, len) + b.toString()).slice(-len);\n};\nexport var isArrayBufferView = function isArrayBufferView(obj) {\n  if (ArrayBuffer.isView === 'function') {\n    return ArrayBuffer.isView(obj);\n  }\n\n  return obj && obj.buffer instanceof ArrayBuffer;\n};\nexport var isTypedArray = function isTypedArray(obj) {\n  return isArrayBufferView(obj);\n};\nexport var toUint8 = function toUint8(bytes) {\n  if (bytes instanceof Uint8Array) {\n    return bytes;\n  }\n\n  if (!Array.isArray(bytes) && !isTypedArray(bytes) && !(bytes instanceof ArrayBuffer)) {\n    // any non-number or NaN leads to empty uint8array\n    // eslint-disable-next-line\n    if (typeof bytes !== 'number' || typeof bytes === 'number' && bytes !== bytes) {\n      bytes = 0;\n    } else {\n      bytes = [bytes];\n    }\n  }\n\n  return new Uint8Array(bytes && bytes.buffer || bytes, bytes && bytes.byteOffset || 0, bytes && bytes.byteLength || 0);\n};\nexport var toHexString = function toHexString(bytes) {\n  bytes = toUint8(bytes);\n  var str = '';\n\n  for (var i = 0; i < bytes.length; i++) {\n    str += padStart(bytes[i].toString(16), 2, '0');\n  }\n\n  return str;\n};\nexport var toBinaryString = function toBinaryString(bytes) {\n  bytes = toUint8(bytes);\n  var str = '';\n\n  for (var i = 0; i < bytes.length; i++) {\n    str += padStart(bytes[i].toString(2), 8, '0');\n  }\n\n  return str;\n};\nvar BigInt = window.BigInt || Number;\nvar BYTE_TABLE = [BigInt('0x1'), BigInt('0x100'), BigInt('0x10000'), BigInt('0x1000000'), BigInt('0x100000000'), BigInt('0x10000000000'), BigInt('0x1000000000000'), BigInt('0x100000000000000'), BigInt('0x10000000000000000')];\nexport var ENDIANNESS = function () {\n  var a = new Uint16Array([0xFFCC]);\n  var b = new Uint8Array(a.buffer, a.byteOffset, a.byteLength);\n\n  if (b[0] === 0xFF) {\n    return 'big';\n  }\n\n  if (b[0] === 0xCC) {\n    return 'little';\n  }\n\n  return 'unknown';\n}();\nexport var IS_BIG_ENDIAN = ENDIANNESS === 'big';\nexport var IS_LITTLE_ENDIAN = ENDIANNESS === 'little';\nexport var bytesToNumber = function bytesToNumber(bytes, _temp) {\n  var _ref = _temp === void 0 ? {} : _temp,\n      _ref$signed = _ref.signed,\n      signed = _ref$signed === void 0 ? false : _ref$signed,\n      _ref$le = _ref.le,\n      le = _ref$le === void 0 ? false : _ref$le;\n\n  bytes = toUint8(bytes);\n  var fn = le ? 'reduce' : 'reduceRight';\n  var obj = bytes[fn] ? bytes[fn] : Array.prototype[fn];\n  var number = obj.call(bytes, function (total, byte, i) {\n    var exponent = le ? i : Math.abs(i + 1 - bytes.length);\n    return total + BigInt(byte) * BYTE_TABLE[exponent];\n  }, BigInt(0));\n\n  if (signed) {\n    var max = BYTE_TABLE[bytes.length] / BigInt(2) - BigInt(1);\n    number = BigInt(number);\n\n    if (number > max) {\n      number -= max;\n      number -= max;\n      number -= BigInt(2);\n    }\n  }\n\n  return Number(number);\n};\nexport var numberToBytes = function numberToBytes(number, _temp2) {\n  var _ref2 = _temp2 === void 0 ? {} : _temp2,\n      _ref2$le = _ref2.le,\n      le = _ref2$le === void 0 ? false : _ref2$le;\n\n  // eslint-disable-next-line\n  if (typeof number !== 'bigint' && typeof number !== 'number' || typeof number === 'number' && number !== number) {\n    number = 0;\n  }\n\n  number = BigInt(number);\n  var byteCount = countBytes(number);\n  var bytes = new Uint8Array(new ArrayBuffer(byteCount));\n\n  for (var i = 0; i < byteCount; i++) {\n    var byteIndex = le ? i : Math.abs(i + 1 - bytes.length);\n    bytes[byteIndex] = Number(number / BYTE_TABLE[i] & BigInt(0xFF));\n\n    if (number < 0) {\n      bytes[byteIndex] = Math.abs(~bytes[byteIndex]);\n      bytes[byteIndex] -= i === 0 ? 1 : 2;\n    }\n  }\n\n  return bytes;\n};\nexport var bytesToString = function bytesToString(bytes) {\n  if (!bytes) {\n    return '';\n  } // TODO: should toUint8 handle cases where we only have 8 bytes\n  // but report more since this is a Uint16+ Array?\n\n\n  bytes = Array.prototype.slice.call(bytes);\n  var string = String.fromCharCode.apply(null, toUint8(bytes));\n\n  try {\n    return decodeURIComponent(escape(string));\n  } catch (e) {// if decodeURIComponent/escape fails, we are dealing with partial\n    // or full non string data. Just return the potentially garbled string.\n  }\n\n  return string;\n};\nexport var stringToBytes = function stringToBytes(string, stringIsBytes) {\n  if (typeof string !== 'string' && string && typeof string.toString === 'function') {\n    string = string.toString();\n  }\n\n  if (typeof string !== 'string') {\n    return new Uint8Array();\n  } // If the string already is bytes, we don't have to do this\n  // otherwise we do this so that we split multi length characters\n  // into individual bytes\n\n\n  if (!stringIsBytes) {\n    string = unescape(encodeURIComponent(string));\n  }\n\n  var view = new Uint8Array(string.length);\n\n  for (var i = 0; i < string.length; i++) {\n    view[i] = string.charCodeAt(i);\n  }\n\n  return view;\n};\nexport var concatTypedArrays = function concatTypedArrays() {\n  for (var _len = arguments.length, buffers = new Array(_len), _key = 0; _key < _len; _key++) {\n    buffers[_key] = arguments[_key];\n  }\n\n  buffers = buffers.filter(function (b) {\n    return b && (b.byteLength || b.length) && typeof b !== 'string';\n  });\n\n  if (buffers.length <= 1) {\n    // for 0 length we will return empty uint8\n    // for 1 length we return the first uint8\n    return toUint8(buffers[0]);\n  }\n\n  var totalLen = buffers.reduce(function (total, buf, i) {\n    return total + (buf.byteLength || buf.length);\n  }, 0);\n  var tempBuffer = new Uint8Array(totalLen);\n  var offset = 0;\n  buffers.forEach(function (buf) {\n    buf = toUint8(buf);\n    tempBuffer.set(buf, offset);\n    offset += buf.byteLength;\n  });\n  return tempBuffer;\n};\n/**\n * Check if the bytes \"b\" are contained within bytes \"a\".\n *\n * @param {Uint8Array|Array} a\n *        Bytes to check in\n *\n * @param {Uint8Array|Array} b\n *        Bytes to check for\n *\n * @param {Object} options\n *        options\n *\n * @param {Array|Uint8Array} [offset=0]\n *        offset to use when looking at bytes in a\n *\n * @param {Array|Uint8Array} [mask=[]]\n *        mask to use on bytes before comparison.\n *\n * @return {boolean}\n *         If all bytes in b are inside of a, taking into account\n *         bit masks.\n */\n\nexport var bytesMatch = function bytesMatch(a, b, _temp3) {\n  var _ref3 = _temp3 === void 0 ? {} : _temp3,\n      _ref3$offset = _ref3.offset,\n      offset = _ref3$offset === void 0 ? 0 : _ref3$offset,\n      _ref3$mask = _ref3.mask,\n      mask = _ref3$mask === void 0 ? [] : _ref3$mask;\n\n  a = toUint8(a);\n  b = toUint8(b); // ie 11 does not support uint8 every\n\n  var fn = b.every ? b.every : Array.prototype.every;\n  return b.length && a.length - offset >= b.length && // ie 11 doesn't support every on uin8\n  fn.call(b, function (bByte, i) {\n    var aByte = mask[i] ? mask[i] & a[offset + i] : a[offset + i];\n    return bByte === aByte;\n  });\n};\nexport var sliceBytes = function sliceBytes(src, start, end) {\n  if (Uint8Array.prototype.slice) {\n    return Uint8Array.prototype.slice.call(src, start, end);\n  }\n\n  return new Uint8Array(Array.prototype.slice.call(src, start, end));\n};\nexport var reverseBytes = function reverseBytes(src) {\n  if (src.reverse) {\n    return src.reverse();\n  }\n\n  return Array.prototype.reverse.call(src);\n};","import window from 'global/window';\nvar regexs = {\n  // to determine mime types\n  mp4: /^(av0?1|avc0?[1234]|vp0?9|flac|opus|mp3|mp4a|mp4v|stpp.ttml.im1t)/,\n  webm: /^(vp0?[89]|av0?1|opus|vorbis)/,\n  ogg: /^(vp0?[89]|theora|flac|opus|vorbis)/,\n  // to determine if a codec is audio or video\n  video: /^(av0?1|avc0?[1234]|vp0?[89]|hvc1|hev1|theora|mp4v)/,\n  audio: /^(mp4a|flac|vorbis|opus|ac-[34]|ec-3|alac|mp3|speex|aac)/,\n  text: /^(stpp.ttml.im1t)/,\n  // mux.js support regex\n  muxerVideo: /^(avc0?1)/,\n  muxerAudio: /^(mp4a)/,\n  // match nothing as muxer does not support text right now.\n  // there cannot never be a character before the start of a string\n  // so this matches nothing.\n  muxerText: /a^/\n};\nvar mediaTypes = ['video', 'audio', 'text'];\nvar upperMediaTypes = ['Video', 'Audio', 'Text'];\n/**\n * Replace the old apple-style `avc1.<dd>.<dd>` codec string with the standard\n * `avc1.<hhhhhh>`\n *\n * @param {string} codec\n *        Codec string to translate\n * @return {string}\n *         The translated codec string\n */\n\nexport var translateLegacyCodec = function translateLegacyCodec(codec) {\n  if (!codec) {\n    return codec;\n  }\n\n  return codec.replace(/avc1\\.(\\d+)\\.(\\d+)/i, function (orig, profile, avcLevel) {\n    var profileHex = ('00' + Number(profile).toString(16)).slice(-2);\n    var avcLevelHex = ('00' + Number(avcLevel).toString(16)).slice(-2);\n    return 'avc1.' + profileHex + '00' + avcLevelHex;\n  });\n};\n/**\n * Replace the old apple-style `avc1.<dd>.<dd>` codec strings with the standard\n * `avc1.<hhhhhh>`\n *\n * @param {string[]} codecs\n *        An array of codec strings to translate\n * @return {string[]}\n *         The translated array of codec strings\n */\n\nexport var translateLegacyCodecs = function translateLegacyCodecs(codecs) {\n  return codecs.map(translateLegacyCodec);\n};\n/**\n * Replace codecs in the codec string with the old apple-style `avc1.<dd>.<dd>` to the\n * standard `avc1.<hhhhhh>`.\n *\n * @param {string} codecString\n *        The codec string\n * @return {string}\n *         The codec string with old apple-style codecs replaced\n *\n * @private\n */\n\nexport var mapLegacyAvcCodecs = function mapLegacyAvcCodecs(codecString) {\n  return codecString.replace(/avc1\\.(\\d+)\\.(\\d+)/i, function (match) {\n    return translateLegacyCodecs([match])[0];\n  });\n};\n/**\n * @typedef {Object} ParsedCodecInfo\n * @property {number} codecCount\n *           Number of codecs parsed\n * @property {string} [videoCodec]\n *           Parsed video codec (if found)\n * @property {string} [videoObjectTypeIndicator]\n *           Video object type indicator (if found)\n * @property {string|null} audioProfile\n *           Audio profile\n */\n\n/**\n * Parses a codec string to retrieve the number of codecs specified, the video codec and\n * object type indicator, and the audio profile.\n *\n * @param {string} [codecString]\n *        The codec string to parse\n * @return {ParsedCodecInfo}\n *         Parsed codec info\n */\n\nexport var parseCodecs = function parseCodecs(codecString) {\n  if (codecString === void 0) {\n    codecString = '';\n  }\n\n  var codecs = codecString.split(',');\n  var result = [];\n  codecs.forEach(function (codec) {\n    codec = codec.trim();\n    var codecType;\n    mediaTypes.forEach(function (name) {\n      var match = regexs[name].exec(codec.toLowerCase());\n\n      if (!match || match.length <= 1) {\n        return;\n      }\n\n      codecType = name; // maintain codec case\n\n      var type = codec.substring(0, match[1].length);\n      var details = codec.replace(type, '');\n      result.push({\n        type: type,\n        details: details,\n        mediaType: name\n      });\n    });\n\n    if (!codecType) {\n      result.push({\n        type: codec,\n        details: '',\n        mediaType: 'unknown'\n      });\n    }\n  });\n  return result;\n};\n/**\n * Returns a ParsedCodecInfo object for the default alternate audio playlist if there is\n * a default alternate audio playlist for the provided audio group.\n *\n * @param {Object} master\n *        The master playlist\n * @param {string} audioGroupId\n *        ID of the audio group for which to find the default codec info\n * @return {ParsedCodecInfo}\n *         Parsed codec info\n */\n\nexport var codecsFromDefault = function codecsFromDefault(master, audioGroupId) {\n  if (!master.mediaGroups.AUDIO || !audioGroupId) {\n    return null;\n  }\n\n  var audioGroup = master.mediaGroups.AUDIO[audioGroupId];\n\n  if (!audioGroup) {\n    return null;\n  }\n\n  for (var name in audioGroup) {\n    var audioType = audioGroup[name];\n\n    if (audioType.default && audioType.playlists) {\n      // codec should be the same for all playlists within the audio type\n      return parseCodecs(audioType.playlists[0].attributes.CODECS);\n    }\n  }\n\n  return null;\n};\nexport var isVideoCodec = function isVideoCodec(codec) {\n  if (codec === void 0) {\n    codec = '';\n  }\n\n  return regexs.video.test(codec.trim().toLowerCase());\n};\nexport var isAudioCodec = function isAudioCodec(codec) {\n  if (codec === void 0) {\n    codec = '';\n  }\n\n  return regexs.audio.test(codec.trim().toLowerCase());\n};\nexport var isTextCodec = function isTextCodec(codec) {\n  if (codec === void 0) {\n    codec = '';\n  }\n\n  return regexs.text.test(codec.trim().toLowerCase());\n};\nexport var getMimeForCodec = function getMimeForCodec(codecString) {\n  if (!codecString || typeof codecString !== 'string') {\n    return;\n  }\n\n  var codecs = codecString.toLowerCase().split(',').map(function (c) {\n    return translateLegacyCodec(c.trim());\n  }); // default to video type\n\n  var type = 'video'; // only change to audio type if the only codec we have is\n  // audio\n\n  if (codecs.length === 1 && isAudioCodec(codecs[0])) {\n    type = 'audio';\n  } else if (codecs.length === 1 && isTextCodec(codecs[0])) {\n    // text uses application/<container> for now\n    type = 'application';\n  } // default the container to mp4\n\n\n  var container = 'mp4'; // every codec must be able to go into the container\n  // for that container to be the correct one\n\n  if (codecs.every(function (c) {\n    return regexs.mp4.test(c);\n  })) {\n    container = 'mp4';\n  } else if (codecs.every(function (c) {\n    return regexs.webm.test(c);\n  })) {\n    container = 'webm';\n  } else if (codecs.every(function (c) {\n    return regexs.ogg.test(c);\n  })) {\n    container = 'ogg';\n  }\n\n  return type + \"/\" + container + \";codecs=\\\"\" + codecString + \"\\\"\";\n};\n/**\n * Tests whether the codec is supported by MediaSource. Optionally also tests ManagedMediaSource.\n *\n * @param {string} codecString\n *        Codec to test\n * @param {boolean} [withMMS]\n *        Whether to check if ManagedMediaSource supports it\n * @return {boolean}\n *          Codec is supported\n */\n\nexport var browserSupportsCodec = function browserSupportsCodec(codecString, withMMS) {\n  if (codecString === void 0) {\n    codecString = '';\n  }\n\n  if (withMMS === void 0) {\n    withMMS = false;\n  }\n\n  return window.MediaSource && window.MediaSource.isTypeSupported && window.MediaSource.isTypeSupported(getMimeForCodec(codecString)) || withMMS && window.ManagedMediaSource && window.ManagedMediaSource.isTypeSupported && window.ManagedMediaSource.isTypeSupported(getMimeForCodec(codecString)) || false;\n};\nexport var muxerSupportsCodec = function muxerSupportsCodec(codecString) {\n  if (codecString === void 0) {\n    codecString = '';\n  }\n\n  return codecString.toLowerCase().split(',').every(function (codec) {\n    codec = codec.trim(); // any match is supported.\n\n    for (var i = 0; i < upperMediaTypes.length; i++) {\n      var type = upperMediaTypes[i];\n\n      if (regexs[\"muxer\" + type].test(codec)) {\n        return true;\n      }\n    }\n\n    return false;\n  });\n};\nexport var DEFAULT_AUDIO_CODEC = 'mp4a.40.2';\nexport var DEFAULT_VIDEO_CODEC = 'avc1.4d400d';","import { padStart, toHexString, toBinaryString } from './byte-helpers.js'; // https://aomediacodec.github.io/av1-isobmff/#av1codecconfigurationbox-syntax\n// https://developer.mozilla.org/en-US/docs/Web/Media/Formats/codecs_parameter#AV1\n\nexport var getAv1Codec = function getAv1Codec(bytes) {\n  var codec = '';\n  var profile = bytes[1] >>> 3;\n  var level = bytes[1] & 0x1F;\n  var tier = bytes[2] >>> 7;\n  var highBitDepth = (bytes[2] & 0x40) >> 6;\n  var twelveBit = (bytes[2] & 0x20) >> 5;\n  var monochrome = (bytes[2] & 0x10) >> 4;\n  var chromaSubsamplingX = (bytes[2] & 0x08) >> 3;\n  var chromaSubsamplingY = (bytes[2] & 0x04) >> 2;\n  var chromaSamplePosition = bytes[2] & 0x03;\n  codec += profile + \".\" + padStart(level, 2, '0');\n\n  if (tier === 0) {\n    codec += 'M';\n  } else if (tier === 1) {\n    codec += 'H';\n  }\n\n  var bitDepth;\n\n  if (profile === 2 && highBitDepth) {\n    bitDepth = twelveBit ? 12 : 10;\n  } else {\n    bitDepth = highBitDepth ? 10 : 8;\n  }\n\n  codec += \".\" + padStart(bitDepth, 2, '0'); // TODO: can we parse color range??\n\n  codec += \".\" + monochrome;\n  codec += \".\" + chromaSubsamplingX + chromaSubsamplingY + chromaSamplePosition;\n  return codec;\n};\nexport var getAvcCodec = function getAvcCodec(bytes) {\n  var profileId = toHexString(bytes[1]);\n  var constraintFlags = toHexString(bytes[2] & 0xFC);\n  var levelId = toHexString(bytes[3]);\n  return \"\" + profileId + constraintFlags + levelId;\n};\nexport var getHvcCodec = function getHvcCodec(bytes) {\n  var codec = '';\n  var profileSpace = bytes[1] >> 6;\n  var profileId = bytes[1] & 0x1F;\n  var tierFlag = (bytes[1] & 0x20) >> 5;\n  var profileCompat = bytes.subarray(2, 6);\n  var constraintIds = bytes.subarray(6, 12);\n  var levelId = bytes[12];\n\n  if (profileSpace === 1) {\n    codec += 'A';\n  } else if (profileSpace === 2) {\n    codec += 'B';\n  } else if (profileSpace === 3) {\n    codec += 'C';\n  }\n\n  codec += profileId + \".\"; // ffmpeg does this in big endian\n\n  var profileCompatVal = parseInt(toBinaryString(profileCompat).split('').reverse().join(''), 2); // apple does this in little endian...\n\n  if (profileCompatVal > 255) {\n    profileCompatVal = parseInt(toBinaryString(profileCompat), 2);\n  }\n\n  codec += profileCompatVal.toString(16) + \".\";\n\n  if (tierFlag === 0) {\n    codec += 'L';\n  } else {\n    codec += 'H';\n  }\n\n  codec += levelId;\n  var constraints = '';\n\n  for (var i = 0; i < constraintIds.length; i++) {\n    var v = constraintIds[i];\n\n    if (v) {\n      if (constraints) {\n        constraints += '.';\n      }\n\n      constraints += v.toString(16);\n    }\n  }\n\n  if (constraints) {\n    codec += \".\" + constraints;\n  }\n\n  return codec;\n};","export var OPUS_HEAD = new Uint8Array([// O, p, u, s\n0x4f, 0x70, 0x75, 0x73, // H, e, a, d\n0x48, 0x65, 0x61, 0x64]); // https://wiki.xiph.org/OggOpus\n// https://vfrmaniac.fushizen.eu/contents/opus_in_isobmff.html\n// https://opus-codec.org/docs/opusfile_api-0.7/structOpusHead.html\n\nexport var parseOpusHead = function parseOpusHead(bytes) {\n  var view = new DataView(bytes.buffer, bytes.byteOffset, bytes.byteLength);\n  var version = view.getUint8(0); // version 0, from mp4, does not use littleEndian.\n\n  var littleEndian = version !== 0;\n  var config = {\n    version: version,\n    channels: view.getUint8(1),\n    preSkip: view.getUint16(2, littleEndian),\n    sampleRate: view.getUint32(4, littleEndian),\n    outputGain: view.getUint16(8, littleEndian),\n    channelMappingFamily: view.getUint8(10)\n  };\n\n  if (config.channelMappingFamily > 0 && bytes.length > 10) {\n    config.streamCount = view.getUint8(11);\n    config.twoChannelStreamCount = view.getUint8(12);\n    config.channelMapping = [];\n\n    for (var c = 0; c < config.channels; c++) {\n      config.channelMapping.push(view.getUint8(13 + c));\n    }\n  }\n\n  return config;\n};\nexport var setOpusHead = function setOpusHead(config) {\n  var size = config.channelMappingFamily <= 0 ? 11 : 12 + config.channels;\n  var view = new DataView(new ArrayBuffer(size));\n  var littleEndian = config.version !== 0;\n  view.setUint8(0, config.version);\n  view.setUint8(1, config.channels);\n  view.setUint16(2, config.preSkip, littleEndian);\n  view.setUint32(4, config.sampleRate, littleEndian);\n  view.setUint16(8, config.outputGain, littleEndian);\n  view.setUint8(10, config.channelMappingFamily);\n\n  if (config.channelMappingFamily > 0) {\n    view.setUint8(11, config.streamCount);\n    config.channelMapping.foreach(function (cm, i) {\n      view.setUint8(12 + i, cm);\n    });\n  }\n\n  return new Uint8Array(view.buffer);\n};","import { stringToBytes, toUint8, bytesMatch, bytesToString, toHexString, padStart, bytesToNumber } from './byte-helpers.js';\nimport { getAvcCodec, getHvcCodec, getAv1Codec } from './codec-helpers.js';\nimport { parseOpusHead } from './opus-helpers.js';\n\nvar normalizePath = function normalizePath(path) {\n  if (typeof path === 'string') {\n    return stringToBytes(path);\n  }\n\n  if (typeof path === 'number') {\n    return path;\n  }\n\n  return path;\n};\n\nvar normalizePaths = function normalizePaths(paths) {\n  if (!Array.isArray(paths)) {\n    return [normalizePath(paths)];\n  }\n\n  return paths.map(function (p) {\n    return normalizePath(p);\n  });\n};\n\nvar DESCRIPTORS;\nexport var parseDescriptors = function parseDescriptors(bytes) {\n  bytes = toUint8(bytes);\n  var results = [];\n  var i = 0;\n\n  while (bytes.length > i) {\n    var tag = bytes[i];\n    var size = 0;\n    var headerSize = 0; // tag\n\n    headerSize++;\n    var byte = bytes[headerSize]; // first byte\n\n    headerSize++;\n\n    while (byte & 0x80) {\n      size = (byte & 0x7F) << 7;\n      byte = bytes[headerSize];\n      headerSize++;\n    }\n\n    size += byte & 0x7F;\n\n    for (var z = 0; z < DESCRIPTORS.length; z++) {\n      var _DESCRIPTORS$z = DESCRIPTORS[z],\n          id = _DESCRIPTORS$z.id,\n          parser = _DESCRIPTORS$z.parser;\n\n      if (tag === id) {\n        results.push(parser(bytes.subarray(headerSize, headerSize + size)));\n        break;\n      }\n    }\n\n    i += size + headerSize;\n  }\n\n  return results;\n};\nDESCRIPTORS = [{\n  id: 0x03,\n  parser: function parser(bytes) {\n    var desc = {\n      tag: 0x03,\n      id: bytes[0] << 8 | bytes[1],\n      flags: bytes[2],\n      size: 3,\n      dependsOnEsId: 0,\n      ocrEsId: 0,\n      descriptors: [],\n      url: ''\n    }; // depends on es id\n\n    if (desc.flags & 0x80) {\n      desc.dependsOnEsId = bytes[desc.size] << 8 | bytes[desc.size + 1];\n      desc.size += 2;\n    } // url\n\n\n    if (desc.flags & 0x40) {\n      var len = bytes[desc.size];\n      desc.url = bytesToString(bytes.subarray(desc.size + 1, desc.size + 1 + len));\n      desc.size += len;\n    } // ocr es id\n\n\n    if (desc.flags & 0x20) {\n      desc.ocrEsId = bytes[desc.size] << 8 | bytes[desc.size + 1];\n      desc.size += 2;\n    }\n\n    desc.descriptors = parseDescriptors(bytes.subarray(desc.size)) || [];\n    return desc;\n  }\n}, {\n  id: 0x04,\n  parser: function parser(bytes) {\n    // DecoderConfigDescriptor\n    var desc = {\n      tag: 0x04,\n      oti: bytes[0],\n      streamType: bytes[1],\n      bufferSize: bytes[2] << 16 | bytes[3] << 8 | bytes[4],\n      maxBitrate: bytes[5] << 24 | bytes[6] << 16 | bytes[7] << 8 | bytes[8],\n      avgBitrate: bytes[9] << 24 | bytes[10] << 16 | bytes[11] << 8 | bytes[12],\n      descriptors: parseDescriptors(bytes.subarray(13))\n    };\n    return desc;\n  }\n}, {\n  id: 0x05,\n  parser: function parser(bytes) {\n    // DecoderSpecificInfo\n    return {\n      tag: 0x05,\n      bytes: bytes\n    };\n  }\n}, {\n  id: 0x06,\n  parser: function parser(bytes) {\n    // SLConfigDescriptor\n    return {\n      tag: 0x06,\n      bytes: bytes\n    };\n  }\n}];\n/**\n * find any number of boxes by name given a path to it in an iso bmff\n * such as mp4.\n *\n * @param {TypedArray} bytes\n *        bytes for the iso bmff to search for boxes in\n *\n * @param {Uint8Array[]|string[]|string|Uint8Array} name\n *        An array of paths or a single path representing the name\n *        of boxes to search through in bytes. Paths may be\n *        uint8 (character codes) or strings.\n *\n * @param {boolean} [complete=false]\n *        Should we search only for complete boxes on the final path.\n *        This is very useful when you do not want to get back partial boxes\n *        in the case of streaming files.\n *\n * @return {Uint8Array[]}\n *         An array of the end paths that we found.\n */\n\nexport var findBox = function findBox(bytes, paths, complete) {\n  if (complete === void 0) {\n    complete = false;\n  }\n\n  paths = normalizePaths(paths);\n  bytes = toUint8(bytes);\n  var results = [];\n\n  if (!paths.length) {\n    // short-circuit the search for empty paths\n    return results;\n  }\n\n  var i = 0;\n\n  while (i < bytes.length) {\n    var size = (bytes[i] << 24 | bytes[i + 1] << 16 | bytes[i + 2] << 8 | bytes[i + 3]) >>> 0;\n    var type = bytes.subarray(i + 4, i + 8); // invalid box format.\n\n    if (size === 0) {\n      break;\n    }\n\n    var end = i + size;\n\n    if (end > bytes.length) {\n      // this box is bigger than the number of bytes we have\n      // and complete is set, we cannot find any more boxes.\n      if (complete) {\n        break;\n      }\n\n      end = bytes.length;\n    }\n\n    var data = bytes.subarray(i + 8, end);\n\n    if (bytesMatch(type, paths[0])) {\n      if (paths.length === 1) {\n        // this is the end of the path and we've found the box we were\n        // looking for\n        results.push(data);\n      } else {\n        // recursively search for the next box along the path\n        results.push.apply(results, findBox(data, paths.slice(1), complete));\n      }\n    }\n\n    i = end;\n  } // we've finished searching all of bytes\n\n\n  return results;\n};\n/**\n * Search for a single matching box by name in an iso bmff format like\n * mp4. This function is useful for finding codec boxes which\n * can be placed arbitrarily in sample descriptions depending\n * on the version of the file or file type.\n *\n * @param {TypedArray} bytes\n *        bytes for the iso bmff to search for boxes in\n *\n * @param {string|Uint8Array} name\n *        The name of the box to find.\n *\n * @return {Uint8Array[]}\n *         a subarray of bytes representing the name boxed we found.\n */\n\nexport var findNamedBox = function findNamedBox(bytes, name) {\n  name = normalizePath(name);\n\n  if (!name.length) {\n    // short-circuit the search for empty paths\n    return bytes.subarray(bytes.length);\n  }\n\n  var i = 0;\n\n  while (i < bytes.length) {\n    if (bytesMatch(bytes.subarray(i, i + name.length), name)) {\n      var size = (bytes[i - 4] << 24 | bytes[i - 3] << 16 | bytes[i - 2] << 8 | bytes[i - 1]) >>> 0;\n      var end = size > 1 ? i + size : bytes.byteLength;\n      return bytes.subarray(i + 4, end);\n    }\n\n    i++;\n  } // we've finished searching all of bytes\n\n\n  return bytes.subarray(bytes.length);\n};\n\nvar parseSamples = function parseSamples(data, entrySize, parseEntry) {\n  if (entrySize === void 0) {\n    entrySize = 4;\n  }\n\n  if (parseEntry === void 0) {\n    parseEntry = function parseEntry(d) {\n      return bytesToNumber(d);\n    };\n  }\n\n  var entries = [];\n\n  if (!data || !data.length) {\n    return entries;\n  }\n\n  var entryCount = bytesToNumber(data.subarray(4, 8));\n\n  for (var i = 8; entryCount; i += entrySize, entryCount--) {\n    entries.push(parseEntry(data.subarray(i, i + entrySize)));\n  }\n\n  return entries;\n};\n\nexport var buildFrameTable = function buildFrameTable(stbl, timescale) {\n  var keySamples = parseSamples(findBox(stbl, ['stss'])[0]);\n  var chunkOffsets = parseSamples(findBox(stbl, ['stco'])[0]);\n  var timeToSamples = parseSamples(findBox(stbl, ['stts'])[0], 8, function (entry) {\n    return {\n      sampleCount: bytesToNumber(entry.subarray(0, 4)),\n      sampleDelta: bytesToNumber(entry.subarray(4, 8))\n    };\n  });\n  var samplesToChunks = parseSamples(findBox(stbl, ['stsc'])[0], 12, function (entry) {\n    return {\n      firstChunk: bytesToNumber(entry.subarray(0, 4)),\n      samplesPerChunk: bytesToNumber(entry.subarray(4, 8)),\n      sampleDescriptionIndex: bytesToNumber(entry.subarray(8, 12))\n    };\n  });\n  var stsz = findBox(stbl, ['stsz'])[0]; // stsz starts with a 4 byte sampleSize which we don't need\n\n  var sampleSizes = parseSamples(stsz && stsz.length && stsz.subarray(4) || null);\n  var frames = [];\n\n  for (var chunkIndex = 0; chunkIndex < chunkOffsets.length; chunkIndex++) {\n    var samplesInChunk = void 0;\n\n    for (var i = 0; i < samplesToChunks.length; i++) {\n      var sampleToChunk = samplesToChunks[i];\n      var isThisOne = chunkIndex + 1 >= sampleToChunk.firstChunk && (i + 1 >= samplesToChunks.length || chunkIndex + 1 < samplesToChunks[i + 1].firstChunk);\n\n      if (isThisOne) {\n        samplesInChunk = sampleToChunk.samplesPerChunk;\n        break;\n      }\n    }\n\n    var chunkOffset = chunkOffsets[chunkIndex];\n\n    for (var _i = 0; _i < samplesInChunk; _i++) {\n      var frameEnd = sampleSizes[frames.length]; // if we don't have key samples every frame is a keyframe\n\n      var keyframe = !keySamples.length;\n\n      if (keySamples.length && keySamples.indexOf(frames.length + 1) !== -1) {\n        keyframe = true;\n      }\n\n      var frame = {\n        keyframe: keyframe,\n        start: chunkOffset,\n        end: chunkOffset + frameEnd\n      };\n\n      for (var k = 0; k < timeToSamples.length; k++) {\n        var _timeToSamples$k = timeToSamples[k],\n            sampleCount = _timeToSamples$k.sampleCount,\n            sampleDelta = _timeToSamples$k.sampleDelta;\n\n        if (frames.length <= sampleCount) {\n          // ms to ns\n          var lastTimestamp = frames.length ? frames[frames.length - 1].timestamp : 0;\n          frame.timestamp = lastTimestamp + sampleDelta / timescale * 1000;\n          frame.duration = sampleDelta;\n          break;\n        }\n      }\n\n      frames.push(frame);\n      chunkOffset += frameEnd;\n    }\n  }\n\n  return frames;\n};\nexport var addSampleDescription = function addSampleDescription(track, bytes) {\n  var codec = bytesToString(bytes.subarray(0, 4));\n\n  if (track.type === 'video') {\n    track.info = track.info || {};\n    track.info.width = bytes[28] << 8 | bytes[29];\n    track.info.height = bytes[30] << 8 | bytes[31];\n  } else if (track.type === 'audio') {\n    track.info = track.info || {};\n    track.info.channels = bytes[20] << 8 | bytes[21];\n    track.info.bitDepth = bytes[22] << 8 | bytes[23];\n    track.info.sampleRate = bytes[28] << 8 | bytes[29];\n  }\n\n  if (codec === 'avc1') {\n    var avcC = findNamedBox(bytes, 'avcC'); // AVCDecoderConfigurationRecord\n\n    codec += \".\" + getAvcCodec(avcC);\n    track.info.avcC = avcC; // TODO: do we need to parse all this?\n\n    /* {\n      configurationVersion: avcC[0],\n      profile: avcC[1],\n      profileCompatibility: avcC[2],\n      level: avcC[3],\n      lengthSizeMinusOne: avcC[4] & 0x3\n    };\n     let spsNalUnitCount = avcC[5] & 0x1F;\n    const spsNalUnits = track.info.avc.spsNalUnits = [];\n     // past spsNalUnitCount\n    let offset = 6;\n     while (spsNalUnitCount--) {\n      const nalLen = avcC[offset] << 8 | avcC[offset + 1];\n       spsNalUnits.push(avcC.subarray(offset + 2, offset + 2 + nalLen));\n       offset += nalLen + 2;\n    }\n    let ppsNalUnitCount = avcC[offset];\n    const ppsNalUnits = track.info.avc.ppsNalUnits = [];\n     // past ppsNalUnitCount\n    offset += 1;\n     while (ppsNalUnitCount--) {\n      const nalLen = avcC[offset] << 8 | avcC[offset + 1];\n       ppsNalUnits.push(avcC.subarray(offset + 2, offset + 2 + nalLen));\n       offset += nalLen + 2;\n    }*/\n    // HEVCDecoderConfigurationRecord\n  } else if (codec === 'hvc1' || codec === 'hev1') {\n    codec += \".\" + getHvcCodec(findNamedBox(bytes, 'hvcC'));\n  } else if (codec === 'mp4a' || codec === 'mp4v') {\n    var esds = findNamedBox(bytes, 'esds');\n    var esDescriptor = parseDescriptors(esds.subarray(4))[0];\n    var decoderConfig = esDescriptor && esDescriptor.descriptors.filter(function (_ref) {\n      var tag = _ref.tag;\n      return tag === 0x04;\n    })[0];\n\n    if (decoderConfig) {\n      // most codecs do not have a further '.'\n      // such as 0xa5 for ac-3 and 0xa6 for e-ac-3\n      codec += '.' + toHexString(decoderConfig.oti);\n\n      if (decoderConfig.oti === 0x40) {\n        codec += '.' + (decoderConfig.descriptors[0].bytes[0] >> 3).toString();\n      } else if (decoderConfig.oti === 0x20) {\n        codec += '.' + decoderConfig.descriptors[0].bytes[4].toString();\n      } else if (decoderConfig.oti === 0xdd) {\n        codec = 'vorbis';\n      }\n    } else if (track.type === 'audio') {\n      codec += '.40.2';\n    } else {\n      codec += '.20.9';\n    }\n  } else if (codec === 'av01') {\n    // AV1DecoderConfigurationRecord\n    codec += \".\" + getAv1Codec(findNamedBox(bytes, 'av1C'));\n  } else if (codec === 'vp09') {\n    // VPCodecConfigurationRecord\n    var vpcC = findNamedBox(bytes, 'vpcC'); // https://www.webmproject.org/vp9/mp4/\n\n    var profile = vpcC[0];\n    var level = vpcC[1];\n    var bitDepth = vpcC[2] >> 4;\n    var chromaSubsampling = (vpcC[2] & 0x0F) >> 1;\n    var videoFullRangeFlag = (vpcC[2] & 0x0F) >> 3;\n    var colourPrimaries = vpcC[3];\n    var transferCharacteristics = vpcC[4];\n    var matrixCoefficients = vpcC[5];\n    codec += \".\" + padStart(profile, 2, '0');\n    codec += \".\" + padStart(level, 2, '0');\n    codec += \".\" + padStart(bitDepth, 2, '0');\n    codec += \".\" + padStart(chromaSubsampling, 2, '0');\n    codec += \".\" + padStart(colourPrimaries, 2, '0');\n    codec += \".\" + padStart(transferCharacteristics, 2, '0');\n    codec += \".\" + padStart(matrixCoefficients, 2, '0');\n    codec += \".\" + padStart(videoFullRangeFlag, 2, '0');\n  } else if (codec === 'theo') {\n    codec = 'theora';\n  } else if (codec === 'spex') {\n    codec = 'speex';\n  } else if (codec === '.mp3') {\n    codec = 'mp4a.40.34';\n  } else if (codec === 'msVo') {\n    codec = 'vorbis';\n  } else if (codec === 'Opus') {\n    codec = 'opus';\n    var dOps = findNamedBox(bytes, 'dOps');\n    track.info.opus = parseOpusHead(dOps); // TODO: should this go into the webm code??\n    // Firefox requires a codecDelay for opus playback\n    // see https://bugzilla.mozilla.org/show_bug.cgi?id=1276238\n\n    track.info.codecDelay = 6500000;\n  } else {\n    codec = codec.toLowerCase();\n  }\n  /* eslint-enable */\n  // flac, ac-3, ec-3, opus\n\n\n  track.codec = codec;\n};\nexport var parseTracks = function parseTracks(bytes, frameTable) {\n  if (frameTable === void 0) {\n    frameTable = true;\n  }\n\n  bytes = toUint8(bytes);\n  var traks = findBox(bytes, ['moov', 'trak'], true);\n  var tracks = [];\n  traks.forEach(function (trak) {\n    var track = {\n      bytes: trak\n    };\n    var mdia = findBox(trak, ['mdia'])[0];\n    var hdlr = findBox(mdia, ['hdlr'])[0];\n    var trakType = bytesToString(hdlr.subarray(8, 12));\n\n    if (trakType === 'soun') {\n      track.type = 'audio';\n    } else if (trakType === 'vide') {\n      track.type = 'video';\n    } else {\n      track.type = trakType;\n    }\n\n    var tkhd = findBox(trak, ['tkhd'])[0];\n\n    if (tkhd) {\n      var view = new DataView(tkhd.buffer, tkhd.byteOffset, tkhd.byteLength);\n      var tkhdVersion = view.getUint8(0);\n      track.number = tkhdVersion === 0 ? view.getUint32(12) : view.getUint32(20);\n    }\n\n    var mdhd = findBox(mdia, ['mdhd'])[0];\n\n    if (mdhd) {\n      // mdhd is a FullBox, meaning it will have its own version as the first byte\n      var version = mdhd[0];\n      var index = version === 0 ? 12 : 20;\n      track.timescale = (mdhd[index] << 24 | mdhd[index + 1] << 16 | mdhd[index + 2] << 8 | mdhd[index + 3]) >>> 0;\n    }\n\n    var stbl = findBox(mdia, ['minf', 'stbl'])[0];\n    var stsd = findBox(stbl, ['stsd'])[0];\n    var descriptionCount = bytesToNumber(stsd.subarray(4, 8));\n    var offset = 8; // add codec and codec info\n\n    while (descriptionCount--) {\n      var len = bytesToNumber(stsd.subarray(offset, offset + 4));\n      var sampleDescriptor = stsd.subarray(offset + 4, offset + 4 + len);\n      addSampleDescription(track, sampleDescriptor);\n      offset += 4 + len;\n    }\n\n    if (frameTable) {\n      track.frameTable = buildFrameTable(stbl, track.timescale);\n    } // codec has no sub parameters\n\n\n    tracks.push(track);\n  });\n  return tracks;\n};\nexport var parseMediaInfo = function parseMediaInfo(bytes) {\n  var mvhd = findBox(bytes, ['moov', 'mvhd'], true)[0];\n\n  if (!mvhd || !mvhd.length) {\n    return;\n  }\n\n  var info = {}; // ms to ns\n  // mvhd v1 has 8 byte duration and other fields too\n\n  if (mvhd[0] === 1) {\n    info.timestampScale = bytesToNumber(mvhd.subarray(20, 24));\n    info.duration = bytesToNumber(mvhd.subarray(24, 32));\n  } else {\n    info.timestampScale = bytesToNumber(mvhd.subarray(12, 16));\n    info.duration = bytesToNumber(mvhd.subarray(16, 20));\n  }\n\n  info.bytes = mvhd;\n  return info;\n};","import { toUint8, bytesToNumber, bytesMatch, bytesToString, numberToBytes, padStart } from './byte-helpers';\nimport { getAvcCodec, getHvcCodec, getAv1Codec } from './codec-helpers.js'; // relevant specs for this parser:\n// https://matroska-org.github.io/libebml/specs.html\n// https://www.matroska.org/technical/elements.html\n// https://www.webmproject.org/docs/container/\n\nexport var EBML_TAGS = {\n  EBML: toUint8([0x1A, 0x45, 0xDF, 0xA3]),\n  DocType: toUint8([0x42, 0x82]),\n  Segment: toUint8([0x18, 0x53, 0x80, 0x67]),\n  SegmentInfo: toUint8([0x15, 0x49, 0xA9, 0x66]),\n  Tracks: toUint8([0x16, 0x54, 0xAE, 0x6B]),\n  Track: toUint8([0xAE]),\n  TrackNumber: toUint8([0xd7]),\n  DefaultDuration: toUint8([0x23, 0xe3, 0x83]),\n  TrackEntry: toUint8([0xAE]),\n  TrackType: toUint8([0x83]),\n  FlagDefault: toUint8([0x88]),\n  CodecID: toUint8([0x86]),\n  CodecPrivate: toUint8([0x63, 0xA2]),\n  VideoTrack: toUint8([0xe0]),\n  AudioTrack: toUint8([0xe1]),\n  // Not used yet, but will be used for live webm/mkv\n  // see https://www.matroska.org/technical/basics.html#block-structure\n  // see https://www.matroska.org/technical/basics.html#simpleblock-structure\n  Cluster: toUint8([0x1F, 0x43, 0xB6, 0x75]),\n  Timestamp: toUint8([0xE7]),\n  TimestampScale: toUint8([0x2A, 0xD7, 0xB1]),\n  BlockGroup: toUint8([0xA0]),\n  BlockDuration: toUint8([0x9B]),\n  Block: toUint8([0xA1]),\n  SimpleBlock: toUint8([0xA3])\n};\n/**\n * This is a simple table to determine the length\n * of things in ebml. The length is one based (starts at 1,\n * rather than zero) and for every zero bit before a one bit\n * we add one to length. We also need this table because in some\n * case we have to xor all the length bits from another value.\n */\n\nvar LENGTH_TABLE = [128, 64, 32, 16, 8, 4, 2, 1];\n\nvar getLength = function getLength(byte) {\n  var len = 1;\n\n  for (var i = 0; i < LENGTH_TABLE.length; i++) {\n    if (byte & LENGTH_TABLE[i]) {\n      break;\n    }\n\n    len++;\n  }\n\n  return len;\n}; // length in ebml is stored in the first 4 to 8 bits\n// of the first byte. 4 for the id length and 8 for the\n// data size length. Length is measured by converting the number to binary\n// then 1 + the number of zeros before a 1 is encountered starting\n// from the left.\n\n\nvar getvint = function getvint(bytes, offset, removeLength, signed) {\n  if (removeLength === void 0) {\n    removeLength = true;\n  }\n\n  if (signed === void 0) {\n    signed = false;\n  }\n\n  var length = getLength(bytes[offset]);\n  var valueBytes = bytes.subarray(offset, offset + length); // NOTE that we do **not** subarray here because we need to copy these bytes\n  // as they will be modified below to remove the dataSizeLen bits and we do not\n  // want to modify the original data. normally we could just call slice on\n  // uint8array but ie 11 does not support that...\n\n  if (removeLength) {\n    valueBytes = Array.prototype.slice.call(bytes, offset, offset + length);\n    valueBytes[0] ^= LENGTH_TABLE[length - 1];\n  }\n\n  return {\n    length: length,\n    value: bytesToNumber(valueBytes, {\n      signed: signed\n    }),\n    bytes: valueBytes\n  };\n};\n\nvar normalizePath = function normalizePath(path) {\n  if (typeof path === 'string') {\n    return path.match(/.{1,2}/g).map(function (p) {\n      return normalizePath(p);\n    });\n  }\n\n  if (typeof path === 'number') {\n    return numberToBytes(path);\n  }\n\n  return path;\n};\n\nvar normalizePaths = function normalizePaths(paths) {\n  if (!Array.isArray(paths)) {\n    return [normalizePath(paths)];\n  }\n\n  return paths.map(function (p) {\n    return normalizePath(p);\n  });\n};\n\nvar getInfinityDataSize = function getInfinityDataSize(id, bytes, offset) {\n  if (offset >= bytes.length) {\n    return bytes.length;\n  }\n\n  var innerid = getvint(bytes, offset, false);\n\n  if (bytesMatch(id.bytes, innerid.bytes)) {\n    return offset;\n  }\n\n  var dataHeader = getvint(bytes, offset + innerid.length);\n  return getInfinityDataSize(id, bytes, offset + dataHeader.length + dataHeader.value + innerid.length);\n};\n/**\n * Notes on the EBLM format.\n *\n * EBLM uses \"vints\" tags. Every vint tag contains\n * two parts\n *\n * 1. The length from the first byte. You get this by\n *    converting the byte to binary and counting the zeros\n *    before a 1. Then you add 1 to that. Examples\n *    00011111 = length 4 because there are 3 zeros before a 1.\n *    00100000 = length 3 because there are 2 zeros before a 1.\n *    00000011 = length 7 because there are 6 zeros before a 1.\n *\n * 2. The bits used for length are removed from the first byte\n *    Then all the bytes are merged into a value. NOTE: this\n *    is not the case for id ebml tags as there id includes\n *    length bits.\n *\n */\n\n\nexport var findEbml = function findEbml(bytes, paths) {\n  paths = normalizePaths(paths);\n  bytes = toUint8(bytes);\n  var results = [];\n\n  if (!paths.length) {\n    return results;\n  }\n\n  var i = 0;\n\n  while (i < bytes.length) {\n    var id = getvint(bytes, i, false);\n    var dataHeader = getvint(bytes, i + id.length);\n    var dataStart = i + id.length + dataHeader.length; // dataSize is unknown or this is a live stream\n\n    if (dataHeader.value === 0x7f) {\n      dataHeader.value = getInfinityDataSize(id, bytes, dataStart);\n\n      if (dataHeader.value !== bytes.length) {\n        dataHeader.value -= dataStart;\n      }\n    }\n\n    var dataEnd = dataStart + dataHeader.value > bytes.length ? bytes.length : dataStart + dataHeader.value;\n    var data = bytes.subarray(dataStart, dataEnd);\n\n    if (bytesMatch(paths[0], id.bytes)) {\n      if (paths.length === 1) {\n        // this is the end of the paths and we've found the tag we were\n        // looking for\n        results.push(data);\n      } else {\n        // recursively search for the next tag inside of the data\n        // of this one\n        results = results.concat(findEbml(data, paths.slice(1)));\n      }\n    }\n\n    var totalLength = id.length + dataHeader.length + data.length; // move past this tag entirely, we are not looking for it\n\n    i += totalLength;\n  }\n\n  return results;\n}; // see https://www.matroska.org/technical/basics.html#block-structure\n\nexport var decodeBlock = function decodeBlock(block, type, timestampScale, clusterTimestamp) {\n  var duration;\n\n  if (type === 'group') {\n    duration = findEbml(block, [EBML_TAGS.BlockDuration])[0];\n\n    if (duration) {\n      duration = bytesToNumber(duration);\n      duration = 1 / timestampScale * duration * timestampScale / 1000;\n    }\n\n    block = findEbml(block, [EBML_TAGS.Block])[0];\n    type = 'block'; // treat data as a block after this point\n  }\n\n  var dv = new DataView(block.buffer, block.byteOffset, block.byteLength);\n  var trackNumber = getvint(block, 0);\n  var timestamp = dv.getInt16(trackNumber.length, false);\n  var flags = block[trackNumber.length + 2];\n  var data = block.subarray(trackNumber.length + 3); // pts/dts in seconds\n\n  var ptsdts = 1 / timestampScale * (clusterTimestamp + timestamp) * timestampScale / 1000; // return the frame\n\n  var parsed = {\n    duration: duration,\n    trackNumber: trackNumber.value,\n    keyframe: type === 'simple' && flags >> 7 === 1,\n    invisible: (flags & 0x08) >> 3 === 1,\n    lacing: (flags & 0x06) >> 1,\n    discardable: type === 'simple' && (flags & 0x01) === 1,\n    frames: [],\n    pts: ptsdts,\n    dts: ptsdts,\n    timestamp: timestamp\n  };\n\n  if (!parsed.lacing) {\n    parsed.frames.push(data);\n    return parsed;\n  }\n\n  var numberOfFrames = data[0] + 1;\n  var frameSizes = [];\n  var offset = 1; // Fixed\n\n  if (parsed.lacing === 2) {\n    var sizeOfFrame = (data.length - offset) / numberOfFrames;\n\n    for (var i = 0; i < numberOfFrames; i++) {\n      frameSizes.push(sizeOfFrame);\n    }\n  } // xiph\n\n\n  if (parsed.lacing === 1) {\n    for (var _i = 0; _i < numberOfFrames - 1; _i++) {\n      var size = 0;\n\n      do {\n        size += data[offset];\n        offset++;\n      } while (data[offset - 1] === 0xFF);\n\n      frameSizes.push(size);\n    }\n  } // ebml\n\n\n  if (parsed.lacing === 3) {\n    // first vint is unsinged\n    // after that vints are singed and\n    // based on a compounding size\n    var _size = 0;\n\n    for (var _i2 = 0; _i2 < numberOfFrames - 1; _i2++) {\n      var vint = _i2 === 0 ? getvint(data, offset) : getvint(data, offset, true, true);\n      _size += vint.value;\n      frameSizes.push(_size);\n      offset += vint.length;\n    }\n  }\n\n  frameSizes.forEach(function (size) {\n    parsed.frames.push(data.subarray(offset, offset + size));\n    offset += size;\n  });\n  return parsed;\n}; // VP9 Codec Feature Metadata (CodecPrivate)\n// https://www.webmproject.org/docs/container/\n\nvar parseVp9Private = function parseVp9Private(bytes) {\n  var i = 0;\n  var params = {};\n\n  while (i < bytes.length) {\n    var id = bytes[i] & 0x7f;\n    var len = bytes[i + 1];\n    var val = void 0;\n\n    if (len === 1) {\n      val = bytes[i + 2];\n    } else {\n      val = bytes.subarray(i + 2, i + 2 + len);\n    }\n\n    if (id === 1) {\n      params.profile = val;\n    } else if (id === 2) {\n      params.level = val;\n    } else if (id === 3) {\n      params.bitDepth = val;\n    } else if (id === 4) {\n      params.chromaSubsampling = val;\n    } else {\n      params[id] = val;\n    }\n\n    i += 2 + len;\n  }\n\n  return params;\n};\n\nexport var parseTracks = function parseTracks(bytes) {\n  bytes = toUint8(bytes);\n  var decodedTracks = [];\n  var tracks = findEbml(bytes, [EBML_TAGS.Segment, EBML_TAGS.Tracks, EBML_TAGS.Track]);\n\n  if (!tracks.length) {\n    tracks = findEbml(bytes, [EBML_TAGS.Tracks, EBML_TAGS.Track]);\n  }\n\n  if (!tracks.length) {\n    tracks = findEbml(bytes, [EBML_TAGS.Track]);\n  }\n\n  if (!tracks.length) {\n    return decodedTracks;\n  }\n\n  tracks.forEach(function (track) {\n    var trackType = findEbml(track, EBML_TAGS.TrackType)[0];\n\n    if (!trackType || !trackType.length) {\n      return;\n    } // 1 is video, 2 is audio, 17 is subtitle\n    // other values are unimportant in this context\n\n\n    if (trackType[0] === 1) {\n      trackType = 'video';\n    } else if (trackType[0] === 2) {\n      trackType = 'audio';\n    } else if (trackType[0] === 17) {\n      trackType = 'subtitle';\n    } else {\n      return;\n    } // todo parse language\n\n\n    var decodedTrack = {\n      rawCodec: bytesToString(findEbml(track, [EBML_TAGS.CodecID])[0]),\n      type: trackType,\n      codecPrivate: findEbml(track, [EBML_TAGS.CodecPrivate])[0],\n      number: bytesToNumber(findEbml(track, [EBML_TAGS.TrackNumber])[0]),\n      defaultDuration: bytesToNumber(findEbml(track, [EBML_TAGS.DefaultDuration])[0]),\n      default: findEbml(track, [EBML_TAGS.FlagDefault])[0],\n      rawData: track\n    };\n    var codec = '';\n\n    if (/V_MPEG4\\/ISO\\/AVC/.test(decodedTrack.rawCodec)) {\n      codec = \"avc1.\" + getAvcCodec(decodedTrack.codecPrivate);\n    } else if (/V_MPEGH\\/ISO\\/HEVC/.test(decodedTrack.rawCodec)) {\n      codec = \"hev1.\" + getHvcCodec(decodedTrack.codecPrivate);\n    } else if (/V_MPEG4\\/ISO\\/ASP/.test(decodedTrack.rawCodec)) {\n      if (decodedTrack.codecPrivate) {\n        codec = 'mp4v.20.' + decodedTrack.codecPrivate[4].toString();\n      } else {\n        codec = 'mp4v.20.9';\n      }\n    } else if (/^V_THEORA/.test(decodedTrack.rawCodec)) {\n      codec = 'theora';\n    } else if (/^V_VP8/.test(decodedTrack.rawCodec)) {\n      codec = 'vp8';\n    } else if (/^V_VP9/.test(decodedTrack.rawCodec)) {\n      if (decodedTrack.codecPrivate) {\n        var _parseVp9Private = parseVp9Private(decodedTrack.codecPrivate),\n            profile = _parseVp9Private.profile,\n            level = _parseVp9Private.level,\n            bitDepth = _parseVp9Private.bitDepth,\n            chromaSubsampling = _parseVp9Private.chromaSubsampling;\n\n        codec = 'vp09.';\n        codec += padStart(profile, 2, '0') + \".\";\n        codec += padStart(level, 2, '0') + \".\";\n        codec += padStart(bitDepth, 2, '0') + \".\";\n        codec += \"\" + padStart(chromaSubsampling, 2, '0'); // Video -> Colour -> Ebml name\n\n        var matrixCoefficients = findEbml(track, [0xE0, [0x55, 0xB0], [0x55, 0xB1]])[0] || [];\n        var videoFullRangeFlag = findEbml(track, [0xE0, [0x55, 0xB0], [0x55, 0xB9]])[0] || [];\n        var transferCharacteristics = findEbml(track, [0xE0, [0x55, 0xB0], [0x55, 0xBA]])[0] || [];\n        var colourPrimaries = findEbml(track, [0xE0, [0x55, 0xB0], [0x55, 0xBB]])[0] || []; // if we find any optional codec parameter specify them all.\n\n        if (matrixCoefficients.length || videoFullRangeFlag.length || transferCharacteristics.length || colourPrimaries.length) {\n          codec += \".\" + padStart(colourPrimaries[0], 2, '0');\n          codec += \".\" + padStart(transferCharacteristics[0], 2, '0');\n          codec += \".\" + padStart(matrixCoefficients[0], 2, '0');\n          codec += \".\" + padStart(videoFullRangeFlag[0], 2, '0');\n        }\n      } else {\n        codec = 'vp9';\n      }\n    } else if (/^V_AV1/.test(decodedTrack.rawCodec)) {\n      codec = \"av01.\" + getAv1Codec(decodedTrack.codecPrivate);\n    } else if (/A_ALAC/.test(decodedTrack.rawCodec)) {\n      codec = 'alac';\n    } else if (/A_MPEG\\/L2/.test(decodedTrack.rawCodec)) {\n      codec = 'mp2';\n    } else if (/A_MPEG\\/L3/.test(decodedTrack.rawCodec)) {\n      codec = 'mp3';\n    } else if (/^A_AAC/.test(decodedTrack.rawCodec)) {\n      if (decodedTrack.codecPrivate) {\n        codec = 'mp4a.40.' + (decodedTrack.codecPrivate[0] >>> 3).toString();\n      } else {\n        codec = 'mp4a.40.2';\n      }\n    } else if (/^A_AC3/.test(decodedTrack.rawCodec)) {\n      codec = 'ac-3';\n    } else if (/^A_PCM/.test(decodedTrack.rawCodec)) {\n      codec = 'pcm';\n    } else if (/^A_MS\\/ACM/.test(decodedTrack.rawCodec)) {\n      codec = 'speex';\n    } else if (/^A_EAC3/.test(decodedTrack.rawCodec)) {\n      codec = 'ec-3';\n    } else if (/^A_VORBIS/.test(decodedTrack.rawCodec)) {\n      codec = 'vorbis';\n    } else if (/^A_FLAC/.test(decodedTrack.rawCodec)) {\n      codec = 'flac';\n    } else if (/^A_OPUS/.test(decodedTrack.rawCodec)) {\n      codec = 'opus';\n    }\n\n    decodedTrack.codec = codec;\n    decodedTracks.push(decodedTrack);\n  });\n  return decodedTracks.sort(function (a, b) {\n    return a.number - b.number;\n  });\n};\nexport var parseData = function parseData(data, tracks) {\n  var allBlocks = [];\n  var segment = findEbml(data, [EBML_TAGS.Segment])[0];\n  var timestampScale = findEbml(segment, [EBML_TAGS.SegmentInfo, EBML_TAGS.TimestampScale])[0]; // in nanoseconds, defaults to 1ms\n\n  if (timestampScale && timestampScale.length) {\n    timestampScale = bytesToNumber(timestampScale);\n  } else {\n    timestampScale = 1000000;\n  }\n\n  var clusters = findEbml(segment, [EBML_TAGS.Cluster]);\n\n  if (!tracks) {\n    tracks = parseTracks(segment);\n  }\n\n  clusters.forEach(function (cluster, ci) {\n    var simpleBlocks = findEbml(cluster, [EBML_TAGS.SimpleBlock]).map(function (b) {\n      return {\n        type: 'simple',\n        data: b\n      };\n    });\n    var blockGroups = findEbml(cluster, [EBML_TAGS.BlockGroup]).map(function (b) {\n      return {\n        type: 'group',\n        data: b\n      };\n    });\n    var timestamp = findEbml(cluster, [EBML_TAGS.Timestamp])[0] || 0;\n\n    if (timestamp && timestamp.length) {\n      timestamp = bytesToNumber(timestamp);\n    } // get all blocks then sort them into the correct order\n\n\n    var blocks = simpleBlocks.concat(blockGroups).sort(function (a, b) {\n      return a.data.byteOffset - b.data.byteOffset;\n    });\n    blocks.forEach(function (block, bi) {\n      var decoded = decodeBlock(block.data, block.type, timestampScale, timestamp);\n      allBlocks.push(decoded);\n    });\n  });\n  return {\n    tracks: tracks,\n    blocks: allBlocks\n  };\n};","import { bytesMatch, toUint8 } from './byte-helpers.js';\nexport var NAL_TYPE_ONE = toUint8([0x00, 0x00, 0x00, 0x01]);\nexport var NAL_TYPE_TWO = toUint8([0x00, 0x00, 0x01]);\nexport var EMULATION_PREVENTION = toUint8([0x00, 0x00, 0x03]);\n/**\n * Expunge any \"Emulation Prevention\" bytes from a \"Raw Byte\n * Sequence Payload\"\n *\n * @param data {Uint8Array} the bytes of a RBSP from a NAL\n * unit\n * @return {Uint8Array} the RBSP without any Emulation\n * Prevention Bytes\n */\n\nexport var discardEmulationPreventionBytes = function discardEmulationPreventionBytes(bytes) {\n  var positions = [];\n  var i = 1; // Find all `Emulation Prevention Bytes`\n\n  while (i < bytes.length - 2) {\n    if (bytesMatch(bytes.subarray(i, i + 3), EMULATION_PREVENTION)) {\n      positions.push(i + 2);\n      i++;\n    }\n\n    i++;\n  } // If no Emulation Prevention Bytes were found just return the original\n  // array\n\n\n  if (positions.length === 0) {\n    return bytes;\n  } // Create a new array to hold the NAL unit data\n\n\n  var newLength = bytes.length - positions.length;\n  var newData = new Uint8Array(newLength);\n  var sourceIndex = 0;\n\n  for (i = 0; i < newLength; sourceIndex++, i++) {\n    if (sourceIndex === positions[0]) {\n      // Skip this byte\n      sourceIndex++; // Remove this position index\n\n      positions.shift();\n    }\n\n    newData[i] = bytes[sourceIndex];\n  }\n\n  return newData;\n};\nexport var findNal = function findNal(bytes, dataType, types, nalLimit) {\n  if (nalLimit === void 0) {\n    nalLimit = Infinity;\n  }\n\n  bytes = toUint8(bytes);\n  types = [].concat(types);\n  var i = 0;\n  var nalStart;\n  var nalsFound = 0; // keep searching until:\n  // we reach the end of bytes\n  // we reach the maximum number of nals they want to seach\n  // NOTE: that we disregard nalLimit when we have found the start\n  // of the nal we want so that we can find the end of the nal we want.\n\n  while (i < bytes.length && (nalsFound < nalLimit || nalStart)) {\n    var nalOffset = void 0;\n\n    if (bytesMatch(bytes.subarray(i), NAL_TYPE_ONE)) {\n      nalOffset = 4;\n    } else if (bytesMatch(bytes.subarray(i), NAL_TYPE_TWO)) {\n      nalOffset = 3;\n    } // we are unsynced,\n    // find the next nal unit\n\n\n    if (!nalOffset) {\n      i++;\n      continue;\n    }\n\n    nalsFound++;\n\n    if (nalStart) {\n      return discardEmulationPreventionBytes(bytes.subarray(nalStart, i));\n    }\n\n    var nalType = void 0;\n\n    if (dataType === 'h264') {\n      nalType = bytes[i + nalOffset] & 0x1f;\n    } else if (dataType === 'h265') {\n      nalType = bytes[i + nalOffset] >> 1 & 0x3f;\n    }\n\n    if (types.indexOf(nalType) !== -1) {\n      nalStart = i + nalOffset;\n    } // nal header is 1 length for h264, and 2 for h265\n\n\n    i += nalOffset + (dataType === 'h264' ? 1 : 2);\n  }\n\n  return bytes.subarray(0, 0);\n};\nexport var findH264Nal = function findH264Nal(bytes, type, nalLimit) {\n  return findNal(bytes, 'h264', type, nalLimit);\n};\nexport var findH265Nal = function findH265Nal(bytes, type, nalLimit) {\n  return findNal(bytes, 'h265', type, nalLimit);\n};","import { toUint8, bytesMatch } from './byte-helpers.js';\nimport { findBox } from './mp4-helpers.js';\nimport { findEbml, EBML_TAGS } from './ebml-helpers.js';\nimport { getId3Offset } from './id3-helpers.js';\nimport { findH264Nal, findH265Nal } from './nal-helpers.js';\nvar CONSTANTS = {\n  // \"webm\" string literal in hex\n  'webm': toUint8([0x77, 0x65, 0x62, 0x6d]),\n  // \"matroska\" string literal in hex\n  'matroska': toUint8([0x6d, 0x61, 0x74, 0x72, 0x6f, 0x73, 0x6b, 0x61]),\n  // \"fLaC\" string literal in hex\n  'flac': toUint8([0x66, 0x4c, 0x61, 0x43]),\n  // \"OggS\" string literal in hex\n  'ogg': toUint8([0x4f, 0x67, 0x67, 0x53]),\n  // ac-3 sync byte, also works for ec-3 as that is simply a codec\n  // of ac-3\n  'ac3': toUint8([0x0b, 0x77]),\n  // \"RIFF\" string literal in hex used for wav and avi\n  'riff': toUint8([0x52, 0x49, 0x46, 0x46]),\n  // \"AVI\" string literal in hex\n  'avi': toUint8([0x41, 0x56, 0x49]),\n  // \"WAVE\" string literal in hex\n  'wav': toUint8([0x57, 0x41, 0x56, 0x45]),\n  // \"ftyp3g\" string literal in hex\n  '3gp': toUint8([0x66, 0x74, 0x79, 0x70, 0x33, 0x67]),\n  // \"ftyp\" string literal in hex\n  'mp4': toUint8([0x66, 0x74, 0x79, 0x70]),\n  // \"styp\" string literal in hex\n  'fmp4': toUint8([0x73, 0x74, 0x79, 0x70]),\n  // \"ftypqt\" string literal in hex\n  'mov': toUint8([0x66, 0x74, 0x79, 0x70, 0x71, 0x74]),\n  // moov string literal in hex\n  'moov': toUint8([0x6D, 0x6F, 0x6F, 0x76]),\n  // moof string literal in hex\n  'moof': toUint8([0x6D, 0x6F, 0x6F, 0x66])\n};\nvar _isLikely = {\n  aac: function aac(bytes) {\n    var offset = getId3Offset(bytes);\n    return bytesMatch(bytes, [0xFF, 0x10], {\n      offset: offset,\n      mask: [0xFF, 0x16]\n    });\n  },\n  mp3: function mp3(bytes) {\n    var offset = getId3Offset(bytes);\n    return bytesMatch(bytes, [0xFF, 0x02], {\n      offset: offset,\n      mask: [0xFF, 0x06]\n    });\n  },\n  webm: function webm(bytes) {\n    var docType = findEbml(bytes, [EBML_TAGS.EBML, EBML_TAGS.DocType])[0]; // check if DocType EBML tag is webm\n\n    return bytesMatch(docType, CONSTANTS.webm);\n  },\n  mkv: function mkv(bytes) {\n    var docType = findEbml(bytes, [EBML_TAGS.EBML, EBML_TAGS.DocType])[0]; // check if DocType EBML tag is matroska\n\n    return bytesMatch(docType, CONSTANTS.matroska);\n  },\n  mp4: function mp4(bytes) {\n    // if this file is another base media file format, it is not mp4\n    if (_isLikely['3gp'](bytes) || _isLikely.mov(bytes)) {\n      return false;\n    } // if this file starts with a ftyp or styp box its mp4\n\n\n    if (bytesMatch(bytes, CONSTANTS.mp4, {\n      offset: 4\n    }) || bytesMatch(bytes, CONSTANTS.fmp4, {\n      offset: 4\n    })) {\n      return true;\n    } // if this file starts with a moof/moov box its mp4\n\n\n    if (bytesMatch(bytes, CONSTANTS.moof, {\n      offset: 4\n    }) || bytesMatch(bytes, CONSTANTS.moov, {\n      offset: 4\n    })) {\n      return true;\n    }\n  },\n  mov: function mov(bytes) {\n    return bytesMatch(bytes, CONSTANTS.mov, {\n      offset: 4\n    });\n  },\n  '3gp': function gp(bytes) {\n    return bytesMatch(bytes, CONSTANTS['3gp'], {\n      offset: 4\n    });\n  },\n  ac3: function ac3(bytes) {\n    var offset = getId3Offset(bytes);\n    return bytesMatch(bytes, CONSTANTS.ac3, {\n      offset: offset\n    });\n  },\n  ts: function ts(bytes) {\n    if (bytes.length < 189 && bytes.length >= 1) {\n      return bytes[0] === 0x47;\n    }\n\n    var i = 0; // check the first 376 bytes for two matching sync bytes\n\n    while (i + 188 < bytes.length && i < 188) {\n      if (bytes[i] === 0x47 && bytes[i + 188] === 0x47) {\n        return true;\n      }\n\n      i += 1;\n    }\n\n    return false;\n  },\n  flac: function flac(bytes) {\n    var offset = getId3Offset(bytes);\n    return bytesMatch(bytes, CONSTANTS.flac, {\n      offset: offset\n    });\n  },\n  ogg: function ogg(bytes) {\n    return bytesMatch(bytes, CONSTANTS.ogg);\n  },\n  avi: function avi(bytes) {\n    return bytesMatch(bytes, CONSTANTS.riff) && bytesMatch(bytes, CONSTANTS.avi, {\n      offset: 8\n    });\n  },\n  wav: function wav(bytes) {\n    return bytesMatch(bytes, CONSTANTS.riff) && bytesMatch(bytes, CONSTANTS.wav, {\n      offset: 8\n    });\n  },\n  'h264': function h264(bytes) {\n    // find seq_parameter_set_rbsp\n    return findH264Nal(bytes, 7, 3).length;\n  },\n  'h265': function h265(bytes) {\n    // find video_parameter_set_rbsp or seq_parameter_set_rbsp\n    return findH265Nal(bytes, [32, 33], 3).length;\n  }\n}; // get all the isLikely functions\n// but make sure 'ts' is above h264 and h265\n// but below everything else as it is the least specific\n\nvar isLikelyTypes = Object.keys(_isLikely) // remove ts, h264, h265\n.filter(function (t) {\n  return t !== 'ts' && t !== 'h264' && t !== 'h265';\n}) // add it back to the bottom\n.concat(['ts', 'h264', 'h265']); // make sure we are dealing with uint8 data.\n\nisLikelyTypes.forEach(function (type) {\n  var isLikelyFn = _isLikely[type];\n\n  _isLikely[type] = function (bytes) {\n    return isLikelyFn(toUint8(bytes));\n  };\n}); // export after wrapping\n\nexport var isLikely = _isLikely; // A useful list of file signatures can be found here\n// https://en.wikipedia.org/wiki/List_of_file_signatures\n\nexport var detectContainerForBytes = function detectContainerForBytes(bytes) {\n  bytes = toUint8(bytes);\n\n  for (var i = 0; i < isLikelyTypes.length; i++) {\n    var type = isLikelyTypes[i];\n\n    if (isLikely[type](bytes)) {\n      return type;\n    }\n  }\n\n  return '';\n}; // fmp4 is not a container\n\nexport var isLikelyFmp4MediaSegment = function isLikelyFmp4MediaSegment(bytes) {\n  return findBox(bytes, ['moof']).length > 0;\n};","import window from 'global/window';\n\nvar atob = function atob(s) {\n  return window.atob ? window.atob(s) : Buffer.from(s, 'base64').toString('binary');\n};\n\nexport default function decodeB64ToUint8Array(b64Text) {\n  var decodedString = atob(b64Text);\n  var array = new Uint8Array(decodedString.length);\n\n  for (var i = 0; i < decodedString.length; i++) {\n    array[i] = decodedString.charCodeAt(i);\n  }\n\n  return array;\n}","import { toUint8, bytesMatch } from './byte-helpers.js';\nvar ID3 = toUint8([0x49, 0x44, 0x33]);\nexport var getId3Size = function getId3Size(bytes, offset) {\n  if (offset === void 0) {\n    offset = 0;\n  }\n\n  bytes = toUint8(bytes);\n  var flags = bytes[offset + 5];\n  var returnSize = bytes[offset + 6] << 21 | bytes[offset + 7] << 14 | bytes[offset + 8] << 7 | bytes[offset + 9];\n  var footerPresent = (flags & 16) >> 4;\n\n  if (footerPresent) {\n    return returnSize + 20;\n  }\n\n  return returnSize + 10;\n};\nexport var getId3Offset = function getId3Offset(bytes, offset) {\n  if (offset === void 0) {\n    offset = 0;\n  }\n\n  bytes = toUint8(bytes);\n\n  if (bytes.length - offset < 10 || !bytesMatch(bytes, ID3, {\n    offset: offset\n  })) {\n    return offset;\n  }\n\n  offset += getId3Size(bytes, offset); // recursive check for id3 tags as some files\n  // have multiple ID3 tag sections even though\n  // they should not.\n\n  return getId3Offset(bytes, offset);\n};","var MPEGURL_REGEX = /^(audio|video|application)\\/(x-|vnd\\.apple\\.)?mpegurl/i;\nvar DASH_REGEX = /^application\\/dash\\+xml/i;\n/**\n * Returns a string that describes the type of source based on a video source object's\n * media type.\n *\n * @see {@link https://dev.w3.org/html5/pf-summary/video.html#dom-source-type|Source Type}\n *\n * @param {string} type\n *        Video source object media type\n * @return {('hls'|'dash'|'vhs-json'|null)}\n *         VHS source type string\n */\n\nexport var simpleTypeFromSourceType = function simpleTypeFromSourceType(type) {\n  if (MPEGURL_REGEX.test(type)) {\n    return 'hls';\n  }\n\n  if (DASH_REGEX.test(type)) {\n    return 'dash';\n  } // Denotes the special case of a manifest object passed to http-streaming instead of a\n  // source URL.\n  //\n  // See https://en.wikipedia.org/wiki/Media_type for details on specifying media types.\n  //\n  // In this case, vnd stands for vendor, video.js for the organization, VHS for this\n  // project, and the +json suffix identifies the structure of the media type.\n\n\n  if (type === 'application/vnd.videojs.vhs+json') {\n    return 'vhs-json';\n  }\n\n  return null;\n};","import window from 'global/window';\nvar DEFAULT_LOCATION = 'https://example.com';\n\nvar resolveUrl = function resolveUrl(baseUrl, relativeUrl) {\n  // return early if we don't need to resolve\n  if (/^[a-z]+:/i.test(relativeUrl)) {\n    return relativeUrl;\n  } // if baseUrl is a data URI, ignore it and resolve everything relative to window.location\n\n\n  if (/^data:/.test(baseUrl)) {\n    baseUrl = window.location && window.location.href || '';\n  }\n\n  var protocolLess = /^\\/\\//.test(baseUrl); // remove location if window.location isn't available (i.e. we're in node)\n  // and if baseUrl isn't an absolute url\n\n  var removeLocation = !window.location && !/\\/\\//i.test(baseUrl); // if the base URL is relative then combine with the current location\n\n  baseUrl = new window.URL(baseUrl, window.location || DEFAULT_LOCATION);\n  var newUrl = new URL(relativeUrl, baseUrl); // if we're a protocol-less url, remove the protocol\n  // and if we're location-less, remove the location\n  // otherwise, return the url unmodified\n\n  if (removeLocation) {\n    return newUrl.href.slice(DEFAULT_LOCATION.length);\n  } else if (protocolLess) {\n    return newUrl.href.slice(newUrl.protocol.length);\n  }\n\n  return newUrl.href;\n};\n\nexport default resolveUrl;","\"use strict\";\n\nvar window = require('global/window');\n\nvar httpResponseHandler = function httpResponseHandler(callback, decodeResponseBody) {\n  if (decodeResponseBody === void 0) {\n    decodeResponseBody = false;\n  }\n\n  return function (err, response, responseBody) {\n    // if the XHR failed, return that error\n    if (err) {\n      callback(err);\n      return;\n    } // if the HTTP status code is 4xx or 5xx, the request also failed\n\n\n    if (response.statusCode >= 400 && response.statusCode <= 599) {\n      var cause = responseBody;\n\n      if (decodeResponseBody) {\n        if (window.TextDecoder) {\n          var charset = getCharset(response.headers && response.headers['content-type']);\n\n          try {\n            cause = new TextDecoder(charset).decode(responseBody);\n          } catch (e) {}\n        } else {\n          cause = String.fromCharCode.apply(null, new Uint8Array(responseBody));\n        }\n      }\n\n      callback({\n        cause: cause\n      });\n      return;\n    } // otherwise, request succeeded\n\n\n    callback(null, responseBody);\n  };\n};\n\nfunction getCharset(contentTypeHeader) {\n  if (contentTypeHeader === void 0) {\n    contentTypeHeader = '';\n  }\n\n  return contentTypeHeader.toLowerCase().split(';').reduce(function (charset, contentType) {\n    var _contentType$split = contentType.split('='),\n        type = _contentType$split[0],\n        value = _contentType$split[1];\n\n    if (type.trim() === 'charset') {\n      return value.trim();\n    }\n\n    return charset;\n  }, 'utf-8');\n}\n\nmodule.exports = httpResponseHandler;","\"use strict\";\n\nvar window = require(\"global/window\");\n\nvar _extends = require(\"@babel/runtime/helpers/extends\");\n\nvar isFunction = require('is-function');\n\nvar InterceptorsStorage = require('./interceptors.js');\n\nvar RetryManager = require(\"./retry.js\");\n\ncreateXHR.httpHandler = require('./http-handler.js');\ncreateXHR.requestInterceptorsStorage = new InterceptorsStorage();\ncreateXHR.responseInterceptorsStorage = new InterceptorsStorage();\ncreateXHR.retryManager = new RetryManager();\n/**\n * @license\n * slighly modified parse-headers 2.0.2 <https://github.com/kesla/parse-headers/>\n * Copyright (c) 2014 David Björklund\n * Available under the MIT license\n * <https://github.com/kesla/parse-headers/blob/master/LICENCE>\n */\n\nvar parseHeaders = function parseHeaders(headers) {\n  var result = {};\n\n  if (!headers) {\n    return result;\n  }\n\n  headers.trim().split('\\n').forEach(function (row) {\n    var index = row.indexOf(':');\n    var key = row.slice(0, index).trim().toLowerCase();\n    var value = row.slice(index + 1).trim();\n\n    if (typeof result[key] === 'undefined') {\n      result[key] = value;\n    } else if (Array.isArray(result[key])) {\n      result[key].push(value);\n    } else {\n      result[key] = [result[key], value];\n    }\n  });\n  return result;\n};\n\nmodule.exports = createXHR; // Allow use of default import syntax in TypeScript\n\nmodule.exports.default = createXHR;\ncreateXHR.XMLHttpRequest = window.XMLHttpRequest || noop;\ncreateXHR.XDomainRequest = \"withCredentials\" in new createXHR.XMLHttpRequest() ? createXHR.XMLHttpRequest : window.XDomainRequest;\nforEachArray([\"get\", \"put\", \"post\", \"patch\", \"head\", \"delete\"], function (method) {\n  createXHR[method === \"delete\" ? \"del\" : method] = function (uri, options, callback) {\n    options = initParams(uri, options, callback);\n    options.method = method.toUpperCase();\n    return _createXHR(options);\n  };\n});\n\nfunction forEachArray(array, iterator) {\n  for (var i = 0; i < array.length; i++) {\n    iterator(array[i]);\n  }\n}\n\nfunction isEmpty(obj) {\n  for (var i in obj) {\n    if (obj.hasOwnProperty(i)) return false;\n  }\n\n  return true;\n}\n\nfunction initParams(uri, options, callback) {\n  var params = uri;\n\n  if (isFunction(options)) {\n    callback = options;\n\n    if (typeof uri === \"string\") {\n      params = {\n        uri: uri\n      };\n    }\n  } else {\n    params = _extends({}, options, {\n      uri: uri\n    });\n  }\n\n  params.callback = callback;\n  return params;\n}\n\nfunction createXHR(uri, options, callback) {\n  options = initParams(uri, options, callback);\n  return _createXHR(options);\n}\n\nfunction _createXHR(options) {\n  if (typeof options.callback === \"undefined\") {\n    throw new Error(\"callback argument missing\");\n  } // call all registered request interceptors for a given request type:\n\n\n  if (options.requestType && createXHR.requestInterceptorsStorage.getIsEnabled()) {\n    var requestInterceptorPayload = {\n      uri: options.uri || options.url,\n      headers: options.headers || {},\n      body: options.body,\n      metadata: options.metadata || {},\n      retry: options.retry,\n      timeout: options.timeout\n    };\n    var updatedPayload = createXHR.requestInterceptorsStorage.execute(options.requestType, requestInterceptorPayload);\n    options.uri = updatedPayload.uri;\n    options.headers = updatedPayload.headers;\n    options.body = updatedPayload.body;\n    options.metadata = updatedPayload.metadata;\n    options.retry = updatedPayload.retry;\n    options.timeout = updatedPayload.timeout;\n  }\n\n  var called = false;\n\n  var callback = function cbOnce(err, response, body) {\n    if (!called) {\n      called = true;\n      options.callback(err, response, body);\n    }\n  };\n\n  function readystatechange() {\n    // do not call load 2 times when response interceptors are enabled\n    // why do we even need this 2nd load?\n    if (xhr.readyState === 4 && !createXHR.responseInterceptorsStorage.getIsEnabled()) {\n      setTimeout(loadFunc, 0);\n    }\n  }\n\n  function getBody() {\n    // Chrome with requestType=blob throws errors arround when even testing access to responseText\n    var body = undefined;\n\n    if (xhr.response) {\n      body = xhr.response;\n    } else {\n      body = xhr.responseText || getXml(xhr);\n    }\n\n    if (isJson) {\n      try {\n        body = JSON.parse(body);\n      } catch (e) {}\n    }\n\n    return body;\n  }\n\n  function errorFunc(evt) {\n    clearTimeout(timeoutTimer);\n    clearTimeout(options.retryTimeout);\n\n    if (!(evt instanceof Error)) {\n      evt = new Error(\"\" + (evt || \"Unknown XMLHttpRequest Error\"));\n    }\n\n    evt.statusCode = 0; // we would like to retry on error:\n\n    if (!aborted && createXHR.retryManager.getIsEnabled() && options.retry && options.retry.shouldRetry()) {\n      options.retryTimeout = setTimeout(function () {\n        options.retry.moveToNextAttempt(); // we want to re-use the same options and the same xhr object:\n\n        options.xhr = xhr;\n\n        _createXHR(options);\n      }, options.retry.getCurrentFuzzedDelay());\n      return;\n    } // call all registered response interceptors for a given request type:\n\n\n    if (options.requestType && createXHR.responseInterceptorsStorage.getIsEnabled()) {\n      var responseInterceptorPayload = {\n        headers: failureResponse.headers || {},\n        body: failureResponse.body,\n        responseUrl: xhr.responseURL,\n        responseType: xhr.responseType\n      };\n\n      var _updatedPayload = createXHR.responseInterceptorsStorage.execute(options.requestType, responseInterceptorPayload);\n\n      failureResponse.body = _updatedPayload.body;\n      failureResponse.headers = _updatedPayload.headers;\n    }\n\n    return callback(evt, failureResponse);\n  } // will load the data & process the response in a special response object\n\n\n  function loadFunc() {\n    if (aborted) return;\n    var status;\n    clearTimeout(timeoutTimer);\n    clearTimeout(options.retryTimeout);\n\n    if (options.useXDR && xhr.status === undefined) {\n      //IE8 CORS GET successful response doesn't have a status field, but body is fine\n      status = 200;\n    } else {\n      status = xhr.status === 1223 ? 204 : xhr.status;\n    }\n\n    var response = failureResponse;\n    var err = null;\n\n    if (status !== 0) {\n      response = {\n        body: getBody(),\n        statusCode: status,\n        method: method,\n        headers: {},\n        url: uri,\n        rawRequest: xhr\n      };\n\n      if (xhr.getAllResponseHeaders) {\n        //remember xhr can in fact be XDR for CORS in IE\n        response.headers = parseHeaders(xhr.getAllResponseHeaders());\n      }\n    } else {\n      err = new Error(\"Internal XMLHttpRequest Error\");\n    } // call all registered response interceptors for a given request type:\n\n\n    if (options.requestType && createXHR.responseInterceptorsStorage.getIsEnabled()) {\n      var responseInterceptorPayload = {\n        headers: response.headers || {},\n        body: response.body,\n        responseUrl: xhr.responseURL,\n        responseType: xhr.responseType\n      };\n\n      var _updatedPayload2 = createXHR.responseInterceptorsStorage.execute(options.requestType, responseInterceptorPayload);\n\n      response.body = _updatedPayload2.body;\n      response.headers = _updatedPayload2.headers;\n    }\n\n    return callback(err, response, response.body);\n  }\n\n  var xhr = options.xhr || null;\n\n  if (!xhr) {\n    if (options.cors || options.useXDR) {\n      xhr = new createXHR.XDomainRequest();\n    } else {\n      xhr = new createXHR.XMLHttpRequest();\n    }\n  }\n\n  var key;\n  var aborted;\n  var uri = xhr.url = options.uri || options.url;\n  var method = xhr.method = options.method || \"GET\";\n  var body = options.body || options.data;\n  var headers = xhr.headers = options.headers || {};\n  var sync = !!options.sync;\n  var isJson = false;\n  var timeoutTimer;\n  var failureResponse = {\n    body: undefined,\n    headers: {},\n    statusCode: 0,\n    method: method,\n    url: uri,\n    rawRequest: xhr\n  };\n\n  if (\"json\" in options && options.json !== false) {\n    isJson = true;\n    headers[\"accept\"] || headers[\"Accept\"] || (headers[\"Accept\"] = \"application/json\"); //Don't override existing accept header declared by user\n\n    if (method !== \"GET\" && method !== \"HEAD\") {\n      headers[\"content-type\"] || headers[\"Content-Type\"] || (headers[\"Content-Type\"] = \"application/json\"); //Don't override existing accept header declared by user\n\n      body = JSON.stringify(options.json === true ? body : options.json);\n    }\n  }\n\n  xhr.onreadystatechange = readystatechange;\n  xhr.onload = loadFunc;\n  xhr.onerror = errorFunc; // IE9 must have onprogress be set to a unique function.\n\n  xhr.onprogress = function () {// IE must die\n  };\n\n  xhr.onabort = function () {\n    aborted = true;\n    clearTimeout(options.retryTimeout);\n  };\n\n  xhr.ontimeout = errorFunc;\n  xhr.open(method, uri, !sync, options.username, options.password); //has to be after open\n\n  if (!sync) {\n    xhr.withCredentials = !!options.withCredentials;\n  } // Cannot set timeout with sync request\n  // not setting timeout on the xhr object, because of old webkits etc. not handling that correctly\n  // both npm's request and jquery 1.x use this kind of timeout, so this is being consistent\n\n\n  if (!sync && options.timeout > 0) {\n    timeoutTimer = setTimeout(function () {\n      if (aborted) return;\n      aborted = true; //IE9 may still call readystatechange\n\n      xhr.abort(\"timeout\");\n      var e = new Error(\"XMLHttpRequest timeout\");\n      e.code = \"ETIMEDOUT\";\n      errorFunc(e);\n    }, options.timeout);\n  }\n\n  if (xhr.setRequestHeader) {\n    for (key in headers) {\n      if (headers.hasOwnProperty(key)) {\n        xhr.setRequestHeader(key, headers[key]);\n      }\n    }\n  } else if (options.headers && !isEmpty(options.headers)) {\n    throw new Error(\"Headers cannot be set on an XDomainRequest object\");\n  }\n\n  if (\"responseType\" in options) {\n    xhr.responseType = options.responseType;\n  }\n\n  if (\"beforeSend\" in options && typeof options.beforeSend === \"function\") {\n    options.beforeSend(xhr);\n  } // Microsoft Edge browser sends \"undefined\" when send is called with undefined value.\n  // XMLHttpRequest spec says to pass null as body to indicate no body\n  // See https://github.com/naugtur/xhr/issues/100.\n\n\n  xhr.send(body || null);\n  return xhr;\n}\n\nfunction getXml(xhr) {\n  // xhr.responseXML will throw Exception \"InvalidStateError\" or \"DOMException\"\n  // See https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/responseXML.\n  try {\n    if (xhr.responseType === \"document\") {\n      return xhr.responseXML;\n    }\n\n    var firefoxBugTakenEffect = xhr.responseXML && xhr.responseXML.documentElement.nodeName === \"parsererror\";\n\n    if (xhr.responseType === \"\" && !firefoxBugTakenEffect) {\n      return xhr.responseXML;\n    }\n  } catch (e) {}\n\n  return null;\n}\n\nfunction noop() {}","\"use strict\";\n\nfunction _createForOfIteratorHelperLoose(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (it) return (it = it.call(o)).next.bind(it); if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; return function () { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nvar InterceptorsStorage = /*#__PURE__*/function () {\n  function InterceptorsStorage() {\n    this.typeToInterceptorsMap_ = new Map();\n    this.enabled_ = false;\n  }\n\n  var _proto = InterceptorsStorage.prototype;\n\n  _proto.getIsEnabled = function getIsEnabled() {\n    return this.enabled_;\n  };\n\n  _proto.enable = function enable() {\n    this.enabled_ = true;\n  };\n\n  _proto.disable = function disable() {\n    this.enabled_ = false;\n  };\n\n  _proto.reset = function reset() {\n    this.typeToInterceptorsMap_ = new Map();\n    this.enabled_ = false;\n  };\n\n  _proto.addInterceptor = function addInterceptor(type, interceptor) {\n    if (!this.typeToInterceptorsMap_.has(type)) {\n      this.typeToInterceptorsMap_.set(type, new Set());\n    }\n\n    var interceptorsSet = this.typeToInterceptorsMap_.get(type);\n\n    if (interceptorsSet.has(interceptor)) {\n      // already have this interceptor\n      return false;\n    }\n\n    interceptorsSet.add(interceptor);\n    return true;\n  };\n\n  _proto.removeInterceptor = function removeInterceptor(type, interceptor) {\n    var interceptorsSet = this.typeToInterceptorsMap_.get(type);\n\n    if (interceptorsSet && interceptorsSet.has(interceptor)) {\n      interceptorsSet.delete(interceptor);\n      return true;\n    }\n\n    return false;\n  };\n\n  _proto.clearInterceptorsByType = function clearInterceptorsByType(type) {\n    var interceptorsSet = this.typeToInterceptorsMap_.get(type);\n\n    if (!interceptorsSet) {\n      return false;\n    }\n\n    this.typeToInterceptorsMap_.delete(type);\n    this.typeToInterceptorsMap_.set(type, new Set());\n    return true;\n  };\n\n  _proto.clear = function clear() {\n    if (!this.typeToInterceptorsMap_.size) {\n      return false;\n    }\n\n    this.typeToInterceptorsMap_ = new Map();\n    return true;\n  };\n\n  _proto.getForType = function getForType(type) {\n    return this.typeToInterceptorsMap_.get(type) || new Set();\n  };\n\n  _proto.execute = function execute(type, payload) {\n    var interceptors = this.getForType(type);\n\n    for (var _iterator = _createForOfIteratorHelperLoose(interceptors), _step; !(_step = _iterator()).done;) {\n      var interceptor = _step.value;\n\n      try {\n        payload = interceptor(payload);\n      } catch (e) {//ignore\n      }\n    }\n\n    return payload;\n  };\n\n  return InterceptorsStorage;\n}();\n\nmodule.exports = InterceptorsStorage;","\"use strict\";\n\nvar RetryManager = /*#__PURE__*/function () {\n  function RetryManager() {\n    this.maxAttempts_ = 1;\n    this.delayFactor_ = 0.1;\n    this.fuzzFactor_ = 0.1;\n    this.initialDelay_ = 1000;\n    this.enabled_ = false;\n  }\n\n  var _proto = RetryManager.prototype;\n\n  _proto.getIsEnabled = function getIsEnabled() {\n    return this.enabled_;\n  };\n\n  _proto.enable = function enable() {\n    this.enabled_ = true;\n  };\n\n  _proto.disable = function disable() {\n    this.enabled_ = false;\n  };\n\n  _proto.reset = function reset() {\n    this.maxAttempts_ = 1;\n    this.delayFactor_ = 0.1;\n    this.fuzzFactor_ = 0.1;\n    this.initialDelay_ = 1000;\n    this.enabled_ = false;\n  };\n\n  _proto.getMaxAttempts = function getMaxAttempts() {\n    return this.maxAttempts_;\n  };\n\n  _proto.setMaxAttempts = function setMaxAttempts(maxAttempts) {\n    this.maxAttempts_ = maxAttempts;\n  };\n\n  _proto.getDelayFactor = function getDelayFactor() {\n    return this.delayFactor_;\n  };\n\n  _proto.setDelayFactor = function setDelayFactor(delayFactor) {\n    this.delayFactor_ = delayFactor;\n  };\n\n  _proto.getFuzzFactor = function getFuzzFactor() {\n    return this.fuzzFactor_;\n  };\n\n  _proto.setFuzzFactor = function setFuzzFactor(fuzzFactor) {\n    this.fuzzFactor_ = fuzzFactor;\n  };\n\n  _proto.getInitialDelay = function getInitialDelay() {\n    return this.initialDelay_;\n  };\n\n  _proto.setInitialDelay = function setInitialDelay(initialDelay) {\n    this.initialDelay_ = initialDelay;\n  };\n\n  _proto.createRetry = function createRetry(_temp) {\n    var _ref = _temp === void 0 ? {} : _temp,\n        maxAttempts = _ref.maxAttempts,\n        delayFactor = _ref.delayFactor,\n        fuzzFactor = _ref.fuzzFactor,\n        initialDelay = _ref.initialDelay;\n\n    return new Retry({\n      maxAttempts: maxAttempts || this.maxAttempts_,\n      delayFactor: delayFactor || this.delayFactor_,\n      fuzzFactor: fuzzFactor || this.fuzzFactor_,\n      initialDelay: initialDelay || this.initialDelay_\n    });\n  };\n\n  return RetryManager;\n}();\n\nvar Retry = /*#__PURE__*/function () {\n  function Retry(options) {\n    this.maxAttempts_ = options.maxAttempts;\n    this.delayFactor_ = options.delayFactor;\n    this.fuzzFactor_ = options.fuzzFactor;\n    this.currentDelay_ = options.initialDelay;\n    this.currentAttempt_ = 1;\n  }\n\n  var _proto2 = Retry.prototype;\n\n  _proto2.moveToNextAttempt = function moveToNextAttempt() {\n    this.currentAttempt_++;\n    var delayDelta = this.currentDelay_ * this.delayFactor_;\n    this.currentDelay_ = this.currentDelay_ + delayDelta;\n  };\n\n  _proto2.shouldRetry = function shouldRetry() {\n    return this.currentAttempt_ < this.maxAttempts_;\n  };\n\n  _proto2.getCurrentDelay = function getCurrentDelay() {\n    return this.currentDelay_;\n  };\n\n  _proto2.getCurrentMinPossibleDelay = function getCurrentMinPossibleDelay() {\n    return (1 - this.fuzzFactor_) * this.currentDelay_;\n  };\n\n  _proto2.getCurrentMaxPossibleDelay = function getCurrentMaxPossibleDelay() {\n    return (1 + this.fuzzFactor_) * this.currentDelay_;\n  }\n  /**\n   * For example fuzzFactor is 0.1\n   * This means ±10% deviation\n   * So if we have delay as 1000\n   * This function can generate any value from 900 to 1100\n   */\n  ;\n\n  _proto2.getCurrentFuzzedDelay = function getCurrentFuzzedDelay() {\n    var lowValue = this.getCurrentMinPossibleDelay();\n    var highValue = this.getCurrentMaxPossibleDelay();\n    return lowValue + Math.random() * (highValue - lowValue);\n  };\n\n  return Retry;\n}();\n\nmodule.exports = RetryManager;","'use strict'\n\n/**\n * Ponyfill for `Array.prototype.find` which is only available in ES6 runtimes.\n *\n * Works with anything that has a `length` property and index access properties, including NodeList.\n *\n * @template {unknown} T\n * @param {Array<T> | ({length:number, [number]: T})} list\n * @param {function (item: T, index: number, list:Array<T> | ({length:number, [number]: T})):boolean} predicate\n * @param {Partial<Pick<ArrayConstructor['prototype'], 'find'>>?} ac `Array.prototype` by default,\n * \t\t\t\tallows injecting a custom implementation in tests\n * @returns {T | undefined}\n *\n * @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/find\n * @see https://tc39.es/ecma262/multipage/indexed-collections.html#sec-array.prototype.find\n */\nfunction find(list, predicate, ac) {\n\tif (ac === undefined) {\n\t\tac = Array.prototype;\n\t}\n\tif (list && typeof ac.find === 'function') {\n\t\treturn ac.find.call(list, predicate);\n\t}\n\tfor (var i = 0; i < list.length; i++) {\n\t\tif (Object.prototype.hasOwnProperty.call(list, i)) {\n\t\t\tvar item = list[i];\n\t\t\tif (predicate.call(undefined, item, i, list)) {\n\t\t\t\treturn item;\n\t\t\t}\n\t\t}\n\t}\n}\n\n/**\n * \"Shallow freezes\" an object to render it immutable.\n * Uses `Object.freeze` if available,\n * otherwise the immutability is only in the type.\n *\n * Is used to create \"enum like\" objects.\n *\n * @template T\n * @param {T} object the object to freeze\n * @param {Pick<ObjectConstructor, 'freeze'> = Object} oc `Object` by default,\n * \t\t\t\tallows to inject custom object constructor for tests\n * @returns {Readonly<T>}\n *\n * @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/freeze\n */\nfunction freeze(object, oc) {\n\tif (oc === undefined) {\n\t\toc = Object\n\t}\n\treturn oc && typeof oc.freeze === 'function' ? oc.freeze(object) : object\n}\n\n/**\n * Since we can not rely on `Object.assign` we provide a simplified version\n * that is sufficient for our needs.\n *\n * @param {Object} target\n * @param {Object | null | undefined} source\n *\n * @returns {Object} target\n * @throws TypeError if target is not an object\n *\n * @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/assign\n * @see https://tc39.es/ecma262/multipage/fundamental-objects.html#sec-object.assign\n */\nfunction assign(target, source) {\n\tif (target === null || typeof target !== 'object') {\n\t\tthrow new TypeError('target is not an object')\n\t}\n\tfor (var key in source) {\n\t\tif (Object.prototype.hasOwnProperty.call(source, key)) {\n\t\t\ttarget[key] = source[key]\n\t\t}\n\t}\n\treturn target\n}\n\n/**\n * All mime types that are allowed as input to `DOMParser.parseFromString`\n *\n * @see https://developer.mozilla.org/en-US/docs/Web/API/DOMParser/parseFromString#Argument02 MDN\n * @see https://html.spec.whatwg.org/multipage/dynamic-markup-insertion.html#domparsersupportedtype WHATWG HTML Spec\n * @see DOMParser.prototype.parseFromString\n */\nvar MIME_TYPE = freeze({\n\t/**\n\t * `text/html`, the only mime type that triggers treating an XML document as HTML.\n\t *\n\t * @see DOMParser.SupportedType.isHTML\n\t * @see https://www.iana.org/assignments/media-types/text/html IANA MimeType registration\n\t * @see https://en.wikipedia.org/wiki/HTML Wikipedia\n\t * @see https://developer.mozilla.org/en-US/docs/Web/API/DOMParser/parseFromString MDN\n\t * @see https://html.spec.whatwg.org/multipage/dynamic-markup-insertion.html#dom-domparser-parsefromstring WHATWG HTML Spec\n\t */\n\tHTML: 'text/html',\n\n\t/**\n\t * Helper method to check a mime type if it indicates an HTML document\n\t *\n\t * @param {string} [value]\n\t * @returns {boolean}\n\t *\n\t * @see https://www.iana.org/assignments/media-types/text/html IANA MimeType registration\n\t * @see https://en.wikipedia.org/wiki/HTML Wikipedia\n\t * @see https://developer.mozilla.org/en-US/docs/Web/API/DOMParser/parseFromString MDN\n\t * @see https://html.spec.whatwg.org/multipage/dynamic-markup-insertion.html#dom-domparser-parsefromstring \t */\n\tisHTML: function (value) {\n\t\treturn value === MIME_TYPE.HTML\n\t},\n\n\t/**\n\t * `application/xml`, the standard mime type for XML documents.\n\t *\n\t * @see https://www.iana.org/assignments/media-types/application/xml IANA MimeType registration\n\t * @see https://tools.ietf.org/html/rfc7303#section-9.1 RFC 7303\n\t * @see https://en.wikipedia.org/wiki/XML_and_MIME Wikipedia\n\t */\n\tXML_APPLICATION: 'application/xml',\n\n\t/**\n\t * `text/html`, an alias for `application/xml`.\n\t *\n\t * @see https://tools.ietf.org/html/rfc7303#section-9.2 RFC 7303\n\t * @see https://www.iana.org/assignments/media-types/text/xml IANA MimeType registration\n\t * @see https://en.wikipedia.org/wiki/XML_and_MIME Wikipedia\n\t */\n\tXML_TEXT: 'text/xml',\n\n\t/**\n\t * `application/xhtml+xml`, indicates an XML document that has the default HTML namespace,\n\t * but is parsed as an XML document.\n\t *\n\t * @see https://www.iana.org/assignments/media-types/application/xhtml+xml IANA MimeType registration\n\t * @see https://dom.spec.whatwg.org/#dom-domimplementation-createdocument WHATWG DOM Spec\n\t * @see https://en.wikipedia.org/wiki/XHTML Wikipedia\n\t */\n\tXML_XHTML_APPLICATION: 'application/xhtml+xml',\n\n\t/**\n\t * `image/svg+xml`,\n\t *\n\t * @see https://www.iana.org/assignments/media-types/image/svg+xml IANA MimeType registration\n\t * @see https://www.w3.org/TR/SVG11/ W3C SVG 1.1\n\t * @see https://en.wikipedia.org/wiki/Scalable_Vector_Graphics Wikipedia\n\t */\n\tXML_SVG_IMAGE: 'image/svg+xml',\n})\n\n/**\n * Namespaces that are used in this code base.\n *\n * @see http://www.w3.org/TR/REC-xml-names\n */\nvar NAMESPACE = freeze({\n\t/**\n\t * The XHTML namespace.\n\t *\n\t * @see http://www.w3.org/1999/xhtml\n\t */\n\tHTML: 'http://www.w3.org/1999/xhtml',\n\n\t/**\n\t * Checks if `uri` equals `NAMESPACE.HTML`.\n\t *\n\t * @param {string} [uri]\n\t *\n\t * @see NAMESPACE.HTML\n\t */\n\tisHTML: function (uri) {\n\t\treturn uri === NAMESPACE.HTML\n\t},\n\n\t/**\n\t * The SVG namespace.\n\t *\n\t * @see http://www.w3.org/2000/svg\n\t */\n\tSVG: 'http://www.w3.org/2000/svg',\n\n\t/**\n\t * The `xml:` namespace.\n\t *\n\t * @see http://www.w3.org/XML/1998/namespace\n\t */\n\tXML: 'http://www.w3.org/XML/1998/namespace',\n\n\t/**\n\t * The `xmlns:` namespace\n\t *\n\t * @see https://www.w3.org/2000/xmlns/\n\t */\n\tXMLNS: 'http://www.w3.org/2000/xmlns/',\n})\n\nexports.assign = assign;\nexports.find = find;\nexports.freeze = freeze;\nexports.MIME_TYPE = MIME_TYPE;\nexports.NAMESPACE = NAMESPACE;\n","var conventions = require(\"./conventions\");\nvar dom = require('./dom')\nvar entities = require('./entities');\nvar sax = require('./sax');\n\nvar DOMImplementation = dom.DOMImplementation;\n\nvar NAMESPACE = conventions.NAMESPACE;\n\nvar ParseError = sax.ParseError;\nvar XMLReader = sax.XMLReader;\n\n/**\n * Normalizes line ending according to https://www.w3.org/TR/xml11/#sec-line-ends:\n *\n * > XML parsed entities are often stored in computer files which,\n * > for editing convenience, are organized into lines.\n * > These lines are typically separated by some combination\n * > of the characters CARRIAGE RETURN (#xD) and LINE FEED (#xA).\n * >\n * > To simplify the tasks of applications, the XML processor must behave\n * > as if it normalized all line breaks in external parsed entities (including the document entity)\n * > on input, before parsing, by translating all of the following to a single #xA character:\n * >\n * > 1. the two-character sequence #xD #xA\n * > 2. the two-character sequence #xD #x85\n * > 3. the single character #x85\n * > 4. the single character #x2028\n * > 5. any #xD character that is not immediately followed by #xA or #x85.\n *\n * @param {string} input\n * @returns {string}\n */\nfunction normalizeLineEndings(input) {\n\treturn input\n\t\t.replace(/\\r[\\n\\u0085]/g, '\\n')\n\t\t.replace(/[\\r\\u0085\\u2028]/g, '\\n')\n}\n\n/**\n * @typedef Locator\n * @property {number} [columnNumber]\n * @property {number} [lineNumber]\n */\n\n/**\n * @typedef DOMParserOptions\n * @property {DOMHandler} [domBuilder]\n * @property {Function} [errorHandler]\n * @property {(string) => string} [normalizeLineEndings] used to replace line endings before parsing\n * \t\t\t\t\t\tdefaults to `normalizeLineEndings`\n * @property {Locator} [locator]\n * @property {Record<string, string>} [xmlns]\n *\n * @see normalizeLineEndings\n */\n\n/**\n * The DOMParser interface provides the ability to parse XML or HTML source code\n * from a string into a DOM `Document`.\n *\n * _xmldom is different from the spec in that it allows an `options` parameter,\n * to override the default behavior._\n *\n * @param {DOMParserOptions} [options]\n * @constructor\n *\n * @see https://developer.mozilla.org/en-US/docs/Web/API/DOMParser\n * @see https://html.spec.whatwg.org/multipage/dynamic-markup-insertion.html#dom-parsing-and-serialization\n */\nfunction DOMParser(options){\n\tthis.options = options ||{locator:{}};\n}\n\nDOMParser.prototype.parseFromString = function(source,mimeType){\n\tvar options = this.options;\n\tvar sax =  new XMLReader();\n\tvar domBuilder = options.domBuilder || new DOMHandler();//contentHandler and LexicalHandler\n\tvar errorHandler = options.errorHandler;\n\tvar locator = options.locator;\n\tvar defaultNSMap = options.xmlns||{};\n\tvar isHTML = /\\/x?html?$/.test(mimeType);//mimeType.toLowerCase().indexOf('html') > -1;\n  \tvar entityMap = isHTML ? entities.HTML_ENTITIES : entities.XML_ENTITIES;\n\tif(locator){\n\t\tdomBuilder.setDocumentLocator(locator)\n\t}\n\n\tsax.errorHandler = buildErrorHandler(errorHandler,domBuilder,locator);\n\tsax.domBuilder = options.domBuilder || domBuilder;\n\tif(isHTML){\n\t\tdefaultNSMap[''] = NAMESPACE.HTML;\n\t}\n\tdefaultNSMap.xml = defaultNSMap.xml || NAMESPACE.XML;\n\tvar normalize = options.normalizeLineEndings || normalizeLineEndings;\n\tif (source && typeof source === 'string') {\n\t\tsax.parse(\n\t\t\tnormalize(source),\n\t\t\tdefaultNSMap,\n\t\t\tentityMap\n\t\t)\n\t} else {\n\t\tsax.errorHandler.error('invalid doc source')\n\t}\n\treturn domBuilder.doc;\n}\nfunction buildErrorHandler(errorImpl,domBuilder,locator){\n\tif(!errorImpl){\n\t\tif(domBuilder instanceof DOMHandler){\n\t\t\treturn domBuilder;\n\t\t}\n\t\terrorImpl = domBuilder ;\n\t}\n\tvar errorHandler = {}\n\tvar isCallback = errorImpl instanceof Function;\n\tlocator = locator||{}\n\tfunction build(key){\n\t\tvar fn = errorImpl[key];\n\t\tif(!fn && isCallback){\n\t\t\tfn = errorImpl.length == 2?function(msg){errorImpl(key,msg)}:errorImpl;\n\t\t}\n\t\terrorHandler[key] = fn && function(msg){\n\t\t\tfn('[xmldom '+key+']\\t'+msg+_locator(locator));\n\t\t}||function(){};\n\t}\n\tbuild('warning');\n\tbuild('error');\n\tbuild('fatalError');\n\treturn errorHandler;\n}\n\n//console.log('#\\n\\n\\n\\n\\n\\n\\n####')\n/**\n * +ContentHandler+ErrorHandler\n * +LexicalHandler+EntityResolver2\n * -DeclHandler-DTDHandler\n *\n * DefaultHandler:EntityResolver, DTDHandler, ContentHandler, ErrorHandler\n * DefaultHandler2:DefaultHandler,LexicalHandler, DeclHandler, EntityResolver2\n * @link http://www.saxproject.org/apidoc/org/xml/sax/helpers/DefaultHandler.html\n */\nfunction DOMHandler() {\n    this.cdata = false;\n}\nfunction position(locator,node){\n\tnode.lineNumber = locator.lineNumber;\n\tnode.columnNumber = locator.columnNumber;\n}\n/**\n * @see org.xml.sax.ContentHandler#startDocument\n * @link http://www.saxproject.org/apidoc/org/xml/sax/ContentHandler.html\n */\nDOMHandler.prototype = {\n\tstartDocument : function() {\n    \tthis.doc = new DOMImplementation().createDocument(null, null, null);\n    \tif (this.locator) {\n        \tthis.doc.documentURI = this.locator.systemId;\n    \t}\n\t},\n\tstartElement:function(namespaceURI, localName, qName, attrs) {\n\t\tvar doc = this.doc;\n\t    var el = doc.createElementNS(namespaceURI, qName||localName);\n\t    var len = attrs.length;\n\t    appendElement(this, el);\n\t    this.currentElement = el;\n\n\t\tthis.locator && position(this.locator,el)\n\t    for (var i = 0 ; i < len; i++) {\n\t        var namespaceURI = attrs.getURI(i);\n\t        var value = attrs.getValue(i);\n\t        var qName = attrs.getQName(i);\n\t\t\tvar attr = doc.createAttributeNS(namespaceURI, qName);\n\t\t\tthis.locator &&position(attrs.getLocator(i),attr);\n\t\t\tattr.value = attr.nodeValue = value;\n\t\t\tel.setAttributeNode(attr)\n\t    }\n\t},\n\tendElement:function(namespaceURI, localName, qName) {\n\t\tvar current = this.currentElement\n\t\tvar tagName = current.tagName;\n\t\tthis.currentElement = current.parentNode;\n\t},\n\tstartPrefixMapping:function(prefix, uri) {\n\t},\n\tendPrefixMapping:function(prefix) {\n\t},\n\tprocessingInstruction:function(target, data) {\n\t    var ins = this.doc.createProcessingInstruction(target, data);\n\t    this.locator && position(this.locator,ins)\n\t    appendElement(this, ins);\n\t},\n\tignorableWhitespace:function(ch, start, length) {\n\t},\n\tcharacters:function(chars, start, length) {\n\t\tchars = _toString.apply(this,arguments)\n\t\t//console.log(chars)\n\t\tif(chars){\n\t\t\tif (this.cdata) {\n\t\t\t\tvar charNode = this.doc.createCDATASection(chars);\n\t\t\t} else {\n\t\t\t\tvar charNode = this.doc.createTextNode(chars);\n\t\t\t}\n\t\t\tif(this.currentElement){\n\t\t\t\tthis.currentElement.appendChild(charNode);\n\t\t\t}else if(/^\\s*$/.test(chars)){\n\t\t\t\tthis.doc.appendChild(charNode);\n\t\t\t\t//process xml\n\t\t\t}\n\t\t\tthis.locator && position(this.locator,charNode)\n\t\t}\n\t},\n\tskippedEntity:function(name) {\n\t},\n\tendDocument:function() {\n\t\tthis.doc.normalize();\n\t},\n\tsetDocumentLocator:function (locator) {\n\t    if(this.locator = locator){// && !('lineNumber' in locator)){\n\t    \tlocator.lineNumber = 0;\n\t    }\n\t},\n\t//LexicalHandler\n\tcomment:function(chars, start, length) {\n\t\tchars = _toString.apply(this,arguments)\n\t    var comm = this.doc.createComment(chars);\n\t    this.locator && position(this.locator,comm)\n\t    appendElement(this, comm);\n\t},\n\n\tstartCDATA:function() {\n\t    //used in characters() methods\n\t    this.cdata = true;\n\t},\n\tendCDATA:function() {\n\t    this.cdata = false;\n\t},\n\n\tstartDTD:function(name, publicId, systemId) {\n\t\tvar impl = this.doc.implementation;\n\t    if (impl && impl.createDocumentType) {\n\t        var dt = impl.createDocumentType(name, publicId, systemId);\n\t        this.locator && position(this.locator,dt)\n\t        appendElement(this, dt);\n\t\t\t\t\tthis.doc.doctype = dt;\n\t    }\n\t},\n\t/**\n\t * @see org.xml.sax.ErrorHandler\n\t * @link http://www.saxproject.org/apidoc/org/xml/sax/ErrorHandler.html\n\t */\n\twarning:function(error) {\n\t\tconsole.warn('[xmldom warning]\\t'+error,_locator(this.locator));\n\t},\n\terror:function(error) {\n\t\tconsole.error('[xmldom error]\\t'+error,_locator(this.locator));\n\t},\n\tfatalError:function(error) {\n\t\tthrow new ParseError(error, this.locator);\n\t}\n}\nfunction _locator(l){\n\tif(l){\n\t\treturn '\\n@'+(l.systemId ||'')+'#[line:'+l.lineNumber+',col:'+l.columnNumber+']'\n\t}\n}\nfunction _toString(chars,start,length){\n\tif(typeof chars == 'string'){\n\t\treturn chars.substr(start,length)\n\t}else{//java sax connect width xmldom on rhino(what about: \"? && !(chars instanceof String)\")\n\t\tif(chars.length >= start+length || start){\n\t\t\treturn new java.lang.String(chars,start,length)+'';\n\t\t}\n\t\treturn chars;\n\t}\n}\n\n/*\n * @link http://www.saxproject.org/apidoc/org/xml/sax/ext/LexicalHandler.html\n * used method of org.xml.sax.ext.LexicalHandler:\n *  #comment(chars, start, length)\n *  #startCDATA()\n *  #endCDATA()\n *  #startDTD(name, publicId, systemId)\n *\n *\n * IGNORED method of org.xml.sax.ext.LexicalHandler:\n *  #endDTD()\n *  #startEntity(name)\n *  #endEntity(name)\n *\n *\n * @link http://www.saxproject.org/apidoc/org/xml/sax/ext/DeclHandler.html\n * IGNORED method of org.xml.sax.ext.DeclHandler\n * \t#attributeDecl(eName, aName, type, mode, value)\n *  #elementDecl(name, model)\n *  #externalEntityDecl(name, publicId, systemId)\n *  #internalEntityDecl(name, value)\n * @link http://www.saxproject.org/apidoc/org/xml/sax/ext/EntityResolver2.html\n * IGNORED method of org.xml.sax.EntityResolver2\n *  #resolveEntity(String name,String publicId,String baseURI,String systemId)\n *  #resolveEntity(publicId, systemId)\n *  #getExternalSubset(name, baseURI)\n * @link http://www.saxproject.org/apidoc/org/xml/sax/DTDHandler.html\n * IGNORED method of org.xml.sax.DTDHandler\n *  #notationDecl(name, publicId, systemId) {};\n *  #unparsedEntityDecl(name, publicId, systemId, notationName) {};\n */\n\"endDTD,startEntity,endEntity,attributeDecl,elementDecl,externalEntityDecl,internalEntityDecl,resolveEntity,getExternalSubset,notationDecl,unparsedEntityDecl\".replace(/\\w+/g,function(key){\n\tDOMHandler.prototype[key] = function(){return null}\n})\n\n/* Private static helpers treated below as private instance methods, so don't need to add these to the public API; we might use a Relator to also get rid of non-standard public properties */\nfunction appendElement (hander,node) {\n    if (!hander.currentElement) {\n        hander.doc.appendChild(node);\n    } else {\n        hander.currentElement.appendChild(node);\n    }\n}//appendChild and setAttributeNS are preformance key\n\nexports.__DOMHandler = DOMHandler;\nexports.normalizeLineEndings = normalizeLineEndings;\nexports.DOMParser = DOMParser;\n","var conventions = require(\"./conventions\");\n\nvar find = conventions.find;\nvar NAMESPACE = conventions.NAMESPACE;\n\n/**\n * A prerequisite for `[].filter`, to drop elements that are empty\n * @param {string} input\n * @returns {boolean}\n */\nfunction notEmptyString (input) {\n\treturn input !== ''\n}\n/**\n * @see https://infra.spec.whatwg.org/#split-on-ascii-whitespace\n * @see https://infra.spec.whatwg.org/#ascii-whitespace\n *\n * @param {string} input\n * @returns {string[]} (can be empty)\n */\nfunction splitOnASCIIWhitespace(input) {\n\t// U+0009 TAB, U+000A LF, U+000C FF, U+000D CR, U+0020 SPACE\n\treturn input ? input.split(/[\\t\\n\\f\\r ]+/).filter(notEmptyString) : []\n}\n\n/**\n * Adds element as a key to current if it is not already present.\n *\n * @param {Record<string, boolean | undefined>} current\n * @param {string} element\n * @returns {Record<string, boolean | undefined>}\n */\nfunction orderedSetReducer (current, element) {\n\tif (!current.hasOwnProperty(element)) {\n\t\tcurrent[element] = true;\n\t}\n\treturn current;\n}\n\n/**\n * @see https://infra.spec.whatwg.org/#ordered-set\n * @param {string} input\n * @returns {string[]}\n */\nfunction toOrderedSet(input) {\n\tif (!input) return [];\n\tvar list = splitOnASCIIWhitespace(input);\n\treturn Object.keys(list.reduce(orderedSetReducer, {}))\n}\n\n/**\n * Uses `list.indexOf` to implement something like `Array.prototype.includes`,\n * which we can not rely on being available.\n *\n * @param {any[]} list\n * @returns {function(any): boolean}\n */\nfunction arrayIncludes (list) {\n\treturn function(element) {\n\t\treturn list && list.indexOf(element) !== -1;\n\t}\n}\n\nfunction copy(src,dest){\n\tfor(var p in src){\n\t\tif (Object.prototype.hasOwnProperty.call(src, p)) {\n\t\t\tdest[p] = src[p];\n\t\t}\n\t}\n}\n\n/**\n^\\w+\\.prototype\\.([_\\w]+)\\s*=\\s*((?:.*\\{\\s*?[\\r\\n][\\s\\S]*?^})|\\S.*?(?=[;\\r\\n]));?\n^\\w+\\.prototype\\.([_\\w]+)\\s*=\\s*(\\S.*?(?=[;\\r\\n]));?\n */\nfunction _extends(Class,Super){\n\tvar pt = Class.prototype;\n\tif(!(pt instanceof Super)){\n\t\tfunction t(){};\n\t\tt.prototype = Super.prototype;\n\t\tt = new t();\n\t\tcopy(pt,t);\n\t\tClass.prototype = pt = t;\n\t}\n\tif(pt.constructor != Class){\n\t\tif(typeof Class != 'function'){\n\t\t\tconsole.error(\"unknown Class:\"+Class)\n\t\t}\n\t\tpt.constructor = Class\n\t}\n}\n\n// Node Types\nvar NodeType = {}\nvar ELEMENT_NODE                = NodeType.ELEMENT_NODE                = 1;\nvar ATTRIBUTE_NODE              = NodeType.ATTRIBUTE_NODE              = 2;\nvar TEXT_NODE                   = NodeType.TEXT_NODE                   = 3;\nvar CDATA_SECTION_NODE          = NodeType.CDATA_SECTION_NODE          = 4;\nvar ENTITY_REFERENCE_NODE       = NodeType.ENTITY_REFERENCE_NODE       = 5;\nvar ENTITY_NODE                 = NodeType.ENTITY_NODE                 = 6;\nvar PROCESSING_INSTRUCTION_NODE = NodeType.PROCESSING_INSTRUCTION_NODE = 7;\nvar COMMENT_NODE                = NodeType.COMMENT_NODE                = 8;\nvar DOCUMENT_NODE               = NodeType.DOCUMENT_NODE               = 9;\nvar DOCUMENT_TYPE_NODE          = NodeType.DOCUMENT_TYPE_NODE          = 10;\nvar DOCUMENT_FRAGMENT_NODE      = NodeType.DOCUMENT_FRAGMENT_NODE      = 11;\nvar NOTATION_NODE               = NodeType.NOTATION_NODE               = 12;\n\n// ExceptionCode\nvar ExceptionCode = {}\nvar ExceptionMessage = {};\nvar INDEX_SIZE_ERR              = ExceptionCode.INDEX_SIZE_ERR              = ((ExceptionMessage[1]=\"Index size error\"),1);\nvar DOMSTRING_SIZE_ERR          = ExceptionCode.DOMSTRING_SIZE_ERR          = ((ExceptionMessage[2]=\"DOMString size error\"),2);\nvar HIERARCHY_REQUEST_ERR       = ExceptionCode.HIERARCHY_REQUEST_ERR       = ((ExceptionMessage[3]=\"Hierarchy request error\"),3);\nvar WRONG_DOCUMENT_ERR          = ExceptionCode.WRONG_DOCUMENT_ERR          = ((ExceptionMessage[4]=\"Wrong document\"),4);\nvar INVALID_CHARACTER_ERR       = ExceptionCode.INVALID_CHARACTER_ERR       = ((ExceptionMessage[5]=\"Invalid character\"),5);\nvar NO_DATA_ALLOWED_ERR         = ExceptionCode.NO_DATA_ALLOWED_ERR         = ((ExceptionMessage[6]=\"No data allowed\"),6);\nvar NO_MODIFICATION_ALLOWED_ERR = ExceptionCode.NO_MODIFICATION_ALLOWED_ERR = ((ExceptionMessage[7]=\"No modification allowed\"),7);\nvar NOT_FOUND_ERR               = ExceptionCode.NOT_FOUND_ERR               = ((ExceptionMessage[8]=\"Not found\"),8);\nvar NOT_SUPPORTED_ERR           = ExceptionCode.NOT_SUPPORTED_ERR           = ((ExceptionMessage[9]=\"Not supported\"),9);\nvar INUSE_ATTRIBUTE_ERR         = ExceptionCode.INUSE_ATTRIBUTE_ERR         = ((ExceptionMessage[10]=\"Attribute in use\"),10);\n//level2\nvar INVALID_STATE_ERR        \t= ExceptionCode.INVALID_STATE_ERR        \t= ((ExceptionMessage[11]=\"Invalid state\"),11);\nvar SYNTAX_ERR               \t= ExceptionCode.SYNTAX_ERR               \t= ((ExceptionMessage[12]=\"Syntax error\"),12);\nvar INVALID_MODIFICATION_ERR \t= ExceptionCode.INVALID_MODIFICATION_ERR \t= ((ExceptionMessage[13]=\"Invalid modification\"),13);\nvar NAMESPACE_ERR            \t= ExceptionCode.NAMESPACE_ERR           \t= ((ExceptionMessage[14]=\"Invalid namespace\"),14);\nvar INVALID_ACCESS_ERR       \t= ExceptionCode.INVALID_ACCESS_ERR      \t= ((ExceptionMessage[15]=\"Invalid access\"),15);\n\n/**\n * DOM Level 2\n * Object DOMException\n * @see http://www.w3.org/TR/2000/REC-DOM-Level-2-Core-20001113/ecma-script-binding.html\n * @see http://www.w3.org/TR/REC-DOM-Level-1/ecma-script-language-binding.html\n */\nfunction DOMException(code, message) {\n\tif(message instanceof Error){\n\t\tvar error = message;\n\t}else{\n\t\terror = this;\n\t\tError.call(this, ExceptionMessage[code]);\n\t\tthis.message = ExceptionMessage[code];\n\t\tif(Error.captureStackTrace) Error.captureStackTrace(this, DOMException);\n\t}\n\terror.code = code;\n\tif(message) this.message = this.message + \": \" + message;\n\treturn error;\n};\nDOMException.prototype = Error.prototype;\ncopy(ExceptionCode,DOMException)\n\n/**\n * @see http://www.w3.org/TR/2000/REC-DOM-Level-2-Core-20001113/core.html#ID-536297177\n * The NodeList interface provides the abstraction of an ordered collection of nodes, without defining or constraining how this collection is implemented. NodeList objects in the DOM are live.\n * The items in the NodeList are accessible via an integral index, starting from 0.\n */\nfunction NodeList() {\n};\nNodeList.prototype = {\n\t/**\n\t * The number of nodes in the list. The range of valid child node indices is 0 to length-1 inclusive.\n\t * @standard level1\n\t */\n\tlength:0,\n\t/**\n\t * Returns the indexth item in the collection. If index is greater than or equal to the number of nodes in the list, this returns null.\n\t * @standard level1\n\t * @param index  unsigned long\n\t *   Index into the collection.\n\t * @return Node\n\t * \tThe node at the indexth position in the NodeList, or null if that is not a valid index.\n\t */\n\titem: function(index) {\n\t\treturn index >= 0 && index < this.length ? this[index] : null;\n\t},\n\ttoString:function(isHTML,nodeFilter){\n\t\tfor(var buf = [], i = 0;i<this.length;i++){\n\t\t\tserializeToString(this[i],buf,isHTML,nodeFilter);\n\t\t}\n\t\treturn buf.join('');\n\t},\n\t/**\n\t * @private\n\t * @param {function (Node):boolean} predicate\n\t * @returns {Node[]}\n\t */\n\tfilter: function (predicate) {\n\t\treturn Array.prototype.filter.call(this, predicate);\n\t},\n\t/**\n\t * @private\n\t * @param {Node} item\n\t * @returns {number}\n\t */\n\tindexOf: function (item) {\n\t\treturn Array.prototype.indexOf.call(this, item);\n\t},\n};\n\nfunction LiveNodeList(node,refresh){\n\tthis._node = node;\n\tthis._refresh = refresh\n\t_updateLiveList(this);\n}\nfunction _updateLiveList(list){\n\tvar inc = list._node._inc || list._node.ownerDocument._inc;\n\tif (list._inc !== inc) {\n\t\tvar ls = list._refresh(list._node);\n\t\t__set__(list,'length',ls.length);\n\t\tif (!list.$$length || ls.length < list.$$length) {\n\t\t\tfor (var i = ls.length; i in list; i++) {\n\t\t\t\tif (Object.prototype.hasOwnProperty.call(list, i)) {\n\t\t\t\t\tdelete list[i];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tcopy(ls,list);\n\t\tlist._inc = inc;\n\t}\n}\nLiveNodeList.prototype.item = function(i){\n\t_updateLiveList(this);\n\treturn this[i] || null;\n}\n\n_extends(LiveNodeList,NodeList);\n\n/**\n * Objects implementing the NamedNodeMap interface are used\n * to represent collections of nodes that can be accessed by name.\n * Note that NamedNodeMap does not inherit from NodeList;\n * NamedNodeMaps are not maintained in any particular order.\n * Objects contained in an object implementing NamedNodeMap may also be accessed by an ordinal index,\n * but this is simply to allow convenient enumeration of the contents of a NamedNodeMap,\n * and does not imply that the DOM specifies an order to these Nodes.\n * NamedNodeMap objects in the DOM are live.\n * used for attributes or DocumentType entities\n */\nfunction NamedNodeMap() {\n};\n\nfunction _findNodeIndex(list,node){\n\tvar i = list.length;\n\twhile(i--){\n\t\tif(list[i] === node){return i}\n\t}\n}\n\nfunction _addNamedNode(el,list,newAttr,oldAttr){\n\tif(oldAttr){\n\t\tlist[_findNodeIndex(list,oldAttr)] = newAttr;\n\t}else{\n\t\tlist[list.length++] = newAttr;\n\t}\n\tif(el){\n\t\tnewAttr.ownerElement = el;\n\t\tvar doc = el.ownerDocument;\n\t\tif(doc){\n\t\t\toldAttr && _onRemoveAttribute(doc,el,oldAttr);\n\t\t\t_onAddAttribute(doc,el,newAttr);\n\t\t}\n\t}\n}\nfunction _removeNamedNode(el,list,attr){\n\t//console.log('remove attr:'+attr)\n\tvar i = _findNodeIndex(list,attr);\n\tif(i>=0){\n\t\tvar lastIndex = list.length-1\n\t\twhile(i<lastIndex){\n\t\t\tlist[i] = list[++i]\n\t\t}\n\t\tlist.length = lastIndex;\n\t\tif(el){\n\t\t\tvar doc = el.ownerDocument;\n\t\t\tif(doc){\n\t\t\t\t_onRemoveAttribute(doc,el,attr);\n\t\t\t\tattr.ownerElement = null;\n\t\t\t}\n\t\t}\n\t}else{\n\t\tthrow new DOMException(NOT_FOUND_ERR,new Error(el.tagName+'@'+attr))\n\t}\n}\nNamedNodeMap.prototype = {\n\tlength:0,\n\titem:NodeList.prototype.item,\n\tgetNamedItem: function(key) {\n//\t\tif(key.indexOf(':')>0 || key == 'xmlns'){\n//\t\t\treturn null;\n//\t\t}\n\t\t//console.log()\n\t\tvar i = this.length;\n\t\twhile(i--){\n\t\t\tvar attr = this[i];\n\t\t\t//console.log(attr.nodeName,key)\n\t\t\tif(attr.nodeName == key){\n\t\t\t\treturn attr;\n\t\t\t}\n\t\t}\n\t},\n\tsetNamedItem: function(attr) {\n\t\tvar el = attr.ownerElement;\n\t\tif(el && el!=this._ownerElement){\n\t\t\tthrow new DOMException(INUSE_ATTRIBUTE_ERR);\n\t\t}\n\t\tvar oldAttr = this.getNamedItem(attr.nodeName);\n\t\t_addNamedNode(this._ownerElement,this,attr,oldAttr);\n\t\treturn oldAttr;\n\t},\n\t/* returns Node */\n\tsetNamedItemNS: function(attr) {// raises: WRONG_DOCUMENT_ERR,NO_MODIFICATION_ALLOWED_ERR,INUSE_ATTRIBUTE_ERR\n\t\tvar el = attr.ownerElement, oldAttr;\n\t\tif(el && el!=this._ownerElement){\n\t\t\tthrow new DOMException(INUSE_ATTRIBUTE_ERR);\n\t\t}\n\t\toldAttr = this.getNamedItemNS(attr.namespaceURI,attr.localName);\n\t\t_addNamedNode(this._ownerElement,this,attr,oldAttr);\n\t\treturn oldAttr;\n\t},\n\n\t/* returns Node */\n\tremoveNamedItem: function(key) {\n\t\tvar attr = this.getNamedItem(key);\n\t\t_removeNamedNode(this._ownerElement,this,attr);\n\t\treturn attr;\n\n\n\t},// raises: NOT_FOUND_ERR,NO_MODIFICATION_ALLOWED_ERR\n\n\t//for level2\n\tremoveNamedItemNS:function(namespaceURI,localName){\n\t\tvar attr = this.getNamedItemNS(namespaceURI,localName);\n\t\t_removeNamedNode(this._ownerElement,this,attr);\n\t\treturn attr;\n\t},\n\tgetNamedItemNS: function(namespaceURI, localName) {\n\t\tvar i = this.length;\n\t\twhile(i--){\n\t\t\tvar node = this[i];\n\t\t\tif(node.localName == localName && node.namespaceURI == namespaceURI){\n\t\t\t\treturn node;\n\t\t\t}\n\t\t}\n\t\treturn null;\n\t}\n};\n\n/**\n * The DOMImplementation interface represents an object providing methods\n * which are not dependent on any particular document.\n * Such an object is returned by the `Document.implementation` property.\n *\n * __The individual methods describe the differences compared to the specs.__\n *\n * @constructor\n *\n * @see https://developer.mozilla.org/en-US/docs/Web/API/DOMImplementation MDN\n * @see https://www.w3.org/TR/REC-DOM-Level-1/level-one-core.html#ID-102161490 DOM Level 1 Core (Initial)\n * @see https://www.w3.org/TR/DOM-Level-2-Core/core.html#ID-102161490 DOM Level 2 Core\n * @see https://www.w3.org/TR/DOM-Level-3-Core/core.html#ID-102161490 DOM Level 3 Core\n * @see https://dom.spec.whatwg.org/#domimplementation DOM Living Standard\n */\nfunction DOMImplementation() {\n}\n\nDOMImplementation.prototype = {\n\t/**\n\t * The DOMImplementation.hasFeature() method returns a Boolean flag indicating if a given feature is supported.\n\t * The different implementations fairly diverged in what kind of features were reported.\n\t * The latest version of the spec settled to force this method to always return true, where the functionality was accurate and in use.\n\t *\n\t * @deprecated It is deprecated and modern browsers return true in all cases.\n\t *\n\t * @param {string} feature\n\t * @param {string} [version]\n\t * @returns {boolean} always true\n\t *\n\t * @see https://developer.mozilla.org/en-US/docs/Web/API/DOMImplementation/hasFeature MDN\n\t * @see https://www.w3.org/TR/REC-DOM-Level-1/level-one-core.html#ID-5CED94D7 DOM Level 1 Core\n\t * @see https://dom.spec.whatwg.org/#dom-domimplementation-hasfeature DOM Living Standard\n\t */\n\thasFeature: function(feature, version) {\n\t\t\treturn true;\n\t},\n\t/**\n\t * Creates an XML Document object of the specified type with its document element.\n\t *\n\t * __It behaves slightly different from the description in the living standard__:\n\t * - There is no interface/class `XMLDocument`, it returns a `Document` instance.\n\t * - `contentType`, `encoding`, `mode`, `origin`, `url` fields are currently not declared.\n\t * - this implementation is not validating names or qualified names\n\t *   (when parsing XML strings, the SAX parser takes care of that)\n\t *\n\t * @param {string|null} namespaceURI\n\t * @param {string} qualifiedName\n\t * @param {DocumentType=null} doctype\n\t * @returns {Document}\n\t *\n\t * @see https://developer.mozilla.org/en-US/docs/Web/API/DOMImplementation/createDocument MDN\n\t * @see https://www.w3.org/TR/DOM-Level-2-Core/core.html#Level-2-Core-DOM-createDocument DOM Level 2 Core (initial)\n\t * @see https://dom.spec.whatwg.org/#dom-domimplementation-createdocument  DOM Level 2 Core\n\t *\n\t * @see https://dom.spec.whatwg.org/#validate-and-extract DOM: Validate and extract\n\t * @see https://www.w3.org/TR/xml/#NT-NameStartChar XML Spec: Names\n\t * @see https://www.w3.org/TR/xml-names/#ns-qualnames XML Namespaces: Qualified names\n\t */\n\tcreateDocument: function(namespaceURI,  qualifiedName, doctype){\n\t\tvar doc = new Document();\n\t\tdoc.implementation = this;\n\t\tdoc.childNodes = new NodeList();\n\t\tdoc.doctype = doctype || null;\n\t\tif (doctype){\n\t\t\tdoc.appendChild(doctype);\n\t\t}\n\t\tif (qualifiedName){\n\t\t\tvar root = doc.createElementNS(namespaceURI, qualifiedName);\n\t\t\tdoc.appendChild(root);\n\t\t}\n\t\treturn doc;\n\t},\n\t/**\n\t * Returns a doctype, with the given `qualifiedName`, `publicId`, and `systemId`.\n\t *\n\t * __This behavior is slightly different from the in the specs__:\n\t * - this implementation is not validating names or qualified names\n\t *   (when parsing XML strings, the SAX parser takes care of that)\n\t *\n\t * @param {string} qualifiedName\n\t * @param {string} [publicId]\n\t * @param {string} [systemId]\n\t * @returns {DocumentType} which can either be used with `DOMImplementation.createDocument` upon document creation\n\t * \t\t\t\t  or can be put into the document via methods like `Node.insertBefore()` or `Node.replaceChild()`\n\t *\n\t * @see https://developer.mozilla.org/en-US/docs/Web/API/DOMImplementation/createDocumentType MDN\n\t * @see https://www.w3.org/TR/DOM-Level-2-Core/core.html#Level-2-Core-DOM-createDocType DOM Level 2 Core\n\t * @see https://dom.spec.whatwg.org/#dom-domimplementation-createdocumenttype DOM Living Standard\n\t *\n\t * @see https://dom.spec.whatwg.org/#validate-and-extract DOM: Validate and extract\n\t * @see https://www.w3.org/TR/xml/#NT-NameStartChar XML Spec: Names\n\t * @see https://www.w3.org/TR/xml-names/#ns-qualnames XML Namespaces: Qualified names\n\t */\n\tcreateDocumentType: function(qualifiedName, publicId, systemId){\n\t\tvar node = new DocumentType();\n\t\tnode.name = qualifiedName;\n\t\tnode.nodeName = qualifiedName;\n\t\tnode.publicId = publicId || '';\n\t\tnode.systemId = systemId || '';\n\n\t\treturn node;\n\t}\n};\n\n\n/**\n * @see http://www.w3.org/TR/2000/REC-DOM-Level-2-Core-20001113/core.html#ID-1950641247\n */\n\nfunction Node() {\n};\n\nNode.prototype = {\n\tfirstChild : null,\n\tlastChild : null,\n\tpreviousSibling : null,\n\tnextSibling : null,\n\tattributes : null,\n\tparentNode : null,\n\tchildNodes : null,\n\townerDocument : null,\n\tnodeValue : null,\n\tnamespaceURI : null,\n\tprefix : null,\n\tlocalName : null,\n\t// Modified in DOM Level 2:\n\tinsertBefore:function(newChild, refChild){//raises\n\t\treturn _insertBefore(this,newChild,refChild);\n\t},\n\treplaceChild:function(newChild, oldChild){//raises\n\t\t_insertBefore(this, newChild,oldChild, assertPreReplacementValidityInDocument);\n\t\tif(oldChild){\n\t\t\tthis.removeChild(oldChild);\n\t\t}\n\t},\n\tremoveChild:function(oldChild){\n\t\treturn _removeChild(this,oldChild);\n\t},\n\tappendChild:function(newChild){\n\t\treturn this.insertBefore(newChild,null);\n\t},\n\thasChildNodes:function(){\n\t\treturn this.firstChild != null;\n\t},\n\tcloneNode:function(deep){\n\t\treturn cloneNode(this.ownerDocument||this,this,deep);\n\t},\n\t// Modified in DOM Level 2:\n\tnormalize:function(){\n\t\tvar child = this.firstChild;\n\t\twhile(child){\n\t\t\tvar next = child.nextSibling;\n\t\t\tif(next && next.nodeType == TEXT_NODE && child.nodeType == TEXT_NODE){\n\t\t\t\tthis.removeChild(next);\n\t\t\t\tchild.appendData(next.data);\n\t\t\t}else{\n\t\t\t\tchild.normalize();\n\t\t\t\tchild = next;\n\t\t\t}\n\t\t}\n\t},\n  \t// Introduced in DOM Level 2:\n\tisSupported:function(feature, version){\n\t\treturn this.ownerDocument.implementation.hasFeature(feature,version);\n\t},\n    // Introduced in DOM Level 2:\n    hasAttributes:function(){\n    \treturn this.attributes.length>0;\n    },\n\t/**\n\t * Look up the prefix associated to the given namespace URI, starting from this node.\n\t * **The default namespace declarations are ignored by this method.**\n\t * See Namespace Prefix Lookup for details on the algorithm used by this method.\n\t *\n\t * _Note: The implementation seems to be incomplete when compared to the algorithm described in the specs._\n\t *\n\t * @param {string | null} namespaceURI\n\t * @returns {string | null}\n\t * @see https://www.w3.org/TR/DOM-Level-3-Core/core.html#Node3-lookupNamespacePrefix\n\t * @see https://www.w3.org/TR/DOM-Level-3-Core/namespaces-algorithms.html#lookupNamespacePrefixAlgo\n\t * @see https://dom.spec.whatwg.org/#dom-node-lookupprefix\n\t * @see https://github.com/xmldom/xmldom/issues/322\n\t */\n    lookupPrefix:function(namespaceURI){\n    \tvar el = this;\n    \twhile(el){\n    \t\tvar map = el._nsMap;\n    \t\t//console.dir(map)\n    \t\tif(map){\n    \t\t\tfor(var n in map){\n\t\t\t\t\t\tif (Object.prototype.hasOwnProperty.call(map, n) && map[n] === namespaceURI) {\n\t\t\t\t\t\t\treturn n;\n\t\t\t\t\t\t}\n    \t\t\t}\n    \t\t}\n    \t\tel = el.nodeType == ATTRIBUTE_NODE?el.ownerDocument : el.parentNode;\n    \t}\n    \treturn null;\n    },\n    // Introduced in DOM Level 3:\n    lookupNamespaceURI:function(prefix){\n    \tvar el = this;\n    \twhile(el){\n    \t\tvar map = el._nsMap;\n    \t\t//console.dir(map)\n    \t\tif(map){\n    \t\t\tif(Object.prototype.hasOwnProperty.call(map, prefix)){\n    \t\t\t\treturn map[prefix] ;\n    \t\t\t}\n    \t\t}\n    \t\tel = el.nodeType == ATTRIBUTE_NODE?el.ownerDocument : el.parentNode;\n    \t}\n    \treturn null;\n    },\n    // Introduced in DOM Level 3:\n    isDefaultNamespace:function(namespaceURI){\n    \tvar prefix = this.lookupPrefix(namespaceURI);\n    \treturn prefix == null;\n    }\n};\n\n\nfunction _xmlEncoder(c){\n\treturn c == '<' && '&lt;' ||\n         c == '>' && '&gt;' ||\n         c == '&' && '&amp;' ||\n         c == '\"' && '&quot;' ||\n         '&#'+c.charCodeAt()+';'\n}\n\n\ncopy(NodeType,Node);\ncopy(NodeType,Node.prototype);\n\n/**\n * @param callback return true for continue,false for break\n * @return boolean true: break visit;\n */\nfunction _visitNode(node,callback){\n\tif(callback(node)){\n\t\treturn true;\n\t}\n\tif(node = node.firstChild){\n\t\tdo{\n\t\t\tif(_visitNode(node,callback)){return true}\n        }while(node=node.nextSibling)\n    }\n}\n\n\n\nfunction Document(){\n\tthis.ownerDocument = this;\n}\n\nfunction _onAddAttribute(doc,el,newAttr){\n\tdoc && doc._inc++;\n\tvar ns = newAttr.namespaceURI ;\n\tif(ns === NAMESPACE.XMLNS){\n\t\t//update namespace\n\t\tel._nsMap[newAttr.prefix?newAttr.localName:''] = newAttr.value\n\t}\n}\n\nfunction _onRemoveAttribute(doc,el,newAttr,remove){\n\tdoc && doc._inc++;\n\tvar ns = newAttr.namespaceURI ;\n\tif(ns === NAMESPACE.XMLNS){\n\t\t//update namespace\n\t\tdelete el._nsMap[newAttr.prefix?newAttr.localName:'']\n\t}\n}\n\n/**\n * Updates `el.childNodes`, updating the indexed items and it's `length`.\n * Passing `newChild` means it will be appended.\n * Otherwise it's assumed that an item has been removed,\n * and `el.firstNode` and it's `.nextSibling` are used\n * to walk the current list of child nodes.\n *\n * @param {Document} doc\n * @param {Node} el\n * @param {Node} [newChild]\n * @private\n */\nfunction _onUpdateChild (doc, el, newChild) {\n\tif(doc && doc._inc){\n\t\tdoc._inc++;\n\t\t//update childNodes\n\t\tvar cs = el.childNodes;\n\t\tif (newChild) {\n\t\t\tcs[cs.length++] = newChild;\n\t\t} else {\n\t\t\tvar child = el.firstChild;\n\t\t\tvar i = 0;\n\t\t\twhile (child) {\n\t\t\t\tcs[i++] = child;\n\t\t\t\tchild = child.nextSibling;\n\t\t\t}\n\t\t\tcs.length = i;\n\t\t\tdelete cs[cs.length];\n\t\t}\n\t}\n}\n\n/**\n * Removes the connections between `parentNode` and `child`\n * and any existing `child.previousSibling` or `child.nextSibling`.\n *\n * @see https://github.com/xmldom/xmldom/issues/135\n * @see https://github.com/xmldom/xmldom/issues/145\n *\n * @param {Node} parentNode\n * @param {Node} child\n * @returns {Node} the child that was removed.\n * @private\n */\nfunction _removeChild (parentNode, child) {\n\tvar previous = child.previousSibling;\n\tvar next = child.nextSibling;\n\tif (previous) {\n\t\tprevious.nextSibling = next;\n\t} else {\n\t\tparentNode.firstChild = next;\n\t}\n\tif (next) {\n\t\tnext.previousSibling = previous;\n\t} else {\n\t\tparentNode.lastChild = previous;\n\t}\n\tchild.parentNode = null;\n\tchild.previousSibling = null;\n\tchild.nextSibling = null;\n\t_onUpdateChild(parentNode.ownerDocument, parentNode);\n\treturn child;\n}\n\n/**\n * Returns `true` if `node` can be a parent for insertion.\n * @param {Node} node\n * @returns {boolean}\n */\nfunction hasValidParentNodeType(node) {\n\treturn (\n\t\tnode &&\n\t\t(node.nodeType === Node.DOCUMENT_NODE || node.nodeType === Node.DOCUMENT_FRAGMENT_NODE || node.nodeType === Node.ELEMENT_NODE)\n\t);\n}\n\n/**\n * Returns `true` if `node` can be inserted according to it's `nodeType`.\n * @param {Node} node\n * @returns {boolean}\n */\nfunction hasInsertableNodeType(node) {\n\treturn (\n\t\tnode &&\n\t\t(isElementNode(node) ||\n\t\t\tisTextNode(node) ||\n\t\t\tisDocTypeNode(node) ||\n\t\t\tnode.nodeType === Node.DOCUMENT_FRAGMENT_NODE ||\n\t\t\tnode.nodeType === Node.COMMENT_NODE ||\n\t\t\tnode.nodeType === Node.PROCESSING_INSTRUCTION_NODE)\n\t);\n}\n\n/**\n * Returns true if `node` is a DOCTYPE node\n * @param {Node} node\n * @returns {boolean}\n */\nfunction isDocTypeNode(node) {\n\treturn node && node.nodeType === Node.DOCUMENT_TYPE_NODE;\n}\n\n/**\n * Returns true if the node is an element\n * @param {Node} node\n * @returns {boolean}\n */\nfunction isElementNode(node) {\n\treturn node && node.nodeType === Node.ELEMENT_NODE;\n}\n/**\n * Returns true if `node` is a text node\n * @param {Node} node\n * @returns {boolean}\n */\nfunction isTextNode(node) {\n\treturn node && node.nodeType === Node.TEXT_NODE;\n}\n\n/**\n * Check if en element node can be inserted before `child`, or at the end if child is falsy,\n * according to the presence and position of a doctype node on the same level.\n *\n * @param {Document} doc The document node\n * @param {Node} child the node that would become the nextSibling if the element would be inserted\n * @returns {boolean} `true` if an element can be inserted before child\n * @private\n * https://dom.spec.whatwg.org/#concept-node-ensure-pre-insertion-validity\n */\nfunction isElementInsertionPossible(doc, child) {\n\tvar parentChildNodes = doc.childNodes || [];\n\tif (find(parentChildNodes, isElementNode) || isDocTypeNode(child)) {\n\t\treturn false;\n\t}\n\tvar docTypeNode = find(parentChildNodes, isDocTypeNode);\n\treturn !(child && docTypeNode && parentChildNodes.indexOf(docTypeNode) > parentChildNodes.indexOf(child));\n}\n\n/**\n * Check if en element node can be inserted before `child`, or at the end if child is falsy,\n * according to the presence and position of a doctype node on the same level.\n *\n * @param {Node} doc The document node\n * @param {Node} child the node that would become the nextSibling if the element would be inserted\n * @returns {boolean} `true` if an element can be inserted before child\n * @private\n * https://dom.spec.whatwg.org/#concept-node-ensure-pre-insertion-validity\n */\nfunction isElementReplacementPossible(doc, child) {\n\tvar parentChildNodes = doc.childNodes || [];\n\n\tfunction hasElementChildThatIsNotChild(node) {\n\t\treturn isElementNode(node) && node !== child;\n\t}\n\n\tif (find(parentChildNodes, hasElementChildThatIsNotChild)) {\n\t\treturn false;\n\t}\n\tvar docTypeNode = find(parentChildNodes, isDocTypeNode);\n\treturn !(child && docTypeNode && parentChildNodes.indexOf(docTypeNode) > parentChildNodes.indexOf(child));\n}\n\n/**\n * @private\n * Steps 1-5 of the checks before inserting and before replacing a child are the same.\n *\n * @param {Node} parent the parent node to insert `node` into\n * @param {Node} node the node to insert\n * @param {Node=} child the node that should become the `nextSibling` of `node`\n * @returns {Node}\n * @throws DOMException for several node combinations that would create a DOM that is not well-formed.\n * @throws DOMException if `child` is provided but is not a child of `parent`.\n * @see https://dom.spec.whatwg.org/#concept-node-ensure-pre-insertion-validity\n * @see https://dom.spec.whatwg.org/#concept-node-replace\n */\nfunction assertPreInsertionValidity1to5(parent, node, child) {\n\t// 1. If `parent` is not a Document, DocumentFragment, or Element node, then throw a \"HierarchyRequestError\" DOMException.\n\tif (!hasValidParentNodeType(parent)) {\n\t\tthrow new DOMException(HIERARCHY_REQUEST_ERR, 'Unexpected parent node type ' + parent.nodeType);\n\t}\n\t// 2. If `node` is a host-including inclusive ancestor of `parent`, then throw a \"HierarchyRequestError\" DOMException.\n\t// not implemented!\n\t// 3. If `child` is non-null and its parent is not `parent`, then throw a \"NotFoundError\" DOMException.\n\tif (child && child.parentNode !== parent) {\n\t\tthrow new DOMException(NOT_FOUND_ERR, 'child not in parent');\n\t}\n\tif (\n\t\t// 4. If `node` is not a DocumentFragment, DocumentType, Element, or CharacterData node, then throw a \"HierarchyRequestError\" DOMException.\n\t\t!hasInsertableNodeType(node) ||\n\t\t// 5. If either `node` is a Text node and `parent` is a document,\n\t\t// the sax parser currently adds top level text nodes, this will be fixed in 0.9.0\n\t\t// || (node.nodeType === Node.TEXT_NODE && parent.nodeType === Node.DOCUMENT_NODE)\n\t\t// or `node` is a doctype and `parent` is not a document, then throw a \"HierarchyRequestError\" DOMException.\n\t\t(isDocTypeNode(node) && parent.nodeType !== Node.DOCUMENT_NODE)\n\t) {\n\t\tthrow new DOMException(\n\t\t\tHIERARCHY_REQUEST_ERR,\n\t\t\t'Unexpected node type ' + node.nodeType + ' for parent node type ' + parent.nodeType\n\t\t);\n\t}\n}\n\n/**\n * @private\n * Step 6 of the checks before inserting and before replacing a child are different.\n *\n * @param {Document} parent the parent node to insert `node` into\n * @param {Node} node the node to insert\n * @param {Node | undefined} child the node that should become the `nextSibling` of `node`\n * @returns {Node}\n * @throws DOMException for several node combinations that would create a DOM that is not well-formed.\n * @throws DOMException if `child` is provided but is not a child of `parent`.\n * @see https://dom.spec.whatwg.org/#concept-node-ensure-pre-insertion-validity\n * @see https://dom.spec.whatwg.org/#concept-node-replace\n */\nfunction assertPreInsertionValidityInDocument(parent, node, child) {\n\tvar parentChildNodes = parent.childNodes || [];\n\tvar nodeChildNodes = node.childNodes || [];\n\n\t// DocumentFragment\n\tif (node.nodeType === Node.DOCUMENT_FRAGMENT_NODE) {\n\t\tvar nodeChildElements = nodeChildNodes.filter(isElementNode);\n\t\t// If node has more than one element child or has a Text node child.\n\t\tif (nodeChildElements.length > 1 || find(nodeChildNodes, isTextNode)) {\n\t\t\tthrow new DOMException(HIERARCHY_REQUEST_ERR, 'More than one element or text in fragment');\n\t\t}\n\t\t// Otherwise, if `node` has one element child and either `parent` has an element child,\n\t\t// `child` is a doctype, or `child` is non-null and a doctype is following `child`.\n\t\tif (nodeChildElements.length === 1 && !isElementInsertionPossible(parent, child)) {\n\t\t\tthrow new DOMException(HIERARCHY_REQUEST_ERR, 'Element in fragment can not be inserted before doctype');\n\t\t}\n\t}\n\t// Element\n\tif (isElementNode(node)) {\n\t\t// `parent` has an element child, `child` is a doctype,\n\t\t// or `child` is non-null and a doctype is following `child`.\n\t\tif (!isElementInsertionPossible(parent, child)) {\n\t\t\tthrow new DOMException(HIERARCHY_REQUEST_ERR, 'Only one element can be added and only after doctype');\n\t\t}\n\t}\n\t// DocumentType\n\tif (isDocTypeNode(node)) {\n\t\t// `parent` has a doctype child,\n\t\tif (find(parentChildNodes, isDocTypeNode)) {\n\t\t\tthrow new DOMException(HIERARCHY_REQUEST_ERR, 'Only one doctype is allowed');\n\t\t}\n\t\tvar parentElementChild = find(parentChildNodes, isElementNode);\n\t\t// `child` is non-null and an element is preceding `child`,\n\t\tif (child && parentChildNodes.indexOf(parentElementChild) < parentChildNodes.indexOf(child)) {\n\t\t\tthrow new DOMException(HIERARCHY_REQUEST_ERR, 'Doctype can only be inserted before an element');\n\t\t}\n\t\t// or `child` is null and `parent` has an element child.\n\t\tif (!child && parentElementChild) {\n\t\t\tthrow new DOMException(HIERARCHY_REQUEST_ERR, 'Doctype can not be appended since element is present');\n\t\t}\n\t}\n}\n\n/**\n * @private\n * Step 6 of the checks before inserting and before replacing a child are different.\n *\n * @param {Document} parent the parent node to insert `node` into\n * @param {Node} node the node to insert\n * @param {Node | undefined} child the node that should become the `nextSibling` of `node`\n * @returns {Node}\n * @throws DOMException for several node combinations that would create a DOM that is not well-formed.\n * @throws DOMException if `child` is provided but is not a child of `parent`.\n * @see https://dom.spec.whatwg.org/#concept-node-ensure-pre-insertion-validity\n * @see https://dom.spec.whatwg.org/#concept-node-replace\n */\nfunction assertPreReplacementValidityInDocument(parent, node, child) {\n\tvar parentChildNodes = parent.childNodes || [];\n\tvar nodeChildNodes = node.childNodes || [];\n\n\t// DocumentFragment\n\tif (node.nodeType === Node.DOCUMENT_FRAGMENT_NODE) {\n\t\tvar nodeChildElements = nodeChildNodes.filter(isElementNode);\n\t\t// If `node` has more than one element child or has a Text node child.\n\t\tif (nodeChildElements.length > 1 || find(nodeChildNodes, isTextNode)) {\n\t\t\tthrow new DOMException(HIERARCHY_REQUEST_ERR, 'More than one element or text in fragment');\n\t\t}\n\t\t// Otherwise, if `node` has one element child and either `parent` has an element child that is not `child` or a doctype is following `child`.\n\t\tif (nodeChildElements.length === 1 && !isElementReplacementPossible(parent, child)) {\n\t\t\tthrow new DOMException(HIERARCHY_REQUEST_ERR, 'Element in fragment can not be inserted before doctype');\n\t\t}\n\t}\n\t// Element\n\tif (isElementNode(node)) {\n\t\t// `parent` has an element child that is not `child` or a doctype is following `child`.\n\t\tif (!isElementReplacementPossible(parent, child)) {\n\t\t\tthrow new DOMException(HIERARCHY_REQUEST_ERR, 'Only one element can be added and only after doctype');\n\t\t}\n\t}\n\t// DocumentType\n\tif (isDocTypeNode(node)) {\n\t\tfunction hasDoctypeChildThatIsNotChild(node) {\n\t\t\treturn isDocTypeNode(node) && node !== child;\n\t\t}\n\n\t\t// `parent` has a doctype child that is not `child`,\n\t\tif (find(parentChildNodes, hasDoctypeChildThatIsNotChild)) {\n\t\t\tthrow new DOMException(HIERARCHY_REQUEST_ERR, 'Only one doctype is allowed');\n\t\t}\n\t\tvar parentElementChild = find(parentChildNodes, isElementNode);\n\t\t// or an element is preceding `child`.\n\t\tif (child && parentChildNodes.indexOf(parentElementChild) < parentChildNodes.indexOf(child)) {\n\t\t\tthrow new DOMException(HIERARCHY_REQUEST_ERR, 'Doctype can only be inserted before an element');\n\t\t}\n\t}\n}\n\n/**\n * @private\n * @param {Node} parent the parent node to insert `node` into\n * @param {Node} node the node to insert\n * @param {Node=} child the node that should become the `nextSibling` of `node`\n * @returns {Node}\n * @throws DOMException for several node combinations that would create a DOM that is not well-formed.\n * @throws DOMException if `child` is provided but is not a child of `parent`.\n * @see https://dom.spec.whatwg.org/#concept-node-ensure-pre-insertion-validity\n */\nfunction _insertBefore(parent, node, child, _inDocumentAssertion) {\n\t// To ensure pre-insertion validity of a node into a parent before a child, run these steps:\n\tassertPreInsertionValidity1to5(parent, node, child);\n\n\t// If parent is a document, and any of the statements below, switched on the interface node implements,\n\t// are true, then throw a \"HierarchyRequestError\" DOMException.\n\tif (parent.nodeType === Node.DOCUMENT_NODE) {\n\t\t(_inDocumentAssertion || assertPreInsertionValidityInDocument)(parent, node, child);\n\t}\n\n\tvar cp = node.parentNode;\n\tif(cp){\n\t\tcp.removeChild(node);//remove and update\n\t}\n\tif(node.nodeType === DOCUMENT_FRAGMENT_NODE){\n\t\tvar newFirst = node.firstChild;\n\t\tif (newFirst == null) {\n\t\t\treturn node;\n\t\t}\n\t\tvar newLast = node.lastChild;\n\t}else{\n\t\tnewFirst = newLast = node;\n\t}\n\tvar pre = child ? child.previousSibling : parent.lastChild;\n\n\tnewFirst.previousSibling = pre;\n\tnewLast.nextSibling = child;\n\n\n\tif(pre){\n\t\tpre.nextSibling = newFirst;\n\t}else{\n\t\tparent.firstChild = newFirst;\n\t}\n\tif(child == null){\n\t\tparent.lastChild = newLast;\n\t}else{\n\t\tchild.previousSibling = newLast;\n\t}\n\tdo{\n\t\tnewFirst.parentNode = parent;\n\t}while(newFirst !== newLast && (newFirst= newFirst.nextSibling))\n\t_onUpdateChild(parent.ownerDocument||parent, parent);\n\t//console.log(parent.lastChild.nextSibling == null)\n\tif (node.nodeType == DOCUMENT_FRAGMENT_NODE) {\n\t\tnode.firstChild = node.lastChild = null;\n\t}\n\treturn node;\n}\n\n/**\n * Appends `newChild` to `parentNode`.\n * If `newChild` is already connected to a `parentNode` it is first removed from it.\n *\n * @see https://github.com/xmldom/xmldom/issues/135\n * @see https://github.com/xmldom/xmldom/issues/145\n * @param {Node} parentNode\n * @param {Node} newChild\n * @returns {Node}\n * @private\n */\nfunction _appendSingleChild (parentNode, newChild) {\n\tif (newChild.parentNode) {\n\t\tnewChild.parentNode.removeChild(newChild);\n\t}\n\tnewChild.parentNode = parentNode;\n\tnewChild.previousSibling = parentNode.lastChild;\n\tnewChild.nextSibling = null;\n\tif (newChild.previousSibling) {\n\t\tnewChild.previousSibling.nextSibling = newChild;\n\t} else {\n\t\tparentNode.firstChild = newChild;\n\t}\n\tparentNode.lastChild = newChild;\n\t_onUpdateChild(parentNode.ownerDocument, parentNode, newChild);\n\treturn newChild;\n}\n\nDocument.prototype = {\n\t//implementation : null,\n\tnodeName :  '#document',\n\tnodeType :  DOCUMENT_NODE,\n\t/**\n\t * The DocumentType node of the document.\n\t *\n\t * @readonly\n\t * @type DocumentType\n\t */\n\tdoctype :  null,\n\tdocumentElement :  null,\n\t_inc : 1,\n\n\tinsertBefore :  function(newChild, refChild){//raises\n\t\tif(newChild.nodeType == DOCUMENT_FRAGMENT_NODE){\n\t\t\tvar child = newChild.firstChild;\n\t\t\twhile(child){\n\t\t\t\tvar next = child.nextSibling;\n\t\t\t\tthis.insertBefore(child,refChild);\n\t\t\t\tchild = next;\n\t\t\t}\n\t\t\treturn newChild;\n\t\t}\n\t\t_insertBefore(this, newChild, refChild);\n\t\tnewChild.ownerDocument = this;\n\t\tif (this.documentElement === null && newChild.nodeType === ELEMENT_NODE) {\n\t\t\tthis.documentElement = newChild;\n\t\t}\n\n\t\treturn newChild;\n\t},\n\tremoveChild :  function(oldChild){\n\t\tif(this.documentElement == oldChild){\n\t\t\tthis.documentElement = null;\n\t\t}\n\t\treturn _removeChild(this,oldChild);\n\t},\n\treplaceChild: function (newChild, oldChild) {\n\t\t//raises\n\t\t_insertBefore(this, newChild, oldChild, assertPreReplacementValidityInDocument);\n\t\tnewChild.ownerDocument = this;\n\t\tif (oldChild) {\n\t\t\tthis.removeChild(oldChild);\n\t\t}\n\t\tif (isElementNode(newChild)) {\n\t\t\tthis.documentElement = newChild;\n\t\t}\n\t},\n\t// Introduced in DOM Level 2:\n\timportNode : function(importedNode,deep){\n\t\treturn importNode(this,importedNode,deep);\n\t},\n\t// Introduced in DOM Level 2:\n\tgetElementById :\tfunction(id){\n\t\tvar rtv = null;\n\t\t_visitNode(this.documentElement,function(node){\n\t\t\tif(node.nodeType == ELEMENT_NODE){\n\t\t\t\tif(node.getAttribute('id') == id){\n\t\t\t\t\trtv = node;\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t})\n\t\treturn rtv;\n\t},\n\n\t/**\n\t * The `getElementsByClassName` method of `Document` interface returns an array-like object\n\t * of all child elements which have **all** of the given class name(s).\n\t *\n\t * Returns an empty list if `classeNames` is an empty string or only contains HTML white space characters.\n\t *\n\t *\n\t * Warning: This is a live LiveNodeList.\n\t * Changes in the DOM will reflect in the array as the changes occur.\n\t * If an element selected by this array no longer qualifies for the selector,\n\t * it will automatically be removed. Be aware of this for iteration purposes.\n\t *\n\t * @param {string} classNames is a string representing the class name(s) to match; multiple class names are separated by (ASCII-)whitespace\n\t *\n\t * @see https://developer.mozilla.org/en-US/docs/Web/API/Document/getElementsByClassName\n\t * @see https://dom.spec.whatwg.org/#concept-getelementsbyclassname\n\t */\n\tgetElementsByClassName: function(classNames) {\n\t\tvar classNamesSet = toOrderedSet(classNames)\n\t\treturn new LiveNodeList(this, function(base) {\n\t\t\tvar ls = [];\n\t\t\tif (classNamesSet.length > 0) {\n\t\t\t\t_visitNode(base.documentElement, function(node) {\n\t\t\t\t\tif(node !== base && node.nodeType === ELEMENT_NODE) {\n\t\t\t\t\t\tvar nodeClassNames = node.getAttribute('class')\n\t\t\t\t\t\t// can be null if the attribute does not exist\n\t\t\t\t\t\tif (nodeClassNames) {\n\t\t\t\t\t\t\t// before splitting and iterating just compare them for the most common case\n\t\t\t\t\t\t\tvar matches = classNames === nodeClassNames;\n\t\t\t\t\t\t\tif (!matches) {\n\t\t\t\t\t\t\t\tvar nodeClassNamesSet = toOrderedSet(nodeClassNames)\n\t\t\t\t\t\t\t\tmatches = classNamesSet.every(arrayIncludes(nodeClassNamesSet))\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif(matches) {\n\t\t\t\t\t\t\t\tls.push(node);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t\treturn ls;\n\t\t});\n\t},\n\n\t//document factory method:\n\tcreateElement :\tfunction(tagName){\n\t\tvar node = new Element();\n\t\tnode.ownerDocument = this;\n\t\tnode.nodeName = tagName;\n\t\tnode.tagName = tagName;\n\t\tnode.localName = tagName;\n\t\tnode.childNodes = new NodeList();\n\t\tvar attrs\t= node.attributes = new NamedNodeMap();\n\t\tattrs._ownerElement = node;\n\t\treturn node;\n\t},\n\tcreateDocumentFragment :\tfunction(){\n\t\tvar node = new DocumentFragment();\n\t\tnode.ownerDocument = this;\n\t\tnode.childNodes = new NodeList();\n\t\treturn node;\n\t},\n\tcreateTextNode :\tfunction(data){\n\t\tvar node = new Text();\n\t\tnode.ownerDocument = this;\n\t\tnode.appendData(data)\n\t\treturn node;\n\t},\n\tcreateComment :\tfunction(data){\n\t\tvar node = new Comment();\n\t\tnode.ownerDocument = this;\n\t\tnode.appendData(data)\n\t\treturn node;\n\t},\n\tcreateCDATASection :\tfunction(data){\n\t\tvar node = new CDATASection();\n\t\tnode.ownerDocument = this;\n\t\tnode.appendData(data)\n\t\treturn node;\n\t},\n\tcreateProcessingInstruction :\tfunction(target,data){\n\t\tvar node = new ProcessingInstruction();\n\t\tnode.ownerDocument = this;\n\t\tnode.tagName = node.nodeName = node.target = target;\n\t\tnode.nodeValue = node.data = data;\n\t\treturn node;\n\t},\n\tcreateAttribute :\tfunction(name){\n\t\tvar node = new Attr();\n\t\tnode.ownerDocument\t= this;\n\t\tnode.name = name;\n\t\tnode.nodeName\t= name;\n\t\tnode.localName = name;\n\t\tnode.specified = true;\n\t\treturn node;\n\t},\n\tcreateEntityReference :\tfunction(name){\n\t\tvar node = new EntityReference();\n\t\tnode.ownerDocument\t= this;\n\t\tnode.nodeName\t= name;\n\t\treturn node;\n\t},\n\t// Introduced in DOM Level 2:\n\tcreateElementNS :\tfunction(namespaceURI,qualifiedName){\n\t\tvar node = new Element();\n\t\tvar pl = qualifiedName.split(':');\n\t\tvar attrs\t= node.attributes = new NamedNodeMap();\n\t\tnode.childNodes = new NodeList();\n\t\tnode.ownerDocument = this;\n\t\tnode.nodeName = qualifiedName;\n\t\tnode.tagName = qualifiedName;\n\t\tnode.namespaceURI = namespaceURI;\n\t\tif(pl.length == 2){\n\t\t\tnode.prefix = pl[0];\n\t\t\tnode.localName = pl[1];\n\t\t}else{\n\t\t\t//el.prefix = null;\n\t\t\tnode.localName = qualifiedName;\n\t\t}\n\t\tattrs._ownerElement = node;\n\t\treturn node;\n\t},\n\t// Introduced in DOM Level 2:\n\tcreateAttributeNS :\tfunction(namespaceURI,qualifiedName){\n\t\tvar node = new Attr();\n\t\tvar pl = qualifiedName.split(':');\n\t\tnode.ownerDocument = this;\n\t\tnode.nodeName = qualifiedName;\n\t\tnode.name = qualifiedName;\n\t\tnode.namespaceURI = namespaceURI;\n\t\tnode.specified = true;\n\t\tif(pl.length == 2){\n\t\t\tnode.prefix = pl[0];\n\t\t\tnode.localName = pl[1];\n\t\t}else{\n\t\t\t//el.prefix = null;\n\t\t\tnode.localName = qualifiedName;\n\t\t}\n\t\treturn node;\n\t}\n};\n_extends(Document,Node);\n\n\nfunction Element() {\n\tthis._nsMap = {};\n};\nElement.prototype = {\n\tnodeType : ELEMENT_NODE,\n\thasAttribute : function(name){\n\t\treturn this.getAttributeNode(name)!=null;\n\t},\n\tgetAttribute : function(name){\n\t\tvar attr = this.getAttributeNode(name);\n\t\treturn attr && attr.value || '';\n\t},\n\tgetAttributeNode : function(name){\n\t\treturn this.attributes.getNamedItem(name);\n\t},\n\tsetAttribute : function(name, value){\n\t\tvar attr = this.ownerDocument.createAttribute(name);\n\t\tattr.value = attr.nodeValue = \"\" + value;\n\t\tthis.setAttributeNode(attr)\n\t},\n\tremoveAttribute : function(name){\n\t\tvar attr = this.getAttributeNode(name)\n\t\tattr && this.removeAttributeNode(attr);\n\t},\n\n\t//four real opeartion method\n\tappendChild:function(newChild){\n\t\tif(newChild.nodeType === DOCUMENT_FRAGMENT_NODE){\n\t\t\treturn this.insertBefore(newChild,null);\n\t\t}else{\n\t\t\treturn _appendSingleChild(this,newChild);\n\t\t}\n\t},\n\tsetAttributeNode : function(newAttr){\n\t\treturn this.attributes.setNamedItem(newAttr);\n\t},\n\tsetAttributeNodeNS : function(newAttr){\n\t\treturn this.attributes.setNamedItemNS(newAttr);\n\t},\n\tremoveAttributeNode : function(oldAttr){\n\t\t//console.log(this == oldAttr.ownerElement)\n\t\treturn this.attributes.removeNamedItem(oldAttr.nodeName);\n\t},\n\t//get real attribute name,and remove it by removeAttributeNode\n\tremoveAttributeNS : function(namespaceURI, localName){\n\t\tvar old = this.getAttributeNodeNS(namespaceURI, localName);\n\t\told && this.removeAttributeNode(old);\n\t},\n\n\thasAttributeNS : function(namespaceURI, localName){\n\t\treturn this.getAttributeNodeNS(namespaceURI, localName)!=null;\n\t},\n\tgetAttributeNS : function(namespaceURI, localName){\n\t\tvar attr = this.getAttributeNodeNS(namespaceURI, localName);\n\t\treturn attr && attr.value || '';\n\t},\n\tsetAttributeNS : function(namespaceURI, qualifiedName, value){\n\t\tvar attr = this.ownerDocument.createAttributeNS(namespaceURI, qualifiedName);\n\t\tattr.value = attr.nodeValue = \"\" + value;\n\t\tthis.setAttributeNode(attr)\n\t},\n\tgetAttributeNodeNS : function(namespaceURI, localName){\n\t\treturn this.attributes.getNamedItemNS(namespaceURI, localName);\n\t},\n\n\tgetElementsByTagName : function(tagName){\n\t\treturn new LiveNodeList(this,function(base){\n\t\t\tvar ls = [];\n\t\t\t_visitNode(base,function(node){\n\t\t\t\tif(node !== base && node.nodeType == ELEMENT_NODE && (tagName === '*' || node.tagName == tagName)){\n\t\t\t\t\tls.push(node);\n\t\t\t\t}\n\t\t\t});\n\t\t\treturn ls;\n\t\t});\n\t},\n\tgetElementsByTagNameNS : function(namespaceURI, localName){\n\t\treturn new LiveNodeList(this,function(base){\n\t\t\tvar ls = [];\n\t\t\t_visitNode(base,function(node){\n\t\t\t\tif(node !== base && node.nodeType === ELEMENT_NODE && (namespaceURI === '*' || node.namespaceURI === namespaceURI) && (localName === '*' || node.localName == localName)){\n\t\t\t\t\tls.push(node);\n\t\t\t\t}\n\t\t\t});\n\t\t\treturn ls;\n\n\t\t});\n\t}\n};\nDocument.prototype.getElementsByTagName = Element.prototype.getElementsByTagName;\nDocument.prototype.getElementsByTagNameNS = Element.prototype.getElementsByTagNameNS;\n\n\n_extends(Element,Node);\nfunction Attr() {\n};\nAttr.prototype.nodeType = ATTRIBUTE_NODE;\n_extends(Attr,Node);\n\n\nfunction CharacterData() {\n};\nCharacterData.prototype = {\n\tdata : '',\n\tsubstringData : function(offset, count) {\n\t\treturn this.data.substring(offset, offset+count);\n\t},\n\tappendData: function(text) {\n\t\ttext = this.data+text;\n\t\tthis.nodeValue = this.data = text;\n\t\tthis.length = text.length;\n\t},\n\tinsertData: function(offset,text) {\n\t\tthis.replaceData(offset,0,text);\n\n\t},\n\tappendChild:function(newChild){\n\t\tthrow new Error(ExceptionMessage[HIERARCHY_REQUEST_ERR])\n\t},\n\tdeleteData: function(offset, count) {\n\t\tthis.replaceData(offset,count,\"\");\n\t},\n\treplaceData: function(offset, count, text) {\n\t\tvar start = this.data.substring(0,offset);\n\t\tvar end = this.data.substring(offset+count);\n\t\ttext = start + text + end;\n\t\tthis.nodeValue = this.data = text;\n\t\tthis.length = text.length;\n\t}\n}\n_extends(CharacterData,Node);\nfunction Text() {\n};\nText.prototype = {\n\tnodeName : \"#text\",\n\tnodeType : TEXT_NODE,\n\tsplitText : function(offset) {\n\t\tvar text = this.data;\n\t\tvar newText = text.substring(offset);\n\t\ttext = text.substring(0, offset);\n\t\tthis.data = this.nodeValue = text;\n\t\tthis.length = text.length;\n\t\tvar newNode = this.ownerDocument.createTextNode(newText);\n\t\tif(this.parentNode){\n\t\t\tthis.parentNode.insertBefore(newNode, this.nextSibling);\n\t\t}\n\t\treturn newNode;\n\t}\n}\n_extends(Text,CharacterData);\nfunction Comment() {\n};\nComment.prototype = {\n\tnodeName : \"#comment\",\n\tnodeType : COMMENT_NODE\n}\n_extends(Comment,CharacterData);\n\nfunction CDATASection() {\n};\nCDATASection.prototype = {\n\tnodeName : \"#cdata-section\",\n\tnodeType : CDATA_SECTION_NODE\n}\n_extends(CDATASection,CharacterData);\n\n\nfunction DocumentType() {\n};\nDocumentType.prototype.nodeType = DOCUMENT_TYPE_NODE;\n_extends(DocumentType,Node);\n\nfunction Notation() {\n};\nNotation.prototype.nodeType = NOTATION_NODE;\n_extends(Notation,Node);\n\nfunction Entity() {\n};\nEntity.prototype.nodeType = ENTITY_NODE;\n_extends(Entity,Node);\n\nfunction EntityReference() {\n};\nEntityReference.prototype.nodeType = ENTITY_REFERENCE_NODE;\n_extends(EntityReference,Node);\n\nfunction DocumentFragment() {\n};\nDocumentFragment.prototype.nodeName =\t\"#document-fragment\";\nDocumentFragment.prototype.nodeType =\tDOCUMENT_FRAGMENT_NODE;\n_extends(DocumentFragment,Node);\n\n\nfunction ProcessingInstruction() {\n}\nProcessingInstruction.prototype.nodeType = PROCESSING_INSTRUCTION_NODE;\n_extends(ProcessingInstruction,Node);\nfunction XMLSerializer(){}\nXMLSerializer.prototype.serializeToString = function(node,isHtml,nodeFilter){\n\treturn nodeSerializeToString.call(node,isHtml,nodeFilter);\n}\nNode.prototype.toString = nodeSerializeToString;\nfunction nodeSerializeToString(isHtml,nodeFilter){\n\tvar buf = [];\n\tvar refNode = this.nodeType == 9 && this.documentElement || this;\n\tvar prefix = refNode.prefix;\n\tvar uri = refNode.namespaceURI;\n\n\tif(uri && prefix == null){\n\t\t//console.log(prefix)\n\t\tvar prefix = refNode.lookupPrefix(uri);\n\t\tif(prefix == null){\n\t\t\t//isHTML = true;\n\t\t\tvar visibleNamespaces=[\n\t\t\t{namespace:uri,prefix:null}\n\t\t\t//{namespace:uri,prefix:''}\n\t\t\t]\n\t\t}\n\t}\n\tserializeToString(this,buf,isHtml,nodeFilter,visibleNamespaces);\n\t//console.log('###',this.nodeType,uri,prefix,buf.join(''))\n\treturn buf.join('');\n}\n\nfunction needNamespaceDefine(node, isHTML, visibleNamespaces) {\n\tvar prefix = node.prefix || '';\n\tvar uri = node.namespaceURI;\n\t// According to [Namespaces in XML 1.0](https://www.w3.org/TR/REC-xml-names/#ns-using) ,\n\t// and more specifically https://www.w3.org/TR/REC-xml-names/#nsc-NoPrefixUndecl :\n\t// > In a namespace declaration for a prefix [...], the attribute value MUST NOT be empty.\n\t// in a similar manner [Namespaces in XML 1.1](https://www.w3.org/TR/xml-names11/#ns-using)\n\t// and more specifically https://www.w3.org/TR/xml-names11/#nsc-NSDeclared :\n\t// > [...] Furthermore, the attribute value [...] must not be an empty string.\n\t// so serializing empty namespace value like xmlns:ds=\"\" would produce an invalid XML document.\n\tif (!uri) {\n\t\treturn false;\n\t}\n\tif (prefix === \"xml\" && uri === NAMESPACE.XML || uri === NAMESPACE.XMLNS) {\n\t\treturn false;\n\t}\n\n\tvar i = visibleNamespaces.length\n\twhile (i--) {\n\t\tvar ns = visibleNamespaces[i];\n\t\t// get namespace prefix\n\t\tif (ns.prefix === prefix) {\n\t\t\treturn ns.namespace !== uri;\n\t\t}\n\t}\n\treturn true;\n}\n/**\n * Well-formed constraint: No < in Attribute Values\n * > The replacement text of any entity referred to directly or indirectly\n * > in an attribute value must not contain a <.\n * @see https://www.w3.org/TR/xml11/#CleanAttrVals\n * @see https://www.w3.org/TR/xml11/#NT-AttValue\n *\n * Literal whitespace other than space that appear in attribute values\n * are serialized as their entity references, so they will be preserved.\n * (In contrast to whitespace literals in the input which are normalized to spaces)\n * @see https://www.w3.org/TR/xml11/#AVNormalize\n * @see https://w3c.github.io/DOM-Parsing/#serializing-an-element-s-attributes\n */\nfunction addSerializedAttribute(buf, qualifiedName, value) {\n\tbuf.push(' ', qualifiedName, '=\"', value.replace(/[<>&\"\\t\\n\\r]/g, _xmlEncoder), '\"')\n}\n\nfunction serializeToString(node,buf,isHTML,nodeFilter,visibleNamespaces){\n\tif (!visibleNamespaces) {\n\t\tvisibleNamespaces = [];\n\t}\n\n\tif(nodeFilter){\n\t\tnode = nodeFilter(node);\n\t\tif(node){\n\t\t\tif(typeof node == 'string'){\n\t\t\t\tbuf.push(node);\n\t\t\t\treturn;\n\t\t\t}\n\t\t}else{\n\t\t\treturn;\n\t\t}\n\t\t//buf.sort.apply(attrs, attributeSorter);\n\t}\n\n\tswitch(node.nodeType){\n\tcase ELEMENT_NODE:\n\t\tvar attrs = node.attributes;\n\t\tvar len = attrs.length;\n\t\tvar child = node.firstChild;\n\t\tvar nodeName = node.tagName;\n\n\t\tisHTML = NAMESPACE.isHTML(node.namespaceURI) || isHTML\n\n\t\tvar prefixedNodeName = nodeName\n\t\tif (!isHTML && !node.prefix && node.namespaceURI) {\n\t\t\tvar defaultNS\n\t\t\t// lookup current default ns from `xmlns` attribute\n\t\t\tfor (var ai = 0; ai < attrs.length; ai++) {\n\t\t\t\tif (attrs.item(ai).name === 'xmlns') {\n\t\t\t\t\tdefaultNS = attrs.item(ai).value\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (!defaultNS) {\n\t\t\t\t// lookup current default ns in visibleNamespaces\n\t\t\t\tfor (var nsi = visibleNamespaces.length - 1; nsi >= 0; nsi--) {\n\t\t\t\t\tvar namespace = visibleNamespaces[nsi]\n\t\t\t\t\tif (namespace.prefix === '' && namespace.namespace === node.namespaceURI) {\n\t\t\t\t\t\tdefaultNS = namespace.namespace\n\t\t\t\t\t\tbreak\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (defaultNS !== node.namespaceURI) {\n\t\t\t\tfor (var nsi = visibleNamespaces.length - 1; nsi >= 0; nsi--) {\n\t\t\t\t\tvar namespace = visibleNamespaces[nsi]\n\t\t\t\t\tif (namespace.namespace === node.namespaceURI) {\n\t\t\t\t\t\tif (namespace.prefix) {\n\t\t\t\t\t\t\tprefixedNodeName = namespace.prefix + ':' + nodeName\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tbuf.push('<', prefixedNodeName);\n\n\t\tfor(var i=0;i<len;i++){\n\t\t\t// add namespaces for attributes\n\t\t\tvar attr = attrs.item(i);\n\t\t\tif (attr.prefix == 'xmlns') {\n\t\t\t\tvisibleNamespaces.push({ prefix: attr.localName, namespace: attr.value });\n\t\t\t}else if(attr.nodeName == 'xmlns'){\n\t\t\t\tvisibleNamespaces.push({ prefix: '', namespace: attr.value });\n\t\t\t}\n\t\t}\n\n\t\tfor(var i=0;i<len;i++){\n\t\t\tvar attr = attrs.item(i);\n\t\t\tif (needNamespaceDefine(attr,isHTML, visibleNamespaces)) {\n\t\t\t\tvar prefix = attr.prefix||'';\n\t\t\t\tvar uri = attr.namespaceURI;\n\t\t\t\taddSerializedAttribute(buf, prefix ? 'xmlns:' + prefix : \"xmlns\", uri);\n\t\t\t\tvisibleNamespaces.push({ prefix: prefix, namespace:uri });\n\t\t\t}\n\t\t\tserializeToString(attr,buf,isHTML,nodeFilter,visibleNamespaces);\n\t\t}\n\n\t\t// add namespace for current node\n\t\tif (nodeName === prefixedNodeName && needNamespaceDefine(node, isHTML, visibleNamespaces)) {\n\t\t\tvar prefix = node.prefix||'';\n\t\t\tvar uri = node.namespaceURI;\n\t\t\taddSerializedAttribute(buf, prefix ? 'xmlns:' + prefix : \"xmlns\", uri);\n\t\t\tvisibleNamespaces.push({ prefix: prefix, namespace:uri });\n\t\t}\n\n\t\tif(child || isHTML && !/^(?:meta|link|img|br|hr|input)$/i.test(nodeName)){\n\t\t\tbuf.push('>');\n\t\t\t//if is cdata child node\n\t\t\tif(isHTML && /^script$/i.test(nodeName)){\n\t\t\t\twhile(child){\n\t\t\t\t\tif(child.data){\n\t\t\t\t\t\tbuf.push(child.data);\n\t\t\t\t\t}else{\n\t\t\t\t\t\tserializeToString(child, buf, isHTML, nodeFilter, visibleNamespaces.slice());\n\t\t\t\t\t}\n\t\t\t\t\tchild = child.nextSibling;\n\t\t\t\t}\n\t\t\t}else\n\t\t\t{\n\t\t\t\twhile(child){\n\t\t\t\t\tserializeToString(child, buf, isHTML, nodeFilter, visibleNamespaces.slice());\n\t\t\t\t\tchild = child.nextSibling;\n\t\t\t\t}\n\t\t\t}\n\t\t\tbuf.push('</',prefixedNodeName,'>');\n\t\t}else{\n\t\t\tbuf.push('/>');\n\t\t}\n\t\t// remove added visible namespaces\n\t\t//visibleNamespaces.length = startVisibleNamespaces;\n\t\treturn;\n\tcase DOCUMENT_NODE:\n\tcase DOCUMENT_FRAGMENT_NODE:\n\t\tvar child = node.firstChild;\n\t\twhile(child){\n\t\t\tserializeToString(child, buf, isHTML, nodeFilter, visibleNamespaces.slice());\n\t\t\tchild = child.nextSibling;\n\t\t}\n\t\treturn;\n\tcase ATTRIBUTE_NODE:\n\t\treturn addSerializedAttribute(buf, node.name, node.value);\n\tcase TEXT_NODE:\n\t\t/**\n\t\t * The ampersand character (&) and the left angle bracket (<) must not appear in their literal form,\n\t\t * except when used as markup delimiters, or within a comment, a processing instruction, or a CDATA section.\n\t\t * If they are needed elsewhere, they must be escaped using either numeric character references or the strings\n\t\t * `&amp;` and `&lt;` respectively.\n\t\t * The right angle bracket (>) may be represented using the string \" &gt; \", and must, for compatibility,\n\t\t * be escaped using either `&gt;` or a character reference when it appears in the string `]]>` in content,\n\t\t * when that string is not marking the end of a CDATA section.\n\t\t *\n\t\t * In the content of elements, character data is any string of characters\n\t\t * which does not contain the start-delimiter of any markup\n\t\t * and does not include the CDATA-section-close delimiter, `]]>`.\n\t\t *\n\t\t * @see https://www.w3.org/TR/xml/#NT-CharData\n\t\t * @see https://w3c.github.io/DOM-Parsing/#xml-serializing-a-text-node\n\t\t */\n\t\treturn buf.push(node.data\n\t\t\t.replace(/[<&>]/g,_xmlEncoder)\n\t\t);\n\tcase CDATA_SECTION_NODE:\n\t\treturn buf.push( '<![CDATA[',node.data,']]>');\n\tcase COMMENT_NODE:\n\t\treturn buf.push( \"<!--\",node.data,\"-->\");\n\tcase DOCUMENT_TYPE_NODE:\n\t\tvar pubid = node.publicId;\n\t\tvar sysid = node.systemId;\n\t\tbuf.push('<!DOCTYPE ',node.name);\n\t\tif(pubid){\n\t\t\tbuf.push(' PUBLIC ', pubid);\n\t\t\tif (sysid && sysid!='.') {\n\t\t\t\tbuf.push(' ', sysid);\n\t\t\t}\n\t\t\tbuf.push('>');\n\t\t}else if(sysid && sysid!='.'){\n\t\t\tbuf.push(' SYSTEM ', sysid, '>');\n\t\t}else{\n\t\t\tvar sub = node.internalSubset;\n\t\t\tif(sub){\n\t\t\t\tbuf.push(\" [\",sub,\"]\");\n\t\t\t}\n\t\t\tbuf.push(\">\");\n\t\t}\n\t\treturn;\n\tcase PROCESSING_INSTRUCTION_NODE:\n\t\treturn buf.push( \"<?\",node.target,\" \",node.data,\"?>\");\n\tcase ENTITY_REFERENCE_NODE:\n\t\treturn buf.push( '&',node.nodeName,';');\n\t//case ENTITY_NODE:\n\t//case NOTATION_NODE:\n\tdefault:\n\t\tbuf.push('??',node.nodeName);\n\t}\n}\nfunction importNode(doc,node,deep){\n\tvar node2;\n\tswitch (node.nodeType) {\n\tcase ELEMENT_NODE:\n\t\tnode2 = node.cloneNode(false);\n\t\tnode2.ownerDocument = doc;\n\t\t//var attrs = node2.attributes;\n\t\t//var len = attrs.length;\n\t\t//for(var i=0;i<len;i++){\n\t\t\t//node2.setAttributeNodeNS(importNode(doc,attrs.item(i),deep));\n\t\t//}\n\tcase DOCUMENT_FRAGMENT_NODE:\n\t\tbreak;\n\tcase ATTRIBUTE_NODE:\n\t\tdeep = true;\n\t\tbreak;\n\t//case ENTITY_REFERENCE_NODE:\n\t//case PROCESSING_INSTRUCTION_NODE:\n\t////case TEXT_NODE:\n\t//case CDATA_SECTION_NODE:\n\t//case COMMENT_NODE:\n\t//\tdeep = false;\n\t//\tbreak;\n\t//case DOCUMENT_NODE:\n\t//case DOCUMENT_TYPE_NODE:\n\t//cannot be imported.\n\t//case ENTITY_NODE:\n\t//case NOTATION_NODE：\n\t//can not hit in level3\n\t//default:throw e;\n\t}\n\tif(!node2){\n\t\tnode2 = node.cloneNode(false);//false\n\t}\n\tnode2.ownerDocument = doc;\n\tnode2.parentNode = null;\n\tif(deep){\n\t\tvar child = node.firstChild;\n\t\twhile(child){\n\t\t\tnode2.appendChild(importNode(doc,child,deep));\n\t\t\tchild = child.nextSibling;\n\t\t}\n\t}\n\treturn node2;\n}\n//\n//var _relationMap = {firstChild:1,lastChild:1,previousSibling:1,nextSibling:1,\n//\t\t\t\t\tattributes:1,childNodes:1,parentNode:1,documentElement:1,doctype,};\nfunction cloneNode(doc,node,deep){\n\tvar node2 = new node.constructor();\n\tfor (var n in node) {\n\t\tif (Object.prototype.hasOwnProperty.call(node, n)) {\n\t\t\tvar v = node[n];\n\t\t\tif (typeof v != \"object\") {\n\t\t\t\tif (v != node2[n]) {\n\t\t\t\t\tnode2[n] = v;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tif(node.childNodes){\n\t\tnode2.childNodes = new NodeList();\n\t}\n\tnode2.ownerDocument = doc;\n\tswitch (node2.nodeType) {\n\tcase ELEMENT_NODE:\n\t\tvar attrs\t= node.attributes;\n\t\tvar attrs2\t= node2.attributes = new NamedNodeMap();\n\t\tvar len = attrs.length\n\t\tattrs2._ownerElement = node2;\n\t\tfor(var i=0;i<len;i++){\n\t\t\tnode2.setAttributeNode(cloneNode(doc,attrs.item(i),true));\n\t\t}\n\t\tbreak;;\n\tcase ATTRIBUTE_NODE:\n\t\tdeep = true;\n\t}\n\tif(deep){\n\t\tvar child = node.firstChild;\n\t\twhile(child){\n\t\t\tnode2.appendChild(cloneNode(doc,child,deep));\n\t\t\tchild = child.nextSibling;\n\t\t}\n\t}\n\treturn node2;\n}\n\nfunction __set__(object,key,value){\n\tobject[key] = value\n}\n//do dynamic\ntry{\n\tif(Object.defineProperty){\n\t\tObject.defineProperty(LiveNodeList.prototype,'length',{\n\t\t\tget:function(){\n\t\t\t\t_updateLiveList(this);\n\t\t\t\treturn this.$$length;\n\t\t\t}\n\t\t});\n\n\t\tObject.defineProperty(Node.prototype,'textContent',{\n\t\t\tget:function(){\n\t\t\t\treturn getTextContent(this);\n\t\t\t},\n\n\t\t\tset:function(data){\n\t\t\t\tswitch(this.nodeType){\n\t\t\t\tcase ELEMENT_NODE:\n\t\t\t\tcase DOCUMENT_FRAGMENT_NODE:\n\t\t\t\t\twhile(this.firstChild){\n\t\t\t\t\t\tthis.removeChild(this.firstChild);\n\t\t\t\t\t}\n\t\t\t\t\tif(data || String(data)){\n\t\t\t\t\t\tthis.appendChild(this.ownerDocument.createTextNode(data));\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\t\t\t\t\tthis.data = data;\n\t\t\t\t\tthis.value = data;\n\t\t\t\t\tthis.nodeValue = data;\n\t\t\t\t}\n\t\t\t}\n\t\t})\n\n\t\tfunction getTextContent(node){\n\t\t\tswitch(node.nodeType){\n\t\t\tcase ELEMENT_NODE:\n\t\t\tcase DOCUMENT_FRAGMENT_NODE:\n\t\t\t\tvar buf = [];\n\t\t\t\tnode = node.firstChild;\n\t\t\t\twhile(node){\n\t\t\t\t\tif(node.nodeType!==7 && node.nodeType !==8){\n\t\t\t\t\t\tbuf.push(getTextContent(node));\n\t\t\t\t\t}\n\t\t\t\t\tnode = node.nextSibling;\n\t\t\t\t}\n\t\t\t\treturn buf.join('');\n\t\t\tdefault:\n\t\t\t\treturn node.nodeValue;\n\t\t\t}\n\t\t}\n\n\t\t__set__ = function(object,key,value){\n\t\t\t//console.log(value)\n\t\t\tobject['$$'+key] = value\n\t\t}\n\t}\n}catch(e){//ie8\n}\n\n//if(typeof require == 'function'){\n\texports.DocumentType = DocumentType;\n\texports.DOMException = DOMException;\n\texports.DOMImplementation = DOMImplementation;\n\texports.Element = Element;\n\texports.Node = Node;\n\texports.NodeList = NodeList;\n\texports.XMLSerializer = XMLSerializer;\n//}\n","'use strict';\n\nvar freeze = require('./conventions').freeze;\n\n/**\n * The entities that are predefined in every XML document.\n *\n * @see https://www.w3.org/TR/2006/REC-xml11-20060816/#sec-predefined-ent W3C XML 1.1\n * @see https://www.w3.org/TR/2008/REC-xml-20081126/#sec-predefined-ent W3C XML 1.0\n * @see https://en.wikipedia.org/wiki/List_of_XML_and_HTML_character_entity_references#Predefined_entities_in_XML Wikipedia\n */\nexports.XML_ENTITIES = freeze({\n\tamp: '&',\n\tapos: \"'\",\n\tgt: '>',\n\tlt: '<',\n\tquot: '\"',\n});\n\n/**\n * A map of all entities that are detected in an HTML document.\n * They contain all entries from `XML_ENTITIES`.\n *\n * @see XML_ENTITIES\n * @see DOMParser.parseFromString\n * @see DOMImplementation.prototype.createHTMLDocument\n * @see https://html.spec.whatwg.org/#named-character-references WHATWG HTML(5) Spec\n * @see https://html.spec.whatwg.org/entities.json JSON\n * @see https://www.w3.org/TR/xml-entity-names/ W3C XML Entity Names\n * @see https://www.w3.org/TR/html4/sgml/entities.html W3C HTML4/SGML\n * @see https://en.wikipedia.org/wiki/List_of_XML_and_HTML_character_entity_references#Character_entity_references_in_HTML Wikipedia (HTML)\n * @see https://en.wikipedia.org/wiki/List_of_XML_and_HTML_character_entity_references#Entities_representing_special_characters_in_XHTML Wikpedia (XHTML)\n */\nexports.HTML_ENTITIES = freeze({\n\tAacute: '\\u00C1',\n\taacute: '\\u00E1',\n\tAbreve: '\\u0102',\n\tabreve: '\\u0103',\n\tac: '\\u223E',\n\tacd: '\\u223F',\n\tacE: '\\u223E\\u0333',\n\tAcirc: '\\u00C2',\n\tacirc: '\\u00E2',\n\tacute: '\\u00B4',\n\tAcy: '\\u0410',\n\tacy: '\\u0430',\n\tAElig: '\\u00C6',\n\taelig: '\\u00E6',\n\taf: '\\u2061',\n\tAfr: '\\uD835\\uDD04',\n\tafr: '\\uD835\\uDD1E',\n\tAgrave: '\\u00C0',\n\tagrave: '\\u00E0',\n\talefsym: '\\u2135',\n\taleph: '\\u2135',\n\tAlpha: '\\u0391',\n\talpha: '\\u03B1',\n\tAmacr: '\\u0100',\n\tamacr: '\\u0101',\n\tamalg: '\\u2A3F',\n\tAMP: '\\u0026',\n\tamp: '\\u0026',\n\tAnd: '\\u2A53',\n\tand: '\\u2227',\n\tandand: '\\u2A55',\n\tandd: '\\u2A5C',\n\tandslope: '\\u2A58',\n\tandv: '\\u2A5A',\n\tang: '\\u2220',\n\tange: '\\u29A4',\n\tangle: '\\u2220',\n\tangmsd: '\\u2221',\n\tangmsdaa: '\\u29A8',\n\tangmsdab: '\\u29A9',\n\tangmsdac: '\\u29AA',\n\tangmsdad: '\\u29AB',\n\tangmsdae: '\\u29AC',\n\tangmsdaf: '\\u29AD',\n\tangmsdag: '\\u29AE',\n\tangmsdah: '\\u29AF',\n\tangrt: '\\u221F',\n\tangrtvb: '\\u22BE',\n\tangrtvbd: '\\u299D',\n\tangsph: '\\u2222',\n\tangst: '\\u00C5',\n\tangzarr: '\\u237C',\n\tAogon: '\\u0104',\n\taogon: '\\u0105',\n\tAopf: '\\uD835\\uDD38',\n\taopf: '\\uD835\\uDD52',\n\tap: '\\u2248',\n\tapacir: '\\u2A6F',\n\tapE: '\\u2A70',\n\tape: '\\u224A',\n\tapid: '\\u224B',\n\tapos: '\\u0027',\n\tApplyFunction: '\\u2061',\n\tapprox: '\\u2248',\n\tapproxeq: '\\u224A',\n\tAring: '\\u00C5',\n\taring: '\\u00E5',\n\tAscr: '\\uD835\\uDC9C',\n\tascr: '\\uD835\\uDCB6',\n\tAssign: '\\u2254',\n\tast: '\\u002A',\n\tasymp: '\\u2248',\n\tasympeq: '\\u224D',\n\tAtilde: '\\u00C3',\n\tatilde: '\\u00E3',\n\tAuml: '\\u00C4',\n\tauml: '\\u00E4',\n\tawconint: '\\u2233',\n\tawint: '\\u2A11',\n\tbackcong: '\\u224C',\n\tbackepsilon: '\\u03F6',\n\tbackprime: '\\u2035',\n\tbacksim: '\\u223D',\n\tbacksimeq: '\\u22CD',\n\tBackslash: '\\u2216',\n\tBarv: '\\u2AE7',\n\tbarvee: '\\u22BD',\n\tBarwed: '\\u2306',\n\tbarwed: '\\u2305',\n\tbarwedge: '\\u2305',\n\tbbrk: '\\u23B5',\n\tbbrktbrk: '\\u23B6',\n\tbcong: '\\u224C',\n\tBcy: '\\u0411',\n\tbcy: '\\u0431',\n\tbdquo: '\\u201E',\n\tbecaus: '\\u2235',\n\tBecause: '\\u2235',\n\tbecause: '\\u2235',\n\tbemptyv: '\\u29B0',\n\tbepsi: '\\u03F6',\n\tbernou: '\\u212C',\n\tBernoullis: '\\u212C',\n\tBeta: '\\u0392',\n\tbeta: '\\u03B2',\n\tbeth: '\\u2136',\n\tbetween: '\\u226C',\n\tBfr: '\\uD835\\uDD05',\n\tbfr: '\\uD835\\uDD1F',\n\tbigcap: '\\u22C2',\n\tbigcirc: '\\u25EF',\n\tbigcup: '\\u22C3',\n\tbigodot: '\\u2A00',\n\tbigoplus: '\\u2A01',\n\tbigotimes: '\\u2A02',\n\tbigsqcup: '\\u2A06',\n\tbigstar: '\\u2605',\n\tbigtriangledown: '\\u25BD',\n\tbigtriangleup: '\\u25B3',\n\tbiguplus: '\\u2A04',\n\tbigvee: '\\u22C1',\n\tbigwedge: '\\u22C0',\n\tbkarow: '\\u290D',\n\tblacklozenge: '\\u29EB',\n\tblacksquare: '\\u25AA',\n\tblacktriangle: '\\u25B4',\n\tblacktriangledown: '\\u25BE',\n\tblacktriangleleft: '\\u25C2',\n\tblacktriangleright: '\\u25B8',\n\tblank: '\\u2423',\n\tblk12: '\\u2592',\n\tblk14: '\\u2591',\n\tblk34: '\\u2593',\n\tblock: '\\u2588',\n\tbne: '\\u003D\\u20E5',\n\tbnequiv: '\\u2261\\u20E5',\n\tbNot: '\\u2AED',\n\tbnot: '\\u2310',\n\tBopf: '\\uD835\\uDD39',\n\tbopf: '\\uD835\\uDD53',\n\tbot: '\\u22A5',\n\tbottom: '\\u22A5',\n\tbowtie: '\\u22C8',\n\tboxbox: '\\u29C9',\n\tboxDL: '\\u2557',\n\tboxDl: '\\u2556',\n\tboxdL: '\\u2555',\n\tboxdl: '\\u2510',\n\tboxDR: '\\u2554',\n\tboxDr: '\\u2553',\n\tboxdR: '\\u2552',\n\tboxdr: '\\u250C',\n\tboxH: '\\u2550',\n\tboxh: '\\u2500',\n\tboxHD: '\\u2566',\n\tboxHd: '\\u2564',\n\tboxhD: '\\u2565',\n\tboxhd: '\\u252C',\n\tboxHU: '\\u2569',\n\tboxHu: '\\u2567',\n\tboxhU: '\\u2568',\n\tboxhu: '\\u2534',\n\tboxminus: '\\u229F',\n\tboxplus: '\\u229E',\n\tboxtimes: '\\u22A0',\n\tboxUL: '\\u255D',\n\tboxUl: '\\u255C',\n\tboxuL: '\\u255B',\n\tboxul: '\\u2518',\n\tboxUR: '\\u255A',\n\tboxUr: '\\u2559',\n\tboxuR: '\\u2558',\n\tboxur: '\\u2514',\n\tboxV: '\\u2551',\n\tboxv: '\\u2502',\n\tboxVH: '\\u256C',\n\tboxVh: '\\u256B',\n\tboxvH: '\\u256A',\n\tboxvh: '\\u253C',\n\tboxVL: '\\u2563',\n\tboxVl: '\\u2562',\n\tboxvL: '\\u2561',\n\tboxvl: '\\u2524',\n\tboxVR: '\\u2560',\n\tboxVr: '\\u255F',\n\tboxvR: '\\u255E',\n\tboxvr: '\\u251C',\n\tbprime: '\\u2035',\n\tBreve: '\\u02D8',\n\tbreve: '\\u02D8',\n\tbrvbar: '\\u00A6',\n\tBscr: '\\u212C',\n\tbscr: '\\uD835\\uDCB7',\n\tbsemi: '\\u204F',\n\tbsim: '\\u223D',\n\tbsime: '\\u22CD',\n\tbsol: '\\u005C',\n\tbsolb: '\\u29C5',\n\tbsolhsub: '\\u27C8',\n\tbull: '\\u2022',\n\tbullet: '\\u2022',\n\tbump: '\\u224E',\n\tbumpE: '\\u2AAE',\n\tbumpe: '\\u224F',\n\tBumpeq: '\\u224E',\n\tbumpeq: '\\u224F',\n\tCacute: '\\u0106',\n\tcacute: '\\u0107',\n\tCap: '\\u22D2',\n\tcap: '\\u2229',\n\tcapand: '\\u2A44',\n\tcapbrcup: '\\u2A49',\n\tcapcap: '\\u2A4B',\n\tcapcup: '\\u2A47',\n\tcapdot: '\\u2A40',\n\tCapitalDifferentialD: '\\u2145',\n\tcaps: '\\u2229\\uFE00',\n\tcaret: '\\u2041',\n\tcaron: '\\u02C7',\n\tCayleys: '\\u212D',\n\tccaps: '\\u2A4D',\n\tCcaron: '\\u010C',\n\tccaron: '\\u010D',\n\tCcedil: '\\u00C7',\n\tccedil: '\\u00E7',\n\tCcirc: '\\u0108',\n\tccirc: '\\u0109',\n\tCconint: '\\u2230',\n\tccups: '\\u2A4C',\n\tccupssm: '\\u2A50',\n\tCdot: '\\u010A',\n\tcdot: '\\u010B',\n\tcedil: '\\u00B8',\n\tCedilla: '\\u00B8',\n\tcemptyv: '\\u29B2',\n\tcent: '\\u00A2',\n\tCenterDot: '\\u00B7',\n\tcenterdot: '\\u00B7',\n\tCfr: '\\u212D',\n\tcfr: '\\uD835\\uDD20',\n\tCHcy: '\\u0427',\n\tchcy: '\\u0447',\n\tcheck: '\\u2713',\n\tcheckmark: '\\u2713',\n\tChi: '\\u03A7',\n\tchi: '\\u03C7',\n\tcir: '\\u25CB',\n\tcirc: '\\u02C6',\n\tcirceq: '\\u2257',\n\tcirclearrowleft: '\\u21BA',\n\tcirclearrowright: '\\u21BB',\n\tcircledast: '\\u229B',\n\tcircledcirc: '\\u229A',\n\tcircleddash: '\\u229D',\n\tCircleDot: '\\u2299',\n\tcircledR: '\\u00AE',\n\tcircledS: '\\u24C8',\n\tCircleMinus: '\\u2296',\n\tCirclePlus: '\\u2295',\n\tCircleTimes: '\\u2297',\n\tcirE: '\\u29C3',\n\tcire: '\\u2257',\n\tcirfnint: '\\u2A10',\n\tcirmid: '\\u2AEF',\n\tcirscir: '\\u29C2',\n\tClockwiseContourIntegral: '\\u2232',\n\tCloseCurlyDoubleQuote: '\\u201D',\n\tCloseCurlyQuote: '\\u2019',\n\tclubs: '\\u2663',\n\tclubsuit: '\\u2663',\n\tColon: '\\u2237',\n\tcolon: '\\u003A',\n\tColone: '\\u2A74',\n\tcolone: '\\u2254',\n\tcoloneq: '\\u2254',\n\tcomma: '\\u002C',\n\tcommat: '\\u0040',\n\tcomp: '\\u2201',\n\tcompfn: '\\u2218',\n\tcomplement: '\\u2201',\n\tcomplexes: '\\u2102',\n\tcong: '\\u2245',\n\tcongdot: '\\u2A6D',\n\tCongruent: '\\u2261',\n\tConint: '\\u222F',\n\tconint: '\\u222E',\n\tContourIntegral: '\\u222E',\n\tCopf: '\\u2102',\n\tcopf: '\\uD835\\uDD54',\n\tcoprod: '\\u2210',\n\tCoproduct: '\\u2210',\n\tCOPY: '\\u00A9',\n\tcopy: '\\u00A9',\n\tcopysr: '\\u2117',\n\tCounterClockwiseContourIntegral: '\\u2233',\n\tcrarr: '\\u21B5',\n\tCross: '\\u2A2F',\n\tcross: '\\u2717',\n\tCscr: '\\uD835\\uDC9E',\n\tcscr: '\\uD835\\uDCB8',\n\tcsub: '\\u2ACF',\n\tcsube: '\\u2AD1',\n\tcsup: '\\u2AD0',\n\tcsupe: '\\u2AD2',\n\tctdot: '\\u22EF',\n\tcudarrl: '\\u2938',\n\tcudarrr: '\\u2935',\n\tcuepr: '\\u22DE',\n\tcuesc: '\\u22DF',\n\tcularr: '\\u21B6',\n\tcularrp: '\\u293D',\n\tCup: '\\u22D3',\n\tcup: '\\u222A',\n\tcupbrcap: '\\u2A48',\n\tCupCap: '\\u224D',\n\tcupcap: '\\u2A46',\n\tcupcup: '\\u2A4A',\n\tcupdot: '\\u228D',\n\tcupor: '\\u2A45',\n\tcups: '\\u222A\\uFE00',\n\tcurarr: '\\u21B7',\n\tcurarrm: '\\u293C',\n\tcurlyeqprec: '\\u22DE',\n\tcurlyeqsucc: '\\u22DF',\n\tcurlyvee: '\\u22CE',\n\tcurlywedge: '\\u22CF',\n\tcurren: '\\u00A4',\n\tcurvearrowleft: '\\u21B6',\n\tcurvearrowright: '\\u21B7',\n\tcuvee: '\\u22CE',\n\tcuwed: '\\u22CF',\n\tcwconint: '\\u2232',\n\tcwint: '\\u2231',\n\tcylcty: '\\u232D',\n\tDagger: '\\u2021',\n\tdagger: '\\u2020',\n\tdaleth: '\\u2138',\n\tDarr: '\\u21A1',\n\tdArr: '\\u21D3',\n\tdarr: '\\u2193',\n\tdash: '\\u2010',\n\tDashv: '\\u2AE4',\n\tdashv: '\\u22A3',\n\tdbkarow: '\\u290F',\n\tdblac: '\\u02DD',\n\tDcaron: '\\u010E',\n\tdcaron: '\\u010F',\n\tDcy: '\\u0414',\n\tdcy: '\\u0434',\n\tDD: '\\u2145',\n\tdd: '\\u2146',\n\tddagger: '\\u2021',\n\tddarr: '\\u21CA',\n\tDDotrahd: '\\u2911',\n\tddotseq: '\\u2A77',\n\tdeg: '\\u00B0',\n\tDel: '\\u2207',\n\tDelta: '\\u0394',\n\tdelta: '\\u03B4',\n\tdemptyv: '\\u29B1',\n\tdfisht: '\\u297F',\n\tDfr: '\\uD835\\uDD07',\n\tdfr: '\\uD835\\uDD21',\n\tdHar: '\\u2965',\n\tdharl: '\\u21C3',\n\tdharr: '\\u21C2',\n\tDiacriticalAcute: '\\u00B4',\n\tDiacriticalDot: '\\u02D9',\n\tDiacriticalDoubleAcute: '\\u02DD',\n\tDiacriticalGrave: '\\u0060',\n\tDiacriticalTilde: '\\u02DC',\n\tdiam: '\\u22C4',\n\tDiamond: '\\u22C4',\n\tdiamond: '\\u22C4',\n\tdiamondsuit: '\\u2666',\n\tdiams: '\\u2666',\n\tdie: '\\u00A8',\n\tDifferentialD: '\\u2146',\n\tdigamma: '\\u03DD',\n\tdisin: '\\u22F2',\n\tdiv: '\\u00F7',\n\tdivide: '\\u00F7',\n\tdivideontimes: '\\u22C7',\n\tdivonx: '\\u22C7',\n\tDJcy: '\\u0402',\n\tdjcy: '\\u0452',\n\tdlcorn: '\\u231E',\n\tdlcrop: '\\u230D',\n\tdollar: '\\u0024',\n\tDopf: '\\uD835\\uDD3B',\n\tdopf: '\\uD835\\uDD55',\n\tDot: '\\u00A8',\n\tdot: '\\u02D9',\n\tDotDot: '\\u20DC',\n\tdoteq: '\\u2250',\n\tdoteqdot: '\\u2251',\n\tDotEqual: '\\u2250',\n\tdotminus: '\\u2238',\n\tdotplus: '\\u2214',\n\tdotsquare: '\\u22A1',\n\tdoublebarwedge: '\\u2306',\n\tDoubleContourIntegral: '\\u222F',\n\tDoubleDot: '\\u00A8',\n\tDoubleDownArrow: '\\u21D3',\n\tDoubleLeftArrow: '\\u21D0',\n\tDoubleLeftRightArrow: '\\u21D4',\n\tDoubleLeftTee: '\\u2AE4',\n\tDoubleLongLeftArrow: '\\u27F8',\n\tDoubleLongLeftRightArrow: '\\u27FA',\n\tDoubleLongRightArrow: '\\u27F9',\n\tDoubleRightArrow: '\\u21D2',\n\tDoubleRightTee: '\\u22A8',\n\tDoubleUpArrow: '\\u21D1',\n\tDoubleUpDownArrow: '\\u21D5',\n\tDoubleVerticalBar: '\\u2225',\n\tDownArrow: '\\u2193',\n\tDownarrow: '\\u21D3',\n\tdownarrow: '\\u2193',\n\tDownArrowBar: '\\u2913',\n\tDownArrowUpArrow: '\\u21F5',\n\tDownBreve: '\\u0311',\n\tdowndownarrows: '\\u21CA',\n\tdownharpoonleft: '\\u21C3',\n\tdownharpoonright: '\\u21C2',\n\tDownLeftRightVector: '\\u2950',\n\tDownLeftTeeVector: '\\u295E',\n\tDownLeftVector: '\\u21BD',\n\tDownLeftVectorBar: '\\u2956',\n\tDownRightTeeVector: '\\u295F',\n\tDownRightVector: '\\u21C1',\n\tDownRightVectorBar: '\\u2957',\n\tDownTee: '\\u22A4',\n\tDownTeeArrow: '\\u21A7',\n\tdrbkarow: '\\u2910',\n\tdrcorn: '\\u231F',\n\tdrcrop: '\\u230C',\n\tDscr: '\\uD835\\uDC9F',\n\tdscr: '\\uD835\\uDCB9',\n\tDScy: '\\u0405',\n\tdscy: '\\u0455',\n\tdsol: '\\u29F6',\n\tDstrok: '\\u0110',\n\tdstrok: '\\u0111',\n\tdtdot: '\\u22F1',\n\tdtri: '\\u25BF',\n\tdtrif: '\\u25BE',\n\tduarr: '\\u21F5',\n\tduhar: '\\u296F',\n\tdwangle: '\\u29A6',\n\tDZcy: '\\u040F',\n\tdzcy: '\\u045F',\n\tdzigrarr: '\\u27FF',\n\tEacute: '\\u00C9',\n\teacute: '\\u00E9',\n\teaster: '\\u2A6E',\n\tEcaron: '\\u011A',\n\tecaron: '\\u011B',\n\tecir: '\\u2256',\n\tEcirc: '\\u00CA',\n\tecirc: '\\u00EA',\n\tecolon: '\\u2255',\n\tEcy: '\\u042D',\n\tecy: '\\u044D',\n\teDDot: '\\u2A77',\n\tEdot: '\\u0116',\n\teDot: '\\u2251',\n\tedot: '\\u0117',\n\tee: '\\u2147',\n\tefDot: '\\u2252',\n\tEfr: '\\uD835\\uDD08',\n\tefr: '\\uD835\\uDD22',\n\teg: '\\u2A9A',\n\tEgrave: '\\u00C8',\n\tegrave: '\\u00E8',\n\tegs: '\\u2A96',\n\tegsdot: '\\u2A98',\n\tel: '\\u2A99',\n\tElement: '\\u2208',\n\telinters: '\\u23E7',\n\tell: '\\u2113',\n\tels: '\\u2A95',\n\telsdot: '\\u2A97',\n\tEmacr: '\\u0112',\n\temacr: '\\u0113',\n\tempty: '\\u2205',\n\temptyset: '\\u2205',\n\tEmptySmallSquare: '\\u25FB',\n\temptyv: '\\u2205',\n\tEmptyVerySmallSquare: '\\u25AB',\n\temsp: '\\u2003',\n\temsp13: '\\u2004',\n\temsp14: '\\u2005',\n\tENG: '\\u014A',\n\teng: '\\u014B',\n\tensp: '\\u2002',\n\tEogon: '\\u0118',\n\teogon: '\\u0119',\n\tEopf: '\\uD835\\uDD3C',\n\teopf: '\\uD835\\uDD56',\n\tepar: '\\u22D5',\n\teparsl: '\\u29E3',\n\teplus: '\\u2A71',\n\tepsi: '\\u03B5',\n\tEpsilon: '\\u0395',\n\tepsilon: '\\u03B5',\n\tepsiv: '\\u03F5',\n\teqcirc: '\\u2256',\n\teqcolon: '\\u2255',\n\teqsim: '\\u2242',\n\teqslantgtr: '\\u2A96',\n\teqslantless: '\\u2A95',\n\tEqual: '\\u2A75',\n\tequals: '\\u003D',\n\tEqualTilde: '\\u2242',\n\tequest: '\\u225F',\n\tEquilibrium: '\\u21CC',\n\tequiv: '\\u2261',\n\tequivDD: '\\u2A78',\n\teqvparsl: '\\u29E5',\n\terarr: '\\u2971',\n\terDot: '\\u2253',\n\tEscr: '\\u2130',\n\tescr: '\\u212F',\n\tesdot: '\\u2250',\n\tEsim: '\\u2A73',\n\tesim: '\\u2242',\n\tEta: '\\u0397',\n\teta: '\\u03B7',\n\tETH: '\\u00D0',\n\teth: '\\u00F0',\n\tEuml: '\\u00CB',\n\teuml: '\\u00EB',\n\teuro: '\\u20AC',\n\texcl: '\\u0021',\n\texist: '\\u2203',\n\tExists: '\\u2203',\n\texpectation: '\\u2130',\n\tExponentialE: '\\u2147',\n\texponentiale: '\\u2147',\n\tfallingdotseq: '\\u2252',\n\tFcy: '\\u0424',\n\tfcy: '\\u0444',\n\tfemale: '\\u2640',\n\tffilig: '\\uFB03',\n\tfflig: '\\uFB00',\n\tffllig: '\\uFB04',\n\tFfr: '\\uD835\\uDD09',\n\tffr: '\\uD835\\uDD23',\n\tfilig: '\\uFB01',\n\tFilledSmallSquare: '\\u25FC',\n\tFilledVerySmallSquare: '\\u25AA',\n\tfjlig: '\\u0066\\u006A',\n\tflat: '\\u266D',\n\tfllig: '\\uFB02',\n\tfltns: '\\u25B1',\n\tfnof: '\\u0192',\n\tFopf: '\\uD835\\uDD3D',\n\tfopf: '\\uD835\\uDD57',\n\tForAll: '\\u2200',\n\tforall: '\\u2200',\n\tfork: '\\u22D4',\n\tforkv: '\\u2AD9',\n\tFouriertrf: '\\u2131',\n\tfpartint: '\\u2A0D',\n\tfrac12: '\\u00BD',\n\tfrac13: '\\u2153',\n\tfrac14: '\\u00BC',\n\tfrac15: '\\u2155',\n\tfrac16: '\\u2159',\n\tfrac18: '\\u215B',\n\tfrac23: '\\u2154',\n\tfrac25: '\\u2156',\n\tfrac34: '\\u00BE',\n\tfrac35: '\\u2157',\n\tfrac38: '\\u215C',\n\tfrac45: '\\u2158',\n\tfrac56: '\\u215A',\n\tfrac58: '\\u215D',\n\tfrac78: '\\u215E',\n\tfrasl: '\\u2044',\n\tfrown: '\\u2322',\n\tFscr: '\\u2131',\n\tfscr: '\\uD835\\uDCBB',\n\tgacute: '\\u01F5',\n\tGamma: '\\u0393',\n\tgamma: '\\u03B3',\n\tGammad: '\\u03DC',\n\tgammad: '\\u03DD',\n\tgap: '\\u2A86',\n\tGbreve: '\\u011E',\n\tgbreve: '\\u011F',\n\tGcedil: '\\u0122',\n\tGcirc: '\\u011C',\n\tgcirc: '\\u011D',\n\tGcy: '\\u0413',\n\tgcy: '\\u0433',\n\tGdot: '\\u0120',\n\tgdot: '\\u0121',\n\tgE: '\\u2267',\n\tge: '\\u2265',\n\tgEl: '\\u2A8C',\n\tgel: '\\u22DB',\n\tgeq: '\\u2265',\n\tgeqq: '\\u2267',\n\tgeqslant: '\\u2A7E',\n\tges: '\\u2A7E',\n\tgescc: '\\u2AA9',\n\tgesdot: '\\u2A80',\n\tgesdoto: '\\u2A82',\n\tgesdotol: '\\u2A84',\n\tgesl: '\\u22DB\\uFE00',\n\tgesles: '\\u2A94',\n\tGfr: '\\uD835\\uDD0A',\n\tgfr: '\\uD835\\uDD24',\n\tGg: '\\u22D9',\n\tgg: '\\u226B',\n\tggg: '\\u22D9',\n\tgimel: '\\u2137',\n\tGJcy: '\\u0403',\n\tgjcy: '\\u0453',\n\tgl: '\\u2277',\n\tgla: '\\u2AA5',\n\tglE: '\\u2A92',\n\tglj: '\\u2AA4',\n\tgnap: '\\u2A8A',\n\tgnapprox: '\\u2A8A',\n\tgnE: '\\u2269',\n\tgne: '\\u2A88',\n\tgneq: '\\u2A88',\n\tgneqq: '\\u2269',\n\tgnsim: '\\u22E7',\n\tGopf: '\\uD835\\uDD3E',\n\tgopf: '\\uD835\\uDD58',\n\tgrave: '\\u0060',\n\tGreaterEqual: '\\u2265',\n\tGreaterEqualLess: '\\u22DB',\n\tGreaterFullEqual: '\\u2267',\n\tGreaterGreater: '\\u2AA2',\n\tGreaterLess: '\\u2277',\n\tGreaterSlantEqual: '\\u2A7E',\n\tGreaterTilde: '\\u2273',\n\tGscr: '\\uD835\\uDCA2',\n\tgscr: '\\u210A',\n\tgsim: '\\u2273',\n\tgsime: '\\u2A8E',\n\tgsiml: '\\u2A90',\n\tGt: '\\u226B',\n\tGT: '\\u003E',\n\tgt: '\\u003E',\n\tgtcc: '\\u2AA7',\n\tgtcir: '\\u2A7A',\n\tgtdot: '\\u22D7',\n\tgtlPar: '\\u2995',\n\tgtquest: '\\u2A7C',\n\tgtrapprox: '\\u2A86',\n\tgtrarr: '\\u2978',\n\tgtrdot: '\\u22D7',\n\tgtreqless: '\\u22DB',\n\tgtreqqless: '\\u2A8C',\n\tgtrless: '\\u2277',\n\tgtrsim: '\\u2273',\n\tgvertneqq: '\\u2269\\uFE00',\n\tgvnE: '\\u2269\\uFE00',\n\tHacek: '\\u02C7',\n\thairsp: '\\u200A',\n\thalf: '\\u00BD',\n\thamilt: '\\u210B',\n\tHARDcy: '\\u042A',\n\thardcy: '\\u044A',\n\thArr: '\\u21D4',\n\tharr: '\\u2194',\n\tharrcir: '\\u2948',\n\tharrw: '\\u21AD',\n\tHat: '\\u005E',\n\thbar: '\\u210F',\n\tHcirc: '\\u0124',\n\thcirc: '\\u0125',\n\thearts: '\\u2665',\n\theartsuit: '\\u2665',\n\thellip: '\\u2026',\n\thercon: '\\u22B9',\n\tHfr: '\\u210C',\n\thfr: '\\uD835\\uDD25',\n\tHilbertSpace: '\\u210B',\n\thksearow: '\\u2925',\n\thkswarow: '\\u2926',\n\thoarr: '\\u21FF',\n\thomtht: '\\u223B',\n\thookleftarrow: '\\u21A9',\n\thookrightarrow: '\\u21AA',\n\tHopf: '\\u210D',\n\thopf: '\\uD835\\uDD59',\n\thorbar: '\\u2015',\n\tHorizontalLine: '\\u2500',\n\tHscr: '\\u210B',\n\thscr: '\\uD835\\uDCBD',\n\thslash: '\\u210F',\n\tHstrok: '\\u0126',\n\thstrok: '\\u0127',\n\tHumpDownHump: '\\u224E',\n\tHumpEqual: '\\u224F',\n\thybull: '\\u2043',\n\thyphen: '\\u2010',\n\tIacute: '\\u00CD',\n\tiacute: '\\u00ED',\n\tic: '\\u2063',\n\tIcirc: '\\u00CE',\n\ticirc: '\\u00EE',\n\tIcy: '\\u0418',\n\ticy: '\\u0438',\n\tIdot: '\\u0130',\n\tIEcy: '\\u0415',\n\tiecy: '\\u0435',\n\tiexcl: '\\u00A1',\n\tiff: '\\u21D4',\n\tIfr: '\\u2111',\n\tifr: '\\uD835\\uDD26',\n\tIgrave: '\\u00CC',\n\tigrave: '\\u00EC',\n\tii: '\\u2148',\n\tiiiint: '\\u2A0C',\n\tiiint: '\\u222D',\n\tiinfin: '\\u29DC',\n\tiiota: '\\u2129',\n\tIJlig: '\\u0132',\n\tijlig: '\\u0133',\n\tIm: '\\u2111',\n\tImacr: '\\u012A',\n\timacr: '\\u012B',\n\timage: '\\u2111',\n\tImaginaryI: '\\u2148',\n\timagline: '\\u2110',\n\timagpart: '\\u2111',\n\timath: '\\u0131',\n\timof: '\\u22B7',\n\timped: '\\u01B5',\n\tImplies: '\\u21D2',\n\tin: '\\u2208',\n\tincare: '\\u2105',\n\tinfin: '\\u221E',\n\tinfintie: '\\u29DD',\n\tinodot: '\\u0131',\n\tInt: '\\u222C',\n\tint: '\\u222B',\n\tintcal: '\\u22BA',\n\tintegers: '\\u2124',\n\tIntegral: '\\u222B',\n\tintercal: '\\u22BA',\n\tIntersection: '\\u22C2',\n\tintlarhk: '\\u2A17',\n\tintprod: '\\u2A3C',\n\tInvisibleComma: '\\u2063',\n\tInvisibleTimes: '\\u2062',\n\tIOcy: '\\u0401',\n\tiocy: '\\u0451',\n\tIogon: '\\u012E',\n\tiogon: '\\u012F',\n\tIopf: '\\uD835\\uDD40',\n\tiopf: '\\uD835\\uDD5A',\n\tIota: '\\u0399',\n\tiota: '\\u03B9',\n\tiprod: '\\u2A3C',\n\tiquest: '\\u00BF',\n\tIscr: '\\u2110',\n\tiscr: '\\uD835\\uDCBE',\n\tisin: '\\u2208',\n\tisindot: '\\u22F5',\n\tisinE: '\\u22F9',\n\tisins: '\\u22F4',\n\tisinsv: '\\u22F3',\n\tisinv: '\\u2208',\n\tit: '\\u2062',\n\tItilde: '\\u0128',\n\titilde: '\\u0129',\n\tIukcy: '\\u0406',\n\tiukcy: '\\u0456',\n\tIuml: '\\u00CF',\n\tiuml: '\\u00EF',\n\tJcirc: '\\u0134',\n\tjcirc: '\\u0135',\n\tJcy: '\\u0419',\n\tjcy: '\\u0439',\n\tJfr: '\\uD835\\uDD0D',\n\tjfr: '\\uD835\\uDD27',\n\tjmath: '\\u0237',\n\tJopf: '\\uD835\\uDD41',\n\tjopf: '\\uD835\\uDD5B',\n\tJscr: '\\uD835\\uDCA5',\n\tjscr: '\\uD835\\uDCBF',\n\tJsercy: '\\u0408',\n\tjsercy: '\\u0458',\n\tJukcy: '\\u0404',\n\tjukcy: '\\u0454',\n\tKappa: '\\u039A',\n\tkappa: '\\u03BA',\n\tkappav: '\\u03F0',\n\tKcedil: '\\u0136',\n\tkcedil: '\\u0137',\n\tKcy: '\\u041A',\n\tkcy: '\\u043A',\n\tKfr: '\\uD835\\uDD0E',\n\tkfr: '\\uD835\\uDD28',\n\tkgreen: '\\u0138',\n\tKHcy: '\\u0425',\n\tkhcy: '\\u0445',\n\tKJcy: '\\u040C',\n\tkjcy: '\\u045C',\n\tKopf: '\\uD835\\uDD42',\n\tkopf: '\\uD835\\uDD5C',\n\tKscr: '\\uD835\\uDCA6',\n\tkscr: '\\uD835\\uDCC0',\n\tlAarr: '\\u21DA',\n\tLacute: '\\u0139',\n\tlacute: '\\u013A',\n\tlaemptyv: '\\u29B4',\n\tlagran: '\\u2112',\n\tLambda: '\\u039B',\n\tlambda: '\\u03BB',\n\tLang: '\\u27EA',\n\tlang: '\\u27E8',\n\tlangd: '\\u2991',\n\tlangle: '\\u27E8',\n\tlap: '\\u2A85',\n\tLaplacetrf: '\\u2112',\n\tlaquo: '\\u00AB',\n\tLarr: '\\u219E',\n\tlArr: '\\u21D0',\n\tlarr: '\\u2190',\n\tlarrb: '\\u21E4',\n\tlarrbfs: '\\u291F',\n\tlarrfs: '\\u291D',\n\tlarrhk: '\\u21A9',\n\tlarrlp: '\\u21AB',\n\tlarrpl: '\\u2939',\n\tlarrsim: '\\u2973',\n\tlarrtl: '\\u21A2',\n\tlat: '\\u2AAB',\n\tlAtail: '\\u291B',\n\tlatail: '\\u2919',\n\tlate: '\\u2AAD',\n\tlates: '\\u2AAD\\uFE00',\n\tlBarr: '\\u290E',\n\tlbarr: '\\u290C',\n\tlbbrk: '\\u2772',\n\tlbrace: '\\u007B',\n\tlbrack: '\\u005B',\n\tlbrke: '\\u298B',\n\tlbrksld: '\\u298F',\n\tlbrkslu: '\\u298D',\n\tLcaron: '\\u013D',\n\tlcaron: '\\u013E',\n\tLcedil: '\\u013B',\n\tlcedil: '\\u013C',\n\tlceil: '\\u2308',\n\tlcub: '\\u007B',\n\tLcy: '\\u041B',\n\tlcy: '\\u043B',\n\tldca: '\\u2936',\n\tldquo: '\\u201C',\n\tldquor: '\\u201E',\n\tldrdhar: '\\u2967',\n\tldrushar: '\\u294B',\n\tldsh: '\\u21B2',\n\tlE: '\\u2266',\n\tle: '\\u2264',\n\tLeftAngleBracket: '\\u27E8',\n\tLeftArrow: '\\u2190',\n\tLeftarrow: '\\u21D0',\n\tleftarrow: '\\u2190',\n\tLeftArrowBar: '\\u21E4',\n\tLeftArrowRightArrow: '\\u21C6',\n\tleftarrowtail: '\\u21A2',\n\tLeftCeiling: '\\u2308',\n\tLeftDoubleBracket: '\\u27E6',\n\tLeftDownTeeVector: '\\u2961',\n\tLeftDownVector: '\\u21C3',\n\tLeftDownVectorBar: '\\u2959',\n\tLeftFloor: '\\u230A',\n\tleftharpoondown: '\\u21BD',\n\tleftharpoonup: '\\u21BC',\n\tleftleftarrows: '\\u21C7',\n\tLeftRightArrow: '\\u2194',\n\tLeftrightarrow: '\\u21D4',\n\tleftrightarrow: '\\u2194',\n\tleftrightarrows: '\\u21C6',\n\tleftrightharpoons: '\\u21CB',\n\tleftrightsquigarrow: '\\u21AD',\n\tLeftRightVector: '\\u294E',\n\tLeftTee: '\\u22A3',\n\tLeftTeeArrow: '\\u21A4',\n\tLeftTeeVector: '\\u295A',\n\tleftthreetimes: '\\u22CB',\n\tLeftTriangle: '\\u22B2',\n\tLeftTriangleBar: '\\u29CF',\n\tLeftTriangleEqual: '\\u22B4',\n\tLeftUpDownVector: '\\u2951',\n\tLeftUpTeeVector: '\\u2960',\n\tLeftUpVector: '\\u21BF',\n\tLeftUpVectorBar: '\\u2958',\n\tLeftVector: '\\u21BC',\n\tLeftVectorBar: '\\u2952',\n\tlEg: '\\u2A8B',\n\tleg: '\\u22DA',\n\tleq: '\\u2264',\n\tleqq: '\\u2266',\n\tleqslant: '\\u2A7D',\n\tles: '\\u2A7D',\n\tlescc: '\\u2AA8',\n\tlesdot: '\\u2A7F',\n\tlesdoto: '\\u2A81',\n\tlesdotor: '\\u2A83',\n\tlesg: '\\u22DA\\uFE00',\n\tlesges: '\\u2A93',\n\tlessapprox: '\\u2A85',\n\tlessdot: '\\u22D6',\n\tlesseqgtr: '\\u22DA',\n\tlesseqqgtr: '\\u2A8B',\n\tLessEqualGreater: '\\u22DA',\n\tLessFullEqual: '\\u2266',\n\tLessGreater: '\\u2276',\n\tlessgtr: '\\u2276',\n\tLessLess: '\\u2AA1',\n\tlesssim: '\\u2272',\n\tLessSlantEqual: '\\u2A7D',\n\tLessTilde: '\\u2272',\n\tlfisht: '\\u297C',\n\tlfloor: '\\u230A',\n\tLfr: '\\uD835\\uDD0F',\n\tlfr: '\\uD835\\uDD29',\n\tlg: '\\u2276',\n\tlgE: '\\u2A91',\n\tlHar: '\\u2962',\n\tlhard: '\\u21BD',\n\tlharu: '\\u21BC',\n\tlharul: '\\u296A',\n\tlhblk: '\\u2584',\n\tLJcy: '\\u0409',\n\tljcy: '\\u0459',\n\tLl: '\\u22D8',\n\tll: '\\u226A',\n\tllarr: '\\u21C7',\n\tllcorner: '\\u231E',\n\tLleftarrow: '\\u21DA',\n\tllhard: '\\u296B',\n\tlltri: '\\u25FA',\n\tLmidot: '\\u013F',\n\tlmidot: '\\u0140',\n\tlmoust: '\\u23B0',\n\tlmoustache: '\\u23B0',\n\tlnap: '\\u2A89',\n\tlnapprox: '\\u2A89',\n\tlnE: '\\u2268',\n\tlne: '\\u2A87',\n\tlneq: '\\u2A87',\n\tlneqq: '\\u2268',\n\tlnsim: '\\u22E6',\n\tloang: '\\u27EC',\n\tloarr: '\\u21FD',\n\tlobrk: '\\u27E6',\n\tLongLeftArrow: '\\u27F5',\n\tLongleftarrow: '\\u27F8',\n\tlongleftarrow: '\\u27F5',\n\tLongLeftRightArrow: '\\u27F7',\n\tLongleftrightarrow: '\\u27FA',\n\tlongleftrightarrow: '\\u27F7',\n\tlongmapsto: '\\u27FC',\n\tLongRightArrow: '\\u27F6',\n\tLongrightarrow: '\\u27F9',\n\tlongrightarrow: '\\u27F6',\n\tlooparrowleft: '\\u21AB',\n\tlooparrowright: '\\u21AC',\n\tlopar: '\\u2985',\n\tLopf: '\\uD835\\uDD43',\n\tlopf: '\\uD835\\uDD5D',\n\tloplus: '\\u2A2D',\n\tlotimes: '\\u2A34',\n\tlowast: '\\u2217',\n\tlowbar: '\\u005F',\n\tLowerLeftArrow: '\\u2199',\n\tLowerRightArrow: '\\u2198',\n\tloz: '\\u25CA',\n\tlozenge: '\\u25CA',\n\tlozf: '\\u29EB',\n\tlpar: '\\u0028',\n\tlparlt: '\\u2993',\n\tlrarr: '\\u21C6',\n\tlrcorner: '\\u231F',\n\tlrhar: '\\u21CB',\n\tlrhard: '\\u296D',\n\tlrm: '\\u200E',\n\tlrtri: '\\u22BF',\n\tlsaquo: '\\u2039',\n\tLscr: '\\u2112',\n\tlscr: '\\uD835\\uDCC1',\n\tLsh: '\\u21B0',\n\tlsh: '\\u21B0',\n\tlsim: '\\u2272',\n\tlsime: '\\u2A8D',\n\tlsimg: '\\u2A8F',\n\tlsqb: '\\u005B',\n\tlsquo: '\\u2018',\n\tlsquor: '\\u201A',\n\tLstrok: '\\u0141',\n\tlstrok: '\\u0142',\n\tLt: '\\u226A',\n\tLT: '\\u003C',\n\tlt: '\\u003C',\n\tltcc: '\\u2AA6',\n\tltcir: '\\u2A79',\n\tltdot: '\\u22D6',\n\tlthree: '\\u22CB',\n\tltimes: '\\u22C9',\n\tltlarr: '\\u2976',\n\tltquest: '\\u2A7B',\n\tltri: '\\u25C3',\n\tltrie: '\\u22B4',\n\tltrif: '\\u25C2',\n\tltrPar: '\\u2996',\n\tlurdshar: '\\u294A',\n\tluruhar: '\\u2966',\n\tlvertneqq: '\\u2268\\uFE00',\n\tlvnE: '\\u2268\\uFE00',\n\tmacr: '\\u00AF',\n\tmale: '\\u2642',\n\tmalt: '\\u2720',\n\tmaltese: '\\u2720',\n\tMap: '\\u2905',\n\tmap: '\\u21A6',\n\tmapsto: '\\u21A6',\n\tmapstodown: '\\u21A7',\n\tmapstoleft: '\\u21A4',\n\tmapstoup: '\\u21A5',\n\tmarker: '\\u25AE',\n\tmcomma: '\\u2A29',\n\tMcy: '\\u041C',\n\tmcy: '\\u043C',\n\tmdash: '\\u2014',\n\tmDDot: '\\u223A',\n\tmeasuredangle: '\\u2221',\n\tMediumSpace: '\\u205F',\n\tMellintrf: '\\u2133',\n\tMfr: '\\uD835\\uDD10',\n\tmfr: '\\uD835\\uDD2A',\n\tmho: '\\u2127',\n\tmicro: '\\u00B5',\n\tmid: '\\u2223',\n\tmidast: '\\u002A',\n\tmidcir: '\\u2AF0',\n\tmiddot: '\\u00B7',\n\tminus: '\\u2212',\n\tminusb: '\\u229F',\n\tminusd: '\\u2238',\n\tminusdu: '\\u2A2A',\n\tMinusPlus: '\\u2213',\n\tmlcp: '\\u2ADB',\n\tmldr: '\\u2026',\n\tmnplus: '\\u2213',\n\tmodels: '\\u22A7',\n\tMopf: '\\uD835\\uDD44',\n\tmopf: '\\uD835\\uDD5E',\n\tmp: '\\u2213',\n\tMscr: '\\u2133',\n\tmscr: '\\uD835\\uDCC2',\n\tmstpos: '\\u223E',\n\tMu: '\\u039C',\n\tmu: '\\u03BC',\n\tmultimap: '\\u22B8',\n\tmumap: '\\u22B8',\n\tnabla: '\\u2207',\n\tNacute: '\\u0143',\n\tnacute: '\\u0144',\n\tnang: '\\u2220\\u20D2',\n\tnap: '\\u2249',\n\tnapE: '\\u2A70\\u0338',\n\tnapid: '\\u224B\\u0338',\n\tnapos: '\\u0149',\n\tnapprox: '\\u2249',\n\tnatur: '\\u266E',\n\tnatural: '\\u266E',\n\tnaturals: '\\u2115',\n\tnbsp: '\\u00A0',\n\tnbump: '\\u224E\\u0338',\n\tnbumpe: '\\u224F\\u0338',\n\tncap: '\\u2A43',\n\tNcaron: '\\u0147',\n\tncaron: '\\u0148',\n\tNcedil: '\\u0145',\n\tncedil: '\\u0146',\n\tncong: '\\u2247',\n\tncongdot: '\\u2A6D\\u0338',\n\tncup: '\\u2A42',\n\tNcy: '\\u041D',\n\tncy: '\\u043D',\n\tndash: '\\u2013',\n\tne: '\\u2260',\n\tnearhk: '\\u2924',\n\tneArr: '\\u21D7',\n\tnearr: '\\u2197',\n\tnearrow: '\\u2197',\n\tnedot: '\\u2250\\u0338',\n\tNegativeMediumSpace: '\\u200B',\n\tNegativeThickSpace: '\\u200B',\n\tNegativeThinSpace: '\\u200B',\n\tNegativeVeryThinSpace: '\\u200B',\n\tnequiv: '\\u2262',\n\tnesear: '\\u2928',\n\tnesim: '\\u2242\\u0338',\n\tNestedGreaterGreater: '\\u226B',\n\tNestedLessLess: '\\u226A',\n\tNewLine: '\\u000A',\n\tnexist: '\\u2204',\n\tnexists: '\\u2204',\n\tNfr: '\\uD835\\uDD11',\n\tnfr: '\\uD835\\uDD2B',\n\tngE: '\\u2267\\u0338',\n\tnge: '\\u2271',\n\tngeq: '\\u2271',\n\tngeqq: '\\u2267\\u0338',\n\tngeqslant: '\\u2A7E\\u0338',\n\tnges: '\\u2A7E\\u0338',\n\tnGg: '\\u22D9\\u0338',\n\tngsim: '\\u2275',\n\tnGt: '\\u226B\\u20D2',\n\tngt: '\\u226F',\n\tngtr: '\\u226F',\n\tnGtv: '\\u226B\\u0338',\n\tnhArr: '\\u21CE',\n\tnharr: '\\u21AE',\n\tnhpar: '\\u2AF2',\n\tni: '\\u220B',\n\tnis: '\\u22FC',\n\tnisd: '\\u22FA',\n\tniv: '\\u220B',\n\tNJcy: '\\u040A',\n\tnjcy: '\\u045A',\n\tnlArr: '\\u21CD',\n\tnlarr: '\\u219A',\n\tnldr: '\\u2025',\n\tnlE: '\\u2266\\u0338',\n\tnle: '\\u2270',\n\tnLeftarrow: '\\u21CD',\n\tnleftarrow: '\\u219A',\n\tnLeftrightarrow: '\\u21CE',\n\tnleftrightarrow: '\\u21AE',\n\tnleq: '\\u2270',\n\tnleqq: '\\u2266\\u0338',\n\tnleqslant: '\\u2A7D\\u0338',\n\tnles: '\\u2A7D\\u0338',\n\tnless: '\\u226E',\n\tnLl: '\\u22D8\\u0338',\n\tnlsim: '\\u2274',\n\tnLt: '\\u226A\\u20D2',\n\tnlt: '\\u226E',\n\tnltri: '\\u22EA',\n\tnltrie: '\\u22EC',\n\tnLtv: '\\u226A\\u0338',\n\tnmid: '\\u2224',\n\tNoBreak: '\\u2060',\n\tNonBreakingSpace: '\\u00A0',\n\tNopf: '\\u2115',\n\tnopf: '\\uD835\\uDD5F',\n\tNot: '\\u2AEC',\n\tnot: '\\u00AC',\n\tNotCongruent: '\\u2262',\n\tNotCupCap: '\\u226D',\n\tNotDoubleVerticalBar: '\\u2226',\n\tNotElement: '\\u2209',\n\tNotEqual: '\\u2260',\n\tNotEqualTilde: '\\u2242\\u0338',\n\tNotExists: '\\u2204',\n\tNotGreater: '\\u226F',\n\tNotGreaterEqual: '\\u2271',\n\tNotGreaterFullEqual: '\\u2267\\u0338',\n\tNotGreaterGreater: '\\u226B\\u0338',\n\tNotGreaterLess: '\\u2279',\n\tNotGreaterSlantEqual: '\\u2A7E\\u0338',\n\tNotGreaterTilde: '\\u2275',\n\tNotHumpDownHump: '\\u224E\\u0338',\n\tNotHumpEqual: '\\u224F\\u0338',\n\tnotin: '\\u2209',\n\tnotindot: '\\u22F5\\u0338',\n\tnotinE: '\\u22F9\\u0338',\n\tnotinva: '\\u2209',\n\tnotinvb: '\\u22F7',\n\tnotinvc: '\\u22F6',\n\tNotLeftTriangle: '\\u22EA',\n\tNotLeftTriangleBar: '\\u29CF\\u0338',\n\tNotLeftTriangleEqual: '\\u22EC',\n\tNotLess: '\\u226E',\n\tNotLessEqual: '\\u2270',\n\tNotLessGreater: '\\u2278',\n\tNotLessLess: '\\u226A\\u0338',\n\tNotLessSlantEqual: '\\u2A7D\\u0338',\n\tNotLessTilde: '\\u2274',\n\tNotNestedGreaterGreater: '\\u2AA2\\u0338',\n\tNotNestedLessLess: '\\u2AA1\\u0338',\n\tnotni: '\\u220C',\n\tnotniva: '\\u220C',\n\tnotnivb: '\\u22FE',\n\tnotnivc: '\\u22FD',\n\tNotPrecedes: '\\u2280',\n\tNotPrecedesEqual: '\\u2AAF\\u0338',\n\tNotPrecedesSlantEqual: '\\u22E0',\n\tNotReverseElement: '\\u220C',\n\tNotRightTriangle: '\\u22EB',\n\tNotRightTriangleBar: '\\u29D0\\u0338',\n\tNotRightTriangleEqual: '\\u22ED',\n\tNotSquareSubset: '\\u228F\\u0338',\n\tNotSquareSubsetEqual: '\\u22E2',\n\tNotSquareSuperset: '\\u2290\\u0338',\n\tNotSquareSupersetEqual: '\\u22E3',\n\tNotSubset: '\\u2282\\u20D2',\n\tNotSubsetEqual: '\\u2288',\n\tNotSucceeds: '\\u2281',\n\tNotSucceedsEqual: '\\u2AB0\\u0338',\n\tNotSucceedsSlantEqual: '\\u22E1',\n\tNotSucceedsTilde: '\\u227F\\u0338',\n\tNotSuperset: '\\u2283\\u20D2',\n\tNotSupersetEqual: '\\u2289',\n\tNotTilde: '\\u2241',\n\tNotTildeEqual: '\\u2244',\n\tNotTildeFullEqual: '\\u2247',\n\tNotTildeTilde: '\\u2249',\n\tNotVerticalBar: '\\u2224',\n\tnpar: '\\u2226',\n\tnparallel: '\\u2226',\n\tnparsl: '\\u2AFD\\u20E5',\n\tnpart: '\\u2202\\u0338',\n\tnpolint: '\\u2A14',\n\tnpr: '\\u2280',\n\tnprcue: '\\u22E0',\n\tnpre: '\\u2AAF\\u0338',\n\tnprec: '\\u2280',\n\tnpreceq: '\\u2AAF\\u0338',\n\tnrArr: '\\u21CF',\n\tnrarr: '\\u219B',\n\tnrarrc: '\\u2933\\u0338',\n\tnrarrw: '\\u219D\\u0338',\n\tnRightarrow: '\\u21CF',\n\tnrightarrow: '\\u219B',\n\tnrtri: '\\u22EB',\n\tnrtrie: '\\u22ED',\n\tnsc: '\\u2281',\n\tnsccue: '\\u22E1',\n\tnsce: '\\u2AB0\\u0338',\n\tNscr: '\\uD835\\uDCA9',\n\tnscr: '\\uD835\\uDCC3',\n\tnshortmid: '\\u2224',\n\tnshortparallel: '\\u2226',\n\tnsim: '\\u2241',\n\tnsime: '\\u2244',\n\tnsimeq: '\\u2244',\n\tnsmid: '\\u2224',\n\tnspar: '\\u2226',\n\tnsqsube: '\\u22E2',\n\tnsqsupe: '\\u22E3',\n\tnsub: '\\u2284',\n\tnsubE: '\\u2AC5\\u0338',\n\tnsube: '\\u2288',\n\tnsubset: '\\u2282\\u20D2',\n\tnsubseteq: '\\u2288',\n\tnsubseteqq: '\\u2AC5\\u0338',\n\tnsucc: '\\u2281',\n\tnsucceq: '\\u2AB0\\u0338',\n\tnsup: '\\u2285',\n\tnsupE: '\\u2AC6\\u0338',\n\tnsupe: '\\u2289',\n\tnsupset: '\\u2283\\u20D2',\n\tnsupseteq: '\\u2289',\n\tnsupseteqq: '\\u2AC6\\u0338',\n\tntgl: '\\u2279',\n\tNtilde: '\\u00D1',\n\tntilde: '\\u00F1',\n\tntlg: '\\u2278',\n\tntriangleleft: '\\u22EA',\n\tntrianglelefteq: '\\u22EC',\n\tntriangleright: '\\u22EB',\n\tntrianglerighteq: '\\u22ED',\n\tNu: '\\u039D',\n\tnu: '\\u03BD',\n\tnum: '\\u0023',\n\tnumero: '\\u2116',\n\tnumsp: '\\u2007',\n\tnvap: '\\u224D\\u20D2',\n\tnVDash: '\\u22AF',\n\tnVdash: '\\u22AE',\n\tnvDash: '\\u22AD',\n\tnvdash: '\\u22AC',\n\tnvge: '\\u2265\\u20D2',\n\tnvgt: '\\u003E\\u20D2',\n\tnvHarr: '\\u2904',\n\tnvinfin: '\\u29DE',\n\tnvlArr: '\\u2902',\n\tnvle: '\\u2264\\u20D2',\n\tnvlt: '\\u003C\\u20D2',\n\tnvltrie: '\\u22B4\\u20D2',\n\tnvrArr: '\\u2903',\n\tnvrtrie: '\\u22B5\\u20D2',\n\tnvsim: '\\u223C\\u20D2',\n\tnwarhk: '\\u2923',\n\tnwArr: '\\u21D6',\n\tnwarr: '\\u2196',\n\tnwarrow: '\\u2196',\n\tnwnear: '\\u2927',\n\tOacute: '\\u00D3',\n\toacute: '\\u00F3',\n\toast: '\\u229B',\n\tocir: '\\u229A',\n\tOcirc: '\\u00D4',\n\tocirc: '\\u00F4',\n\tOcy: '\\u041E',\n\tocy: '\\u043E',\n\todash: '\\u229D',\n\tOdblac: '\\u0150',\n\todblac: '\\u0151',\n\todiv: '\\u2A38',\n\todot: '\\u2299',\n\todsold: '\\u29BC',\n\tOElig: '\\u0152',\n\toelig: '\\u0153',\n\tofcir: '\\u29BF',\n\tOfr: '\\uD835\\uDD12',\n\tofr: '\\uD835\\uDD2C',\n\togon: '\\u02DB',\n\tOgrave: '\\u00D2',\n\tograve: '\\u00F2',\n\togt: '\\u29C1',\n\tohbar: '\\u29B5',\n\tohm: '\\u03A9',\n\toint: '\\u222E',\n\tolarr: '\\u21BA',\n\tolcir: '\\u29BE',\n\tolcross: '\\u29BB',\n\toline: '\\u203E',\n\tolt: '\\u29C0',\n\tOmacr: '\\u014C',\n\tomacr: '\\u014D',\n\tOmega: '\\u03A9',\n\tomega: '\\u03C9',\n\tOmicron: '\\u039F',\n\tomicron: '\\u03BF',\n\tomid: '\\u29B6',\n\tominus: '\\u2296',\n\tOopf: '\\uD835\\uDD46',\n\toopf: '\\uD835\\uDD60',\n\topar: '\\u29B7',\n\tOpenCurlyDoubleQuote: '\\u201C',\n\tOpenCurlyQuote: '\\u2018',\n\toperp: '\\u29B9',\n\toplus: '\\u2295',\n\tOr: '\\u2A54',\n\tor: '\\u2228',\n\torarr: '\\u21BB',\n\tord: '\\u2A5D',\n\torder: '\\u2134',\n\torderof: '\\u2134',\n\tordf: '\\u00AA',\n\tordm: '\\u00BA',\n\torigof: '\\u22B6',\n\toror: '\\u2A56',\n\torslope: '\\u2A57',\n\torv: '\\u2A5B',\n\toS: '\\u24C8',\n\tOscr: '\\uD835\\uDCAA',\n\toscr: '\\u2134',\n\tOslash: '\\u00D8',\n\toslash: '\\u00F8',\n\tosol: '\\u2298',\n\tOtilde: '\\u00D5',\n\totilde: '\\u00F5',\n\tOtimes: '\\u2A37',\n\totimes: '\\u2297',\n\totimesas: '\\u2A36',\n\tOuml: '\\u00D6',\n\touml: '\\u00F6',\n\tovbar: '\\u233D',\n\tOverBar: '\\u203E',\n\tOverBrace: '\\u23DE',\n\tOverBracket: '\\u23B4',\n\tOverParenthesis: '\\u23DC',\n\tpar: '\\u2225',\n\tpara: '\\u00B6',\n\tparallel: '\\u2225',\n\tparsim: '\\u2AF3',\n\tparsl: '\\u2AFD',\n\tpart: '\\u2202',\n\tPartialD: '\\u2202',\n\tPcy: '\\u041F',\n\tpcy: '\\u043F',\n\tpercnt: '\\u0025',\n\tperiod: '\\u002E',\n\tpermil: '\\u2030',\n\tperp: '\\u22A5',\n\tpertenk: '\\u2031',\n\tPfr: '\\uD835\\uDD13',\n\tpfr: '\\uD835\\uDD2D',\n\tPhi: '\\u03A6',\n\tphi: '\\u03C6',\n\tphiv: '\\u03D5',\n\tphmmat: '\\u2133',\n\tphone: '\\u260E',\n\tPi: '\\u03A0',\n\tpi: '\\u03C0',\n\tpitchfork: '\\u22D4',\n\tpiv: '\\u03D6',\n\tplanck: '\\u210F',\n\tplanckh: '\\u210E',\n\tplankv: '\\u210F',\n\tplus: '\\u002B',\n\tplusacir: '\\u2A23',\n\tplusb: '\\u229E',\n\tpluscir: '\\u2A22',\n\tplusdo: '\\u2214',\n\tplusdu: '\\u2A25',\n\tpluse: '\\u2A72',\n\tPlusMinus: '\\u00B1',\n\tplusmn: '\\u00B1',\n\tplussim: '\\u2A26',\n\tplustwo: '\\u2A27',\n\tpm: '\\u00B1',\n\tPoincareplane: '\\u210C',\n\tpointint: '\\u2A15',\n\tPopf: '\\u2119',\n\tpopf: '\\uD835\\uDD61',\n\tpound: '\\u00A3',\n\tPr: '\\u2ABB',\n\tpr: '\\u227A',\n\tprap: '\\u2AB7',\n\tprcue: '\\u227C',\n\tprE: '\\u2AB3',\n\tpre: '\\u2AAF',\n\tprec: '\\u227A',\n\tprecapprox: '\\u2AB7',\n\tpreccurlyeq: '\\u227C',\n\tPrecedes: '\\u227A',\n\tPrecedesEqual: '\\u2AAF',\n\tPrecedesSlantEqual: '\\u227C',\n\tPrecedesTilde: '\\u227E',\n\tpreceq: '\\u2AAF',\n\tprecnapprox: '\\u2AB9',\n\tprecneqq: '\\u2AB5',\n\tprecnsim: '\\u22E8',\n\tprecsim: '\\u227E',\n\tPrime: '\\u2033',\n\tprime: '\\u2032',\n\tprimes: '\\u2119',\n\tprnap: '\\u2AB9',\n\tprnE: '\\u2AB5',\n\tprnsim: '\\u22E8',\n\tprod: '\\u220F',\n\tProduct: '\\u220F',\n\tprofalar: '\\u232E',\n\tprofline: '\\u2312',\n\tprofsurf: '\\u2313',\n\tprop: '\\u221D',\n\tProportion: '\\u2237',\n\tProportional: '\\u221D',\n\tpropto: '\\u221D',\n\tprsim: '\\u227E',\n\tprurel: '\\u22B0',\n\tPscr: '\\uD835\\uDCAB',\n\tpscr: '\\uD835\\uDCC5',\n\tPsi: '\\u03A8',\n\tpsi: '\\u03C8',\n\tpuncsp: '\\u2008',\n\tQfr: '\\uD835\\uDD14',\n\tqfr: '\\uD835\\uDD2E',\n\tqint: '\\u2A0C',\n\tQopf: '\\u211A',\n\tqopf: '\\uD835\\uDD62',\n\tqprime: '\\u2057',\n\tQscr: '\\uD835\\uDCAC',\n\tqscr: '\\uD835\\uDCC6',\n\tquaternions: '\\u210D',\n\tquatint: '\\u2A16',\n\tquest: '\\u003F',\n\tquesteq: '\\u225F',\n\tQUOT: '\\u0022',\n\tquot: '\\u0022',\n\trAarr: '\\u21DB',\n\trace: '\\u223D\\u0331',\n\tRacute: '\\u0154',\n\tracute: '\\u0155',\n\tradic: '\\u221A',\n\traemptyv: '\\u29B3',\n\tRang: '\\u27EB',\n\trang: '\\u27E9',\n\trangd: '\\u2992',\n\trange: '\\u29A5',\n\trangle: '\\u27E9',\n\traquo: '\\u00BB',\n\tRarr: '\\u21A0',\n\trArr: '\\u21D2',\n\trarr: '\\u2192',\n\trarrap: '\\u2975',\n\trarrb: '\\u21E5',\n\trarrbfs: '\\u2920',\n\trarrc: '\\u2933',\n\trarrfs: '\\u291E',\n\trarrhk: '\\u21AA',\n\trarrlp: '\\u21AC',\n\trarrpl: '\\u2945',\n\trarrsim: '\\u2974',\n\tRarrtl: '\\u2916',\n\trarrtl: '\\u21A3',\n\trarrw: '\\u219D',\n\trAtail: '\\u291C',\n\tratail: '\\u291A',\n\tratio: '\\u2236',\n\trationals: '\\u211A',\n\tRBarr: '\\u2910',\n\trBarr: '\\u290F',\n\trbarr: '\\u290D',\n\trbbrk: '\\u2773',\n\trbrace: '\\u007D',\n\trbrack: '\\u005D',\n\trbrke: '\\u298C',\n\trbrksld: '\\u298E',\n\trbrkslu: '\\u2990',\n\tRcaron: '\\u0158',\n\trcaron: '\\u0159',\n\tRcedil: '\\u0156',\n\trcedil: '\\u0157',\n\trceil: '\\u2309',\n\trcub: '\\u007D',\n\tRcy: '\\u0420',\n\trcy: '\\u0440',\n\trdca: '\\u2937',\n\trdldhar: '\\u2969',\n\trdquo: '\\u201D',\n\trdquor: '\\u201D',\n\trdsh: '\\u21B3',\n\tRe: '\\u211C',\n\treal: '\\u211C',\n\trealine: '\\u211B',\n\trealpart: '\\u211C',\n\treals: '\\u211D',\n\trect: '\\u25AD',\n\tREG: '\\u00AE',\n\treg: '\\u00AE',\n\tReverseElement: '\\u220B',\n\tReverseEquilibrium: '\\u21CB',\n\tReverseUpEquilibrium: '\\u296F',\n\trfisht: '\\u297D',\n\trfloor: '\\u230B',\n\tRfr: '\\u211C',\n\trfr: '\\uD835\\uDD2F',\n\trHar: '\\u2964',\n\trhard: '\\u21C1',\n\trharu: '\\u21C0',\n\trharul: '\\u296C',\n\tRho: '\\u03A1',\n\trho: '\\u03C1',\n\trhov: '\\u03F1',\n\tRightAngleBracket: '\\u27E9',\n\tRightArrow: '\\u2192',\n\tRightarrow: '\\u21D2',\n\trightarrow: '\\u2192',\n\tRightArrowBar: '\\u21E5',\n\tRightArrowLeftArrow: '\\u21C4',\n\trightarrowtail: '\\u21A3',\n\tRightCeiling: '\\u2309',\n\tRightDoubleBracket: '\\u27E7',\n\tRightDownTeeVector: '\\u295D',\n\tRightDownVector: '\\u21C2',\n\tRightDownVectorBar: '\\u2955',\n\tRightFloor: '\\u230B',\n\trightharpoondown: '\\u21C1',\n\trightharpoonup: '\\u21C0',\n\trightleftarrows: '\\u21C4',\n\trightleftharpoons: '\\u21CC',\n\trightrightarrows: '\\u21C9',\n\trightsquigarrow: '\\u219D',\n\tRightTee: '\\u22A2',\n\tRightTeeArrow: '\\u21A6',\n\tRightTeeVector: '\\u295B',\n\trightthreetimes: '\\u22CC',\n\tRightTriangle: '\\u22B3',\n\tRightTriangleBar: '\\u29D0',\n\tRightTriangleEqual: '\\u22B5',\n\tRightUpDownVector: '\\u294F',\n\tRightUpTeeVector: '\\u295C',\n\tRightUpVector: '\\u21BE',\n\tRightUpVectorBar: '\\u2954',\n\tRightVector: '\\u21C0',\n\tRightVectorBar: '\\u2953',\n\tring: '\\u02DA',\n\trisingdotseq: '\\u2253',\n\trlarr: '\\u21C4',\n\trlhar: '\\u21CC',\n\trlm: '\\u200F',\n\trmoust: '\\u23B1',\n\trmoustache: '\\u23B1',\n\trnmid: '\\u2AEE',\n\troang: '\\u27ED',\n\troarr: '\\u21FE',\n\trobrk: '\\u27E7',\n\tropar: '\\u2986',\n\tRopf: '\\u211D',\n\tropf: '\\uD835\\uDD63',\n\troplus: '\\u2A2E',\n\trotimes: '\\u2A35',\n\tRoundImplies: '\\u2970',\n\trpar: '\\u0029',\n\trpargt: '\\u2994',\n\trppolint: '\\u2A12',\n\trrarr: '\\u21C9',\n\tRrightarrow: '\\u21DB',\n\trsaquo: '\\u203A',\n\tRscr: '\\u211B',\n\trscr: '\\uD835\\uDCC7',\n\tRsh: '\\u21B1',\n\trsh: '\\u21B1',\n\trsqb: '\\u005D',\n\trsquo: '\\u2019',\n\trsquor: '\\u2019',\n\trthree: '\\u22CC',\n\trtimes: '\\u22CA',\n\trtri: '\\u25B9',\n\trtrie: '\\u22B5',\n\trtrif: '\\u25B8',\n\trtriltri: '\\u29CE',\n\tRuleDelayed: '\\u29F4',\n\truluhar: '\\u2968',\n\trx: '\\u211E',\n\tSacute: '\\u015A',\n\tsacute: '\\u015B',\n\tsbquo: '\\u201A',\n\tSc: '\\u2ABC',\n\tsc: '\\u227B',\n\tscap: '\\u2AB8',\n\tScaron: '\\u0160',\n\tscaron: '\\u0161',\n\tsccue: '\\u227D',\n\tscE: '\\u2AB4',\n\tsce: '\\u2AB0',\n\tScedil: '\\u015E',\n\tscedil: '\\u015F',\n\tScirc: '\\u015C',\n\tscirc: '\\u015D',\n\tscnap: '\\u2ABA',\n\tscnE: '\\u2AB6',\n\tscnsim: '\\u22E9',\n\tscpolint: '\\u2A13',\n\tscsim: '\\u227F',\n\tScy: '\\u0421',\n\tscy: '\\u0441',\n\tsdot: '\\u22C5',\n\tsdotb: '\\u22A1',\n\tsdote: '\\u2A66',\n\tsearhk: '\\u2925',\n\tseArr: '\\u21D8',\n\tsearr: '\\u2198',\n\tsearrow: '\\u2198',\n\tsect: '\\u00A7',\n\tsemi: '\\u003B',\n\tseswar: '\\u2929',\n\tsetminus: '\\u2216',\n\tsetmn: '\\u2216',\n\tsext: '\\u2736',\n\tSfr: '\\uD835\\uDD16',\n\tsfr: '\\uD835\\uDD30',\n\tsfrown: '\\u2322',\n\tsharp: '\\u266F',\n\tSHCHcy: '\\u0429',\n\tshchcy: '\\u0449',\n\tSHcy: '\\u0428',\n\tshcy: '\\u0448',\n\tShortDownArrow: '\\u2193',\n\tShortLeftArrow: '\\u2190',\n\tshortmid: '\\u2223',\n\tshortparallel: '\\u2225',\n\tShortRightArrow: '\\u2192',\n\tShortUpArrow: '\\u2191',\n\tshy: '\\u00AD',\n\tSigma: '\\u03A3',\n\tsigma: '\\u03C3',\n\tsigmaf: '\\u03C2',\n\tsigmav: '\\u03C2',\n\tsim: '\\u223C',\n\tsimdot: '\\u2A6A',\n\tsime: '\\u2243',\n\tsimeq: '\\u2243',\n\tsimg: '\\u2A9E',\n\tsimgE: '\\u2AA0',\n\tsiml: '\\u2A9D',\n\tsimlE: '\\u2A9F',\n\tsimne: '\\u2246',\n\tsimplus: '\\u2A24',\n\tsimrarr: '\\u2972',\n\tslarr: '\\u2190',\n\tSmallCircle: '\\u2218',\n\tsmallsetminus: '\\u2216',\n\tsmashp: '\\u2A33',\n\tsmeparsl: '\\u29E4',\n\tsmid: '\\u2223',\n\tsmile: '\\u2323',\n\tsmt: '\\u2AAA',\n\tsmte: '\\u2AAC',\n\tsmtes: '\\u2AAC\\uFE00',\n\tSOFTcy: '\\u042C',\n\tsoftcy: '\\u044C',\n\tsol: '\\u002F',\n\tsolb: '\\u29C4',\n\tsolbar: '\\u233F',\n\tSopf: '\\uD835\\uDD4A',\n\tsopf: '\\uD835\\uDD64',\n\tspades: '\\u2660',\n\tspadesuit: '\\u2660',\n\tspar: '\\u2225',\n\tsqcap: '\\u2293',\n\tsqcaps: '\\u2293\\uFE00',\n\tsqcup: '\\u2294',\n\tsqcups: '\\u2294\\uFE00',\n\tSqrt: '\\u221A',\n\tsqsub: '\\u228F',\n\tsqsube: '\\u2291',\n\tsqsubset: '\\u228F',\n\tsqsubseteq: '\\u2291',\n\tsqsup: '\\u2290',\n\tsqsupe: '\\u2292',\n\tsqsupset: '\\u2290',\n\tsqsupseteq: '\\u2292',\n\tsqu: '\\u25A1',\n\tSquare: '\\u25A1',\n\tsquare: '\\u25A1',\n\tSquareIntersection: '\\u2293',\n\tSquareSubset: '\\u228F',\n\tSquareSubsetEqual: '\\u2291',\n\tSquareSuperset: '\\u2290',\n\tSquareSupersetEqual: '\\u2292',\n\tSquareUnion: '\\u2294',\n\tsquarf: '\\u25AA',\n\tsquf: '\\u25AA',\n\tsrarr: '\\u2192',\n\tSscr: '\\uD835\\uDCAE',\n\tsscr: '\\uD835\\uDCC8',\n\tssetmn: '\\u2216',\n\tssmile: '\\u2323',\n\tsstarf: '\\u22C6',\n\tStar: '\\u22C6',\n\tstar: '\\u2606',\n\tstarf: '\\u2605',\n\tstraightepsilon: '\\u03F5',\n\tstraightphi: '\\u03D5',\n\tstrns: '\\u00AF',\n\tSub: '\\u22D0',\n\tsub: '\\u2282',\n\tsubdot: '\\u2ABD',\n\tsubE: '\\u2AC5',\n\tsube: '\\u2286',\n\tsubedot: '\\u2AC3',\n\tsubmult: '\\u2AC1',\n\tsubnE: '\\u2ACB',\n\tsubne: '\\u228A',\n\tsubplus: '\\u2ABF',\n\tsubrarr: '\\u2979',\n\tSubset: '\\u22D0',\n\tsubset: '\\u2282',\n\tsubseteq: '\\u2286',\n\tsubseteqq: '\\u2AC5',\n\tSubsetEqual: '\\u2286',\n\tsubsetneq: '\\u228A',\n\tsubsetneqq: '\\u2ACB',\n\tsubsim: '\\u2AC7',\n\tsubsub: '\\u2AD5',\n\tsubsup: '\\u2AD3',\n\tsucc: '\\u227B',\n\tsuccapprox: '\\u2AB8',\n\tsucccurlyeq: '\\u227D',\n\tSucceeds: '\\u227B',\n\tSucceedsEqual: '\\u2AB0',\n\tSucceedsSlantEqual: '\\u227D',\n\tSucceedsTilde: '\\u227F',\n\tsucceq: '\\u2AB0',\n\tsuccnapprox: '\\u2ABA',\n\tsuccneqq: '\\u2AB6',\n\tsuccnsim: '\\u22E9',\n\tsuccsim: '\\u227F',\n\tSuchThat: '\\u220B',\n\tSum: '\\u2211',\n\tsum: '\\u2211',\n\tsung: '\\u266A',\n\tSup: '\\u22D1',\n\tsup: '\\u2283',\n\tsup1: '\\u00B9',\n\tsup2: '\\u00B2',\n\tsup3: '\\u00B3',\n\tsupdot: '\\u2ABE',\n\tsupdsub: '\\u2AD8',\n\tsupE: '\\u2AC6',\n\tsupe: '\\u2287',\n\tsupedot: '\\u2AC4',\n\tSuperset: '\\u2283',\n\tSupersetEqual: '\\u2287',\n\tsuphsol: '\\u27C9',\n\tsuphsub: '\\u2AD7',\n\tsuplarr: '\\u297B',\n\tsupmult: '\\u2AC2',\n\tsupnE: '\\u2ACC',\n\tsupne: '\\u228B',\n\tsupplus: '\\u2AC0',\n\tSupset: '\\u22D1',\n\tsupset: '\\u2283',\n\tsupseteq: '\\u2287',\n\tsupseteqq: '\\u2AC6',\n\tsupsetneq: '\\u228B',\n\tsupsetneqq: '\\u2ACC',\n\tsupsim: '\\u2AC8',\n\tsupsub: '\\u2AD4',\n\tsupsup: '\\u2AD6',\n\tswarhk: '\\u2926',\n\tswArr: '\\u21D9',\n\tswarr: '\\u2199',\n\tswarrow: '\\u2199',\n\tswnwar: '\\u292A',\n\tszlig: '\\u00DF',\n\tTab: '\\u0009',\n\ttarget: '\\u2316',\n\tTau: '\\u03A4',\n\ttau: '\\u03C4',\n\ttbrk: '\\u23B4',\n\tTcaron: '\\u0164',\n\ttcaron: '\\u0165',\n\tTcedil: '\\u0162',\n\ttcedil: '\\u0163',\n\tTcy: '\\u0422',\n\ttcy: '\\u0442',\n\ttdot: '\\u20DB',\n\ttelrec: '\\u2315',\n\tTfr: '\\uD835\\uDD17',\n\ttfr: '\\uD835\\uDD31',\n\tthere4: '\\u2234',\n\tTherefore: '\\u2234',\n\ttherefore: '\\u2234',\n\tTheta: '\\u0398',\n\ttheta: '\\u03B8',\n\tthetasym: '\\u03D1',\n\tthetav: '\\u03D1',\n\tthickapprox: '\\u2248',\n\tthicksim: '\\u223C',\n\tThickSpace: '\\u205F\\u200A',\n\tthinsp: '\\u2009',\n\tThinSpace: '\\u2009',\n\tthkap: '\\u2248',\n\tthksim: '\\u223C',\n\tTHORN: '\\u00DE',\n\tthorn: '\\u00FE',\n\tTilde: '\\u223C',\n\ttilde: '\\u02DC',\n\tTildeEqual: '\\u2243',\n\tTildeFullEqual: '\\u2245',\n\tTildeTilde: '\\u2248',\n\ttimes: '\\u00D7',\n\ttimesb: '\\u22A0',\n\ttimesbar: '\\u2A31',\n\ttimesd: '\\u2A30',\n\ttint: '\\u222D',\n\ttoea: '\\u2928',\n\ttop: '\\u22A4',\n\ttopbot: '\\u2336',\n\ttopcir: '\\u2AF1',\n\tTopf: '\\uD835\\uDD4B',\n\ttopf: '\\uD835\\uDD65',\n\ttopfork: '\\u2ADA',\n\ttosa: '\\u2929',\n\ttprime: '\\u2034',\n\tTRADE: '\\u2122',\n\ttrade: '\\u2122',\n\ttriangle: '\\u25B5',\n\ttriangledown: '\\u25BF',\n\ttriangleleft: '\\u25C3',\n\ttrianglelefteq: '\\u22B4',\n\ttriangleq: '\\u225C',\n\ttriangleright: '\\u25B9',\n\ttrianglerighteq: '\\u22B5',\n\ttridot: '\\u25EC',\n\ttrie: '\\u225C',\n\ttriminus: '\\u2A3A',\n\tTripleDot: '\\u20DB',\n\ttriplus: '\\u2A39',\n\ttrisb: '\\u29CD',\n\ttritime: '\\u2A3B',\n\ttrpezium: '\\u23E2',\n\tTscr: '\\uD835\\uDCAF',\n\ttscr: '\\uD835\\uDCC9',\n\tTScy: '\\u0426',\n\ttscy: '\\u0446',\n\tTSHcy: '\\u040B',\n\ttshcy: '\\u045B',\n\tTstrok: '\\u0166',\n\ttstrok: '\\u0167',\n\ttwixt: '\\u226C',\n\ttwoheadleftarrow: '\\u219E',\n\ttwoheadrightarrow: '\\u21A0',\n\tUacute: '\\u00DA',\n\tuacute: '\\u00FA',\n\tUarr: '\\u219F',\n\tuArr: '\\u21D1',\n\tuarr: '\\u2191',\n\tUarrocir: '\\u2949',\n\tUbrcy: '\\u040E',\n\tubrcy: '\\u045E',\n\tUbreve: '\\u016C',\n\tubreve: '\\u016D',\n\tUcirc: '\\u00DB',\n\tucirc: '\\u00FB',\n\tUcy: '\\u0423',\n\tucy: '\\u0443',\n\tudarr: '\\u21C5',\n\tUdblac: '\\u0170',\n\tudblac: '\\u0171',\n\tudhar: '\\u296E',\n\tufisht: '\\u297E',\n\tUfr: '\\uD835\\uDD18',\n\tufr: '\\uD835\\uDD32',\n\tUgrave: '\\u00D9',\n\tugrave: '\\u00F9',\n\tuHar: '\\u2963',\n\tuharl: '\\u21BF',\n\tuharr: '\\u21BE',\n\tuhblk: '\\u2580',\n\tulcorn: '\\u231C',\n\tulcorner: '\\u231C',\n\tulcrop: '\\u230F',\n\tultri: '\\u25F8',\n\tUmacr: '\\u016A',\n\tumacr: '\\u016B',\n\tuml: '\\u00A8',\n\tUnderBar: '\\u005F',\n\tUnderBrace: '\\u23DF',\n\tUnderBracket: '\\u23B5',\n\tUnderParenthesis: '\\u23DD',\n\tUnion: '\\u22C3',\n\tUnionPlus: '\\u228E',\n\tUogon: '\\u0172',\n\tuogon: '\\u0173',\n\tUopf: '\\uD835\\uDD4C',\n\tuopf: '\\uD835\\uDD66',\n\tUpArrow: '\\u2191',\n\tUparrow: '\\u21D1',\n\tuparrow: '\\u2191',\n\tUpArrowBar: '\\u2912',\n\tUpArrowDownArrow: '\\u21C5',\n\tUpDownArrow: '\\u2195',\n\tUpdownarrow: '\\u21D5',\n\tupdownarrow: '\\u2195',\n\tUpEquilibrium: '\\u296E',\n\tupharpoonleft: '\\u21BF',\n\tupharpoonright: '\\u21BE',\n\tuplus: '\\u228E',\n\tUpperLeftArrow: '\\u2196',\n\tUpperRightArrow: '\\u2197',\n\tUpsi: '\\u03D2',\n\tupsi: '\\u03C5',\n\tupsih: '\\u03D2',\n\tUpsilon: '\\u03A5',\n\tupsilon: '\\u03C5',\n\tUpTee: '\\u22A5',\n\tUpTeeArrow: '\\u21A5',\n\tupuparrows: '\\u21C8',\n\turcorn: '\\u231D',\n\turcorner: '\\u231D',\n\turcrop: '\\u230E',\n\tUring: '\\u016E',\n\turing: '\\u016F',\n\turtri: '\\u25F9',\n\tUscr: '\\uD835\\uDCB0',\n\tuscr: '\\uD835\\uDCCA',\n\tutdot: '\\u22F0',\n\tUtilde: '\\u0168',\n\tutilde: '\\u0169',\n\tutri: '\\u25B5',\n\tutrif: '\\u25B4',\n\tuuarr: '\\u21C8',\n\tUuml: '\\u00DC',\n\tuuml: '\\u00FC',\n\tuwangle: '\\u29A7',\n\tvangrt: '\\u299C',\n\tvarepsilon: '\\u03F5',\n\tvarkappa: '\\u03F0',\n\tvarnothing: '\\u2205',\n\tvarphi: '\\u03D5',\n\tvarpi: '\\u03D6',\n\tvarpropto: '\\u221D',\n\tvArr: '\\u21D5',\n\tvarr: '\\u2195',\n\tvarrho: '\\u03F1',\n\tvarsigma: '\\u03C2',\n\tvarsubsetneq: '\\u228A\\uFE00',\n\tvarsubsetneqq: '\\u2ACB\\uFE00',\n\tvarsupsetneq: '\\u228B\\uFE00',\n\tvarsupsetneqq: '\\u2ACC\\uFE00',\n\tvartheta: '\\u03D1',\n\tvartriangleleft: '\\u22B2',\n\tvartriangleright: '\\u22B3',\n\tVbar: '\\u2AEB',\n\tvBar: '\\u2AE8',\n\tvBarv: '\\u2AE9',\n\tVcy: '\\u0412',\n\tvcy: '\\u0432',\n\tVDash: '\\u22AB',\n\tVdash: '\\u22A9',\n\tvDash: '\\u22A8',\n\tvdash: '\\u22A2',\n\tVdashl: '\\u2AE6',\n\tVee: '\\u22C1',\n\tvee: '\\u2228',\n\tveebar: '\\u22BB',\n\tveeeq: '\\u225A',\n\tvellip: '\\u22EE',\n\tVerbar: '\\u2016',\n\tverbar: '\\u007C',\n\tVert: '\\u2016',\n\tvert: '\\u007C',\n\tVerticalBar: '\\u2223',\n\tVerticalLine: '\\u007C',\n\tVerticalSeparator: '\\u2758',\n\tVerticalTilde: '\\u2240',\n\tVeryThinSpace: '\\u200A',\n\tVfr: '\\uD835\\uDD19',\n\tvfr: '\\uD835\\uDD33',\n\tvltri: '\\u22B2',\n\tvnsub: '\\u2282\\u20D2',\n\tvnsup: '\\u2283\\u20D2',\n\tVopf: '\\uD835\\uDD4D',\n\tvopf: '\\uD835\\uDD67',\n\tvprop: '\\u221D',\n\tvrtri: '\\u22B3',\n\tVscr: '\\uD835\\uDCB1',\n\tvscr: '\\uD835\\uDCCB',\n\tvsubnE: '\\u2ACB\\uFE00',\n\tvsubne: '\\u228A\\uFE00',\n\tvsupnE: '\\u2ACC\\uFE00',\n\tvsupne: '\\u228B\\uFE00',\n\tVvdash: '\\u22AA',\n\tvzigzag: '\\u299A',\n\tWcirc: '\\u0174',\n\twcirc: '\\u0175',\n\twedbar: '\\u2A5F',\n\tWedge: '\\u22C0',\n\twedge: '\\u2227',\n\twedgeq: '\\u2259',\n\tweierp: '\\u2118',\n\tWfr: '\\uD835\\uDD1A',\n\twfr: '\\uD835\\uDD34',\n\tWopf: '\\uD835\\uDD4E',\n\twopf: '\\uD835\\uDD68',\n\twp: '\\u2118',\n\twr: '\\u2240',\n\twreath: '\\u2240',\n\tWscr: '\\uD835\\uDCB2',\n\twscr: '\\uD835\\uDCCC',\n\txcap: '\\u22C2',\n\txcirc: '\\u25EF',\n\txcup: '\\u22C3',\n\txdtri: '\\u25BD',\n\tXfr: '\\uD835\\uDD1B',\n\txfr: '\\uD835\\uDD35',\n\txhArr: '\\u27FA',\n\txharr: '\\u27F7',\n\tXi: '\\u039E',\n\txi: '\\u03BE',\n\txlArr: '\\u27F8',\n\txlarr: '\\u27F5',\n\txmap: '\\u27FC',\n\txnis: '\\u22FB',\n\txodot: '\\u2A00',\n\tXopf: '\\uD835\\uDD4F',\n\txopf: '\\uD835\\uDD69',\n\txoplus: '\\u2A01',\n\txotime: '\\u2A02',\n\txrArr: '\\u27F9',\n\txrarr: '\\u27F6',\n\tXscr: '\\uD835\\uDCB3',\n\txscr: '\\uD835\\uDCCD',\n\txsqcup: '\\u2A06',\n\txuplus: '\\u2A04',\n\txutri: '\\u25B3',\n\txvee: '\\u22C1',\n\txwedge: '\\u22C0',\n\tYacute: '\\u00DD',\n\tyacute: '\\u00FD',\n\tYAcy: '\\u042F',\n\tyacy: '\\u044F',\n\tYcirc: '\\u0176',\n\tycirc: '\\u0177',\n\tYcy: '\\u042B',\n\tycy: '\\u044B',\n\tyen: '\\u00A5',\n\tYfr: '\\uD835\\uDD1C',\n\tyfr: '\\uD835\\uDD36',\n\tYIcy: '\\u0407',\n\tyicy: '\\u0457',\n\tYopf: '\\uD835\\uDD50',\n\tyopf: '\\uD835\\uDD6A',\n\tYscr: '\\uD835\\uDCB4',\n\tyscr: '\\uD835\\uDCCE',\n\tYUcy: '\\u042E',\n\tyucy: '\\u044E',\n\tYuml: '\\u0178',\n\tyuml: '\\u00FF',\n\tZacute: '\\u0179',\n\tzacute: '\\u017A',\n\tZcaron: '\\u017D',\n\tzcaron: '\\u017E',\n\tZcy: '\\u0417',\n\tzcy: '\\u0437',\n\tZdot: '\\u017B',\n\tzdot: '\\u017C',\n\tzeetrf: '\\u2128',\n\tZeroWidthSpace: '\\u200B',\n\tZeta: '\\u0396',\n\tzeta: '\\u03B6',\n\tZfr: '\\u2128',\n\tzfr: '\\uD835\\uDD37',\n\tZHcy: '\\u0416',\n\tzhcy: '\\u0436',\n\tzigrarr: '\\u21DD',\n\tZopf: '\\u2124',\n\tzopf: '\\uD835\\uDD6B',\n\tZscr: '\\uD835\\uDCB5',\n\tzscr: '\\uD835\\uDCCF',\n\tzwj: '\\u200D',\n\tzwnj: '\\u200C',\n});\n\n/**\n * @deprecated use `HTML_ENTITIES` instead\n * @see HTML_ENTITIES\n */\nexports.entityMap = exports.HTML_ENTITIES;\n","var dom = require('./dom')\nexports.DOMImplementation = dom.DOMImplementation\nexports.XMLSerializer = dom.XMLSerializer\nexports.DOMParser = require('./dom-parser').DOMParser\n","var NAMESPACE = require(\"./conventions\").NAMESPACE;\n\n//[4]   \tNameStartChar\t   ::=   \t\":\" | [A-Z] | \"_\" | [a-z] | [#xC0-#xD6] | [#xD8-#xF6] | [#xF8-#x2FF] | [#x370-#x37D] | [#x37F-#x1FFF] | [#x200C-#x200D] | [#x2070-#x218F] | [#x2C00-#x2FEF] | [#x3001-#xD7FF] | [#xF900-#xFDCF] | [#xFDF0-#xFFFD] | [#x10000-#xEFFFF]\n//[4a]   \tNameChar\t   ::=   \tNameStartChar | \"-\" | \".\" | [0-9] | #xB7 | [#x0300-#x036F] | [#x203F-#x2040]\n//[5]   \tName\t   ::=   \tNameStartChar (NameChar)*\nvar nameStartChar = /[A-Z_a-z\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD]///\\u10000-\\uEFFFF\nvar nameChar = new RegExp(\"[\\\\-\\\\.0-9\"+nameStartChar.source.slice(1,-1)+\"\\\\u00B7\\\\u0300-\\\\u036F\\\\u203F-\\\\u2040]\");\nvar tagNamePattern = new RegExp('^'+nameStartChar.source+nameChar.source+'*(?:\\:'+nameStartChar.source+nameChar.source+'*)?$');\n//var tagNamePattern = /^[a-zA-Z_][\\w\\-\\.]*(?:\\:[a-zA-Z_][\\w\\-\\.]*)?$/\n//var handlers = 'resolveEntity,getExternalSubset,characters,endDocument,endElement,endPrefixMapping,ignorableWhitespace,processingInstruction,setDocumentLocator,skippedEntity,startDocument,startElement,startPrefixMapping,notationDecl,unparsedEntityDecl,error,fatalError,warning,attributeDecl,elementDecl,externalEntityDecl,internalEntityDecl,comment,endCDATA,endDTD,endEntity,startCDATA,startDTD,startEntity'.split(',')\n\n//S_TAG,\tS_ATTR,\tS_EQ,\tS_ATTR_NOQUOT_VALUE\n//S_ATTR_SPACE,\tS_ATTR_END,\tS_TAG_SPACE, S_TAG_CLOSE\nvar S_TAG = 0;//tag name offerring\nvar S_ATTR = 1;//attr name offerring\nvar S_ATTR_SPACE=2;//attr name end and space offer\nvar S_EQ = 3;//=space?\nvar S_ATTR_NOQUOT_VALUE = 4;//attr value(no quot value only)\nvar S_ATTR_END = 5;//attr value end and no space(quot end)\nvar S_TAG_SPACE = 6;//(attr value end || tag end ) && (space offer)\nvar S_TAG_CLOSE = 7;//closed el<el />\n\n/**\n * Creates an error that will not be caught by XMLReader aka the SAX parser.\n *\n * @param {string} message\n * @param {any?} locator Optional, can provide details about the location in the source\n * @constructor\n */\nfunction ParseError(message, locator) {\n\tthis.message = message\n\tthis.locator = locator\n\tif(Error.captureStackTrace) Error.captureStackTrace(this, ParseError);\n}\nParseError.prototype = new Error();\nParseError.prototype.name = ParseError.name\n\nfunction XMLReader(){\n\n}\n\nXMLReader.prototype = {\n\tparse:function(source,defaultNSMap,entityMap){\n\t\tvar domBuilder = this.domBuilder;\n\t\tdomBuilder.startDocument();\n\t\t_copy(defaultNSMap ,defaultNSMap = {})\n\t\tparse(source,defaultNSMap,entityMap,\n\t\t\t\tdomBuilder,this.errorHandler);\n\t\tdomBuilder.endDocument();\n\t}\n}\nfunction parse(source,defaultNSMapCopy,entityMap,domBuilder,errorHandler){\n\tfunction fixedFromCharCode(code) {\n\t\t// String.prototype.fromCharCode does not supports\n\t\t// > 2 bytes unicode chars directly\n\t\tif (code > 0xffff) {\n\t\t\tcode -= 0x10000;\n\t\t\tvar surrogate1 = 0xd800 + (code >> 10)\n\t\t\t\t, surrogate2 = 0xdc00 + (code & 0x3ff);\n\n\t\t\treturn String.fromCharCode(surrogate1, surrogate2);\n\t\t} else {\n\t\t\treturn String.fromCharCode(code);\n\t\t}\n\t}\n\tfunction entityReplacer(a){\n\t\tvar k = a.slice(1,-1);\n\t\tif (Object.hasOwnProperty.call(entityMap, k)) {\n\t\t\treturn entityMap[k];\n\t\t}else if(k.charAt(0) === '#'){\n\t\t\treturn fixedFromCharCode(parseInt(k.substr(1).replace('x','0x')))\n\t\t}else{\n\t\t\terrorHandler.error('entity not found:'+a);\n\t\t\treturn a;\n\t\t}\n\t}\n\tfunction appendText(end){//has some bugs\n\t\tif(end>start){\n\t\t\tvar xt = source.substring(start,end).replace(/&#?\\w+;/g,entityReplacer);\n\t\t\tlocator&&position(start);\n\t\t\tdomBuilder.characters(xt,0,end-start);\n\t\t\tstart = end\n\t\t}\n\t}\n\tfunction position(p,m){\n\t\twhile(p>=lineEnd && (m = linePattern.exec(source))){\n\t\t\tlineStart = m.index;\n\t\t\tlineEnd = lineStart + m[0].length;\n\t\t\tlocator.lineNumber++;\n\t\t\t//console.log('line++:',locator,startPos,endPos)\n\t\t}\n\t\tlocator.columnNumber = p-lineStart+1;\n\t}\n\tvar lineStart = 0;\n\tvar lineEnd = 0;\n\tvar linePattern = /.*(?:\\r\\n?|\\n)|.*$/g\n\tvar locator = domBuilder.locator;\n\n\tvar parseStack = [{currentNSMap:defaultNSMapCopy}]\n\tvar closeMap = {};\n\tvar start = 0;\n\twhile(true){\n\t\ttry{\n\t\t\tvar tagStart = source.indexOf('<',start);\n\t\t\tif(tagStart<0){\n\t\t\t\tif(!source.substr(start).match(/^\\s*$/)){\n\t\t\t\t\tvar doc = domBuilder.doc;\n\t    \t\t\tvar text = doc.createTextNode(source.substr(start));\n\t    \t\t\tdoc.appendChild(text);\n\t    \t\t\tdomBuilder.currentElement = text;\n\t\t\t\t}\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif(tagStart>start){\n\t\t\t\tappendText(tagStart);\n\t\t\t}\n\t\t\tswitch(source.charAt(tagStart+1)){\n\t\t\tcase '/':\n\t\t\t\tvar end = source.indexOf('>',tagStart+3);\n\t\t\t\tvar tagName = source.substring(tagStart + 2, end).replace(/[ \\t\\n\\r]+$/g, '');\n\t\t\t\tvar config = parseStack.pop();\n\t\t\t\tif(end<0){\n\n\t        \t\ttagName = source.substring(tagStart+2).replace(/[\\s<].*/,'');\n\t        \t\terrorHandler.error(\"end tag name: \"+tagName+' is not complete:'+config.tagName);\n\t        \t\tend = tagStart+1+tagName.length;\n\t        \t}else if(tagName.match(/\\s</)){\n\t        \t\ttagName = tagName.replace(/[\\s<].*/,'');\n\t        \t\terrorHandler.error(\"end tag name: \"+tagName+' maybe not complete');\n\t        \t\tend = tagStart+1+tagName.length;\n\t\t\t\t}\n\t\t\t\tvar localNSMap = config.localNSMap;\n\t\t\t\tvar endMatch = config.tagName == tagName;\n\t\t\t\tvar endIgnoreCaseMach = endMatch || config.tagName&&config.tagName.toLowerCase() == tagName.toLowerCase()\n\t\t        if(endIgnoreCaseMach){\n\t\t        \tdomBuilder.endElement(config.uri,config.localName,tagName);\n\t\t\t\t\tif(localNSMap){\n\t\t\t\t\t\tfor (var prefix in localNSMap) {\n\t\t\t\t\t\t\tif (Object.prototype.hasOwnProperty.call(localNSMap, prefix)) {\n\t\t\t\t\t\t\t\tdomBuilder.endPrefixMapping(prefix);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif(!endMatch){\n\t\t            \terrorHandler.fatalError(\"end tag name: \"+tagName+' is not match the current start tagName:'+config.tagName ); // No known test case\n\t\t\t\t\t}\n\t\t        }else{\n\t\t        \tparseStack.push(config)\n\t\t        }\n\n\t\t\t\tend++;\n\t\t\t\tbreak;\n\t\t\t\t// end elment\n\t\t\tcase '?':// <?...?>\n\t\t\t\tlocator&&position(tagStart);\n\t\t\t\tend = parseInstruction(source,tagStart,domBuilder);\n\t\t\t\tbreak;\n\t\t\tcase '!':// <!doctype,<![CDATA,<!--\n\t\t\t\tlocator&&position(tagStart);\n\t\t\t\tend = parseDCC(source,tagStart,domBuilder,errorHandler);\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tlocator&&position(tagStart);\n\t\t\t\tvar el = new ElementAttributes();\n\t\t\t\tvar currentNSMap = parseStack[parseStack.length-1].currentNSMap;\n\t\t\t\t//elStartEnd\n\t\t\t\tvar end = parseElementStartPart(source,tagStart,el,currentNSMap,entityReplacer,errorHandler);\n\t\t\t\tvar len = el.length;\n\n\n\t\t\t\tif(!el.closed && fixSelfClosed(source,end,el.tagName,closeMap)){\n\t\t\t\t\tel.closed = true;\n\t\t\t\t\tif(!entityMap.nbsp){\n\t\t\t\t\t\terrorHandler.warning('unclosed xml attribute');\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif(locator && len){\n\t\t\t\t\tvar locator2 = copyLocator(locator,{});\n\t\t\t\t\t//try{//attribute position fixed\n\t\t\t\t\tfor(var i = 0;i<len;i++){\n\t\t\t\t\t\tvar a = el[i];\n\t\t\t\t\t\tposition(a.offset);\n\t\t\t\t\t\ta.locator = copyLocator(locator,{});\n\t\t\t\t\t}\n\t\t\t\t\tdomBuilder.locator = locator2\n\t\t\t\t\tif(appendElement(el,domBuilder,currentNSMap)){\n\t\t\t\t\t\tparseStack.push(el)\n\t\t\t\t\t}\n\t\t\t\t\tdomBuilder.locator = locator;\n\t\t\t\t}else{\n\t\t\t\t\tif(appendElement(el,domBuilder,currentNSMap)){\n\t\t\t\t\t\tparseStack.push(el)\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (NAMESPACE.isHTML(el.uri) && !el.closed) {\n\t\t\t\t\tend = parseHtmlSpecialContent(source,end,el.tagName,entityReplacer,domBuilder)\n\t\t\t\t} else {\n\t\t\t\t\tend++;\n\t\t\t\t}\n\t\t\t}\n\t\t}catch(e){\n\t\t\tif (e instanceof ParseError) {\n\t\t\t\tthrow e;\n\t\t\t}\n\t\t\terrorHandler.error('element parse error: '+e)\n\t\t\tend = -1;\n\t\t}\n\t\tif(end>start){\n\t\t\tstart = end;\n\t\t}else{\n\t\t\t//TODO: 这里有可能sax回退，有位置错误风险\n\t\t\tappendText(Math.max(tagStart,start)+1);\n\t\t}\n\t}\n}\nfunction copyLocator(f,t){\n\tt.lineNumber = f.lineNumber;\n\tt.columnNumber = f.columnNumber;\n\treturn t;\n}\n\n/**\n * @see #appendElement(source,elStartEnd,el,selfClosed,entityReplacer,domBuilder,parseStack);\n * @return end of the elementStartPart(end of elementEndPart for selfClosed el)\n */\nfunction parseElementStartPart(source,start,el,currentNSMap,entityReplacer,errorHandler){\n\n\t/**\n\t * @param {string} qname\n\t * @param {string} value\n\t * @param {number} startIndex\n\t */\n\tfunction addAttribute(qname, value, startIndex) {\n\t\tif (el.attributeNames.hasOwnProperty(qname)) {\n\t\t\terrorHandler.fatalError('Attribute ' + qname + ' redefined')\n\t\t}\n\t\tel.addValue(\n\t\t\tqname,\n\t\t\t// @see https://www.w3.org/TR/xml/#AVNormalize\n\t\t\t// since the xmldom sax parser does not \"interpret\" DTD the following is not implemented:\n\t\t\t// - recursive replacement of (DTD) entity references\n\t\t\t// - trimming and collapsing multiple spaces into a single one for attributes that are not of type CDATA\n\t\t\tvalue.replace(/[\\t\\n\\r]/g, ' ').replace(/&#?\\w+;/g, entityReplacer),\n\t\t\tstartIndex\n\t\t)\n\t}\n\tvar attrName;\n\tvar value;\n\tvar p = ++start;\n\tvar s = S_TAG;//status\n\twhile(true){\n\t\tvar c = source.charAt(p);\n\t\tswitch(c){\n\t\tcase '=':\n\t\t\tif(s === S_ATTR){//attrName\n\t\t\t\tattrName = source.slice(start,p);\n\t\t\t\ts = S_EQ;\n\t\t\t}else if(s === S_ATTR_SPACE){\n\t\t\t\ts = S_EQ;\n\t\t\t}else{\n\t\t\t\t//fatalError: equal must after attrName or space after attrName\n\t\t\t\tthrow new Error('attribute equal must after attrName'); // No known test case\n\t\t\t}\n\t\t\tbreak;\n\t\tcase '\\'':\n\t\tcase '\"':\n\t\t\tif(s === S_EQ || s === S_ATTR //|| s == S_ATTR_SPACE\n\t\t\t\t){//equal\n\t\t\t\tif(s === S_ATTR){\n\t\t\t\t\terrorHandler.warning('attribute value must after \"=\"')\n\t\t\t\t\tattrName = source.slice(start,p)\n\t\t\t\t}\n\t\t\t\tstart = p+1;\n\t\t\t\tp = source.indexOf(c,start)\n\t\t\t\tif(p>0){\n\t\t\t\t\tvalue = source.slice(start, p);\n\t\t\t\t\taddAttribute(attrName, value, start-1);\n\t\t\t\t\ts = S_ATTR_END;\n\t\t\t\t}else{\n\t\t\t\t\t//fatalError: no end quot match\n\t\t\t\t\tthrow new Error('attribute value no end \\''+c+'\\' match');\n\t\t\t\t}\n\t\t\t}else if(s == S_ATTR_NOQUOT_VALUE){\n\t\t\t\tvalue = source.slice(start, p);\n\t\t\t\taddAttribute(attrName, value, start);\n\t\t\t\terrorHandler.warning('attribute \"'+attrName+'\" missed start quot('+c+')!!');\n\t\t\t\tstart = p+1;\n\t\t\t\ts = S_ATTR_END\n\t\t\t}else{\n\t\t\t\t//fatalError: no equal before\n\t\t\t\tthrow new Error('attribute value must after \"=\"'); // No known test case\n\t\t\t}\n\t\t\tbreak;\n\t\tcase '/':\n\t\t\tswitch(s){\n\t\t\tcase S_TAG:\n\t\t\t\tel.setTagName(source.slice(start,p));\n\t\t\tcase S_ATTR_END:\n\t\t\tcase S_TAG_SPACE:\n\t\t\tcase S_TAG_CLOSE:\n\t\t\t\ts =S_TAG_CLOSE;\n\t\t\t\tel.closed = true;\n\t\t\tcase S_ATTR_NOQUOT_VALUE:\n\t\t\tcase S_ATTR:\n\t\t\t\tbreak;\n\t\t\t\tcase S_ATTR_SPACE:\n\t\t\t\t\tel.closed = true;\n\t\t\t\tbreak;\n\t\t\t//case S_EQ:\n\t\t\tdefault:\n\t\t\t\tthrow new Error(\"attribute invalid close char('/')\") // No known test case\n\t\t\t}\n\t\t\tbreak;\n\t\tcase ''://end document\n\t\t\terrorHandler.error('unexpected end of input');\n\t\t\tif(s == S_TAG){\n\t\t\t\tel.setTagName(source.slice(start,p));\n\t\t\t}\n\t\t\treturn p;\n\t\tcase '>':\n\t\t\tswitch(s){\n\t\t\tcase S_TAG:\n\t\t\t\tel.setTagName(source.slice(start,p));\n\t\t\tcase S_ATTR_END:\n\t\t\tcase S_TAG_SPACE:\n\t\t\tcase S_TAG_CLOSE:\n\t\t\t\tbreak;//normal\n\t\t\tcase S_ATTR_NOQUOT_VALUE://Compatible state\n\t\t\tcase S_ATTR:\n\t\t\t\tvalue = source.slice(start,p);\n\t\t\t\tif(value.slice(-1) === '/'){\n\t\t\t\t\tel.closed  = true;\n\t\t\t\t\tvalue = value.slice(0,-1)\n\t\t\t\t}\n\t\t\tcase S_ATTR_SPACE:\n\t\t\t\tif(s === S_ATTR_SPACE){\n\t\t\t\t\tvalue = attrName;\n\t\t\t\t}\n\t\t\t\tif(s == S_ATTR_NOQUOT_VALUE){\n\t\t\t\t\terrorHandler.warning('attribute \"'+value+'\" missed quot(\")!');\n\t\t\t\t\taddAttribute(attrName, value, start)\n\t\t\t\t}else{\n\t\t\t\t\tif(!NAMESPACE.isHTML(currentNSMap['']) || !value.match(/^(?:disabled|checked|selected)$/i)){\n\t\t\t\t\t\terrorHandler.warning('attribute \"'+value+'\" missed value!! \"'+value+'\" instead!!')\n\t\t\t\t\t}\n\t\t\t\t\taddAttribute(value, value, start)\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase S_EQ:\n\t\t\t\tthrow new Error('attribute value missed!!');\n\t\t\t}\n//\t\t\tconsole.log(tagName,tagNamePattern,tagNamePattern.test(tagName))\n\t\t\treturn p;\n\t\t/*xml space '\\x20' | #x9 | #xD | #xA; */\n\t\tcase '\\u0080':\n\t\t\tc = ' ';\n\t\tdefault:\n\t\t\tif(c<= ' '){//space\n\t\t\t\tswitch(s){\n\t\t\t\tcase S_TAG:\n\t\t\t\t\tel.setTagName(source.slice(start,p));//tagName\n\t\t\t\t\ts = S_TAG_SPACE;\n\t\t\t\t\tbreak;\n\t\t\t\tcase S_ATTR:\n\t\t\t\t\tattrName = source.slice(start,p)\n\t\t\t\t\ts = S_ATTR_SPACE;\n\t\t\t\t\tbreak;\n\t\t\t\tcase S_ATTR_NOQUOT_VALUE:\n\t\t\t\t\tvar value = source.slice(start, p);\n\t\t\t\t\terrorHandler.warning('attribute \"'+value+'\" missed quot(\")!!');\n\t\t\t\t\taddAttribute(attrName, value, start)\n\t\t\t\tcase S_ATTR_END:\n\t\t\t\t\ts = S_TAG_SPACE;\n\t\t\t\t\tbreak;\n\t\t\t\t//case S_TAG_SPACE:\n\t\t\t\t//case S_EQ:\n\t\t\t\t//case S_ATTR_SPACE:\n\t\t\t\t//\tvoid();break;\n\t\t\t\t//case S_TAG_CLOSE:\n\t\t\t\t\t//ignore warning\n\t\t\t\t}\n\t\t\t}else{//not space\n//S_TAG,\tS_ATTR,\tS_EQ,\tS_ATTR_NOQUOT_VALUE\n//S_ATTR_SPACE,\tS_ATTR_END,\tS_TAG_SPACE, S_TAG_CLOSE\n\t\t\t\tswitch(s){\n\t\t\t\t//case S_TAG:void();break;\n\t\t\t\t//case S_ATTR:void();break;\n\t\t\t\t//case S_ATTR_NOQUOT_VALUE:void();break;\n\t\t\t\tcase S_ATTR_SPACE:\n\t\t\t\t\tvar tagName =  el.tagName;\n\t\t\t\t\tif (!NAMESPACE.isHTML(currentNSMap['']) || !attrName.match(/^(?:disabled|checked|selected)$/i)) {\n\t\t\t\t\t\terrorHandler.warning('attribute \"'+attrName+'\" missed value!! \"'+attrName+'\" instead2!!')\n\t\t\t\t\t}\n\t\t\t\t\taddAttribute(attrName, attrName, start);\n\t\t\t\t\tstart = p;\n\t\t\t\t\ts = S_ATTR;\n\t\t\t\t\tbreak;\n\t\t\t\tcase S_ATTR_END:\n\t\t\t\t\terrorHandler.warning('attribute space is required\"'+attrName+'\"!!')\n\t\t\t\tcase S_TAG_SPACE:\n\t\t\t\t\ts = S_ATTR;\n\t\t\t\t\tstart = p;\n\t\t\t\t\tbreak;\n\t\t\t\tcase S_EQ:\n\t\t\t\t\ts = S_ATTR_NOQUOT_VALUE;\n\t\t\t\t\tstart = p;\n\t\t\t\t\tbreak;\n\t\t\t\tcase S_TAG_CLOSE:\n\t\t\t\t\tthrow new Error(\"elements closed character '/' and '>' must be connected to\");\n\t\t\t\t}\n\t\t\t}\n\t\t}//end outer switch\n\t\t//console.log('p++',p)\n\t\tp++;\n\t}\n}\n/**\n * @return true if has new namespace define\n */\nfunction appendElement(el,domBuilder,currentNSMap){\n\tvar tagName = el.tagName;\n\tvar localNSMap = null;\n\t//var currentNSMap = parseStack[parseStack.length-1].currentNSMap;\n\tvar i = el.length;\n\twhile(i--){\n\t\tvar a = el[i];\n\t\tvar qName = a.qName;\n\t\tvar value = a.value;\n\t\tvar nsp = qName.indexOf(':');\n\t\tif(nsp>0){\n\t\t\tvar prefix = a.prefix = qName.slice(0,nsp);\n\t\t\tvar localName = qName.slice(nsp+1);\n\t\t\tvar nsPrefix = prefix === 'xmlns' && localName\n\t\t}else{\n\t\t\tlocalName = qName;\n\t\t\tprefix = null\n\t\t\tnsPrefix = qName === 'xmlns' && ''\n\t\t}\n\t\t//can not set prefix,because prefix !== ''\n\t\ta.localName = localName ;\n\t\t//prefix == null for no ns prefix attribute\n\t\tif(nsPrefix !== false){//hack!!\n\t\t\tif(localNSMap == null){\n\t\t\t\tlocalNSMap = {}\n\t\t\t\t//console.log(currentNSMap,0)\n\t\t\t\t_copy(currentNSMap,currentNSMap={})\n\t\t\t\t//console.log(currentNSMap,1)\n\t\t\t}\n\t\t\tcurrentNSMap[nsPrefix] = localNSMap[nsPrefix] = value;\n\t\t\ta.uri = NAMESPACE.XMLNS\n\t\t\tdomBuilder.startPrefixMapping(nsPrefix, value)\n\t\t}\n\t}\n\tvar i = el.length;\n\twhile(i--){\n\t\ta = el[i];\n\t\tvar prefix = a.prefix;\n\t\tif(prefix){//no prefix attribute has no namespace\n\t\t\tif(prefix === 'xml'){\n\t\t\t\ta.uri = NAMESPACE.XML;\n\t\t\t}if(prefix !== 'xmlns'){\n\t\t\t\ta.uri = currentNSMap[prefix || '']\n\n\t\t\t\t//{console.log('###'+a.qName,domBuilder.locator.systemId+'',currentNSMap,a.uri)}\n\t\t\t}\n\t\t}\n\t}\n\tvar nsp = tagName.indexOf(':');\n\tif(nsp>0){\n\t\tprefix = el.prefix = tagName.slice(0,nsp);\n\t\tlocalName = el.localName = tagName.slice(nsp+1);\n\t}else{\n\t\tprefix = null;//important!!\n\t\tlocalName = el.localName = tagName;\n\t}\n\t//no prefix element has default namespace\n\tvar ns = el.uri = currentNSMap[prefix || ''];\n\tdomBuilder.startElement(ns,localName,tagName,el);\n\t//endPrefixMapping and startPrefixMapping have not any help for dom builder\n\t//localNSMap = null\n\tif(el.closed){\n\t\tdomBuilder.endElement(ns,localName,tagName);\n\t\tif(localNSMap){\n\t\t\tfor (prefix in localNSMap) {\n\t\t\t\tif (Object.prototype.hasOwnProperty.call(localNSMap, prefix)) {\n\t\t\t\t\tdomBuilder.endPrefixMapping(prefix);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}else{\n\t\tel.currentNSMap = currentNSMap;\n\t\tel.localNSMap = localNSMap;\n\t\t//parseStack.push(el);\n\t\treturn true;\n\t}\n}\nfunction parseHtmlSpecialContent(source,elStartEnd,tagName,entityReplacer,domBuilder){\n\tif(/^(?:script|textarea)$/i.test(tagName)){\n\t\tvar elEndStart =  source.indexOf('</'+tagName+'>',elStartEnd);\n\t\tvar text = source.substring(elStartEnd+1,elEndStart);\n\t\tif(/[&<]/.test(text)){\n\t\t\tif(/^script$/i.test(tagName)){\n\t\t\t\t//if(!/\\]\\]>/.test(text)){\n\t\t\t\t\t//lexHandler.startCDATA();\n\t\t\t\t\tdomBuilder.characters(text,0,text.length);\n\t\t\t\t\t//lexHandler.endCDATA();\n\t\t\t\t\treturn elEndStart;\n\t\t\t\t//}\n\t\t\t}//}else{//text area\n\t\t\t\ttext = text.replace(/&#?\\w+;/g,entityReplacer);\n\t\t\t\tdomBuilder.characters(text,0,text.length);\n\t\t\t\treturn elEndStart;\n\t\t\t//}\n\n\t\t}\n\t}\n\treturn elStartEnd+1;\n}\nfunction fixSelfClosed(source,elStartEnd,tagName,closeMap){\n\t//if(tagName in closeMap){\n\tvar pos = closeMap[tagName];\n\tif(pos == null){\n\t\t//console.log(tagName)\n\t\tpos =  source.lastIndexOf('</'+tagName+'>')\n\t\tif(pos<elStartEnd){//忘记闭合\n\t\t\tpos = source.lastIndexOf('</'+tagName)\n\t\t}\n\t\tcloseMap[tagName] =pos\n\t}\n\treturn pos<elStartEnd;\n\t//}\n}\n\nfunction _copy (source, target) {\n\tfor (var n in source) {\n\t\tif (Object.prototype.hasOwnProperty.call(source, n)) {\n\t\t\ttarget[n] = source[n];\n\t\t}\n\t}\n}\n\nfunction parseDCC(source,start,domBuilder,errorHandler){//sure start with '<!'\n\tvar next= source.charAt(start+2)\n\tswitch(next){\n\tcase '-':\n\t\tif(source.charAt(start + 3) === '-'){\n\t\t\tvar end = source.indexOf('-->',start+4);\n\t\t\t//append comment source.substring(4,end)//<!--\n\t\t\tif(end>start){\n\t\t\t\tdomBuilder.comment(source,start+4,end-start-4);\n\t\t\t\treturn end+3;\n\t\t\t}else{\n\t\t\t\terrorHandler.error(\"Unclosed comment\");\n\t\t\t\treturn -1;\n\t\t\t}\n\t\t}else{\n\t\t\t//error\n\t\t\treturn -1;\n\t\t}\n\tdefault:\n\t\tif(source.substr(start+3,6) == 'CDATA['){\n\t\t\tvar end = source.indexOf(']]>',start+9);\n\t\t\tdomBuilder.startCDATA();\n\t\t\tdomBuilder.characters(source,start+9,end-start-9);\n\t\t\tdomBuilder.endCDATA()\n\t\t\treturn end+3;\n\t\t}\n\t\t//<!DOCTYPE\n\t\t//startDTD(java.lang.String name, java.lang.String publicId, java.lang.String systemId)\n\t\tvar matchs = split(source,start);\n\t\tvar len = matchs.length;\n\t\tif(len>1 && /!doctype/i.test(matchs[0][0])){\n\t\t\tvar name = matchs[1][0];\n\t\t\tvar pubid = false;\n\t\t\tvar sysid = false;\n\t\t\tif(len>3){\n\t\t\t\tif(/^public$/i.test(matchs[2][0])){\n\t\t\t\t\tpubid = matchs[3][0];\n\t\t\t\t\tsysid = len>4 && matchs[4][0];\n\t\t\t\t}else if(/^system$/i.test(matchs[2][0])){\n\t\t\t\t\tsysid = matchs[3][0];\n\t\t\t\t}\n\t\t\t}\n\t\t\tvar lastMatch = matchs[len-1]\n\t\t\tdomBuilder.startDTD(name, pubid, sysid);\n\t\t\tdomBuilder.endDTD();\n\n\t\t\treturn lastMatch.index+lastMatch[0].length\n\t\t}\n\t}\n\treturn -1;\n}\n\n\n\nfunction parseInstruction(source,start,domBuilder){\n\tvar end = source.indexOf('?>',start);\n\tif(end){\n\t\tvar match = source.substring(start,end).match(/^<\\?(\\S*)\\s*([\\s\\S]*?)\\s*$/);\n\t\tif(match){\n\t\t\tvar len = match[0].length;\n\t\t\tdomBuilder.processingInstruction(match[1], match[2]) ;\n\t\t\treturn end+2;\n\t\t}else{//error\n\t\t\treturn -1;\n\t\t}\n\t}\n\treturn -1;\n}\n\nfunction ElementAttributes(){\n\tthis.attributeNames = {}\n}\nElementAttributes.prototype = {\n\tsetTagName:function(tagName){\n\t\tif(!tagNamePattern.test(tagName)){\n\t\t\tthrow new Error('invalid tagName:'+tagName)\n\t\t}\n\t\tthis.tagName = tagName\n\t},\n\taddValue:function(qName, value, offset) {\n\t\tif(!tagNamePattern.test(qName)){\n\t\t\tthrow new Error('invalid attribute:'+qName)\n\t\t}\n\t\tthis.attributeNames[qName] = this.length;\n\t\tthis[this.length++] = {qName:qName,value:value,offset:offset}\n\t},\n\tlength:0,\n\tgetLocalName:function(i){return this[i].localName},\n\tgetLocator:function(i){return this[i].locator},\n\tgetQName:function(i){return this[i].qName},\n\tgetURI:function(i){return this[i].uri},\n\tgetValue:function(i){return this[i].value}\n//\t,getIndex:function(uri, localName)){\n//\t\tif(localName){\n//\n//\t\t}else{\n//\t\t\tvar qName = uri\n//\t\t}\n//\t},\n//\tgetValue:function(){return this.getValue(this.getIndex.apply(this,arguments))},\n//\tgetType:function(uri,localName){}\n//\tgetType:function(i){},\n}\n\n\n\nfunction split(source,start){\n\tvar match;\n\tvar buf = [];\n\tvar reg = /'[^']+'|\"[^\"]+\"|[^\\s<>\\/=]+=?|(\\/?\\s*>|<)/g;\n\treg.lastIndex = start;\n\treg.exec(source);//skip <\n\twhile(match = reg.exec(source)){\n\t\tbuf.push(match);\n\t\tif(match[1])return buf;\n\t}\n}\n\nexports.XMLReader = XMLReader;\nexports.ParseError = ParseError;\n","var topLevel = typeof global !== 'undefined' ? global :\n    typeof window !== 'undefined' ? window : {}\nvar minDoc = require('min-document');\n\nvar doccy;\n\nif (typeof document !== 'undefined') {\n    doccy = document;\n} else {\n    doccy = topLevel['__GLOBAL_DOCUMENT_CACHE@4'];\n\n    if (!doccy) {\n        doccy = topLevel['__GLOBAL_DOCUMENT_CACHE@4'] = minDoc;\n    }\n}\n\nmodule.exports = doccy;\n","var win;\n\nif (typeof window !== \"undefined\") {\n    win = window;\n} else if (typeof global !== \"undefined\") {\n    win = global;\n} else if (typeof self !== \"undefined\"){\n    win = self;\n} else {\n    win = {};\n}\n\nmodule.exports = win;\n","module.exports = isFunction\n\nvar toString = Object.prototype.toString\n\nfunction isFunction (fn) {\n  if (!fn) {\n    return false\n  }\n  var string = toString.call(fn)\n  return string === '[object Function]' ||\n    (typeof fn === 'function' && string !== '[object RegExp]') ||\n    (typeof window !== 'undefined' &&\n     // IE8 and below\n     (fn === window.setTimeout ||\n      fn === window.alert ||\n      fn === window.confirm ||\n      fn === window.prompt))\n};\n","/**\n * @file stream.js\n */\n\n/**\n * A lightweight readable stream implemention that handles event dispatching.\n *\n * @class Stream\n */\nvar Stream = /*#__PURE__*/function () {\n  function Stream() {\n    this.listeners = {};\n  }\n  /**\n   * Add a listener for a specified event type.\n   *\n   * @param {string} type the event name\n   * @param {Function} listener the callback to be invoked when an event of\n   * the specified type occurs\n   */\n\n\n  var _proto = Stream.prototype;\n\n  _proto.on = function on(type, listener) {\n    if (!this.listeners[type]) {\n      this.listeners[type] = [];\n    }\n\n    this.listeners[type].push(listener);\n  }\n  /**\n   * Remove a listener for a specified event type.\n   *\n   * @param {string} type the event name\n   * @param {Function} listener  a function previously registered for this\n   * type of event through `on`\n   * @return {boolean} if we could turn it off or not\n   */\n  ;\n\n  _proto.off = function off(type, listener) {\n    if (!this.listeners[type]) {\n      return false;\n    }\n\n    var index = this.listeners[type].indexOf(listener); // TODO: which is better?\n    // In Video.js we slice listener functions\n    // on trigger so that it does not mess up the order\n    // while we loop through.\n    //\n    // Here we slice on off so that the loop in trigger\n    // can continue using it's old reference to loop without\n    // messing up the order.\n\n    this.listeners[type] = this.listeners[type].slice(0);\n    this.listeners[type].splice(index, 1);\n    return index > -1;\n  }\n  /**\n   * Trigger an event of the specified type on this stream. Any additional\n   * arguments to this function are passed as parameters to event listeners.\n   *\n   * @param {string} type the event name\n   */\n  ;\n\n  _proto.trigger = function trigger(type) {\n    var callbacks = this.listeners[type];\n\n    if (!callbacks) {\n      return;\n    } // Slicing the arguments on every invocation of this method\n    // can add a significant amount of overhead. Avoid the\n    // intermediate object creation for the common case of a\n    // single callback argument\n\n\n    if (arguments.length === 2) {\n      var length = callbacks.length;\n\n      for (var i = 0; i < length; ++i) {\n        callbacks[i].call(this, arguments[1]);\n      }\n    } else {\n      var args = Array.prototype.slice.call(arguments, 1);\n      var _length = callbacks.length;\n\n      for (var _i = 0; _i < _length; ++_i) {\n        callbacks[_i].apply(this, args);\n      }\n    }\n  }\n  /**\n   * Destroys the stream and cleans up.\n   */\n  ;\n\n  _proto.dispose = function dispose() {\n    this.listeners = {};\n  }\n  /**\n   * Forwards all `data` events on this stream to the destination stream. The\n   * destination stream should provide a method `push` to receive the data\n   * events as they arrive.\n   *\n   * @param {Stream} destination the stream that will receive all `data` events\n   * @see http://nodejs.org/api/stream.html#stream_readable_pipe_destination_options\n   */\n  ;\n\n  _proto.pipe = function pipe(destination) {\n    this.on('data', function (data) {\n      destination.push(data);\n    });\n  };\n\n  return Stream;\n}();\n\nexport { Stream as default };","/*! @name m3u8-parser @version 7.2.0 @license Apache-2.0 */\nimport Stream from '@videojs/vhs-utils/es/stream.js';\nimport _extends from '@babel/runtime/helpers/extends';\nimport decodeB64ToUint8Array from '@videojs/vhs-utils/es/decode-b64-to-uint8-array.js';\n\n/**\n * @file m3u8/line-stream.js\n */\n/**\n * A stream that buffers string input and generates a `data` event for each\n * line.\n *\n * @class LineStream\n * @extends Stream\n */\n\nclass LineStream extends Stream {\n  constructor() {\n    super();\n    this.buffer = '';\n  }\n  /**\n   * Add new data to be parsed.\n   *\n   * @param {string} data the text to process\n   */\n\n\n  push(data) {\n    let nextNewline;\n    this.buffer += data;\n    nextNewline = this.buffer.indexOf('\\n');\n\n    for (; nextNewline > -1; nextNewline = this.buffer.indexOf('\\n')) {\n      this.trigger('data', this.buffer.substring(0, nextNewline));\n      this.buffer = this.buffer.substring(nextNewline + 1);\n    }\n  }\n\n}\n\nconst TAB = String.fromCharCode(0x09);\n\nconst parseByterange = function (byterangeString) {\n  // optionally match and capture 0+ digits before `@`\n  // optionally match and capture 0+ digits after `@`\n  const match = /([0-9.]*)?@?([0-9.]*)?/.exec(byterangeString || '');\n  const result = {};\n\n  if (match[1]) {\n    result.length = parseInt(match[1], 10);\n  }\n\n  if (match[2]) {\n    result.offset = parseInt(match[2], 10);\n  }\n\n  return result;\n};\n/**\n * \"forgiving\" attribute list psuedo-grammar:\n * attributes -> keyvalue (',' keyvalue)*\n * keyvalue   -> key '=' value\n * key        -> [^=]*\n * value      -> '\"' [^\"]* '\"' | [^,]*\n */\n\n\nconst attributeSeparator = function () {\n  const key = '[^=]*';\n  const value = '\"[^\"]*\"|[^,]*';\n  const keyvalue = '(?:' + key + ')=(?:' + value + ')';\n  return new RegExp('(?:^|,)(' + keyvalue + ')');\n};\n/**\n * Parse attributes from a line given the separator\n *\n * @param {string} attributes the attribute line to parse\n */\n\n\nconst parseAttributes = function (attributes) {\n  const result = {};\n\n  if (!attributes) {\n    return result;\n  } // split the string using attributes as the separator\n\n\n  const attrs = attributes.split(attributeSeparator());\n  let i = attrs.length;\n  let attr;\n\n  while (i--) {\n    // filter out unmatched portions of the string\n    if (attrs[i] === '') {\n      continue;\n    } // split the key and value\n\n\n    attr = /([^=]*)=(.*)/.exec(attrs[i]).slice(1); // trim whitespace and remove optional quotes around the value\n\n    attr[0] = attr[0].replace(/^\\s+|\\s+$/g, '');\n    attr[1] = attr[1].replace(/^\\s+|\\s+$/g, '');\n    attr[1] = attr[1].replace(/^['\"](.*)['\"]$/g, '$1');\n    result[attr[0]] = attr[1];\n  }\n\n  return result;\n};\n/**\n * Converts a string into a resolution object\n *\n * @param {string} resolution a string such as 3840x2160\n *\n * @return {Object} An object representing the resolution\n *\n */\n\n\nconst parseResolution = resolution => {\n  const split = resolution.split('x');\n  const result = {};\n\n  if (split[0]) {\n    result.width = parseInt(split[0], 10);\n  }\n\n  if (split[1]) {\n    result.height = parseInt(split[1], 10);\n  }\n\n  return result;\n};\n/**\n * A line-level M3U8 parser event stream. It expects to receive input one\n * line at a time and performs a context-free parse of its contents. A stream\n * interpretation of a manifest can be useful if the manifest is expected to\n * be too large to fit comfortably into memory or the entirety of the input\n * is not immediately available. Otherwise, it's probably much easier to work\n * with a regular `Parser` object.\n *\n * Produces `data` events with an object that captures the parser's\n * interpretation of the input. That object has a property `tag` that is one\n * of `uri`, `comment`, or `tag`. URIs only have a single additional\n * property, `line`, which captures the entirety of the input without\n * interpretation. Comments similarly have a single additional property\n * `text` which is the input without the leading `#`.\n *\n * Tags always have a property `tagType` which is the lower-cased version of\n * the M3U8 directive without the `#EXT` or `#EXT-X-` prefix. For instance,\n * `#EXT-X-MEDIA-SEQUENCE` becomes `media-sequence` when parsed. Unrecognized\n * tags are given the tag type `unknown` and a single additional property\n * `data` with the remainder of the input.\n *\n * @class ParseStream\n * @extends Stream\n */\n\n\nclass ParseStream extends Stream {\n  constructor() {\n    super();\n    this.customParsers = [];\n    this.tagMappers = [];\n  }\n  /**\n   * Parses an additional line of input.\n   *\n   * @param {string} line a single line of an M3U8 file to parse\n   */\n\n\n  push(line) {\n    let match;\n    let event; // strip whitespace\n\n    line = line.trim();\n\n    if (line.length === 0) {\n      // ignore empty lines\n      return;\n    } // URIs\n\n\n    if (line[0] !== '#') {\n      this.trigger('data', {\n        type: 'uri',\n        uri: line\n      });\n      return;\n    } // map tags\n\n\n    const newLines = this.tagMappers.reduce((acc, mapper) => {\n      const mappedLine = mapper(line); // skip if unchanged\n\n      if (mappedLine === line) {\n        return acc;\n      }\n\n      return acc.concat([mappedLine]);\n    }, [line]);\n    newLines.forEach(newLine => {\n      for (let i = 0; i < this.customParsers.length; i++) {\n        if (this.customParsers[i].call(this, newLine)) {\n          return;\n        }\n      } // Comments\n\n\n      if (newLine.indexOf('#EXT') !== 0) {\n        this.trigger('data', {\n          type: 'comment',\n          text: newLine.slice(1)\n        });\n        return;\n      } // strip off any carriage returns here so the regex matching\n      // doesn't have to account for them.\n\n\n      newLine = newLine.replace('\\r', ''); // Tags\n\n      match = /^#EXTM3U/.exec(newLine);\n\n      if (match) {\n        this.trigger('data', {\n          type: 'tag',\n          tagType: 'm3u'\n        });\n        return;\n      }\n\n      match = /^#EXTINF:([0-9\\.]*)?,?(.*)?$/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'inf'\n        };\n\n        if (match[1]) {\n          event.duration = parseFloat(match[1]);\n        }\n\n        if (match[2]) {\n          event.title = match[2];\n        }\n\n        this.trigger('data', event);\n        return;\n      }\n\n      match = /^#EXT-X-TARGETDURATION:([0-9.]*)?/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'targetduration'\n        };\n\n        if (match[1]) {\n          event.duration = parseInt(match[1], 10);\n        }\n\n        this.trigger('data', event);\n        return;\n      }\n\n      match = /^#EXT-X-VERSION:([0-9.]*)?/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'version'\n        };\n\n        if (match[1]) {\n          event.version = parseInt(match[1], 10);\n        }\n\n        this.trigger('data', event);\n        return;\n      }\n\n      match = /^#EXT-X-MEDIA-SEQUENCE:(\\-?[0-9.]*)?/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'media-sequence'\n        };\n\n        if (match[1]) {\n          event.number = parseInt(match[1], 10);\n        }\n\n        this.trigger('data', event);\n        return;\n      }\n\n      match = /^#EXT-X-DISCONTINUITY-SEQUENCE:(\\-?[0-9.]*)?/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'discontinuity-sequence'\n        };\n\n        if (match[1]) {\n          event.number = parseInt(match[1], 10);\n        }\n\n        this.trigger('data', event);\n        return;\n      }\n\n      match = /^#EXT-X-PLAYLIST-TYPE:(.*)?$/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'playlist-type'\n        };\n\n        if (match[1]) {\n          event.playlistType = match[1];\n        }\n\n        this.trigger('data', event);\n        return;\n      }\n\n      match = /^#EXT-X-BYTERANGE:(.*)?$/.exec(newLine);\n\n      if (match) {\n        event = _extends(parseByterange(match[1]), {\n          type: 'tag',\n          tagType: 'byterange'\n        });\n        this.trigger('data', event);\n        return;\n      }\n\n      match = /^#EXT-X-ALLOW-CACHE:(YES|NO)?/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'allow-cache'\n        };\n\n        if (match[1]) {\n          event.allowed = !/NO/.test(match[1]);\n        }\n\n        this.trigger('data', event);\n        return;\n      }\n\n      match = /^#EXT-X-MAP:(.*)$/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'map'\n        };\n\n        if (match[1]) {\n          const attributes = parseAttributes(match[1]);\n\n          if (attributes.URI) {\n            event.uri = attributes.URI;\n          }\n\n          if (attributes.BYTERANGE) {\n            event.byterange = parseByterange(attributes.BYTERANGE);\n          }\n        }\n\n        this.trigger('data', event);\n        return;\n      }\n\n      match = /^#EXT-X-STREAM-INF:(.*)$/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'stream-inf'\n        };\n\n        if (match[1]) {\n          event.attributes = parseAttributes(match[1]);\n\n          if (event.attributes.RESOLUTION) {\n            event.attributes.RESOLUTION = parseResolution(event.attributes.RESOLUTION);\n          }\n\n          if (event.attributes.BANDWIDTH) {\n            event.attributes.BANDWIDTH = parseInt(event.attributes.BANDWIDTH, 10);\n          }\n\n          if (event.attributes['FRAME-RATE']) {\n            event.attributes['FRAME-RATE'] = parseFloat(event.attributes['FRAME-RATE']);\n          }\n\n          if (event.attributes['PROGRAM-ID']) {\n            event.attributes['PROGRAM-ID'] = parseInt(event.attributes['PROGRAM-ID'], 10);\n          }\n        }\n\n        this.trigger('data', event);\n        return;\n      }\n\n      match = /^#EXT-X-MEDIA:(.*)$/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'media'\n        };\n\n        if (match[1]) {\n          event.attributes = parseAttributes(match[1]);\n        }\n\n        this.trigger('data', event);\n        return;\n      }\n\n      match = /^#EXT-X-ENDLIST/.exec(newLine);\n\n      if (match) {\n        this.trigger('data', {\n          type: 'tag',\n          tagType: 'endlist'\n        });\n        return;\n      }\n\n      match = /^#EXT-X-DISCONTINUITY/.exec(newLine);\n\n      if (match) {\n        this.trigger('data', {\n          type: 'tag',\n          tagType: 'discontinuity'\n        });\n        return;\n      }\n\n      match = /^#EXT-X-PROGRAM-DATE-TIME:(.*)$/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'program-date-time'\n        };\n\n        if (match[1]) {\n          event.dateTimeString = match[1];\n          event.dateTimeObject = new Date(match[1]);\n        }\n\n        this.trigger('data', event);\n        return;\n      }\n\n      match = /^#EXT-X-KEY:(.*)$/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'key'\n        };\n\n        if (match[1]) {\n          event.attributes = parseAttributes(match[1]); // parse the IV string into a Uint32Array\n\n          if (event.attributes.IV) {\n            if (event.attributes.IV.substring(0, 2).toLowerCase() === '0x') {\n              event.attributes.IV = event.attributes.IV.substring(2);\n            }\n\n            event.attributes.IV = event.attributes.IV.match(/.{8}/g);\n            event.attributes.IV[0] = parseInt(event.attributes.IV[0], 16);\n            event.attributes.IV[1] = parseInt(event.attributes.IV[1], 16);\n            event.attributes.IV[2] = parseInt(event.attributes.IV[2], 16);\n            event.attributes.IV[3] = parseInt(event.attributes.IV[3], 16);\n            event.attributes.IV = new Uint32Array(event.attributes.IV);\n          }\n        }\n\n        this.trigger('data', event);\n        return;\n      }\n\n      match = /^#EXT-X-START:(.*)$/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'start'\n        };\n\n        if (match[1]) {\n          event.attributes = parseAttributes(match[1]);\n          event.attributes['TIME-OFFSET'] = parseFloat(event.attributes['TIME-OFFSET']);\n          event.attributes.PRECISE = /YES/.test(event.attributes.PRECISE);\n        }\n\n        this.trigger('data', event);\n        return;\n      }\n\n      match = /^#EXT-X-CUE-OUT-CONT:(.*)?$/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'cue-out-cont'\n        };\n\n        if (match[1]) {\n          event.data = match[1];\n        } else {\n          event.data = '';\n        }\n\n        this.trigger('data', event);\n        return;\n      }\n\n      match = /^#EXT-X-CUE-OUT:(.*)?$/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'cue-out'\n        };\n\n        if (match[1]) {\n          event.data = match[1];\n        } else {\n          event.data = '';\n        }\n\n        this.trigger('data', event);\n        return;\n      }\n\n      match = /^#EXT-X-CUE-IN:?(.*)?$/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'cue-in'\n        };\n\n        if (match[1]) {\n          event.data = match[1];\n        } else {\n          event.data = '';\n        }\n\n        this.trigger('data', event);\n        return;\n      }\n\n      match = /^#EXT-X-SKIP:(.*)$/.exec(newLine);\n\n      if (match && match[1]) {\n        event = {\n          type: 'tag',\n          tagType: 'skip'\n        };\n        event.attributes = parseAttributes(match[1]);\n\n        if (event.attributes.hasOwnProperty('SKIPPED-SEGMENTS')) {\n          event.attributes['SKIPPED-SEGMENTS'] = parseInt(event.attributes['SKIPPED-SEGMENTS'], 10);\n        }\n\n        if (event.attributes.hasOwnProperty('RECENTLY-REMOVED-DATERANGES')) {\n          event.attributes['RECENTLY-REMOVED-DATERANGES'] = event.attributes['RECENTLY-REMOVED-DATERANGES'].split(TAB);\n        }\n\n        this.trigger('data', event);\n        return;\n      }\n\n      match = /^#EXT-X-PART:(.*)$/.exec(newLine);\n\n      if (match && match[1]) {\n        event = {\n          type: 'tag',\n          tagType: 'part'\n        };\n        event.attributes = parseAttributes(match[1]);\n        ['DURATION'].forEach(function (key) {\n          if (event.attributes.hasOwnProperty(key)) {\n            event.attributes[key] = parseFloat(event.attributes[key]);\n          }\n        });\n        ['INDEPENDENT', 'GAP'].forEach(function (key) {\n          if (event.attributes.hasOwnProperty(key)) {\n            event.attributes[key] = /YES/.test(event.attributes[key]);\n          }\n        });\n\n        if (event.attributes.hasOwnProperty('BYTERANGE')) {\n          event.attributes.byterange = parseByterange(event.attributes.BYTERANGE);\n        }\n\n        this.trigger('data', event);\n        return;\n      }\n\n      match = /^#EXT-X-SERVER-CONTROL:(.*)$/.exec(newLine);\n\n      if (match && match[1]) {\n        event = {\n          type: 'tag',\n          tagType: 'server-control'\n        };\n        event.attributes = parseAttributes(match[1]);\n        ['CAN-SKIP-UNTIL', 'PART-HOLD-BACK', 'HOLD-BACK'].forEach(function (key) {\n          if (event.attributes.hasOwnProperty(key)) {\n            event.attributes[key] = parseFloat(event.attributes[key]);\n          }\n        });\n        ['CAN-SKIP-DATERANGES', 'CAN-BLOCK-RELOAD'].forEach(function (key) {\n          if (event.attributes.hasOwnProperty(key)) {\n            event.attributes[key] = /YES/.test(event.attributes[key]);\n          }\n        });\n        this.trigger('data', event);\n        return;\n      }\n\n      match = /^#EXT-X-PART-INF:(.*)$/.exec(newLine);\n\n      if (match && match[1]) {\n        event = {\n          type: 'tag',\n          tagType: 'part-inf'\n        };\n        event.attributes = parseAttributes(match[1]);\n        ['PART-TARGET'].forEach(function (key) {\n          if (event.attributes.hasOwnProperty(key)) {\n            event.attributes[key] = parseFloat(event.attributes[key]);\n          }\n        });\n        this.trigger('data', event);\n        return;\n      }\n\n      match = /^#EXT-X-PRELOAD-HINT:(.*)$/.exec(newLine);\n\n      if (match && match[1]) {\n        event = {\n          type: 'tag',\n          tagType: 'preload-hint'\n        };\n        event.attributes = parseAttributes(match[1]);\n        ['BYTERANGE-START', 'BYTERANGE-LENGTH'].forEach(function (key) {\n          if (event.attributes.hasOwnProperty(key)) {\n            event.attributes[key] = parseInt(event.attributes[key], 10);\n            const subkey = key === 'BYTERANGE-LENGTH' ? 'length' : 'offset';\n            event.attributes.byterange = event.attributes.byterange || {};\n            event.attributes.byterange[subkey] = event.attributes[key]; // only keep the parsed byterange object.\n\n            delete event.attributes[key];\n          }\n        });\n        this.trigger('data', event);\n        return;\n      }\n\n      match = /^#EXT-X-RENDITION-REPORT:(.*)$/.exec(newLine);\n\n      if (match && match[1]) {\n        event = {\n          type: 'tag',\n          tagType: 'rendition-report'\n        };\n        event.attributes = parseAttributes(match[1]);\n        ['LAST-MSN', 'LAST-PART'].forEach(function (key) {\n          if (event.attributes.hasOwnProperty(key)) {\n            event.attributes[key] = parseInt(event.attributes[key], 10);\n          }\n        });\n        this.trigger('data', event);\n        return;\n      }\n\n      match = /^#EXT-X-DATERANGE:(.*)$/.exec(newLine);\n\n      if (match && match[1]) {\n        event = {\n          type: 'tag',\n          tagType: 'daterange'\n        };\n        event.attributes = parseAttributes(match[1]);\n        ['ID', 'CLASS'].forEach(function (key) {\n          if (event.attributes.hasOwnProperty(key)) {\n            event.attributes[key] = String(event.attributes[key]);\n          }\n        });\n        ['START-DATE', 'END-DATE'].forEach(function (key) {\n          if (event.attributes.hasOwnProperty(key)) {\n            event.attributes[key] = new Date(event.attributes[key]);\n          }\n        });\n        ['DURATION', 'PLANNED-DURATION'].forEach(function (key) {\n          if (event.attributes.hasOwnProperty(key)) {\n            event.attributes[key] = parseFloat(event.attributes[key]);\n          }\n        });\n        ['END-ON-NEXT'].forEach(function (key) {\n          if (event.attributes.hasOwnProperty(key)) {\n            event.attributes[key] = /YES/i.test(event.attributes[key]);\n          }\n        });\n        ['SCTE35-CMD', ' SCTE35-OUT', 'SCTE35-IN'].forEach(function (key) {\n          if (event.attributes.hasOwnProperty(key)) {\n            event.attributes[key] = event.attributes[key].toString(16);\n          }\n        });\n        const clientAttributePattern = /^X-([A-Z]+-)+[A-Z]+$/;\n\n        for (const key in event.attributes) {\n          if (!clientAttributePattern.test(key)) {\n            continue;\n          }\n\n          const isHexaDecimal = /[0-9A-Fa-f]{6}/g.test(event.attributes[key]);\n          const isDecimalFloating = /^\\d+(\\.\\d+)?$/.test(event.attributes[key]);\n          event.attributes[key] = isHexaDecimal ? event.attributes[key].toString(16) : isDecimalFloating ? parseFloat(event.attributes[key]) : String(event.attributes[key]);\n        }\n\n        this.trigger('data', event);\n        return;\n      }\n\n      match = /^#EXT-X-INDEPENDENT-SEGMENTS/.exec(newLine);\n\n      if (match) {\n        this.trigger('data', {\n          type: 'tag',\n          tagType: 'independent-segments'\n        });\n        return;\n      }\n\n      match = /^#EXT-X-I-FRAMES-ONLY/.exec(newLine);\n\n      if (match) {\n        this.trigger('data', {\n          type: 'tag',\n          tagType: 'i-frames-only'\n        });\n        return;\n      }\n\n      match = /^#EXT-X-CONTENT-STEERING:(.*)$/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'content-steering'\n        };\n        event.attributes = parseAttributes(match[1]);\n        this.trigger('data', event);\n        return;\n      }\n\n      match = /^#EXT-X-I-FRAME-STREAM-INF:(.*)$/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'i-frame-playlist'\n        };\n        event.attributes = parseAttributes(match[1]);\n\n        if (event.attributes.URI) {\n          event.uri = event.attributes.URI;\n        }\n\n        if (event.attributes.BANDWIDTH) {\n          event.attributes.BANDWIDTH = parseInt(event.attributes.BANDWIDTH, 10);\n        }\n\n        if (event.attributes.RESOLUTION) {\n          event.attributes.RESOLUTION = parseResolution(event.attributes.RESOLUTION);\n        }\n\n        if (event.attributes['AVERAGE-BANDWIDTH']) {\n          event.attributes['AVERAGE-BANDWIDTH'] = parseInt(event.attributes['AVERAGE-BANDWIDTH'], 10);\n        }\n\n        if (event.attributes['FRAME-RATE']) {\n          event.attributes['FRAME-RATE'] = parseFloat(event.attributes['FRAME-RATE']);\n        }\n\n        this.trigger('data', event);\n        return;\n      }\n\n      match = /^#EXT-X-DEFINE:(.*)$/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'define'\n        };\n        event.attributes = parseAttributes(match[1]);\n        this.trigger('data', event);\n        return;\n      } // unknown tag type\n\n\n      this.trigger('data', {\n        type: 'tag',\n        data: newLine.slice(4)\n      });\n    });\n  }\n  /**\n   * Add a parser for custom headers\n   *\n   * @param {Object}   options              a map of options for the added parser\n   * @param {RegExp}   options.expression   a regular expression to match the custom header\n   * @param {string}   options.customType   the custom type to register to the output\n   * @param {Function} [options.dataParser] function to parse the line into an object\n   * @param {boolean}  [options.segment]    should tag data be attached to the segment object\n   */\n\n\n  addParser({\n    expression,\n    customType,\n    dataParser,\n    segment\n  }) {\n    if (typeof dataParser !== 'function') {\n      dataParser = line => line;\n    }\n\n    this.customParsers.push(line => {\n      const match = expression.exec(line);\n\n      if (match) {\n        this.trigger('data', {\n          type: 'custom',\n          data: dataParser(line),\n          customType,\n          segment\n        });\n        return true;\n      }\n    });\n  }\n  /**\n   * Add a custom header mapper\n   *\n   * @param {Object}   options\n   * @param {RegExp}   options.expression   a regular expression to match the custom header\n   * @param {Function} options.map          function to translate tag into a different tag\n   */\n\n\n  addTagMapper({\n    expression,\n    map\n  }) {\n    const mapFn = line => {\n      if (expression.test(line)) {\n        return map(line);\n      }\n\n      return line;\n    };\n\n    this.tagMappers.push(mapFn);\n  }\n\n}\n\nconst camelCase = str => str.toLowerCase().replace(/-(\\w)/g, a => a[1].toUpperCase());\n\nconst camelCaseKeys = function (attributes) {\n  const result = {};\n  Object.keys(attributes).forEach(function (key) {\n    result[camelCase(key)] = attributes[key];\n  });\n  return result;\n}; // set SERVER-CONTROL hold back based upon targetDuration and partTargetDuration\n// we need this helper because defaults are based upon targetDuration and\n// partTargetDuration being set, but they may not be if SERVER-CONTROL appears before\n// target durations are set.\n\n\nconst setHoldBack = function (manifest) {\n  const {\n    serverControl,\n    targetDuration,\n    partTargetDuration\n  } = manifest;\n\n  if (!serverControl) {\n    return;\n  }\n\n  const tag = '#EXT-X-SERVER-CONTROL';\n  const hb = 'holdBack';\n  const phb = 'partHoldBack';\n  const minTargetDuration = targetDuration && targetDuration * 3;\n  const minPartDuration = partTargetDuration && partTargetDuration * 2;\n\n  if (targetDuration && !serverControl.hasOwnProperty(hb)) {\n    serverControl[hb] = minTargetDuration;\n    this.trigger('info', {\n      message: `${tag} defaulting HOLD-BACK to targetDuration * 3 (${minTargetDuration}).`\n    });\n  }\n\n  if (minTargetDuration && serverControl[hb] < minTargetDuration) {\n    this.trigger('warn', {\n      message: `${tag} clamping HOLD-BACK (${serverControl[hb]}) to targetDuration * 3 (${minTargetDuration})`\n    });\n    serverControl[hb] = minTargetDuration;\n  } // default no part hold back to part target duration * 3\n\n\n  if (partTargetDuration && !serverControl.hasOwnProperty(phb)) {\n    serverControl[phb] = partTargetDuration * 3;\n    this.trigger('info', {\n      message: `${tag} defaulting PART-HOLD-BACK to partTargetDuration * 3 (${serverControl[phb]}).`\n    });\n  } // if part hold back is too small default it to part target duration * 2\n\n\n  if (partTargetDuration && serverControl[phb] < minPartDuration) {\n    this.trigger('warn', {\n      message: `${tag} clamping PART-HOLD-BACK (${serverControl[phb]}) to partTargetDuration * 2 (${minPartDuration}).`\n    });\n    serverControl[phb] = minPartDuration;\n  }\n};\n/**\n * A parser for M3U8 files. The current interpretation of the input is\n * exposed as a property `manifest` on parser objects. It's just two lines to\n * create and parse a manifest once you have the contents available as a string:\n *\n * ```js\n * var parser = new m3u8.Parser();\n * parser.push(xhr.responseText);\n * ```\n *\n * New input can later be applied to update the manifest object by calling\n * `push` again.\n *\n * The parser attempts to create a usable manifest object even if the\n * underlying input is somewhat nonsensical. It emits `info` and `warning`\n * events during the parse if it encounters input that seems invalid or\n * requires some property of the manifest object to be defaulted.\n *\n * @class Parser\n * @param {Object} [opts] Options for the constructor, needed for substitutions\n * @param {string} [opts.uri] URL to check for query params\n * @param {Object} [opts.mainDefinitions] Definitions on main playlist that can be imported\n * @extends Stream\n */\n\n\nclass Parser extends Stream {\n  constructor(opts = {}) {\n    super();\n    this.lineStream = new LineStream();\n    this.parseStream = new ParseStream();\n    this.lineStream.pipe(this.parseStream);\n    this.mainDefinitions = opts.mainDefinitions || {};\n    this.params = new URL(opts.uri, 'https://a.com').searchParams;\n    this.lastProgramDateTime = null;\n    /* eslint-disable consistent-this */\n\n    const self = this;\n    /* eslint-enable consistent-this */\n\n    const uris = [];\n    let currentUri = {}; // if specified, the active EXT-X-MAP definition\n\n    let currentMap; // if specified, the active decryption key\n\n    let key;\n    let hasParts = false;\n\n    const noop = function () {};\n\n    const defaultMediaGroups = {\n      'AUDIO': {},\n      'VIDEO': {},\n      'CLOSED-CAPTIONS': {},\n      'SUBTITLES': {}\n    }; // This is the Widevine UUID from DASH IF IOP. The same exact string is\n    // used in MPDs with Widevine encrypted streams.\n\n    const widevineUuid = 'urn:uuid:edef8ba9-79d6-4ace-a3c8-27dcd51d21ed'; // group segments into numbered timelines delineated by discontinuities\n\n    let currentTimeline = 0; // the manifest is empty until the parse stream begins delivering data\n\n    this.manifest = {\n      allowCache: true,\n      discontinuityStarts: [],\n      dateRanges: [],\n      iFramePlaylists: [],\n      segments: []\n    }; // keep track of the last seen segment's byte range end, as segments are not required\n    // to provide the offset, in which case it defaults to the next byte after the\n    // previous segment\n\n    let lastByterangeEnd = 0; // keep track of the last seen part's byte range end.\n\n    let lastPartByterangeEnd = 0;\n    const dateRangeTags = {};\n    this.on('end', () => {\n      // only add preloadSegment if we don't yet have a uri for it.\n      // and we actually have parts/preloadHints\n      if (currentUri.uri || !currentUri.parts && !currentUri.preloadHints) {\n        return;\n      }\n\n      if (!currentUri.map && currentMap) {\n        currentUri.map = currentMap;\n      }\n\n      if (!currentUri.key && key) {\n        currentUri.key = key;\n      }\n\n      if (!currentUri.timeline && typeof currentTimeline === 'number') {\n        currentUri.timeline = currentTimeline;\n      }\n\n      this.manifest.preloadSegment = currentUri;\n    }); // update the manifest with the m3u8 entry from the parse stream\n\n    this.parseStream.on('data', function (entry) {\n      let mediaGroup;\n      let rendition; // Replace variables in uris and attributes as defined in #EXT-X-DEFINE tags\n\n      if (self.manifest.definitions) {\n        for (const def in self.manifest.definitions) {\n          if (entry.uri) {\n            entry.uri = entry.uri.replace(`{$${def}}`, self.manifest.definitions[def]);\n          }\n\n          if (entry.attributes) {\n            for (const attr in entry.attributes) {\n              if (typeof entry.attributes[attr] === 'string') {\n                entry.attributes[attr] = entry.attributes[attr].replace(`{$${def}}`, self.manifest.definitions[def]);\n              }\n            }\n          }\n        }\n      }\n\n      ({\n        tag() {\n          // switch based on the tag type\n          (({\n            version() {\n              if (entry.version) {\n                this.manifest.version = entry.version;\n              }\n            },\n\n            'allow-cache'() {\n              this.manifest.allowCache = entry.allowed;\n\n              if (!('allowed' in entry)) {\n                this.trigger('info', {\n                  message: 'defaulting allowCache to YES'\n                });\n                this.manifest.allowCache = true;\n              }\n            },\n\n            byterange() {\n              const byterange = {};\n\n              if ('length' in entry) {\n                currentUri.byterange = byterange;\n                byterange.length = entry.length;\n\n                if (!('offset' in entry)) {\n                  /*\n                   * From the latest spec (as of this writing):\n                   * https://tools.ietf.org/html/draft-pantos-http-live-streaming-23#section-4.3.2.2\n                   *\n                   * Same text since EXT-X-BYTERANGE's introduction in draft 7:\n                   * https://tools.ietf.org/html/draft-pantos-http-live-streaming-07#section-3.3.1)\n                   *\n                   * \"If o [offset] is not present, the sub-range begins at the next byte\n                   * following the sub-range of the previous media segment.\"\n                   */\n                  entry.offset = lastByterangeEnd;\n                }\n              }\n\n              if ('offset' in entry) {\n                currentUri.byterange = byterange;\n                byterange.offset = entry.offset;\n              }\n\n              lastByterangeEnd = byterange.offset + byterange.length;\n            },\n\n            endlist() {\n              this.manifest.endList = true;\n            },\n\n            inf() {\n              if (!('mediaSequence' in this.manifest)) {\n                this.manifest.mediaSequence = 0;\n                this.trigger('info', {\n                  message: 'defaulting media sequence to zero'\n                });\n              }\n\n              if (!('discontinuitySequence' in this.manifest)) {\n                this.manifest.discontinuitySequence = 0;\n                this.trigger('info', {\n                  message: 'defaulting discontinuity sequence to zero'\n                });\n              }\n\n              if (entry.title) {\n                currentUri.title = entry.title;\n              }\n\n              if (entry.duration > 0) {\n                currentUri.duration = entry.duration;\n              }\n\n              if (entry.duration === 0) {\n                currentUri.duration = 0.01;\n                this.trigger('info', {\n                  message: 'updating zero segment duration to a small value'\n                });\n              }\n\n              this.manifest.segments = uris;\n            },\n\n            key() {\n              if (!entry.attributes) {\n                this.trigger('warn', {\n                  message: 'ignoring key declaration without attribute list'\n                });\n                return;\n              } // clear the active encryption key\n\n\n              if (entry.attributes.METHOD === 'NONE') {\n                key = null;\n                return;\n              }\n\n              if (!entry.attributes.URI) {\n                this.trigger('warn', {\n                  message: 'ignoring key declaration without URI'\n                });\n                return;\n              }\n\n              if (entry.attributes.KEYFORMAT === 'com.apple.streamingkeydelivery') {\n                this.manifest.contentProtection = this.manifest.contentProtection || {}; // TODO: add full support for this.\n\n                this.manifest.contentProtection['com.apple.fps.1_0'] = {\n                  attributes: entry.attributes\n                };\n                return;\n              }\n\n              if (entry.attributes.KEYFORMAT === 'com.microsoft.playready') {\n                this.manifest.contentProtection = this.manifest.contentProtection || {}; // TODO: add full support for this.\n\n                this.manifest.contentProtection['com.microsoft.playready'] = {\n                  uri: entry.attributes.URI\n                };\n                return;\n              } // check if the content is encrypted for Widevine\n              // Widevine/HLS spec: https://storage.googleapis.com/wvdocs/Widevine_DRM_HLS.pdf\n\n\n              if (entry.attributes.KEYFORMAT === widevineUuid) {\n                const VALID_METHODS = ['SAMPLE-AES', 'SAMPLE-AES-CTR', 'SAMPLE-AES-CENC'];\n\n                if (VALID_METHODS.indexOf(entry.attributes.METHOD) === -1) {\n                  this.trigger('warn', {\n                    message: 'invalid key method provided for Widevine'\n                  });\n                  return;\n                }\n\n                if (entry.attributes.METHOD === 'SAMPLE-AES-CENC') {\n                  this.trigger('warn', {\n                    message: 'SAMPLE-AES-CENC is deprecated, please use SAMPLE-AES-CTR instead'\n                  });\n                }\n\n                if (entry.attributes.URI.substring(0, 23) !== 'data:text/plain;base64,') {\n                  this.trigger('warn', {\n                    message: 'invalid key URI provided for Widevine'\n                  });\n                  return;\n                }\n\n                if (!(entry.attributes.KEYID && entry.attributes.KEYID.substring(0, 2) === '0x')) {\n                  this.trigger('warn', {\n                    message: 'invalid key ID provided for Widevine'\n                  });\n                  return;\n                } // if Widevine key attributes are valid, store them as `contentProtection`\n                // on the manifest to emulate Widevine tag structure in a DASH mpd\n\n\n                this.manifest.contentProtection = this.manifest.contentProtection || {};\n                this.manifest.contentProtection['com.widevine.alpha'] = {\n                  attributes: {\n                    schemeIdUri: entry.attributes.KEYFORMAT,\n                    // remove '0x' from the key id string\n                    keyId: entry.attributes.KEYID.substring(2)\n                  },\n                  // decode the base64-encoded PSSH box\n                  pssh: decodeB64ToUint8Array(entry.attributes.URI.split(',')[1])\n                };\n                return;\n              }\n\n              if (!entry.attributes.METHOD) {\n                this.trigger('warn', {\n                  message: 'defaulting key method to AES-128'\n                });\n              } // setup an encryption key for upcoming segments\n\n\n              key = {\n                method: entry.attributes.METHOD || 'AES-128',\n                uri: entry.attributes.URI\n              };\n\n              if (typeof entry.attributes.IV !== 'undefined') {\n                key.iv = entry.attributes.IV;\n              }\n            },\n\n            'media-sequence'() {\n              if (!isFinite(entry.number)) {\n                this.trigger('warn', {\n                  message: 'ignoring invalid media sequence: ' + entry.number\n                });\n                return;\n              }\n\n              this.manifest.mediaSequence = entry.number;\n            },\n\n            'discontinuity-sequence'() {\n              if (!isFinite(entry.number)) {\n                this.trigger('warn', {\n                  message: 'ignoring invalid discontinuity sequence: ' + entry.number\n                });\n                return;\n              }\n\n              this.manifest.discontinuitySequence = entry.number;\n              currentTimeline = entry.number;\n            },\n\n            'playlist-type'() {\n              if (!/VOD|EVENT/.test(entry.playlistType)) {\n                this.trigger('warn', {\n                  message: 'ignoring unknown playlist type: ' + entry.playlist\n                });\n                return;\n              }\n\n              this.manifest.playlistType = entry.playlistType;\n            },\n\n            map() {\n              currentMap = {};\n\n              if (entry.uri) {\n                currentMap.uri = entry.uri;\n              }\n\n              if (entry.byterange) {\n                currentMap.byterange = entry.byterange;\n              }\n\n              if (key) {\n                currentMap.key = key;\n              }\n            },\n\n            'stream-inf'() {\n              this.manifest.playlists = uris;\n              this.manifest.mediaGroups = this.manifest.mediaGroups || defaultMediaGroups;\n\n              if (!entry.attributes) {\n                this.trigger('warn', {\n                  message: 'ignoring empty stream-inf attributes'\n                });\n                return;\n              }\n\n              if (!currentUri.attributes) {\n                currentUri.attributes = {};\n              }\n\n              _extends(currentUri.attributes, entry.attributes);\n            },\n\n            media() {\n              this.manifest.mediaGroups = this.manifest.mediaGroups || defaultMediaGroups;\n\n              if (!(entry.attributes && entry.attributes.TYPE && entry.attributes['GROUP-ID'] && entry.attributes.NAME)) {\n                this.trigger('warn', {\n                  message: 'ignoring incomplete or missing media group'\n                });\n                return;\n              } // find the media group, creating defaults as necessary\n\n\n              const mediaGroupType = this.manifest.mediaGroups[entry.attributes.TYPE];\n              mediaGroupType[entry.attributes['GROUP-ID']] = mediaGroupType[entry.attributes['GROUP-ID']] || {};\n              mediaGroup = mediaGroupType[entry.attributes['GROUP-ID']]; // collect the rendition metadata\n\n              rendition = {\n                default: /yes/i.test(entry.attributes.DEFAULT)\n              };\n\n              if (rendition.default) {\n                rendition.autoselect = true;\n              } else {\n                rendition.autoselect = /yes/i.test(entry.attributes.AUTOSELECT);\n              }\n\n              if (entry.attributes.LANGUAGE) {\n                rendition.language = entry.attributes.LANGUAGE;\n              }\n\n              if (entry.attributes.URI) {\n                rendition.uri = entry.attributes.URI;\n              }\n\n              if (entry.attributes['INSTREAM-ID']) {\n                rendition.instreamId = entry.attributes['INSTREAM-ID'];\n              }\n\n              if (entry.attributes.CHARACTERISTICS) {\n                rendition.characteristics = entry.attributes.CHARACTERISTICS;\n              }\n\n              if (entry.attributes.FORCED) {\n                rendition.forced = /yes/i.test(entry.attributes.FORCED);\n              } // insert the new rendition\n\n\n              mediaGroup[entry.attributes.NAME] = rendition;\n            },\n\n            discontinuity() {\n              currentTimeline += 1;\n              currentUri.discontinuity = true;\n              this.manifest.discontinuityStarts.push(uris.length);\n            },\n\n            'program-date-time'() {\n              if (typeof this.manifest.dateTimeString === 'undefined') {\n                // PROGRAM-DATE-TIME is a media-segment tag, but for backwards\n                // compatibility, we add the first occurence of the PROGRAM-DATE-TIME tag\n                // to the manifest object\n                // TODO: Consider removing this in future major version\n                this.manifest.dateTimeString = entry.dateTimeString;\n                this.manifest.dateTimeObject = entry.dateTimeObject;\n              }\n\n              currentUri.dateTimeString = entry.dateTimeString;\n              currentUri.dateTimeObject = entry.dateTimeObject;\n              const {\n                lastProgramDateTime\n              } = this;\n              this.lastProgramDateTime = new Date(entry.dateTimeString).getTime(); // We should extrapolate Program Date Time backward only during first program date time occurrence.\n              // Once we have at least one program date time point, we can always extrapolate it forward using lastProgramDateTime reference.\n\n              if (lastProgramDateTime === null) {\n                // Extrapolate Program Date Time backward\n                // Since it is first program date time occurrence we're assuming that\n                // all this.manifest.segments have no program date time info\n                this.manifest.segments.reduceRight((programDateTime, segment) => {\n                  segment.programDateTime = programDateTime - segment.duration * 1000;\n                  return segment.programDateTime;\n                }, this.lastProgramDateTime);\n              }\n            },\n\n            targetduration() {\n              if (!isFinite(entry.duration) || entry.duration < 0) {\n                this.trigger('warn', {\n                  message: 'ignoring invalid target duration: ' + entry.duration\n                });\n                return;\n              }\n\n              this.manifest.targetDuration = entry.duration;\n              setHoldBack.call(this, this.manifest);\n            },\n\n            start() {\n              if (!entry.attributes || isNaN(entry.attributes['TIME-OFFSET'])) {\n                this.trigger('warn', {\n                  message: 'ignoring start declaration without appropriate attribute list'\n                });\n                return;\n              }\n\n              this.manifest.start = {\n                timeOffset: entry.attributes['TIME-OFFSET'],\n                precise: entry.attributes.PRECISE\n              };\n            },\n\n            'cue-out'() {\n              currentUri.cueOut = entry.data;\n            },\n\n            'cue-out-cont'() {\n              currentUri.cueOutCont = entry.data;\n            },\n\n            'cue-in'() {\n              currentUri.cueIn = entry.data;\n            },\n\n            'skip'() {\n              this.manifest.skip = camelCaseKeys(entry.attributes);\n              this.warnOnMissingAttributes_('#EXT-X-SKIP', entry.attributes, ['SKIPPED-SEGMENTS']);\n            },\n\n            'part'() {\n              hasParts = true; // parts are always specifed before a segment\n\n              const segmentIndex = this.manifest.segments.length;\n              const part = camelCaseKeys(entry.attributes);\n              currentUri.parts = currentUri.parts || [];\n              currentUri.parts.push(part);\n\n              if (part.byterange) {\n                if (!part.byterange.hasOwnProperty('offset')) {\n                  part.byterange.offset = lastPartByterangeEnd;\n                }\n\n                lastPartByterangeEnd = part.byterange.offset + part.byterange.length;\n              }\n\n              const partIndex = currentUri.parts.length - 1;\n              this.warnOnMissingAttributes_(`#EXT-X-PART #${partIndex} for segment #${segmentIndex}`, entry.attributes, ['URI', 'DURATION']);\n\n              if (this.manifest.renditionReports) {\n                this.manifest.renditionReports.forEach((r, i) => {\n                  if (!r.hasOwnProperty('lastPart')) {\n                    this.trigger('warn', {\n                      message: `#EXT-X-RENDITION-REPORT #${i} lacks required attribute(s): LAST-PART`\n                    });\n                  }\n                });\n              }\n            },\n\n            'server-control'() {\n              const attrs = this.manifest.serverControl = camelCaseKeys(entry.attributes);\n\n              if (!attrs.hasOwnProperty('canBlockReload')) {\n                attrs.canBlockReload = false;\n                this.trigger('info', {\n                  message: '#EXT-X-SERVER-CONTROL defaulting CAN-BLOCK-RELOAD to false'\n                });\n              }\n\n              setHoldBack.call(this, this.manifest);\n\n              if (attrs.canSkipDateranges && !attrs.hasOwnProperty('canSkipUntil')) {\n                this.trigger('warn', {\n                  message: '#EXT-X-SERVER-CONTROL lacks required attribute CAN-SKIP-UNTIL which is required when CAN-SKIP-DATERANGES is set'\n                });\n              }\n            },\n\n            'preload-hint'() {\n              // parts are always specifed before a segment\n              const segmentIndex = this.manifest.segments.length;\n              const hint = camelCaseKeys(entry.attributes);\n              const isPart = hint.type && hint.type === 'PART';\n              currentUri.preloadHints = currentUri.preloadHints || [];\n              currentUri.preloadHints.push(hint);\n\n              if (hint.byterange) {\n                if (!hint.byterange.hasOwnProperty('offset')) {\n                  // use last part byterange end or zero if not a part.\n                  hint.byterange.offset = isPart ? lastPartByterangeEnd : 0;\n\n                  if (isPart) {\n                    lastPartByterangeEnd = hint.byterange.offset + hint.byterange.length;\n                  }\n                }\n              }\n\n              const index = currentUri.preloadHints.length - 1;\n              this.warnOnMissingAttributes_(`#EXT-X-PRELOAD-HINT #${index} for segment #${segmentIndex}`, entry.attributes, ['TYPE', 'URI']);\n\n              if (!hint.type) {\n                return;\n              } // search through all preload hints except for the current one for\n              // a duplicate type.\n\n\n              for (let i = 0; i < currentUri.preloadHints.length - 1; i++) {\n                const otherHint = currentUri.preloadHints[i];\n\n                if (!otherHint.type) {\n                  continue;\n                }\n\n                if (otherHint.type === hint.type) {\n                  this.trigger('warn', {\n                    message: `#EXT-X-PRELOAD-HINT #${index} for segment #${segmentIndex} has the same TYPE ${hint.type} as preload hint #${i}`\n                  });\n                }\n              }\n            },\n\n            'rendition-report'() {\n              const report = camelCaseKeys(entry.attributes);\n              this.manifest.renditionReports = this.manifest.renditionReports || [];\n              this.manifest.renditionReports.push(report);\n              const index = this.manifest.renditionReports.length - 1;\n              const required = ['LAST-MSN', 'URI'];\n\n              if (hasParts) {\n                required.push('LAST-PART');\n              }\n\n              this.warnOnMissingAttributes_(`#EXT-X-RENDITION-REPORT #${index}`, entry.attributes, required);\n            },\n\n            'part-inf'() {\n              this.manifest.partInf = camelCaseKeys(entry.attributes);\n              this.warnOnMissingAttributes_('#EXT-X-PART-INF', entry.attributes, ['PART-TARGET']);\n\n              if (this.manifest.partInf.partTarget) {\n                this.manifest.partTargetDuration = this.manifest.partInf.partTarget;\n              }\n\n              setHoldBack.call(this, this.manifest);\n            },\n\n            'daterange'() {\n              this.manifest.dateRanges.push(camelCaseKeys(entry.attributes));\n              const index = this.manifest.dateRanges.length - 1;\n              this.warnOnMissingAttributes_(`#EXT-X-DATERANGE #${index}`, entry.attributes, ['ID', 'START-DATE']);\n              const dateRange = this.manifest.dateRanges[index];\n\n              if (dateRange.endDate && dateRange.startDate && new Date(dateRange.endDate) < new Date(dateRange.startDate)) {\n                this.trigger('warn', {\n                  message: 'EXT-X-DATERANGE END-DATE must be equal to or later than the value of the START-DATE'\n                });\n              }\n\n              if (dateRange.duration && dateRange.duration < 0) {\n                this.trigger('warn', {\n                  message: 'EXT-X-DATERANGE DURATION must not be negative'\n                });\n              }\n\n              if (dateRange.plannedDuration && dateRange.plannedDuration < 0) {\n                this.trigger('warn', {\n                  message: 'EXT-X-DATERANGE PLANNED-DURATION must not be negative'\n                });\n              }\n\n              const endOnNextYes = !!dateRange.endOnNext;\n\n              if (endOnNextYes && !dateRange.class) {\n                this.trigger('warn', {\n                  message: 'EXT-X-DATERANGE with an END-ON-NEXT=YES attribute must have a CLASS attribute'\n                });\n              }\n\n              if (endOnNextYes && (dateRange.duration || dateRange.endDate)) {\n                this.trigger('warn', {\n                  message: 'EXT-X-DATERANGE with an END-ON-NEXT=YES attribute must not contain DURATION or END-DATE attributes'\n                });\n              }\n\n              if (dateRange.duration && dateRange.endDate) {\n                const startDate = dateRange.startDate;\n                const newDateInSeconds = startDate.getTime() + dateRange.duration * 1000;\n                this.manifest.dateRanges[index].endDate = new Date(newDateInSeconds);\n              }\n\n              if (!dateRangeTags[dateRange.id]) {\n                dateRangeTags[dateRange.id] = dateRange;\n              } else {\n                for (const attribute in dateRangeTags[dateRange.id]) {\n                  if (!!dateRange[attribute] && JSON.stringify(dateRangeTags[dateRange.id][attribute]) !== JSON.stringify(dateRange[attribute])) {\n                    this.trigger('warn', {\n                      message: 'EXT-X-DATERANGE tags with the same ID in a playlist must have the same attributes values'\n                    });\n                    break;\n                  }\n                } // if tags with the same ID do not have conflicting attributes, merge them\n\n\n                const dateRangeWithSameId = this.manifest.dateRanges.findIndex(dateRangeToFind => dateRangeToFind.id === dateRange.id);\n                this.manifest.dateRanges[dateRangeWithSameId] = _extends(this.manifest.dateRanges[dateRangeWithSameId], dateRange);\n                dateRangeTags[dateRange.id] = _extends(dateRangeTags[dateRange.id], dateRange); // after merging, delete the duplicate dateRange that was added last\n\n                this.manifest.dateRanges.pop();\n              }\n            },\n\n            'independent-segments'() {\n              this.manifest.independentSegments = true;\n            },\n\n            'i-frames-only'() {\n              this.manifest.iFramesOnly = true;\n              this.requiredCompatibilityversion(this.manifest.version, 4);\n            },\n\n            'content-steering'() {\n              this.manifest.contentSteering = camelCaseKeys(entry.attributes);\n              this.warnOnMissingAttributes_('#EXT-X-CONTENT-STEERING', entry.attributes, ['SERVER-URI']);\n            },\n\n            /** @this {Parser} */\n            define() {\n              this.manifest.definitions = this.manifest.definitions || {};\n\n              const addDef = (n, v) => {\n                if (n in this.manifest.definitions) {\n                  // An EXT-X-DEFINE tag MUST NOT specify the same Variable Name as any other\n                  // EXT-X-DEFINE tag in the same Playlist.  Parsers that encounter duplicate\n                  // Variable Name declarations MUST fail to parse the Playlist.\n                  this.trigger('error', {\n                    message: `EXT-X-DEFINE: Duplicate name ${n}`\n                  });\n                  return;\n                }\n\n                this.manifest.definitions[n] = v;\n              };\n\n              if ('QUERYPARAM' in entry.attributes) {\n                if ('NAME' in entry.attributes || 'IMPORT' in entry.attributes) {\n                  // An EXT-X-DEFINE tag MUST contain either a NAME, an IMPORT, or a\n                  // QUERYPARAM attribute, but only one of the three.  Otherwise, the\n                  // client MUST fail to parse the Playlist.\n                  this.trigger('error', {\n                    message: 'EXT-X-DEFINE: Invalid attributes'\n                  });\n                  return;\n                }\n\n                const val = this.params.get(entry.attributes.QUERYPARAM);\n\n                if (!val) {\n                  // If the QUERYPARAM attribute value does not match any query parameter in\n                  // the URI or the matching parameter has no associated value, the parser\n                  // MUST fail to parse the Playlist.  If more than one parameter matches,\n                  // any of the associated values MAY be used.\n                  this.trigger('error', {\n                    message: `EXT-X-DEFINE: No query param ${entry.attributes.QUERYPARAM}`\n                  });\n                  return;\n                }\n\n                addDef(entry.attributes.QUERYPARAM, decodeURIComponent(val));\n                return;\n              }\n\n              if ('NAME' in entry.attributes) {\n                if ('IMPORT' in entry.attributes) {\n                  // An EXT-X-DEFINE tag MUST contain either a NAME, an IMPORT, or a\n                  // QUERYPARAM attribute, but only one of the three.  Otherwise, the\n                  // client MUST fail to parse the Playlist.\n                  this.trigger('error', {\n                    message: 'EXT-X-DEFINE: Invalid attributes'\n                  });\n                  return;\n                }\n\n                if (!('VALUE' in entry.attributes) || typeof entry.attributes.VALUE !== 'string') {\n                  // This attribute is REQUIRED if the EXT-X-DEFINE tag has a NAME attribute.\n                  // The quoted-string MAY be empty.\n                  this.trigger('error', {\n                    message: `EXT-X-DEFINE: No value for ${entry.attributes.NAME}`\n                  });\n                  return;\n                }\n\n                addDef(entry.attributes.NAME, entry.attributes.VALUE);\n                return;\n              }\n\n              if ('IMPORT' in entry.attributes) {\n                if (!this.mainDefinitions[entry.attributes.IMPORT]) {\n                  // Covers two conditions, as mainDefinitions will always be empty on main\n                  //\n                  // EXT-X-DEFINE tags containing the IMPORT attribute MUST NOT occur in\n                  // Multivariant Playlists; they are only allowed in Media Playlists.\n                  //\n                  // If the IMPORT attribute value does not match any Variable Name in the\n                  // Multivariant Playlist, or if the Media Playlist loaded from a\n                  // Multivariant Playlist, the parser MUST fail the Playlist.\n                  this.trigger('error', {\n                    message: `EXT-X-DEFINE: No value ${entry.attributes.IMPORT} to import, or IMPORT used on main playlist`\n                  });\n                  return;\n                }\n\n                addDef(entry.attributes.IMPORT, this.mainDefinitions[entry.attributes.IMPORT]);\n                return;\n              } // An EXT-X-DEFINE tag MUST contain either a NAME, an IMPORT, or a QUERYPARAM\n              // attribute, but only one of the three.  Otherwise, the client MUST fail to\n              // parse the Playlist.\n\n\n              this.trigger('error', {\n                message: 'EXT-X-DEFINE: No attribute'\n              });\n            },\n\n            'i-frame-playlist'() {\n              this.manifest.iFramePlaylists.push({\n                attributes: entry.attributes,\n                uri: entry.uri,\n                timeline: currentTimeline\n              });\n              this.warnOnMissingAttributes_('#EXT-X-I-FRAME-STREAM-INF', entry.attributes, ['BANDWIDTH', 'URI']);\n            }\n\n          })[entry.tagType] || noop).call(self);\n        },\n\n        uri() {\n          currentUri.uri = entry.uri;\n          uris.push(currentUri); // if no explicit duration was declared, use the target duration\n\n          if (this.manifest.targetDuration && !('duration' in currentUri)) {\n            this.trigger('warn', {\n              message: 'defaulting segment duration to the target duration'\n            });\n            currentUri.duration = this.manifest.targetDuration;\n          } // annotate with encryption information, if necessary\n\n\n          if (key) {\n            currentUri.key = key;\n          }\n\n          currentUri.timeline = currentTimeline; // annotate with initialization segment information, if necessary\n\n          if (currentMap) {\n            currentUri.map = currentMap;\n          } // reset the last byterange end as it needs to be 0 between parts\n\n\n          lastPartByterangeEnd = 0; // Once we have at least one program date time we can always extrapolate it forward\n\n          if (this.lastProgramDateTime !== null) {\n            currentUri.programDateTime = this.lastProgramDateTime;\n            this.lastProgramDateTime += currentUri.duration * 1000;\n          } // prepare for the next URI\n\n\n          currentUri = {};\n        },\n\n        comment() {// comments are not important for playback\n        },\n\n        custom() {\n          // if this is segment-level data attach the output to the segment\n          if (entry.segment) {\n            currentUri.custom = currentUri.custom || {};\n            currentUri.custom[entry.customType] = entry.data; // if this is manifest-level data attach to the top level manifest object\n          } else {\n            this.manifest.custom = this.manifest.custom || {};\n            this.manifest.custom[entry.customType] = entry.data;\n          }\n        }\n\n      })[entry.type].call(self);\n    });\n  }\n\n  requiredCompatibilityversion(currentVersion, targetVersion) {\n    if (currentVersion < targetVersion || !currentVersion) {\n      this.trigger('warn', {\n        message: `manifest must be at least version ${targetVersion}`\n      });\n    }\n  }\n\n  warnOnMissingAttributes_(identifier, attributes, required) {\n    const missing = [];\n    required.forEach(function (key) {\n      if (!attributes.hasOwnProperty(key)) {\n        missing.push(key);\n      }\n    });\n\n    if (missing.length) {\n      this.trigger('warn', {\n        message: `${identifier} lacks required attribute(s): ${missing.join(', ')}`\n      });\n    }\n  }\n  /**\n   * Parse the input string and update the manifest object.\n   *\n   * @param {string} chunk a potentially incomplete portion of the manifest\n   */\n\n\n  push(chunk) {\n    this.lineStream.push(chunk);\n  }\n  /**\n   * Flush any remaining input. This can be handy if the last line of an M3U8\n   * manifest did not contain a trailing newline but the file has been\n   * completely received.\n   */\n\n\n  end() {\n    // flush any buffered input\n    this.lineStream.push('\\n');\n\n    if (this.manifest.dateRanges.length && this.lastProgramDateTime === null) {\n      this.trigger('warn', {\n        message: 'A playlist with EXT-X-DATERANGE tag must contain atleast one EXT-X-PROGRAM-DATE-TIME tag'\n      });\n    }\n\n    this.lastProgramDateTime = null;\n    this.trigger('end');\n  }\n  /**\n   * Add an additional parser for non-standard tags\n   *\n   * @param {Object}   options              a map of options for the added parser\n   * @param {RegExp}   options.expression   a regular expression to match the custom header\n   * @param {string}   options.customType   the custom type to register to the output\n   * @param {Function} [options.dataParser] function to parse the line into an object\n   * @param {boolean}  [options.segment]    should tag data be attached to the segment object\n   */\n\n\n  addParser(options) {\n    this.parseStream.addParser(options);\n  }\n  /**\n   * Add a custom header mapper\n   *\n   * @param {Object}   options\n   * @param {RegExp}   options.expression   a regular expression to match the custom header\n   * @param {Function} options.map          function to translate tag into a different tag\n   */\n\n\n  addTagMapper(options) {\n    this.parseStream.addTagMapper(options);\n  }\n\n}\n\nexport { LineStream, ParseStream, Parser };\n","/**\n * Loops through all supported media groups in master and calls the provided\n * callback for each group\n *\n * @param {Object} master\n *        The parsed master manifest object\n * @param {string[]} groups\n *        The media groups to call the callback for\n * @param {Function} callback\n *        Callback to call for each media group\n */\nexport var forEachMediaGroup = function forEachMediaGroup(master, groups, callback) {\n  groups.forEach(function (mediaType) {\n    for (var groupKey in master.mediaGroups[mediaType]) {\n      for (var labelKey in master.mediaGroups[mediaType][groupKey]) {\n        var mediaProperties = master.mediaGroups[mediaType][groupKey][labelKey];\n        callback(mediaProperties, mediaType, groupKey, labelKey);\n      }\n    }\n  });\n};","/*! @name mpd-parser @version 1.3.1 @license Apache-2.0 */\nimport resolveUrl from '@videojs/vhs-utils/es/resolve-url';\nimport window from 'global/window';\nimport { forEachMediaGroup } from '@videojs/vhs-utils/es/media-groups';\nimport decodeB64ToUint8Array from '@videojs/vhs-utils/es/decode-b64-to-uint8-array';\nimport { DOMParser } from '@xmldom/xmldom';\n\nvar version = \"1.3.1\";\n\nconst isObject = obj => {\n  return !!obj && typeof obj === 'object';\n};\n\nconst merge = (...objects) => {\n  return objects.reduce((result, source) => {\n    if (typeof source !== 'object') {\n      return result;\n    }\n\n    Object.keys(source).forEach(key => {\n      if (Array.isArray(result[key]) && Array.isArray(source[key])) {\n        result[key] = result[key].concat(source[key]);\n      } else if (isObject(result[key]) && isObject(source[key])) {\n        result[key] = merge(result[key], source[key]);\n      } else {\n        result[key] = source[key];\n      }\n    });\n    return result;\n  }, {});\n};\nconst values = o => Object.keys(o).map(k => o[k]);\n\nconst range = (start, end) => {\n  const result = [];\n\n  for (let i = start; i < end; i++) {\n    result.push(i);\n  }\n\n  return result;\n};\nconst flatten = lists => lists.reduce((x, y) => x.concat(y), []);\nconst from = list => {\n  if (!list.length) {\n    return [];\n  }\n\n  const result = [];\n\n  for (let i = 0; i < list.length; i++) {\n    result.push(list[i]);\n  }\n\n  return result;\n};\nconst findIndexes = (l, key) => l.reduce((a, e, i) => {\n  if (e[key]) {\n    a.push(i);\n  }\n\n  return a;\n}, []);\n/**\n * Returns a union of the included lists provided each element can be identified by a key.\n *\n * @param {Array} list - list of lists to get the union of\n * @param {Function} keyFunction - the function to use as a key for each element\n *\n * @return {Array} the union of the arrays\n */\n\nconst union = (lists, keyFunction) => {\n  return values(lists.reduce((acc, list) => {\n    list.forEach(el => {\n      acc[keyFunction(el)] = el;\n    });\n    return acc;\n  }, {}));\n};\n\nvar errors = {\n  INVALID_NUMBER_OF_PERIOD: 'INVALID_NUMBER_OF_PERIOD',\n  INVALID_NUMBER_OF_CONTENT_STEERING: 'INVALID_NUMBER_OF_CONTENT_STEERING',\n  DASH_EMPTY_MANIFEST: 'DASH_EMPTY_MANIFEST',\n  DASH_INVALID_XML: 'DASH_INVALID_XML',\n  NO_BASE_URL: 'NO_BASE_URL',\n  MISSING_SEGMENT_INFORMATION: 'MISSING_SEGMENT_INFORMATION',\n  SEGMENT_TIME_UNSPECIFIED: 'SEGMENT_TIME_UNSPECIFIED',\n  UNSUPPORTED_UTC_TIMING_SCHEME: 'UNSUPPORTED_UTC_TIMING_SCHEME'\n};\n\n/**\n * @typedef {Object} SingleUri\n * @property {string} uri - relative location of segment\n * @property {string} resolvedUri - resolved location of segment\n * @property {Object} byterange - Object containing information on how to make byte range\n *   requests following byte-range-spec per RFC2616.\n * @property {String} byterange.length - length of range request\n * @property {String} byterange.offset - byte offset of range request\n *\n * @see https://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.35.1\n */\n\n/**\n * Converts a URLType node (5.3.9.2.3 Table 13) to a segment object\n * that conforms to how m3u8-parser is structured\n *\n * @see https://github.com/videojs/m3u8-parser\n *\n * @param {string} baseUrl - baseUrl provided by <BaseUrl> nodes\n * @param {string} source - source url for segment\n * @param {string} range - optional range used for range calls,\n *   follows  RFC 2616, Clause 14.35.1\n * @return {SingleUri} full segment information transformed into a format similar\n *   to m3u8-parser\n */\n\nconst urlTypeToSegment = ({\n  baseUrl = '',\n  source = '',\n  range = '',\n  indexRange = ''\n}) => {\n  const segment = {\n    uri: source,\n    resolvedUri: resolveUrl(baseUrl || '', source)\n  };\n\n  if (range || indexRange) {\n    const rangeStr = range ? range : indexRange;\n    const ranges = rangeStr.split('-'); // default to parsing this as a BigInt if possible\n\n    let startRange = window.BigInt ? window.BigInt(ranges[0]) : parseInt(ranges[0], 10);\n    let endRange = window.BigInt ? window.BigInt(ranges[1]) : parseInt(ranges[1], 10); // convert back to a number if less than MAX_SAFE_INTEGER\n\n    if (startRange < Number.MAX_SAFE_INTEGER && typeof startRange === 'bigint') {\n      startRange = Number(startRange);\n    }\n\n    if (endRange < Number.MAX_SAFE_INTEGER && typeof endRange === 'bigint') {\n      endRange = Number(endRange);\n    }\n\n    let length;\n\n    if (typeof endRange === 'bigint' || typeof startRange === 'bigint') {\n      length = window.BigInt(endRange) - window.BigInt(startRange) + window.BigInt(1);\n    } else {\n      length = endRange - startRange + 1;\n    }\n\n    if (typeof length === 'bigint' && length < Number.MAX_SAFE_INTEGER) {\n      length = Number(length);\n    } // byterange should be inclusive according to\n    // RFC 2616, Clause 14.35.1\n\n\n    segment.byterange = {\n      length,\n      offset: startRange\n    };\n  }\n\n  return segment;\n};\nconst byteRangeToString = byterange => {\n  // `endRange` is one less than `offset + length` because the HTTP range\n  // header uses inclusive ranges\n  let endRange;\n\n  if (typeof byterange.offset === 'bigint' || typeof byterange.length === 'bigint') {\n    endRange = window.BigInt(byterange.offset) + window.BigInt(byterange.length) - window.BigInt(1);\n  } else {\n    endRange = byterange.offset + byterange.length - 1;\n  }\n\n  return `${byterange.offset}-${endRange}`;\n};\n\n/**\n * parse the end number attribue that can be a string\n * number, or undefined.\n *\n * @param {string|number|undefined} endNumber\n *        The end number attribute.\n *\n * @return {number|null}\n *          The result of parsing the end number.\n */\n\nconst parseEndNumber = endNumber => {\n  if (endNumber && typeof endNumber !== 'number') {\n    endNumber = parseInt(endNumber, 10);\n  }\n\n  if (isNaN(endNumber)) {\n    return null;\n  }\n\n  return endNumber;\n};\n/**\n * Functions for calculating the range of available segments in static and dynamic\n * manifests.\n */\n\n\nconst segmentRange = {\n  /**\n   * Returns the entire range of available segments for a static MPD\n   *\n   * @param {Object} attributes\n   *        Inheritied MPD attributes\n   * @return {{ start: number, end: number }}\n   *         The start and end numbers for available segments\n   */\n  static(attributes) {\n    const {\n      duration,\n      timescale = 1,\n      sourceDuration,\n      periodDuration\n    } = attributes;\n    const endNumber = parseEndNumber(attributes.endNumber);\n    const segmentDuration = duration / timescale;\n\n    if (typeof endNumber === 'number') {\n      return {\n        start: 0,\n        end: endNumber\n      };\n    }\n\n    if (typeof periodDuration === 'number') {\n      return {\n        start: 0,\n        end: periodDuration / segmentDuration\n      };\n    }\n\n    return {\n      start: 0,\n      end: sourceDuration / segmentDuration\n    };\n  },\n\n  /**\n   * Returns the current live window range of available segments for a dynamic MPD\n   *\n   * @param {Object} attributes\n   *        Inheritied MPD attributes\n   * @return {{ start: number, end: number }}\n   *         The start and end numbers for available segments\n   */\n  dynamic(attributes) {\n    const {\n      NOW,\n      clientOffset,\n      availabilityStartTime,\n      timescale = 1,\n      duration,\n      periodStart = 0,\n      minimumUpdatePeriod = 0,\n      timeShiftBufferDepth = Infinity\n    } = attributes;\n    const endNumber = parseEndNumber(attributes.endNumber); // clientOffset is passed in at the top level of mpd-parser and is an offset calculated\n    // after retrieving UTC server time.\n\n    const now = (NOW + clientOffset) / 1000; // WC stands for Wall Clock.\n    // Convert the period start time to EPOCH.\n\n    const periodStartWC = availabilityStartTime + periodStart; // Period end in EPOCH is manifest's retrieval time + time until next update.\n\n    const periodEndWC = now + minimumUpdatePeriod;\n    const periodDuration = periodEndWC - periodStartWC;\n    const segmentCount = Math.ceil(periodDuration * timescale / duration);\n    const availableStart = Math.floor((now - periodStartWC - timeShiftBufferDepth) * timescale / duration);\n    const availableEnd = Math.floor((now - periodStartWC) * timescale / duration);\n    return {\n      start: Math.max(0, availableStart),\n      end: typeof endNumber === 'number' ? endNumber : Math.min(segmentCount, availableEnd)\n    };\n  }\n\n};\n/**\n * Maps a range of numbers to objects with information needed to build the corresponding\n * segment list\n *\n * @name toSegmentsCallback\n * @function\n * @param {number} number\n *        Number of the segment\n * @param {number} index\n *        Index of the number in the range list\n * @return {{ number: Number, duration: Number, timeline: Number, time: Number }}\n *         Object with segment timing and duration info\n */\n\n/**\n * Returns a callback for Array.prototype.map for mapping a range of numbers to\n * information needed to build the segment list.\n *\n * @param {Object} attributes\n *        Inherited MPD attributes\n * @return {toSegmentsCallback}\n *         Callback map function\n */\n\nconst toSegments = attributes => number => {\n  const {\n    duration,\n    timescale = 1,\n    periodStart,\n    startNumber = 1\n  } = attributes;\n  return {\n    number: startNumber + number,\n    duration: duration / timescale,\n    timeline: periodStart,\n    time: number * duration\n  };\n};\n/**\n * Returns a list of objects containing segment timing and duration info used for\n * building the list of segments. This uses the @duration attribute specified\n * in the MPD manifest to derive the range of segments.\n *\n * @param {Object} attributes\n *        Inherited MPD attributes\n * @return {{number: number, duration: number, time: number, timeline: number}[]}\n *         List of Objects with segment timing and duration info\n */\n\nconst parseByDuration = attributes => {\n  const {\n    type,\n    duration,\n    timescale = 1,\n    periodDuration,\n    sourceDuration\n  } = attributes;\n  const {\n    start,\n    end\n  } = segmentRange[type](attributes);\n  const segments = range(start, end).map(toSegments(attributes));\n\n  if (type === 'static') {\n    const index = segments.length - 1; // section is either a period or the full source\n\n    const sectionDuration = typeof periodDuration === 'number' ? periodDuration : sourceDuration; // final segment may be less than full segment duration\n\n    segments[index].duration = sectionDuration - duration / timescale * index;\n  }\n\n  return segments;\n};\n\n/**\n * Translates SegmentBase into a set of segments.\n * (DASH SPEC Section 5.3.9.3.2) contains a set of <SegmentURL> nodes.  Each\n * node should be translated into segment.\n *\n * @param {Object} attributes\n *   Object containing all inherited attributes from parent elements with attribute\n *   names as keys\n * @return {Object.<Array>} list of segments\n */\n\nconst segmentsFromBase = attributes => {\n  const {\n    baseUrl,\n    initialization = {},\n    sourceDuration,\n    indexRange = '',\n    periodStart,\n    presentationTime,\n    number = 0,\n    duration\n  } = attributes; // base url is required for SegmentBase to work, per spec (Section 5.3.9.2.1)\n\n  if (!baseUrl) {\n    throw new Error(errors.NO_BASE_URL);\n  }\n\n  const initSegment = urlTypeToSegment({\n    baseUrl,\n    source: initialization.sourceURL,\n    range: initialization.range\n  });\n  const segment = urlTypeToSegment({\n    baseUrl,\n    source: baseUrl,\n    indexRange\n  });\n  segment.map = initSegment; // If there is a duration, use it, otherwise use the given duration of the source\n  // (since SegmentBase is only for one total segment)\n\n  if (duration) {\n    const segmentTimeInfo = parseByDuration(attributes);\n\n    if (segmentTimeInfo.length) {\n      segment.duration = segmentTimeInfo[0].duration;\n      segment.timeline = segmentTimeInfo[0].timeline;\n    }\n  } else if (sourceDuration) {\n    segment.duration = sourceDuration;\n    segment.timeline = periodStart;\n  } // If presentation time is provided, these segments are being generated by SIDX\n  // references, and should use the time provided. For the general case of SegmentBase,\n  // there should only be one segment in the period, so its presentation time is the same\n  // as its period start.\n\n\n  segment.presentationTime = presentationTime || periodStart;\n  segment.number = number;\n  return [segment];\n};\n/**\n * Given a playlist, a sidx box, and a baseUrl, update the segment list of the playlist\n * according to the sidx information given.\n *\n * playlist.sidx has metadadata about the sidx where-as the sidx param\n * is the parsed sidx box itself.\n *\n * @param {Object} playlist the playlist to update the sidx information for\n * @param {Object} sidx the parsed sidx box\n * @return {Object} the playlist object with the updated sidx information\n */\n\nconst addSidxSegmentsToPlaylist$1 = (playlist, sidx, baseUrl) => {\n  // Retain init segment information\n  const initSegment = playlist.sidx.map ? playlist.sidx.map : null; // Retain source duration from initial main manifest parsing\n\n  const sourceDuration = playlist.sidx.duration; // Retain source timeline\n\n  const timeline = playlist.timeline || 0;\n  const sidxByteRange = playlist.sidx.byterange;\n  const sidxEnd = sidxByteRange.offset + sidxByteRange.length; // Retain timescale of the parsed sidx\n\n  const timescale = sidx.timescale; // referenceType 1 refers to other sidx boxes\n\n  const mediaReferences = sidx.references.filter(r => r.referenceType !== 1);\n  const segments = [];\n  const type = playlist.endList ? 'static' : 'dynamic';\n  const periodStart = playlist.sidx.timeline;\n  let presentationTime = periodStart;\n  let number = playlist.mediaSequence || 0; // firstOffset is the offset from the end of the sidx box\n\n  let startIndex; // eslint-disable-next-line\n\n  if (typeof sidx.firstOffset === 'bigint') {\n    startIndex = window.BigInt(sidxEnd) + sidx.firstOffset;\n  } else {\n    startIndex = sidxEnd + sidx.firstOffset;\n  }\n\n  for (let i = 0; i < mediaReferences.length; i++) {\n    const reference = sidx.references[i]; // size of the referenced (sub)segment\n\n    const size = reference.referencedSize; // duration of the referenced (sub)segment, in  the  timescale\n    // this will be converted to seconds when generating segments\n\n    const duration = reference.subsegmentDuration; // should be an inclusive range\n\n    let endIndex; // eslint-disable-next-line\n\n    if (typeof startIndex === 'bigint') {\n      endIndex = startIndex + window.BigInt(size) - window.BigInt(1);\n    } else {\n      endIndex = startIndex + size - 1;\n    }\n\n    const indexRange = `${startIndex}-${endIndex}`;\n    const attributes = {\n      baseUrl,\n      timescale,\n      timeline,\n      periodStart,\n      presentationTime,\n      number,\n      duration,\n      sourceDuration,\n      indexRange,\n      type\n    };\n    const segment = segmentsFromBase(attributes)[0];\n\n    if (initSegment) {\n      segment.map = initSegment;\n    }\n\n    segments.push(segment);\n\n    if (typeof startIndex === 'bigint') {\n      startIndex += window.BigInt(size);\n    } else {\n      startIndex += size;\n    }\n\n    presentationTime += duration / timescale;\n    number++;\n  }\n\n  playlist.segments = segments;\n  return playlist;\n};\n\nconst SUPPORTED_MEDIA_TYPES = ['AUDIO', 'SUBTITLES']; // allow one 60fps frame as leniency (arbitrarily chosen)\n\nconst TIME_FUDGE = 1 / 60;\n/**\n * Given a list of timelineStarts, combines, dedupes, and sorts them.\n *\n * @param {TimelineStart[]} timelineStarts - list of timeline starts\n *\n * @return {TimelineStart[]} the combined and deduped timeline starts\n */\n\nconst getUniqueTimelineStarts = timelineStarts => {\n  return union(timelineStarts, ({\n    timeline\n  }) => timeline).sort((a, b) => a.timeline > b.timeline ? 1 : -1);\n};\n/**\n * Finds the playlist with the matching NAME attribute.\n *\n * @param {Array} playlists - playlists to search through\n * @param {string} name - the NAME attribute to search for\n *\n * @return {Object|null} the matching playlist object, or null\n */\n\nconst findPlaylistWithName = (playlists, name) => {\n  for (let i = 0; i < playlists.length; i++) {\n    if (playlists[i].attributes.NAME === name) {\n      return playlists[i];\n    }\n  }\n\n  return null;\n};\n/**\n * Gets a flattened array of media group playlists.\n *\n * @param {Object} manifest - the main manifest object\n *\n * @return {Array} the media group playlists\n */\n\nconst getMediaGroupPlaylists = manifest => {\n  let mediaGroupPlaylists = [];\n  forEachMediaGroup(manifest, SUPPORTED_MEDIA_TYPES, (properties, type, group, label) => {\n    mediaGroupPlaylists = mediaGroupPlaylists.concat(properties.playlists || []);\n  });\n  return mediaGroupPlaylists;\n};\n/**\n * Updates the playlist's media sequence numbers.\n *\n * @param {Object} config - options object\n * @param {Object} config.playlist - the playlist to update\n * @param {number} config.mediaSequence - the mediaSequence number to start with\n */\n\nconst updateMediaSequenceForPlaylist = ({\n  playlist,\n  mediaSequence\n}) => {\n  playlist.mediaSequence = mediaSequence;\n  playlist.segments.forEach((segment, index) => {\n    segment.number = playlist.mediaSequence + index;\n  });\n};\n/**\n * Updates the media and discontinuity sequence numbers of newPlaylists given oldPlaylists\n * and a complete list of timeline starts.\n *\n * If no matching playlist is found, only the discontinuity sequence number of the playlist\n * will be updated.\n *\n * Since early available timelines are not supported, at least one segment must be present.\n *\n * @param {Object} config - options object\n * @param {Object[]} oldPlaylists - the old playlists to use as a reference\n * @param {Object[]} newPlaylists - the new playlists to update\n * @param {Object} timelineStarts - all timelineStarts seen in the stream to this point\n */\n\nconst updateSequenceNumbers = ({\n  oldPlaylists,\n  newPlaylists,\n  timelineStarts\n}) => {\n  newPlaylists.forEach(playlist => {\n    playlist.discontinuitySequence = timelineStarts.findIndex(function ({\n      timeline\n    }) {\n      return timeline === playlist.timeline;\n    }); // Playlists NAMEs come from DASH Representation IDs, which are mandatory\n    // (see ISO_23009-1-2012 5.3.5.2).\n    //\n    // If the same Representation existed in a prior Period, it will retain the same NAME.\n\n    const oldPlaylist = findPlaylistWithName(oldPlaylists, playlist.attributes.NAME);\n\n    if (!oldPlaylist) {\n      // Since this is a new playlist, the media sequence values can start from 0 without\n      // consequence.\n      return;\n    } // TODO better support for live SIDX\n    //\n    // As of this writing, mpd-parser does not support multiperiod SIDX (in live or VOD).\n    // This is evident by a playlist only having a single SIDX reference. In a multiperiod\n    // playlist there would need to be multiple SIDX references. In addition, live SIDX is\n    // not supported when the SIDX properties change on refreshes.\n    //\n    // In the future, if support needs to be added, the merging logic here can be called\n    // after SIDX references are resolved. For now, exit early to prevent exceptions being\n    // thrown due to undefined references.\n\n\n    if (playlist.sidx) {\n      return;\n    } // Since we don't yet support early available timelines, we don't need to support\n    // playlists with no segments.\n\n\n    const firstNewSegment = playlist.segments[0];\n    const oldMatchingSegmentIndex = oldPlaylist.segments.findIndex(function (oldSegment) {\n      return Math.abs(oldSegment.presentationTime - firstNewSegment.presentationTime) < TIME_FUDGE;\n    }); // No matching segment from the old playlist means the entire playlist was refreshed.\n    // In this case the media sequence should account for this update, and the new segments\n    // should be marked as discontinuous from the prior content, since the last prior\n    // timeline was removed.\n\n    if (oldMatchingSegmentIndex === -1) {\n      updateMediaSequenceForPlaylist({\n        playlist,\n        mediaSequence: oldPlaylist.mediaSequence + oldPlaylist.segments.length\n      });\n      playlist.segments[0].discontinuity = true;\n      playlist.discontinuityStarts.unshift(0); // No matching segment does not necessarily mean there's missing content.\n      //\n      // If the new playlist's timeline is the same as the last seen segment's timeline,\n      // then a discontinuity can be added to identify that there's potentially missing\n      // content. If there's no missing content, the discontinuity should still be rather\n      // harmless. It's possible that if segment durations are accurate enough, that the\n      // existence of a gap can be determined using the presentation times and durations,\n      // but if the segment timing info is off, it may introduce more problems than simply\n      // adding the discontinuity.\n      //\n      // If the new playlist's timeline is different from the last seen segment's timeline,\n      // then a discontinuity can be added to identify that this is the first seen segment\n      // of a new timeline. However, the logic at the start of this function that\n      // determined the disconinuity sequence by timeline index is now off by one (the\n      // discontinuity of the newest timeline hasn't yet fallen off the manifest...since\n      // we added it), so the disconinuity sequence must be decremented.\n      //\n      // A period may also have a duration of zero, so the case of no segments is handled\n      // here even though we don't yet support early available periods.\n\n      if (!oldPlaylist.segments.length && playlist.timeline > oldPlaylist.timeline || oldPlaylist.segments.length && playlist.timeline > oldPlaylist.segments[oldPlaylist.segments.length - 1].timeline) {\n        playlist.discontinuitySequence--;\n      }\n\n      return;\n    } // If the first segment matched with a prior segment on a discontinuity (it's matching\n    // on the first segment of a period), then the discontinuitySequence shouldn't be the\n    // timeline's matching one, but instead should be the one prior, and the first segment\n    // of the new manifest should be marked with a discontinuity.\n    //\n    // The reason for this special case is that discontinuity sequence shows how many\n    // discontinuities have fallen off of the playlist, and discontinuities are marked on\n    // the first segment of a new \"timeline.\" Because of this, while DASH will retain that\n    // Period while the \"timeline\" exists, HLS keeps track of it via the discontinuity\n    // sequence, and that first segment is an indicator, but can be removed before that\n    // timeline is gone.\n\n\n    const oldMatchingSegment = oldPlaylist.segments[oldMatchingSegmentIndex];\n\n    if (oldMatchingSegment.discontinuity && !firstNewSegment.discontinuity) {\n      firstNewSegment.discontinuity = true;\n      playlist.discontinuityStarts.unshift(0);\n      playlist.discontinuitySequence--;\n    }\n\n    updateMediaSequenceForPlaylist({\n      playlist,\n      mediaSequence: oldPlaylist.segments[oldMatchingSegmentIndex].number\n    });\n  });\n};\n/**\n * Given an old parsed manifest object and a new parsed manifest object, updates the\n * sequence and timing values within the new manifest to ensure that it lines up with the\n * old.\n *\n * @param {Array} oldManifest - the old main manifest object\n * @param {Array} newManifest - the new main manifest object\n *\n * @return {Object} the updated new manifest object\n */\n\nconst positionManifestOnTimeline = ({\n  oldManifest,\n  newManifest\n}) => {\n  // Starting from v4.1.2 of the IOP, section 4.4.3.3 states:\n  //\n  // \"MPD@availabilityStartTime and Period@start shall not be changed over MPD updates.\"\n  //\n  // This was added from https://github.com/Dash-Industry-Forum/DASH-IF-IOP/issues/160\n  //\n  // Because of this change, and the difficulty of supporting periods with changing start\n  // times, periods with changing start times are not supported. This makes the logic much\n  // simpler, since periods with the same start time can be considerred the same period\n  // across refreshes.\n  //\n  // To give an example as to the difficulty of handling periods where the start time may\n  // change, if a single period manifest is refreshed with another manifest with a single\n  // period, and both the start and end times are increased, then the only way to determine\n  // if it's a new period or an old one that has changed is to look through the segments of\n  // each playlist and determine the presentation time bounds to find a match. In addition,\n  // if the period start changed to exceed the old period end, then there would be no\n  // match, and it would not be possible to determine whether the refreshed period is a new\n  // one or the old one.\n  const oldPlaylists = oldManifest.playlists.concat(getMediaGroupPlaylists(oldManifest));\n  const newPlaylists = newManifest.playlists.concat(getMediaGroupPlaylists(newManifest)); // Save all seen timelineStarts to the new manifest. Although this potentially means that\n  // there's a \"memory leak\" in that it will never stop growing, in reality, only a couple\n  // of properties are saved for each seen Period. Even long running live streams won't\n  // generate too many Periods, unless the stream is watched for decades. In the future,\n  // this can be optimized by mapping to discontinuity sequence numbers for each timeline,\n  // but it may not become an issue, and the additional info can be useful for debugging.\n\n  newManifest.timelineStarts = getUniqueTimelineStarts([oldManifest.timelineStarts, newManifest.timelineStarts]);\n  updateSequenceNumbers({\n    oldPlaylists,\n    newPlaylists,\n    timelineStarts: newManifest.timelineStarts\n  });\n  return newManifest;\n};\n\nconst generateSidxKey = sidx => sidx && sidx.uri + '-' + byteRangeToString(sidx.byterange);\n\nconst mergeDiscontiguousPlaylists = playlists => {\n  // Break out playlists into groups based on their baseUrl\n  const playlistsByBaseUrl = playlists.reduce(function (acc, cur) {\n    if (!acc[cur.attributes.baseUrl]) {\n      acc[cur.attributes.baseUrl] = [];\n    }\n\n    acc[cur.attributes.baseUrl].push(cur);\n    return acc;\n  }, {});\n  let allPlaylists = [];\n  Object.values(playlistsByBaseUrl).forEach(playlistGroup => {\n    const mergedPlaylists = values(playlistGroup.reduce((acc, playlist) => {\n      // assuming playlist IDs are the same across periods\n      // TODO: handle multiperiod where representation sets are not the same\n      // across periods\n      const name = playlist.attributes.id + (playlist.attributes.lang || '');\n\n      if (!acc[name]) {\n        // First Period\n        acc[name] = playlist;\n        acc[name].attributes.timelineStarts = [];\n      } else {\n        // Subsequent Periods\n        if (playlist.segments) {\n          // first segment of subsequent periods signal a discontinuity\n          if (playlist.segments[0]) {\n            playlist.segments[0].discontinuity = true;\n          }\n\n          acc[name].segments.push(...playlist.segments);\n        } // bubble up contentProtection, this assumes all DRM content\n        // has the same contentProtection\n\n\n        if (playlist.attributes.contentProtection) {\n          acc[name].attributes.contentProtection = playlist.attributes.contentProtection;\n        }\n      }\n\n      acc[name].attributes.timelineStarts.push({\n        // Although they represent the same number, it's important to have both to make it\n        // compatible with HLS potentially having a similar attribute.\n        start: playlist.attributes.periodStart,\n        timeline: playlist.attributes.periodStart\n      });\n      return acc;\n    }, {}));\n    allPlaylists = allPlaylists.concat(mergedPlaylists);\n  });\n  return allPlaylists.map(playlist => {\n    playlist.discontinuityStarts = findIndexes(playlist.segments || [], 'discontinuity');\n    return playlist;\n  });\n};\n\nconst addSidxSegmentsToPlaylist = (playlist, sidxMapping) => {\n  const sidxKey = generateSidxKey(playlist.sidx);\n  const sidxMatch = sidxKey && sidxMapping[sidxKey] && sidxMapping[sidxKey].sidx;\n\n  if (sidxMatch) {\n    addSidxSegmentsToPlaylist$1(playlist, sidxMatch, playlist.sidx.resolvedUri);\n  }\n\n  return playlist;\n};\nconst addSidxSegmentsToPlaylists = (playlists, sidxMapping = {}) => {\n  if (!Object.keys(sidxMapping).length) {\n    return playlists;\n  }\n\n  for (const i in playlists) {\n    playlists[i] = addSidxSegmentsToPlaylist(playlists[i], sidxMapping);\n  }\n\n  return playlists;\n};\nconst formatAudioPlaylist = ({\n  attributes,\n  segments,\n  sidx,\n  mediaSequence,\n  discontinuitySequence,\n  discontinuityStarts\n}, isAudioOnly) => {\n  const playlist = {\n    attributes: {\n      NAME: attributes.id,\n      BANDWIDTH: attributes.bandwidth,\n      CODECS: attributes.codecs,\n      ['PROGRAM-ID']: 1\n    },\n    uri: '',\n    endList: attributes.type === 'static',\n    timeline: attributes.periodStart,\n    resolvedUri: attributes.baseUrl || '',\n    targetDuration: attributes.duration,\n    discontinuitySequence,\n    discontinuityStarts,\n    timelineStarts: attributes.timelineStarts,\n    mediaSequence,\n    segments\n  };\n\n  if (attributes.contentProtection) {\n    playlist.contentProtection = attributes.contentProtection;\n  }\n\n  if (attributes.serviceLocation) {\n    playlist.attributes.serviceLocation = attributes.serviceLocation;\n  }\n\n  if (sidx) {\n    playlist.sidx = sidx;\n  }\n\n  if (isAudioOnly) {\n    playlist.attributes.AUDIO = 'audio';\n    playlist.attributes.SUBTITLES = 'subs';\n  }\n\n  return playlist;\n};\nconst formatVttPlaylist = ({\n  attributes,\n  segments,\n  mediaSequence,\n  discontinuityStarts,\n  discontinuitySequence\n}) => {\n  if (typeof segments === 'undefined') {\n    // vtt tracks may use single file in BaseURL\n    segments = [{\n      uri: attributes.baseUrl,\n      timeline: attributes.periodStart,\n      resolvedUri: attributes.baseUrl || '',\n      duration: attributes.sourceDuration,\n      number: 0\n    }]; // targetDuration should be the same duration as the only segment\n\n    attributes.duration = attributes.sourceDuration;\n  }\n\n  const m3u8Attributes = {\n    NAME: attributes.id,\n    BANDWIDTH: attributes.bandwidth,\n    ['PROGRAM-ID']: 1\n  };\n\n  if (attributes.codecs) {\n    m3u8Attributes.CODECS = attributes.codecs;\n  }\n\n  const vttPlaylist = {\n    attributes: m3u8Attributes,\n    uri: '',\n    endList: attributes.type === 'static',\n    timeline: attributes.periodStart,\n    resolvedUri: attributes.baseUrl || '',\n    targetDuration: attributes.duration,\n    timelineStarts: attributes.timelineStarts,\n    discontinuityStarts,\n    discontinuitySequence,\n    mediaSequence,\n    segments\n  };\n\n  if (attributes.serviceLocation) {\n    vttPlaylist.attributes.serviceLocation = attributes.serviceLocation;\n  }\n\n  return vttPlaylist;\n};\nconst organizeAudioPlaylists = (playlists, sidxMapping = {}, isAudioOnly = false) => {\n  let mainPlaylist;\n  const formattedPlaylists = playlists.reduce((a, playlist) => {\n    const role = playlist.attributes.role && playlist.attributes.role.value || '';\n    const language = playlist.attributes.lang || '';\n    let label = playlist.attributes.label || 'main';\n\n    if (language && !playlist.attributes.label) {\n      const roleLabel = role ? ` (${role})` : '';\n      label = `${playlist.attributes.lang}${roleLabel}`;\n    }\n\n    if (!a[label]) {\n      a[label] = {\n        language,\n        autoselect: true,\n        default: role === 'main',\n        playlists: [],\n        uri: ''\n      };\n    }\n\n    const formatted = addSidxSegmentsToPlaylist(formatAudioPlaylist(playlist, isAudioOnly), sidxMapping);\n    a[label].playlists.push(formatted);\n\n    if (typeof mainPlaylist === 'undefined' && role === 'main') {\n      mainPlaylist = playlist;\n      mainPlaylist.default = true;\n    }\n\n    return a;\n  }, {}); // if no playlists have role \"main\", mark the first as main\n\n  if (!mainPlaylist) {\n    const firstLabel = Object.keys(formattedPlaylists)[0];\n    formattedPlaylists[firstLabel].default = true;\n  }\n\n  return formattedPlaylists;\n};\nconst organizeVttPlaylists = (playlists, sidxMapping = {}) => {\n  return playlists.reduce((a, playlist) => {\n    const label = playlist.attributes.label || playlist.attributes.lang || 'text';\n    const language = playlist.attributes.lang || 'und';\n\n    if (!a[label]) {\n      a[label] = {\n        language,\n        default: false,\n        autoselect: false,\n        playlists: [],\n        uri: ''\n      };\n    }\n\n    a[label].playlists.push(addSidxSegmentsToPlaylist(formatVttPlaylist(playlist), sidxMapping));\n    return a;\n  }, {});\n};\n\nconst organizeCaptionServices = captionServices => captionServices.reduce((svcObj, svc) => {\n  if (!svc) {\n    return svcObj;\n  }\n\n  svc.forEach(service => {\n    const {\n      channel,\n      language\n    } = service;\n    svcObj[language] = {\n      autoselect: false,\n      default: false,\n      instreamId: channel,\n      language\n    };\n\n    if (service.hasOwnProperty('aspectRatio')) {\n      svcObj[language].aspectRatio = service.aspectRatio;\n    }\n\n    if (service.hasOwnProperty('easyReader')) {\n      svcObj[language].easyReader = service.easyReader;\n    }\n\n    if (service.hasOwnProperty('3D')) {\n      svcObj[language]['3D'] = service['3D'];\n    }\n  });\n  return svcObj;\n}, {});\n\nconst formatVideoPlaylist = ({\n  attributes,\n  segments,\n  sidx,\n  discontinuityStarts\n}) => {\n  const playlist = {\n    attributes: {\n      NAME: attributes.id,\n      AUDIO: 'audio',\n      SUBTITLES: 'subs',\n      RESOLUTION: {\n        width: attributes.width,\n        height: attributes.height\n      },\n      CODECS: attributes.codecs,\n      BANDWIDTH: attributes.bandwidth,\n      ['PROGRAM-ID']: 1\n    },\n    uri: '',\n    endList: attributes.type === 'static',\n    timeline: attributes.periodStart,\n    resolvedUri: attributes.baseUrl || '',\n    targetDuration: attributes.duration,\n    discontinuityStarts,\n    timelineStarts: attributes.timelineStarts,\n    segments\n  };\n\n  if (attributes.frameRate) {\n    playlist.attributes['FRAME-RATE'] = attributes.frameRate;\n  }\n\n  if (attributes.contentProtection) {\n    playlist.contentProtection = attributes.contentProtection;\n  }\n\n  if (attributes.serviceLocation) {\n    playlist.attributes.serviceLocation = attributes.serviceLocation;\n  }\n\n  if (sidx) {\n    playlist.sidx = sidx;\n  }\n\n  return playlist;\n};\n\nconst videoOnly = ({\n  attributes\n}) => attributes.mimeType === 'video/mp4' || attributes.mimeType === 'video/webm' || attributes.contentType === 'video';\n\nconst audioOnly = ({\n  attributes\n}) => attributes.mimeType === 'audio/mp4' || attributes.mimeType === 'audio/webm' || attributes.contentType === 'audio';\n\nconst vttOnly = ({\n  attributes\n}) => attributes.mimeType === 'text/vtt' || attributes.contentType === 'text';\n/**\n * Contains start and timeline properties denoting a timeline start. For DASH, these will\n * be the same number.\n *\n * @typedef {Object} TimelineStart\n * @property {number} start - the start time of the timeline\n * @property {number} timeline - the timeline number\n */\n\n/**\n * Adds appropriate media and discontinuity sequence values to the segments and playlists.\n *\n * Throughout mpd-parser, the `number` attribute is used in relation to `startNumber`, a\n * DASH specific attribute used in constructing segment URI's from templates. However, from\n * an HLS perspective, the `number` attribute on a segment would be its `mediaSequence`\n * value, which should start at the original media sequence value (or 0) and increment by 1\n * for each segment thereafter. Since DASH's `startNumber` values are independent per\n * period, it doesn't make sense to use it for `number`. Instead, assume everything starts\n * from a 0 mediaSequence value and increment from there.\n *\n * Note that VHS currently doesn't use the `number` property, but it can be helpful for\n * debugging and making sense of the manifest.\n *\n * For live playlists, to account for values increasing in manifests when periods are\n * removed on refreshes, merging logic should be used to update the numbers to their\n * appropriate values (to ensure they're sequential and increasing).\n *\n * @param {Object[]} playlists - the playlists to update\n * @param {TimelineStart[]} timelineStarts - the timeline starts for the manifest\n */\n\n\nconst addMediaSequenceValues = (playlists, timelineStarts) => {\n  // increment all segments sequentially\n  playlists.forEach(playlist => {\n    playlist.mediaSequence = 0;\n    playlist.discontinuitySequence = timelineStarts.findIndex(function ({\n      timeline\n    }) {\n      return timeline === playlist.timeline;\n    });\n\n    if (!playlist.segments) {\n      return;\n    }\n\n    playlist.segments.forEach((segment, index) => {\n      segment.number = index;\n    });\n  });\n};\n/**\n * Given a media group object, flattens all playlists within the media group into a single\n * array.\n *\n * @param {Object} mediaGroupObject - the media group object\n *\n * @return {Object[]}\n *         The media group playlists\n */\n\nconst flattenMediaGroupPlaylists = mediaGroupObject => {\n  if (!mediaGroupObject) {\n    return [];\n  }\n\n  return Object.keys(mediaGroupObject).reduce((acc, label) => {\n    const labelContents = mediaGroupObject[label];\n    return acc.concat(labelContents.playlists);\n  }, []);\n};\nconst toM3u8 = ({\n  dashPlaylists,\n  locations,\n  contentSteering,\n  sidxMapping = {},\n  previousManifest,\n  eventStream\n}) => {\n  if (!dashPlaylists.length) {\n    return {};\n  } // grab all main manifest attributes\n\n\n  const {\n    sourceDuration: duration,\n    type,\n    suggestedPresentationDelay,\n    minimumUpdatePeriod\n  } = dashPlaylists[0].attributes;\n  const videoPlaylists = mergeDiscontiguousPlaylists(dashPlaylists.filter(videoOnly)).map(formatVideoPlaylist);\n  const audioPlaylists = mergeDiscontiguousPlaylists(dashPlaylists.filter(audioOnly));\n  const vttPlaylists = mergeDiscontiguousPlaylists(dashPlaylists.filter(vttOnly));\n  const captions = dashPlaylists.map(playlist => playlist.attributes.captionServices).filter(Boolean);\n  const manifest = {\n    allowCache: true,\n    discontinuityStarts: [],\n    segments: [],\n    endList: true,\n    mediaGroups: {\n      AUDIO: {},\n      VIDEO: {},\n      ['CLOSED-CAPTIONS']: {},\n      SUBTITLES: {}\n    },\n    uri: '',\n    duration,\n    playlists: addSidxSegmentsToPlaylists(videoPlaylists, sidxMapping)\n  };\n\n  if (minimumUpdatePeriod >= 0) {\n    manifest.minimumUpdatePeriod = minimumUpdatePeriod * 1000;\n  }\n\n  if (locations) {\n    manifest.locations = locations;\n  }\n\n  if (contentSteering) {\n    manifest.contentSteering = contentSteering;\n  }\n\n  if (type === 'dynamic') {\n    manifest.suggestedPresentationDelay = suggestedPresentationDelay;\n  }\n\n  if (eventStream && eventStream.length > 0) {\n    manifest.eventStream = eventStream;\n  }\n\n  const isAudioOnly = manifest.playlists.length === 0;\n  const organizedAudioGroup = audioPlaylists.length ? organizeAudioPlaylists(audioPlaylists, sidxMapping, isAudioOnly) : null;\n  const organizedVttGroup = vttPlaylists.length ? organizeVttPlaylists(vttPlaylists, sidxMapping) : null;\n  const formattedPlaylists = videoPlaylists.concat(flattenMediaGroupPlaylists(organizedAudioGroup), flattenMediaGroupPlaylists(organizedVttGroup));\n  const playlistTimelineStarts = formattedPlaylists.map(({\n    timelineStarts\n  }) => timelineStarts);\n  manifest.timelineStarts = getUniqueTimelineStarts(playlistTimelineStarts);\n  addMediaSequenceValues(formattedPlaylists, manifest.timelineStarts);\n\n  if (organizedAudioGroup) {\n    manifest.mediaGroups.AUDIO.audio = organizedAudioGroup;\n  }\n\n  if (organizedVttGroup) {\n    manifest.mediaGroups.SUBTITLES.subs = organizedVttGroup;\n  }\n\n  if (captions.length) {\n    manifest.mediaGroups['CLOSED-CAPTIONS'].cc = organizeCaptionServices(captions);\n  }\n\n  if (previousManifest) {\n    return positionManifestOnTimeline({\n      oldManifest: previousManifest,\n      newManifest: manifest\n    });\n  }\n\n  return manifest;\n};\n\n/**\n * Calculates the R (repetition) value for a live stream (for the final segment\n * in a manifest where the r value is negative 1)\n *\n * @param {Object} attributes\n *        Object containing all inherited attributes from parent elements with attribute\n *        names as keys\n * @param {number} time\n *        current time (typically the total time up until the final segment)\n * @param {number} duration\n *        duration property for the given <S />\n *\n * @return {number}\n *        R value to reach the end of the given period\n */\nconst getLiveRValue = (attributes, time, duration) => {\n  const {\n    NOW,\n    clientOffset,\n    availabilityStartTime,\n    timescale = 1,\n    periodStart = 0,\n    minimumUpdatePeriod = 0\n  } = attributes;\n  const now = (NOW + clientOffset) / 1000;\n  const periodStartWC = availabilityStartTime + periodStart;\n  const periodEndWC = now + minimumUpdatePeriod;\n  const periodDuration = periodEndWC - periodStartWC;\n  return Math.ceil((periodDuration * timescale - time) / duration);\n};\n/**\n * Uses information provided by SegmentTemplate.SegmentTimeline to determine segment\n * timing and duration\n *\n * @param {Object} attributes\n *        Object containing all inherited attributes from parent elements with attribute\n *        names as keys\n * @param {Object[]} segmentTimeline\n *        List of objects representing the attributes of each S element contained within\n *\n * @return {{number: number, duration: number, time: number, timeline: number}[]}\n *         List of Objects with segment timing and duration info\n */\n\n\nconst parseByTimeline = (attributes, segmentTimeline) => {\n  const {\n    type,\n    minimumUpdatePeriod = 0,\n    media = '',\n    sourceDuration,\n    timescale = 1,\n    startNumber = 1,\n    periodStart: timeline\n  } = attributes;\n  const segments = [];\n  let time = -1;\n\n  for (let sIndex = 0; sIndex < segmentTimeline.length; sIndex++) {\n    const S = segmentTimeline[sIndex];\n    const duration = S.d;\n    const repeat = S.r || 0;\n    const segmentTime = S.t || 0;\n\n    if (time < 0) {\n      // first segment\n      time = segmentTime;\n    }\n\n    if (segmentTime && segmentTime > time) {\n      // discontinuity\n      // TODO: How to handle this type of discontinuity\n      // timeline++ here would treat it like HLS discontuity and content would\n      // get appended without gap\n      // E.G.\n      //  <S t=\"0\" d=\"1\" />\n      //  <S d=\"1\" />\n      //  <S d=\"1\" />\n      //  <S t=\"5\" d=\"1\" />\n      // would have $Time$ values of [0, 1, 2, 5]\n      // should this be appened at time positions [0, 1, 2, 3],(#EXT-X-DISCONTINUITY)\n      // or [0, 1, 2, gap, gap, 5]? (#EXT-X-GAP)\n      // does the value of sourceDuration consider this when calculating arbitrary\n      // negative @r repeat value?\n      // E.G. Same elements as above with this added at the end\n      //  <S d=\"1\" r=\"-1\" />\n      //  with a sourceDuration of 10\n      // Would the 2 gaps be included in the time duration calculations resulting in\n      // 8 segments with $Time$ values of [0, 1, 2, 5, 6, 7, 8, 9] or 10 segments\n      // with $Time$ values of [0, 1, 2, 5, 6, 7, 8, 9, 10, 11] ?\n      time = segmentTime;\n    }\n\n    let count;\n\n    if (repeat < 0) {\n      const nextS = sIndex + 1;\n\n      if (nextS === segmentTimeline.length) {\n        // last segment\n        if (type === 'dynamic' && minimumUpdatePeriod > 0 && media.indexOf('$Number$') > 0) {\n          count = getLiveRValue(attributes, time, duration);\n        } else {\n          // TODO: This may be incorrect depending on conclusion of TODO above\n          count = (sourceDuration * timescale - time) / duration;\n        }\n      } else {\n        count = (segmentTimeline[nextS].t - time) / duration;\n      }\n    } else {\n      count = repeat + 1;\n    }\n\n    const end = startNumber + segments.length + count;\n    let number = startNumber + segments.length;\n\n    while (number < end) {\n      segments.push({\n        number,\n        duration: duration / timescale,\n        time,\n        timeline\n      });\n      time += duration;\n      number++;\n    }\n  }\n\n  return segments;\n};\n\nconst identifierPattern = /\\$([A-z]*)(?:(%0)([0-9]+)d)?\\$/g;\n/**\n * Replaces template identifiers with corresponding values. To be used as the callback\n * for String.prototype.replace\n *\n * @name replaceCallback\n * @function\n * @param {string} match\n *        Entire match of identifier\n * @param {string} identifier\n *        Name of matched identifier\n * @param {string} format\n *        Format tag string. Its presence indicates that padding is expected\n * @param {string} width\n *        Desired length of the replaced value. Values less than this width shall be left\n *        zero padded\n * @return {string}\n *         Replacement for the matched identifier\n */\n\n/**\n * Returns a function to be used as a callback for String.prototype.replace to replace\n * template identifiers\n *\n * @param {Obect} values\n *        Object containing values that shall be used to replace known identifiers\n * @param {number} values.RepresentationID\n *        Value of the Representation@id attribute\n * @param {number} values.Number\n *        Number of the corresponding segment\n * @param {number} values.Bandwidth\n *        Value of the Representation@bandwidth attribute.\n * @param {number} values.Time\n *        Timestamp value of the corresponding segment\n * @return {replaceCallback}\n *         Callback to be used with String.prototype.replace to replace identifiers\n */\n\nconst identifierReplacement = values => (match, identifier, format, width) => {\n  if (match === '$$') {\n    // escape sequence\n    return '$';\n  }\n\n  if (typeof values[identifier] === 'undefined') {\n    return match;\n  }\n\n  const value = '' + values[identifier];\n\n  if (identifier === 'RepresentationID') {\n    // Format tag shall not be present with RepresentationID\n    return value;\n  }\n\n  if (!format) {\n    width = 1;\n  } else {\n    width = parseInt(width, 10);\n  }\n\n  if (value.length >= width) {\n    return value;\n  }\n\n  return `${new Array(width - value.length + 1).join('0')}${value}`;\n};\n/**\n * Constructs a segment url from a template string\n *\n * @param {string} url\n *        Template string to construct url from\n * @param {Obect} values\n *        Object containing values that shall be used to replace known identifiers\n * @param {number} values.RepresentationID\n *        Value of the Representation@id attribute\n * @param {number} values.Number\n *        Number of the corresponding segment\n * @param {number} values.Bandwidth\n *        Value of the Representation@bandwidth attribute.\n * @param {number} values.Time\n *        Timestamp value of the corresponding segment\n * @return {string}\n *         Segment url with identifiers replaced\n */\n\nconst constructTemplateUrl = (url, values) => url.replace(identifierPattern, identifierReplacement(values));\n/**\n * Generates a list of objects containing timing and duration information about each\n * segment needed to generate segment uris and the complete segment object\n *\n * @param {Object} attributes\n *        Object containing all inherited attributes from parent elements with attribute\n *        names as keys\n * @param {Object[]|undefined} segmentTimeline\n *        List of objects representing the attributes of each S element contained within\n *        the SegmentTimeline element\n * @return {{number: number, duration: number, time: number, timeline: number}[]}\n *         List of Objects with segment timing and duration info\n */\n\nconst parseTemplateInfo = (attributes, segmentTimeline) => {\n  if (!attributes.duration && !segmentTimeline) {\n    // if neither @duration or SegmentTimeline are present, then there shall be exactly\n    // one media segment\n    return [{\n      number: attributes.startNumber || 1,\n      duration: attributes.sourceDuration,\n      time: 0,\n      timeline: attributes.periodStart\n    }];\n  }\n\n  if (attributes.duration) {\n    return parseByDuration(attributes);\n  }\n\n  return parseByTimeline(attributes, segmentTimeline);\n};\n/**\n * Generates a list of segments using information provided by the SegmentTemplate element\n *\n * @param {Object} attributes\n *        Object containing all inherited attributes from parent elements with attribute\n *        names as keys\n * @param {Object[]|undefined} segmentTimeline\n *        List of objects representing the attributes of each S element contained within\n *        the SegmentTimeline element\n * @return {Object[]}\n *         List of segment objects\n */\n\nconst segmentsFromTemplate = (attributes, segmentTimeline) => {\n  const templateValues = {\n    RepresentationID: attributes.id,\n    Bandwidth: attributes.bandwidth || 0\n  };\n  const {\n    initialization = {\n      sourceURL: '',\n      range: ''\n    }\n  } = attributes;\n  const mapSegment = urlTypeToSegment({\n    baseUrl: attributes.baseUrl,\n    source: constructTemplateUrl(initialization.sourceURL, templateValues),\n    range: initialization.range\n  });\n  const segments = parseTemplateInfo(attributes, segmentTimeline);\n  return segments.map(segment => {\n    templateValues.Number = segment.number;\n    templateValues.Time = segment.time;\n    const uri = constructTemplateUrl(attributes.media || '', templateValues); // See DASH spec section 5.3.9.2.2\n    // - if timescale isn't present on any level, default to 1.\n\n    const timescale = attributes.timescale || 1; // - if presentationTimeOffset isn't present on any level, default to 0\n\n    const presentationTimeOffset = attributes.presentationTimeOffset || 0;\n    const presentationTime = // Even if the @t attribute is not specified for the segment, segment.time is\n    // calculated in mpd-parser prior to this, so it's assumed to be available.\n    attributes.periodStart + (segment.time - presentationTimeOffset) / timescale;\n    const map = {\n      uri,\n      timeline: segment.timeline,\n      duration: segment.duration,\n      resolvedUri: resolveUrl(attributes.baseUrl || '', uri),\n      map: mapSegment,\n      number: segment.number,\n      presentationTime\n    };\n    return map;\n  });\n};\n\n/**\n * Converts a <SegmentUrl> (of type URLType from the DASH spec 5.3.9.2 Table 14)\n * to an object that matches the output of a segment in videojs/mpd-parser\n *\n * @param {Object} attributes\n *   Object containing all inherited attributes from parent elements with attribute\n *   names as keys\n * @param {Object} segmentUrl\n *   <SegmentURL> node to translate into a segment object\n * @return {Object} translated segment object\n */\n\nconst SegmentURLToSegmentObject = (attributes, segmentUrl) => {\n  const {\n    baseUrl,\n    initialization = {}\n  } = attributes;\n  const initSegment = urlTypeToSegment({\n    baseUrl,\n    source: initialization.sourceURL,\n    range: initialization.range\n  });\n  const segment = urlTypeToSegment({\n    baseUrl,\n    source: segmentUrl.media,\n    range: segmentUrl.mediaRange\n  });\n  segment.map = initSegment;\n  return segment;\n};\n/**\n * Generates a list of segments using information provided by the SegmentList element\n * SegmentList (DASH SPEC Section 5.3.9.3.2) contains a set of <SegmentURL> nodes.  Each\n * node should be translated into segment.\n *\n * @param {Object} attributes\n *   Object containing all inherited attributes from parent elements with attribute\n *   names as keys\n * @param {Object[]|undefined} segmentTimeline\n *        List of objects representing the attributes of each S element contained within\n *        the SegmentTimeline element\n * @return {Object.<Array>} list of segments\n */\n\n\nconst segmentsFromList = (attributes, segmentTimeline) => {\n  const {\n    duration,\n    segmentUrls = [],\n    periodStart\n  } = attributes; // Per spec (5.3.9.2.1) no way to determine segment duration OR\n  // if both SegmentTimeline and @duration are defined, it is outside of spec.\n\n  if (!duration && !segmentTimeline || duration && segmentTimeline) {\n    throw new Error(errors.SEGMENT_TIME_UNSPECIFIED);\n  }\n\n  const segmentUrlMap = segmentUrls.map(segmentUrlObject => SegmentURLToSegmentObject(attributes, segmentUrlObject));\n  let segmentTimeInfo;\n\n  if (duration) {\n    segmentTimeInfo = parseByDuration(attributes);\n  }\n\n  if (segmentTimeline) {\n    segmentTimeInfo = parseByTimeline(attributes, segmentTimeline);\n  }\n\n  const segments = segmentTimeInfo.map((segmentTime, index) => {\n    if (segmentUrlMap[index]) {\n      const segment = segmentUrlMap[index]; // See DASH spec section 5.3.9.2.2\n      // - if timescale isn't present on any level, default to 1.\n\n      const timescale = attributes.timescale || 1; // - if presentationTimeOffset isn't present on any level, default to 0\n\n      const presentationTimeOffset = attributes.presentationTimeOffset || 0;\n      segment.timeline = segmentTime.timeline;\n      segment.duration = segmentTime.duration;\n      segment.number = segmentTime.number;\n      segment.presentationTime = periodStart + (segmentTime.time - presentationTimeOffset) / timescale;\n      return segment;\n    } // Since we're mapping we should get rid of any blank segments (in case\n    // the given SegmentTimeline is handling for more elements than we have\n    // SegmentURLs for).\n\n  }).filter(segment => segment);\n  return segments;\n};\n\nconst generateSegments = ({\n  attributes,\n  segmentInfo\n}) => {\n  let segmentAttributes;\n  let segmentsFn;\n\n  if (segmentInfo.template) {\n    segmentsFn = segmentsFromTemplate;\n    segmentAttributes = merge(attributes, segmentInfo.template);\n  } else if (segmentInfo.base) {\n    segmentsFn = segmentsFromBase;\n    segmentAttributes = merge(attributes, segmentInfo.base);\n  } else if (segmentInfo.list) {\n    segmentsFn = segmentsFromList;\n    segmentAttributes = merge(attributes, segmentInfo.list);\n  }\n\n  const segmentsInfo = {\n    attributes\n  };\n\n  if (!segmentsFn) {\n    return segmentsInfo;\n  }\n\n  const segments = segmentsFn(segmentAttributes, segmentInfo.segmentTimeline); // The @duration attribute will be used to determin the playlist's targetDuration which\n  // must be in seconds. Since we've generated the segment list, we no longer need\n  // @duration to be in @timescale units, so we can convert it here.\n\n  if (segmentAttributes.duration) {\n    const {\n      duration,\n      timescale = 1\n    } = segmentAttributes;\n    segmentAttributes.duration = duration / timescale;\n  } else if (segments.length) {\n    // if there is no @duration attribute, use the largest segment duration as\n    // as target duration\n    segmentAttributes.duration = segments.reduce((max, segment) => {\n      return Math.max(max, Math.ceil(segment.duration));\n    }, 0);\n  } else {\n    segmentAttributes.duration = 0;\n  }\n\n  segmentsInfo.attributes = segmentAttributes;\n  segmentsInfo.segments = segments; // This is a sidx box without actual segment information\n\n  if (segmentInfo.base && segmentAttributes.indexRange) {\n    segmentsInfo.sidx = segments[0];\n    segmentsInfo.segments = [];\n  }\n\n  return segmentsInfo;\n};\nconst toPlaylists = representations => representations.map(generateSegments);\n\nconst findChildren = (element, name) => from(element.childNodes).filter(({\n  tagName\n}) => tagName === name);\nconst getContent = element => element.textContent.trim();\n\n/**\n * Converts the provided string that may contain a division operation to a number.\n *\n * @param {string} value - the provided string value\n *\n * @return {number} the parsed string value\n */\nconst parseDivisionValue = value => {\n  return parseFloat(value.split('/').reduce((prev, current) => prev / current));\n};\n\nconst parseDuration = str => {\n  const SECONDS_IN_YEAR = 365 * 24 * 60 * 60;\n  const SECONDS_IN_MONTH = 30 * 24 * 60 * 60;\n  const SECONDS_IN_DAY = 24 * 60 * 60;\n  const SECONDS_IN_HOUR = 60 * 60;\n  const SECONDS_IN_MIN = 60; // P10Y10M10DT10H10M10.1S\n\n  const durationRegex = /P(?:(\\d*)Y)?(?:(\\d*)M)?(?:(\\d*)D)?(?:T(?:(\\d*)H)?(?:(\\d*)M)?(?:([\\d.]*)S)?)?/;\n  const match = durationRegex.exec(str);\n\n  if (!match) {\n    return 0;\n  }\n\n  const [year, month, day, hour, minute, second] = match.slice(1);\n  return parseFloat(year || 0) * SECONDS_IN_YEAR + parseFloat(month || 0) * SECONDS_IN_MONTH + parseFloat(day || 0) * SECONDS_IN_DAY + parseFloat(hour || 0) * SECONDS_IN_HOUR + parseFloat(minute || 0) * SECONDS_IN_MIN + parseFloat(second || 0);\n};\nconst parseDate = str => {\n  // Date format without timezone according to ISO 8601\n  // YYY-MM-DDThh:mm:ss.ssssss\n  const dateRegex = /^\\d+-\\d+-\\d+T\\d+:\\d+:\\d+(\\.\\d+)?$/; // If the date string does not specifiy a timezone, we must specifiy UTC. This is\n  // expressed by ending with 'Z'\n\n  if (dateRegex.test(str)) {\n    str += 'Z';\n  }\n\n  return Date.parse(str);\n};\n\nconst parsers = {\n  /**\n   * Specifies the duration of the entire Media Presentation. Format is a duration string\n   * as specified in ISO 8601\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The duration in seconds\n   */\n  mediaPresentationDuration(value) {\n    return parseDuration(value);\n  },\n\n  /**\n   * Specifies the Segment availability start time for all Segments referred to in this\n   * MPD. For a dynamic manifest, it specifies the anchor for the earliest availability\n   * time. Format is a date string as specified in ISO 8601\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The date as seconds from unix epoch\n   */\n  availabilityStartTime(value) {\n    return parseDate(value) / 1000;\n  },\n\n  /**\n   * Specifies the smallest period between potential changes to the MPD. Format is a\n   * duration string as specified in ISO 8601\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The duration in seconds\n   */\n  minimumUpdatePeriod(value) {\n    return parseDuration(value);\n  },\n\n  /**\n   * Specifies the suggested presentation delay. Format is a\n   * duration string as specified in ISO 8601\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The duration in seconds\n   */\n  suggestedPresentationDelay(value) {\n    return parseDuration(value);\n  },\n\n  /**\n   * specifices the type of mpd. Can be either \"static\" or \"dynamic\"\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   *\n   * @return {string}\n   *         The type as a string\n   */\n  type(value) {\n    return value;\n  },\n\n  /**\n   * Specifies the duration of the smallest time shifting buffer for any Representation\n   * in the MPD. Format is a duration string as specified in ISO 8601\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The duration in seconds\n   */\n  timeShiftBufferDepth(value) {\n    return parseDuration(value);\n  },\n\n  /**\n   * Specifies the PeriodStart time of the Period relative to the availabilityStarttime.\n   * Format is a duration string as specified in ISO 8601\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The duration in seconds\n   */\n  start(value) {\n    return parseDuration(value);\n  },\n\n  /**\n   * Specifies the width of the visual presentation\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The parsed width\n   */\n  width(value) {\n    return parseInt(value, 10);\n  },\n\n  /**\n   * Specifies the height of the visual presentation\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The parsed height\n   */\n  height(value) {\n    return parseInt(value, 10);\n  },\n\n  /**\n   * Specifies the bitrate of the representation\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The parsed bandwidth\n   */\n  bandwidth(value) {\n    return parseInt(value, 10);\n  },\n\n  /**\n   * Specifies the frame rate of the representation\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The parsed frame rate\n   */\n  frameRate(value) {\n    return parseDivisionValue(value);\n  },\n\n  /**\n   * Specifies the number of the first Media Segment in this Representation in the Period\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The parsed number\n   */\n  startNumber(value) {\n    return parseInt(value, 10);\n  },\n\n  /**\n   * Specifies the timescale in units per seconds\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The parsed timescale\n   */\n  timescale(value) {\n    return parseInt(value, 10);\n  },\n\n  /**\n   * Specifies the presentationTimeOffset.\n   *\n   * @param {string} value\n   *        value of the attribute as a string\n   *\n   * @return {number}\n   *         The parsed presentationTimeOffset\n   */\n  presentationTimeOffset(value) {\n    return parseInt(value, 10);\n  },\n\n  /**\n   * Specifies the constant approximate Segment duration\n   * NOTE: The <Period> element also contains an @duration attribute. This duration\n   *       specifies the duration of the Period. This attribute is currently not\n   *       supported by the rest of the parser, however we still check for it to prevent\n   *       errors.\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The parsed duration\n   */\n  duration(value) {\n    const parsedValue = parseInt(value, 10);\n\n    if (isNaN(parsedValue)) {\n      return parseDuration(value);\n    }\n\n    return parsedValue;\n  },\n\n  /**\n   * Specifies the Segment duration, in units of the value of the @timescale.\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The parsed duration\n   */\n  d(value) {\n    return parseInt(value, 10);\n  },\n\n  /**\n   * Specifies the MPD start time, in @timescale units, the first Segment in the series\n   * starts relative to the beginning of the Period\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The parsed time\n   */\n  t(value) {\n    return parseInt(value, 10);\n  },\n\n  /**\n   * Specifies the repeat count of the number of following contiguous Segments with the\n   * same duration expressed by the value of @d\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The parsed number\n   */\n  r(value) {\n    return parseInt(value, 10);\n  },\n\n  /**\n   * Specifies the presentationTime.\n   *\n   * @param {string} value\n   *        value of the attribute as a string\n   *\n   * @return {number}\n   *         The parsed presentationTime\n   */\n  presentationTime(value) {\n    return parseInt(value, 10);\n  },\n\n  /**\n   * Default parser for all other attributes. Acts as a no-op and just returns the value\n   * as a string\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {string}\n   *         Unparsed value\n   */\n  DEFAULT(value) {\n    return value;\n  }\n\n};\n/**\n * Gets all the attributes and values of the provided node, parses attributes with known\n * types, and returns an object with attribute names mapped to values.\n *\n * @param {Node} el\n *        The node to parse attributes from\n * @return {Object}\n *         Object with all attributes of el parsed\n */\n\nconst parseAttributes = el => {\n  if (!(el && el.attributes)) {\n    return {};\n  }\n\n  return from(el.attributes).reduce((a, e) => {\n    const parseFn = parsers[e.name] || parsers.DEFAULT;\n    a[e.name] = parseFn(e.value);\n    return a;\n  }, {});\n};\n\nconst keySystemsMap = {\n  'urn:uuid:1077efec-c0b2-4d02-ace3-3c1e52e2fb4b': 'org.w3.clearkey',\n  'urn:uuid:edef8ba9-79d6-4ace-a3c8-27dcd51d21ed': 'com.widevine.alpha',\n  'urn:uuid:9a04f079-9840-4286-ab92-e65be0885f95': 'com.microsoft.playready',\n  'urn:uuid:f239e769-efa3-4850-9c16-a903c6932efb': 'com.adobe.primetime',\n  // ISO_IEC 23009-1_2022 5.8.5.2.2 The mp4 Protection Scheme\n  'urn:mpeg:dash:mp4protection:2011': 'mp4protection'\n};\n/**\n * Builds a list of urls that is the product of the reference urls and BaseURL values\n *\n * @param {Object[]} references\n *        List of objects containing the reference URL as well as its attributes\n * @param {Node[]} baseUrlElements\n *        List of BaseURL nodes from the mpd\n * @return {Object[]}\n *         List of objects with resolved urls and attributes\n */\n\nconst buildBaseUrls = (references, baseUrlElements) => {\n  if (!baseUrlElements.length) {\n    return references;\n  }\n\n  return flatten(references.map(function (reference) {\n    return baseUrlElements.map(function (baseUrlElement) {\n      const initialBaseUrl = getContent(baseUrlElement);\n      const resolvedBaseUrl = resolveUrl(reference.baseUrl, initialBaseUrl);\n      const finalBaseUrl = merge(parseAttributes(baseUrlElement), {\n        baseUrl: resolvedBaseUrl\n      }); // If the URL is resolved, we want to get the serviceLocation from the reference\n      // assuming there is no serviceLocation on the initialBaseUrl\n\n      if (resolvedBaseUrl !== initialBaseUrl && !finalBaseUrl.serviceLocation && reference.serviceLocation) {\n        finalBaseUrl.serviceLocation = reference.serviceLocation;\n      }\n\n      return finalBaseUrl;\n    });\n  }));\n};\n/**\n * Contains all Segment information for its containing AdaptationSet\n *\n * @typedef {Object} SegmentInformation\n * @property {Object|undefined} template\n *           Contains the attributes for the SegmentTemplate node\n * @property {Object[]|undefined} segmentTimeline\n *           Contains a list of atrributes for each S node within the SegmentTimeline node\n * @property {Object|undefined} list\n *           Contains the attributes for the SegmentList node\n * @property {Object|undefined} base\n *           Contains the attributes for the SegmentBase node\n */\n\n/**\n * Returns all available Segment information contained within the AdaptationSet node\n *\n * @param {Node} adaptationSet\n *        The AdaptationSet node to get Segment information from\n * @return {SegmentInformation}\n *         The Segment information contained within the provided AdaptationSet\n */\n\nconst getSegmentInformation = adaptationSet => {\n  const segmentTemplate = findChildren(adaptationSet, 'SegmentTemplate')[0];\n  const segmentList = findChildren(adaptationSet, 'SegmentList')[0];\n  const segmentUrls = segmentList && findChildren(segmentList, 'SegmentURL').map(s => merge({\n    tag: 'SegmentURL'\n  }, parseAttributes(s)));\n  const segmentBase = findChildren(adaptationSet, 'SegmentBase')[0];\n  const segmentTimelineParentNode = segmentList || segmentTemplate;\n  const segmentTimeline = segmentTimelineParentNode && findChildren(segmentTimelineParentNode, 'SegmentTimeline')[0];\n  const segmentInitializationParentNode = segmentList || segmentBase || segmentTemplate;\n  const segmentInitialization = segmentInitializationParentNode && findChildren(segmentInitializationParentNode, 'Initialization')[0]; // SegmentTemplate is handled slightly differently, since it can have both\n  // @initialization and an <Initialization> node.  @initialization can be templated,\n  // while the node can have a url and range specified.  If the <SegmentTemplate> has\n  // both @initialization and an <Initialization> subelement we opt to override with\n  // the node, as this interaction is not defined in the spec.\n\n  const template = segmentTemplate && parseAttributes(segmentTemplate);\n\n  if (template && segmentInitialization) {\n    template.initialization = segmentInitialization && parseAttributes(segmentInitialization);\n  } else if (template && template.initialization) {\n    // If it is @initialization we convert it to an object since this is the format that\n    // later functions will rely on for the initialization segment.  This is only valid\n    // for <SegmentTemplate>\n    template.initialization = {\n      sourceURL: template.initialization\n    };\n  }\n\n  const segmentInfo = {\n    template,\n    segmentTimeline: segmentTimeline && findChildren(segmentTimeline, 'S').map(s => parseAttributes(s)),\n    list: segmentList && merge(parseAttributes(segmentList), {\n      segmentUrls,\n      initialization: parseAttributes(segmentInitialization)\n    }),\n    base: segmentBase && merge(parseAttributes(segmentBase), {\n      initialization: parseAttributes(segmentInitialization)\n    })\n  };\n  Object.keys(segmentInfo).forEach(key => {\n    if (!segmentInfo[key]) {\n      delete segmentInfo[key];\n    }\n  });\n  return segmentInfo;\n};\n/**\n * Contains Segment information and attributes needed to construct a Playlist object\n * from a Representation\n *\n * @typedef {Object} RepresentationInformation\n * @property {SegmentInformation} segmentInfo\n *           Segment information for this Representation\n * @property {Object} attributes\n *           Inherited attributes for this Representation\n */\n\n/**\n * Maps a Representation node to an object containing Segment information and attributes\n *\n * @name inheritBaseUrlsCallback\n * @function\n * @param {Node} representation\n *        Representation node from the mpd\n * @return {RepresentationInformation}\n *         Representation information needed to construct a Playlist object\n */\n\n/**\n * Returns a callback for Array.prototype.map for mapping Representation nodes to\n * Segment information and attributes using inherited BaseURL nodes.\n *\n * @param {Object} adaptationSetAttributes\n *        Contains attributes inherited by the AdaptationSet\n * @param {Object[]} adaptationSetBaseUrls\n *        List of objects containing resolved base URLs and attributes\n *        inherited by the AdaptationSet\n * @param {SegmentInformation} adaptationSetSegmentInfo\n *        Contains Segment information for the AdaptationSet\n * @return {inheritBaseUrlsCallback}\n *         Callback map function\n */\n\nconst inheritBaseUrls = (adaptationSetAttributes, adaptationSetBaseUrls, adaptationSetSegmentInfo) => representation => {\n  const repBaseUrlElements = findChildren(representation, 'BaseURL');\n  const repBaseUrls = buildBaseUrls(adaptationSetBaseUrls, repBaseUrlElements);\n  const attributes = merge(adaptationSetAttributes, parseAttributes(representation));\n  const representationSegmentInfo = getSegmentInformation(representation);\n  return repBaseUrls.map(baseUrl => {\n    return {\n      segmentInfo: merge(adaptationSetSegmentInfo, representationSegmentInfo),\n      attributes: merge(attributes, baseUrl)\n    };\n  });\n};\n/**\n * Tranforms a series of content protection nodes to\n * an object containing pssh data by key system\n *\n * @param {Node[]} contentProtectionNodes\n *        Content protection nodes\n * @return {Object}\n *        Object containing pssh data by key system\n */\n\nconst generateKeySystemInformation = contentProtectionNodes => {\n  return contentProtectionNodes.reduce((acc, node) => {\n    const attributes = parseAttributes(node); // Although it could be argued that according to the UUID RFC spec the UUID string (a-f chars) should be generated\n    // as a lowercase string it also mentions it should be treated as case-insensitive on input. Since the key system\n    // UUIDs in the keySystemsMap are hardcoded as lowercase in the codebase there isn't any reason not to do\n    // .toLowerCase() on the input UUID string from the manifest (at least I could not think of one).\n\n    if (attributes.schemeIdUri) {\n      attributes.schemeIdUri = attributes.schemeIdUri.toLowerCase();\n    }\n\n    const keySystem = keySystemsMap[attributes.schemeIdUri];\n\n    if (keySystem) {\n      acc[keySystem] = {\n        attributes\n      };\n      const psshNode = findChildren(node, 'cenc:pssh')[0];\n\n      if (psshNode) {\n        const pssh = getContent(psshNode);\n        acc[keySystem].pssh = pssh && decodeB64ToUint8Array(pssh);\n      }\n    }\n\n    return acc;\n  }, {});\n}; // defined in ANSI_SCTE 214-1 2016\n\n\nconst parseCaptionServiceMetadata = service => {\n  // 608 captions\n  if (service.schemeIdUri === 'urn:scte:dash:cc:cea-608:2015') {\n    const values = typeof service.value !== 'string' ? [] : service.value.split(';');\n    return values.map(value => {\n      let channel;\n      let language; // default language to value\n\n      language = value;\n\n      if (/^CC\\d=/.test(value)) {\n        [channel, language] = value.split('=');\n      } else if (/^CC\\d$/.test(value)) {\n        channel = value;\n      }\n\n      return {\n        channel,\n        language\n      };\n    });\n  } else if (service.schemeIdUri === 'urn:scte:dash:cc:cea-708:2015') {\n    const values = typeof service.value !== 'string' ? [] : service.value.split(';');\n    return values.map(value => {\n      const flags = {\n        // service or channel number 1-63\n        'channel': undefined,\n        // language is a 3ALPHA per ISO 639.2/B\n        // field is required\n        'language': undefined,\n        // BIT 1/0 or ?\n        // default value is 1, meaning 16:9 aspect ratio, 0 is 4:3, ? is unknown\n        'aspectRatio': 1,\n        // BIT 1/0\n        // easy reader flag indicated the text is tailed to the needs of beginning readers\n        // default 0, or off\n        'easyReader': 0,\n        // BIT 1/0\n        // If 3d metadata is present (CEA-708.1) then 1\n        // default 0\n        '3D': 0\n      };\n\n      if (/=/.test(value)) {\n        const [channel, opts = ''] = value.split('=');\n        flags.channel = channel;\n        flags.language = value;\n        opts.split(',').forEach(opt => {\n          const [name, val] = opt.split(':');\n\n          if (name === 'lang') {\n            flags.language = val; // er for easyReadery\n          } else if (name === 'er') {\n            flags.easyReader = Number(val); // war for wide aspect ratio\n          } else if (name === 'war') {\n            flags.aspectRatio = Number(val);\n          } else if (name === '3D') {\n            flags['3D'] = Number(val);\n          }\n        });\n      } else {\n        flags.language = value;\n      }\n\n      if (flags.channel) {\n        flags.channel = 'SERVICE' + flags.channel;\n      }\n\n      return flags;\n    });\n  }\n};\n/**\n * A map callback that will parse all event stream data for a collection of periods\n * DASH ISO_IEC_23009 5.10.2.2\n * https://dashif-documents.azurewebsites.net/Events/master/event.html#mpd-event-timing\n *\n * @param {PeriodInformation} period object containing necessary period information\n * @return a collection of parsed eventstream event objects\n */\n\nconst toEventStream = period => {\n  // get and flatten all EventStreams tags and parse attributes and children\n  return flatten(findChildren(period.node, 'EventStream').map(eventStream => {\n    const eventStreamAttributes = parseAttributes(eventStream);\n    const schemeIdUri = eventStreamAttributes.schemeIdUri; // find all Events per EventStream tag and map to return objects\n\n    return findChildren(eventStream, 'Event').map(event => {\n      const eventAttributes = parseAttributes(event);\n      const presentationTime = eventAttributes.presentationTime || 0;\n      const timescale = eventStreamAttributes.timescale || 1;\n      const duration = eventAttributes.duration || 0;\n      const start = presentationTime / timescale + period.attributes.start;\n      return {\n        schemeIdUri,\n        value: eventStreamAttributes.value,\n        id: eventAttributes.id,\n        start,\n        end: start + duration / timescale,\n        messageData: getContent(event) || eventAttributes.messageData,\n        contentEncoding: eventStreamAttributes.contentEncoding,\n        presentationTimeOffset: eventStreamAttributes.presentationTimeOffset || 0\n      };\n    });\n  }));\n};\n/**\n * Maps an AdaptationSet node to a list of Representation information objects\n *\n * @name toRepresentationsCallback\n * @function\n * @param {Node} adaptationSet\n *        AdaptationSet node from the mpd\n * @return {RepresentationInformation[]}\n *         List of objects containing Representaion information\n */\n\n/**\n * Returns a callback for Array.prototype.map for mapping AdaptationSet nodes to a list of\n * Representation information objects\n *\n * @param {Object} periodAttributes\n *        Contains attributes inherited by the Period\n * @param {Object[]} periodBaseUrls\n *        Contains list of objects with resolved base urls and attributes\n *        inherited by the Period\n * @param {string[]} periodSegmentInfo\n *        Contains Segment Information at the period level\n * @return {toRepresentationsCallback}\n *         Callback map function\n */\n\nconst toRepresentations = (periodAttributes, periodBaseUrls, periodSegmentInfo) => adaptationSet => {\n  const adaptationSetAttributes = parseAttributes(adaptationSet);\n  const adaptationSetBaseUrls = buildBaseUrls(periodBaseUrls, findChildren(adaptationSet, 'BaseURL'));\n  const role = findChildren(adaptationSet, 'Role')[0];\n  const roleAttributes = {\n    role: parseAttributes(role)\n  };\n  let attrs = merge(periodAttributes, adaptationSetAttributes, roleAttributes);\n  const accessibility = findChildren(adaptationSet, 'Accessibility')[0];\n  const captionServices = parseCaptionServiceMetadata(parseAttributes(accessibility));\n\n  if (captionServices) {\n    attrs = merge(attrs, {\n      captionServices\n    });\n  }\n\n  const label = findChildren(adaptationSet, 'Label')[0];\n\n  if (label && label.childNodes.length) {\n    const labelVal = label.childNodes[0].nodeValue.trim();\n    attrs = merge(attrs, {\n      label: labelVal\n    });\n  }\n\n  const contentProtection = generateKeySystemInformation(findChildren(adaptationSet, 'ContentProtection'));\n\n  if (Object.keys(contentProtection).length) {\n    attrs = merge(attrs, {\n      contentProtection\n    });\n  }\n\n  const segmentInfo = getSegmentInformation(adaptationSet);\n  const representations = findChildren(adaptationSet, 'Representation');\n  const adaptationSetSegmentInfo = merge(periodSegmentInfo, segmentInfo);\n  return flatten(representations.map(inheritBaseUrls(attrs, adaptationSetBaseUrls, adaptationSetSegmentInfo)));\n};\n/**\n * Contains all period information for mapping nodes onto adaptation sets.\n *\n * @typedef {Object} PeriodInformation\n * @property {Node} period.node\n *           Period node from the mpd\n * @property {Object} period.attributes\n *           Parsed period attributes from node plus any added\n */\n\n/**\n * Maps a PeriodInformation object to a list of Representation information objects for all\n * AdaptationSet nodes contained within the Period.\n *\n * @name toAdaptationSetsCallback\n * @function\n * @param {PeriodInformation} period\n *        Period object containing necessary period information\n * @param {number} periodStart\n *        Start time of the Period within the mpd\n * @return {RepresentationInformation[]}\n *         List of objects containing Representaion information\n */\n\n/**\n * Returns a callback for Array.prototype.map for mapping Period nodes to a list of\n * Representation information objects\n *\n * @param {Object} mpdAttributes\n *        Contains attributes inherited by the mpd\n  * @param {Object[]} mpdBaseUrls\n *        Contains list of objects with resolved base urls and attributes\n *        inherited by the mpd\n * @return {toAdaptationSetsCallback}\n *         Callback map function\n */\n\nconst toAdaptationSets = (mpdAttributes, mpdBaseUrls) => (period, index) => {\n  const periodBaseUrls = buildBaseUrls(mpdBaseUrls, findChildren(period.node, 'BaseURL'));\n  const periodAttributes = merge(mpdAttributes, {\n    periodStart: period.attributes.start\n  });\n\n  if (typeof period.attributes.duration === 'number') {\n    periodAttributes.periodDuration = period.attributes.duration;\n  }\n\n  const adaptationSets = findChildren(period.node, 'AdaptationSet');\n  const periodSegmentInfo = getSegmentInformation(period.node);\n  return flatten(adaptationSets.map(toRepresentations(periodAttributes, periodBaseUrls, periodSegmentInfo)));\n};\n/**\n * Tranforms an array of content steering nodes into an object\n * containing CDN content steering information from the MPD manifest.\n *\n * For more information on the DASH spec for Content Steering parsing, see:\n * https://dashif.org/docs/DASH-IF-CTS-00XX-Content-Steering-Community-Review.pdf\n *\n * @param {Node[]} contentSteeringNodes\n *        Content steering nodes\n * @param {Function} eventHandler\n *        The event handler passed into the parser options to handle warnings\n * @return {Object}\n *        Object containing content steering data\n */\n\nconst generateContentSteeringInformation = (contentSteeringNodes, eventHandler) => {\n  // If there are more than one ContentSteering tags, throw an error\n  if (contentSteeringNodes.length > 1) {\n    eventHandler({\n      type: 'warn',\n      message: 'The MPD manifest should contain no more than one ContentSteering tag'\n    });\n  } // Return a null value if there are no ContentSteering tags\n\n\n  if (!contentSteeringNodes.length) {\n    return null;\n  }\n\n  const infoFromContentSteeringTag = merge({\n    serverURL: getContent(contentSteeringNodes[0])\n  }, parseAttributes(contentSteeringNodes[0])); // Converts `queryBeforeStart` to a boolean, as well as setting the default value\n  // to `false` if it doesn't exist\n\n  infoFromContentSteeringTag.queryBeforeStart = infoFromContentSteeringTag.queryBeforeStart === 'true';\n  return infoFromContentSteeringTag;\n};\n/**\n * Gets Period@start property for a given period.\n *\n * @param {Object} options\n *        Options object\n * @param {Object} options.attributes\n *        Period attributes\n * @param {Object} [options.priorPeriodAttributes]\n *        Prior period attributes (if prior period is available)\n * @param {string} options.mpdType\n *        The MPD@type these periods came from\n * @return {number|null}\n *         The period start, or null if it's an early available period or error\n */\n\nconst getPeriodStart = ({\n  attributes,\n  priorPeriodAttributes,\n  mpdType\n}) => {\n  // Summary of period start time calculation from DASH spec section 5.3.2.1\n  //\n  // A period's start is the first period's start + time elapsed after playing all\n  // prior periods to this one. Periods continue one after the other in time (without\n  // gaps) until the end of the presentation.\n  //\n  // The value of Period@start should be:\n  // 1. if Period@start is present: value of Period@start\n  // 2. if previous period exists and it has @duration: previous Period@start +\n  //    previous Period@duration\n  // 3. if this is first period and MPD@type is 'static': 0\n  // 4. in all other cases, consider the period an \"early available period\" (note: not\n  //    currently supported)\n  // (1)\n  if (typeof attributes.start === 'number') {\n    return attributes.start;\n  } // (2)\n\n\n  if (priorPeriodAttributes && typeof priorPeriodAttributes.start === 'number' && typeof priorPeriodAttributes.duration === 'number') {\n    return priorPeriodAttributes.start + priorPeriodAttributes.duration;\n  } // (3)\n\n\n  if (!priorPeriodAttributes && mpdType === 'static') {\n    return 0;\n  } // (4)\n  // There is currently no logic for calculating the Period@start value if there is\n  // no Period@start or prior Period@start and Period@duration available. This is not made\n  // explicit by the DASH interop guidelines or the DASH spec, however, since there's\n  // nothing about any other resolution strategies, it's implied. Thus, this case should\n  // be considered an early available period, or error, and null should suffice for both\n  // of those cases.\n\n\n  return null;\n};\n/**\n * Traverses the mpd xml tree to generate a list of Representation information objects\n * that have inherited attributes from parent nodes\n *\n * @param {Node} mpd\n *        The root node of the mpd\n * @param {Object} options\n *        Available options for inheritAttributes\n * @param {string} options.manifestUri\n *        The uri source of the mpd\n * @param {number} options.NOW\n *        Current time per DASH IOP.  Default is current time in ms since epoch\n * @param {number} options.clientOffset\n *        Client time difference from NOW (in milliseconds)\n * @return {RepresentationInformation[]}\n *         List of objects containing Representation information\n */\n\nconst inheritAttributes = (mpd, options = {}) => {\n  const {\n    manifestUri = '',\n    NOW = Date.now(),\n    clientOffset = 0,\n    // TODO: For now, we are expecting an eventHandler callback function\n    // to be passed into the mpd parser as an option.\n    // In the future, we should enable stream parsing by using the Stream class from vhs-utils.\n    // This will support new features including a standardized event handler.\n    // See the m3u8 parser for examples of how stream parsing is currently used for HLS parsing.\n    // https://github.com/videojs/vhs-utils/blob/88d6e10c631e57a5af02c5a62bc7376cd456b4f5/src/stream.js#L9\n    eventHandler = function () {}\n  } = options;\n  const periodNodes = findChildren(mpd, 'Period');\n\n  if (!periodNodes.length) {\n    throw new Error(errors.INVALID_NUMBER_OF_PERIOD);\n  }\n\n  const locations = findChildren(mpd, 'Location');\n  const mpdAttributes = parseAttributes(mpd);\n  const mpdBaseUrls = buildBaseUrls([{\n    baseUrl: manifestUri\n  }], findChildren(mpd, 'BaseURL'));\n  const contentSteeringNodes = findChildren(mpd, 'ContentSteering'); // See DASH spec section 5.3.1.2, Semantics of MPD element. Default type to 'static'.\n\n  mpdAttributes.type = mpdAttributes.type || 'static';\n  mpdAttributes.sourceDuration = mpdAttributes.mediaPresentationDuration || 0;\n  mpdAttributes.NOW = NOW;\n  mpdAttributes.clientOffset = clientOffset;\n\n  if (locations.length) {\n    mpdAttributes.locations = locations.map(getContent);\n  }\n\n  const periods = []; // Since toAdaptationSets acts on individual periods right now, the simplest approach to\n  // adding properties that require looking at prior periods is to parse attributes and add\n  // missing ones before toAdaptationSets is called. If more such properties are added, it\n  // may be better to refactor toAdaptationSets.\n\n  periodNodes.forEach((node, index) => {\n    const attributes = parseAttributes(node); // Use the last modified prior period, as it may contain added information necessary\n    // for this period.\n\n    const priorPeriod = periods[index - 1];\n    attributes.start = getPeriodStart({\n      attributes,\n      priorPeriodAttributes: priorPeriod ? priorPeriod.attributes : null,\n      mpdType: mpdAttributes.type\n    });\n    periods.push({\n      node,\n      attributes\n    });\n  });\n  return {\n    locations: mpdAttributes.locations,\n    contentSteeringInfo: generateContentSteeringInformation(contentSteeringNodes, eventHandler),\n    // TODO: There are occurences where this `representationInfo` array contains undesired\n    // duplicates. This generally occurs when there are multiple BaseURL nodes that are\n    // direct children of the MPD node. When we attempt to resolve URLs from a combination of the\n    // parent BaseURL and a child BaseURL, and the value does not resolve,\n    // we end up returning the child BaseURL multiple times.\n    // We need to determine a way to remove these duplicates in a safe way.\n    // See: https://github.com/videojs/mpd-parser/pull/17#discussion_r162750527\n    representationInfo: flatten(periods.map(toAdaptationSets(mpdAttributes, mpdBaseUrls))),\n    eventStream: flatten(periods.map(toEventStream))\n  };\n};\n\nconst stringToMpdXml = manifestString => {\n  if (manifestString === '') {\n    throw new Error(errors.DASH_EMPTY_MANIFEST);\n  }\n\n  const parser = new DOMParser();\n  let xml;\n  let mpd;\n\n  try {\n    xml = parser.parseFromString(manifestString, 'application/xml');\n    mpd = xml && xml.documentElement.tagName === 'MPD' ? xml.documentElement : null;\n  } catch (e) {// ie 11 throws on invalid xml\n  }\n\n  if (!mpd || mpd && mpd.getElementsByTagName('parsererror').length > 0) {\n    throw new Error(errors.DASH_INVALID_XML);\n  }\n\n  return mpd;\n};\n\n/**\n * Parses the manifest for a UTCTiming node, returning the nodes attributes if found\n *\n * @param {string} mpd\n *        XML string of the MPD manifest\n * @return {Object|null}\n *         Attributes of UTCTiming node specified in the manifest. Null if none found\n */\n\nconst parseUTCTimingScheme = mpd => {\n  const UTCTimingNode = findChildren(mpd, 'UTCTiming')[0];\n\n  if (!UTCTimingNode) {\n    return null;\n  }\n\n  const attributes = parseAttributes(UTCTimingNode);\n\n  switch (attributes.schemeIdUri) {\n    case 'urn:mpeg:dash:utc:http-head:2014':\n    case 'urn:mpeg:dash:utc:http-head:2012':\n      attributes.method = 'HEAD';\n      break;\n\n    case 'urn:mpeg:dash:utc:http-xsdate:2014':\n    case 'urn:mpeg:dash:utc:http-iso:2014':\n    case 'urn:mpeg:dash:utc:http-xsdate:2012':\n    case 'urn:mpeg:dash:utc:http-iso:2012':\n      attributes.method = 'GET';\n      break;\n\n    case 'urn:mpeg:dash:utc:direct:2014':\n    case 'urn:mpeg:dash:utc:direct:2012':\n      attributes.method = 'DIRECT';\n      attributes.value = Date.parse(attributes.value);\n      break;\n\n    case 'urn:mpeg:dash:utc:http-ntp:2014':\n    case 'urn:mpeg:dash:utc:ntp:2014':\n    case 'urn:mpeg:dash:utc:sntp:2014':\n    default:\n      throw new Error(errors.UNSUPPORTED_UTC_TIMING_SCHEME);\n  }\n\n  return attributes;\n};\n\nconst VERSION = version;\n/*\n * Given a DASH manifest string and options, parses the DASH manifest into an object in the\n * form outputed by m3u8-parser and accepted by videojs/http-streaming.\n *\n * For live DASH manifests, if `previousManifest` is provided in options, then the newly\n * parsed DASH manifest will have its media sequence and discontinuity sequence values\n * updated to reflect its position relative to the prior manifest.\n *\n * @param {string} manifestString - the DASH manifest as a string\n * @param {options} [options] - any options\n *\n * @return {Object} the manifest object\n */\n\nconst parse = (manifestString, options = {}) => {\n  const parsedManifestInfo = inheritAttributes(stringToMpdXml(manifestString), options);\n  const playlists = toPlaylists(parsedManifestInfo.representationInfo);\n  return toM3u8({\n    dashPlaylists: playlists,\n    locations: parsedManifestInfo.locations,\n    contentSteering: parsedManifestInfo.contentSteeringInfo,\n    sidxMapping: options.sidxMapping,\n    previousManifest: options.previousManifest,\n    eventStream: parsedManifestInfo.eventStream\n  });\n};\n/**\n * Parses the manifest for a UTCTiming node, returning the nodes attributes if found\n *\n * @param {string} manifestString\n *        XML string of the MPD manifest\n * @return {Object|null}\n *         Attributes of UTCTiming node specified in the manifest. Null if none found\n */\n\n\nconst parseUTCTiming = manifestString => parseUTCTimingScheme(stringToMpdXml(manifestString));\n\nexport { VERSION, addSidxSegmentsToPlaylist$1 as addSidxSegmentsToPlaylist, generateSidxKey, inheritAttributes, parse, parseUTCTiming, stringToMpdXml, toM3u8, toPlaylists };\n","var getUint64 = require('../utils/numbers.js').getUint64;\n\nvar parseSidx = function(data) {\n  var view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n      result = {\n        version: data[0],\n        flags: new Uint8Array(data.subarray(1, 4)),\n        references: [],\n        referenceId: view.getUint32(4),\n        timescale: view.getUint32(8)\n      },\n    i = 12;\n\n  if (result.version === 0) {\n    result.earliestPresentationTime = view.getUint32(i);\n    result.firstOffset = view.getUint32(i + 4);\n    i += 8;\n  } else {\n    // read 64 bits\n    result.earliestPresentationTime = getUint64(data.subarray(i));\n    result.firstOffset = getUint64(data.subarray(i + 8));\n    i += 16;\n  }\n\n  i += 2; // reserved\n\n  var referenceCount = view.getUint16(i);\n\n  i += 2; // start of references\n\n  for (; referenceCount > 0; i += 12, referenceCount--) {\n    result.references.push({\n      referenceType: (data[i] & 0x80) >>> 7,\n      referencedSize: view.getUint32(i) & 0x7FFFFFFF,\n      subsegmentDuration: view.getUint32(i + 4),\n      startsWithSap: !!(data[i + 8] & 0x80),\n      sapType: (data[i + 8] & 0x70) >>> 4,\n      sapDeltaTime: view.getUint32(i + 8) & 0x0FFFFFFF\n    });\n  }\n\n  return result;\n};\n\n\nmodule.exports = parseSidx;\n","/**\n * mux.js\n *\n * Copyright (c) Brightcove\n * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n */\nvar\n  ONE_SECOND_IN_TS = 90000, // 90kHz clock\n  secondsToVideoTs,\n  secondsToAudioTs,\n  videoTsToSeconds,\n  audioTsToSeconds,\n  audioTsToVideoTs,\n  videoTsToAudioTs,\n  metadataTsToSeconds;\n\nsecondsToVideoTs = function(seconds) {\n  return seconds * ONE_SECOND_IN_TS;\n};\n\nsecondsToAudioTs = function(seconds, sampleRate) {\n  return seconds * sampleRate;\n};\n\nvideoTsToSeconds = function(timestamp) {\n  return timestamp / ONE_SECOND_IN_TS;\n};\n\naudioTsToSeconds = function(timestamp, sampleRate) {\n  return timestamp / sampleRate;\n};\n\naudioTsToVideoTs = function(timestamp, sampleRate) {\n  return secondsToVideoTs(audioTsToSeconds(timestamp, sampleRate));\n};\n\nvideoTsToAudioTs = function(timestamp, sampleRate) {\n  return secondsToAudioTs(videoTsToSeconds(timestamp), sampleRate);\n};\n\n/**\n * Adjust ID3 tag or caption timing information by the timeline pts values\n * (if keepOriginalTimestamps is false) and convert to seconds\n */\nmetadataTsToSeconds = function(timestamp, timelineStartPts, keepOriginalTimestamps) {\n  return videoTsToSeconds(keepOriginalTimestamps ? timestamp : timestamp - timelineStartPts);\n};\n\nmodule.exports = {\n  ONE_SECOND_IN_TS: ONE_SECOND_IN_TS,\n  secondsToVideoTs: secondsToVideoTs,\n  secondsToAudioTs: secondsToAudioTs,\n  videoTsToSeconds: videoTsToSeconds,\n  audioTsToSeconds: audioTsToSeconds,\n  audioTsToVideoTs: audioTsToVideoTs,\n  videoTsToAudioTs: videoTsToAudioTs,\n  metadataTsToSeconds: metadataTsToSeconds\n};\n","var MAX_UINT32 = Math.pow(2, 32);\n\nvar getUint64 = function(uint8) {\n  var dv = new DataView(uint8.buffer, uint8.byteOffset, uint8.byteLength);\n  var value;\n\n  if (dv.getBigUint64) {\n    value = dv.getBigUint64(0);\n\n    if (value < Number.MAX_SAFE_INTEGER) {\n      return Number(value);\n    }\n\n    return value;\n  }\n\n  return (dv.getUint32(0) * MAX_UINT32) + dv.getUint32(4);\n};\n\nmodule.exports = {\n  getUint64: getUint64,\n  MAX_UINT32: MAX_UINT32\n};\n","// extracted by mini-css-extract-plugin","/**\n * Copyright 2013 vtt.js Contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n// Default exports for Node. Export the extended versions of VTTCue and\n// VTTRegion in Node since we likely want the capability to convert back and\n// forth between JSON. If we don't then it's not that big of a deal since we're\n// off browser.\n\nvar window = require('global/window');\n\nvar vttjs = module.exports = {\n  WebVTT: require(\"./vtt.js\"),\n  VTTCue: require(\"./vttcue.js\"),\n  VTTRegion: require(\"./vttregion.js\")\n};\n\nwindow.vttjs = vttjs;\nwindow.WebVTT = vttjs.WebVTT;\n\nvar cueShim = vttjs.VTTCue;\nvar regionShim = vttjs.VTTRegion;\nvar nativeVTTCue = window.VTTCue;\nvar nativeVTTRegion = window.VTTRegion;\n\nvttjs.shim = function() {\n  window.VTTCue = cueShim;\n  window.VTTRegion = regionShim;\n};\n\nvttjs.restore = function() {\n  window.VTTCue = nativeVTTCue;\n  window.VTTRegion = nativeVTTRegion;\n};\n\nif (!window.VTTCue) {\n  vttjs.shim();\n}\n","/**\n * Copyright 2013 vtt.js Contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* -*- Mode: Java; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\n/* vim: set shiftwidth=2 tabstop=2 autoindent cindent expandtab: */\nvar document = require('global/document');\n\nvar _objCreate = Object.create || (function() {\n  function F() {}\n  return function(o) {\n    if (arguments.length !== 1) {\n      throw new Error('Object.create shim only accepts one parameter.');\n    }\n    F.prototype = o;\n    return new F();\n  };\n})();\n\n// Creates a new ParserError object from an errorData object. The errorData\n// object should have default code and message properties. The default message\n// property can be overriden by passing in a message parameter.\n// See ParsingError.Errors below for acceptable errors.\nfunction ParsingError(errorData, message) {\n  this.name = \"ParsingError\";\n  this.code = errorData.code;\n  this.message = message || errorData.message;\n}\nParsingError.prototype = _objCreate(Error.prototype);\nParsingError.prototype.constructor = ParsingError;\n\n// ParsingError metadata for acceptable ParsingErrors.\nParsingError.Errors = {\n  BadSignature: {\n    code: 0,\n    message: \"Malformed WebVTT signature.\"\n  },\n  BadTimeStamp: {\n    code: 1,\n    message: \"Malformed time stamp.\"\n  }\n};\n\n// Try to parse input as a time stamp.\nfunction parseTimeStamp(input) {\n\n  function computeSeconds(h, m, s, f) {\n    return (h | 0) * 3600 + (m | 0) * 60 + (s | 0) + (f | 0) / 1000;\n  }\n\n  var m = input.match(/^(\\d+):(\\d{1,2})(:\\d{1,2})?\\.(\\d{3})/);\n  if (!m) {\n    return null;\n  }\n\n  if (m[3]) {\n    // Timestamp takes the form of [hours]:[minutes]:[seconds].[milliseconds]\n    return computeSeconds(m[1], m[2], m[3].replace(\":\", \"\"), m[4]);\n  } else if (m[1] > 59) {\n    // Timestamp takes the form of [hours]:[minutes].[milliseconds]\n    // First position is hours as it's over 59.\n    return computeSeconds(m[1], m[2], 0,  m[4]);\n  } else {\n    // Timestamp takes the form of [minutes]:[seconds].[milliseconds]\n    return computeSeconds(0, m[1], m[2], m[4]);\n  }\n}\n\n// A settings object holds key/value pairs and will ignore anything but the first\n// assignment to a specific key.\nfunction Settings() {\n  this.values = _objCreate(null);\n}\n\nSettings.prototype = {\n  // Only accept the first assignment to any key.\n  set: function(k, v) {\n    if (!this.get(k) && v !== \"\") {\n      this.values[k] = v;\n    }\n  },\n  // Return the value for a key, or a default value.\n  // If 'defaultKey' is passed then 'dflt' is assumed to be an object with\n  // a number of possible default values as properties where 'defaultKey' is\n  // the key of the property that will be chosen; otherwise it's assumed to be\n  // a single value.\n  get: function(k, dflt, defaultKey) {\n    if (defaultKey) {\n      return this.has(k) ? this.values[k] : dflt[defaultKey];\n    }\n    return this.has(k) ? this.values[k] : dflt;\n  },\n  // Check whether we have a value for a key.\n  has: function(k) {\n    return k in this.values;\n  },\n  // Accept a setting if its one of the given alternatives.\n  alt: function(k, v, a) {\n    for (var n = 0; n < a.length; ++n) {\n      if (v === a[n]) {\n        this.set(k, v);\n        break;\n      }\n    }\n  },\n  // Accept a setting if its a valid (signed) integer.\n  integer: function(k, v) {\n    if (/^-?\\d+$/.test(v)) { // integer\n      this.set(k, parseInt(v, 10));\n    }\n  },\n  // Accept a setting if its a valid percentage.\n  percent: function(k, v) {\n    var m;\n    if ((m = v.match(/^([\\d]{1,3})(\\.[\\d]*)?%$/))) {\n      v = parseFloat(v);\n      if (v >= 0 && v <= 100) {\n        this.set(k, v);\n        return true;\n      }\n    }\n    return false;\n  }\n};\n\n// Helper function to parse input into groups separated by 'groupDelim', and\n// interprete each group as a key/value pair separated by 'keyValueDelim'.\nfunction parseOptions(input, callback, keyValueDelim, groupDelim) {\n  var groups = groupDelim ? input.split(groupDelim) : [input];\n  for (var i in groups) {\n    if (typeof groups[i] !== \"string\") {\n      continue;\n    }\n    var kv = groups[i].split(keyValueDelim);\n    if (kv.length !== 2) {\n      continue;\n    }\n    var k = kv[0].trim();\n    var v = kv[1].trim();\n    callback(k, v);\n  }\n}\n\nfunction parseCue(input, cue, regionList) {\n  // Remember the original input if we need to throw an error.\n  var oInput = input;\n  // 4.1 WebVTT timestamp\n  function consumeTimeStamp() {\n    var ts = parseTimeStamp(input);\n    if (ts === null) {\n      throw new ParsingError(ParsingError.Errors.BadTimeStamp,\n                            \"Malformed timestamp: \" + oInput);\n    }\n    // Remove time stamp from input.\n    input = input.replace(/^[^\\sa-zA-Z-]+/, \"\");\n    return ts;\n  }\n\n  // 4.4.2 WebVTT cue settings\n  function consumeCueSettings(input, cue) {\n    var settings = new Settings();\n\n    parseOptions(input, function (k, v) {\n      switch (k) {\n      case \"region\":\n        // Find the last region we parsed with the same region id.\n        for (var i = regionList.length - 1; i >= 0; i--) {\n          if (regionList[i].id === v) {\n            settings.set(k, regionList[i].region);\n            break;\n          }\n        }\n        break;\n      case \"vertical\":\n        settings.alt(k, v, [\"rl\", \"lr\"]);\n        break;\n      case \"line\":\n        var vals = v.split(\",\"),\n            vals0 = vals[0];\n        settings.integer(k, vals0);\n        settings.percent(k, vals0) ? settings.set(\"snapToLines\", false) : null;\n        settings.alt(k, vals0, [\"auto\"]);\n        if (vals.length === 2) {\n          settings.alt(\"lineAlign\", vals[1], [\"start\", \"center\", \"end\"]);\n        }\n        break;\n      case \"position\":\n        vals = v.split(\",\");\n        settings.percent(k, vals[0]);\n        if (vals.length === 2) {\n          settings.alt(\"positionAlign\", vals[1], [\"start\", \"center\", \"end\"]);\n        }\n        break;\n      case \"size\":\n        settings.percent(k, v);\n        break;\n      case \"align\":\n        settings.alt(k, v, [\"start\", \"center\", \"end\", \"left\", \"right\"]);\n        break;\n      }\n    }, /:/, /\\s/);\n\n    // Apply default values for any missing fields.\n    cue.region = settings.get(\"region\", null);\n    cue.vertical = settings.get(\"vertical\", \"\");\n    try {\n      cue.line = settings.get(\"line\", \"auto\");\n    } catch (e) {}\n    cue.lineAlign = settings.get(\"lineAlign\", \"start\");\n    cue.snapToLines = settings.get(\"snapToLines\", true);\n    cue.size = settings.get(\"size\", 100);\n    // Safari still uses the old middle value and won't accept center\n    try {\n      cue.align = settings.get(\"align\", \"center\");\n    } catch (e) {\n      cue.align = settings.get(\"align\", \"middle\");\n    }\n    try {\n      cue.position = settings.get(\"position\", \"auto\");\n    } catch (e) {\n      cue.position = settings.get(\"position\", {\n        start: 0,\n        left: 0,\n        center: 50,\n        middle: 50,\n        end: 100,\n        right: 100\n      }, cue.align);\n    }\n\n\n    cue.positionAlign = settings.get(\"positionAlign\", {\n      start: \"start\",\n      left: \"start\",\n      center: \"center\",\n      middle: \"center\",\n      end: \"end\",\n      right: \"end\"\n    }, cue.align);\n  }\n\n  function skipWhitespace() {\n    input = input.replace(/^\\s+/, \"\");\n  }\n\n  // 4.1 WebVTT cue timings.\n  skipWhitespace();\n  cue.startTime = consumeTimeStamp();   // (1) collect cue start time\n  skipWhitespace();\n  if (input.substr(0, 3) !== \"-->\") {     // (3) next characters must match \"-->\"\n    throw new ParsingError(ParsingError.Errors.BadTimeStamp,\n                           \"Malformed time stamp (time stamps must be separated by '-->'): \" +\n                           oInput);\n  }\n  input = input.substr(3);\n  skipWhitespace();\n  cue.endTime = consumeTimeStamp();     // (5) collect cue end time\n\n  // 4.1 WebVTT cue settings list.\n  skipWhitespace();\n  consumeCueSettings(input, cue);\n}\n\n// When evaluating this file as part of a Webpack bundle for server\n// side rendering, `document` is an empty object.\nvar TEXTAREA_ELEMENT = document.createElement && document.createElement(\"textarea\");\n\nvar TAG_NAME = {\n  c: \"span\",\n  i: \"i\",\n  b: \"b\",\n  u: \"u\",\n  ruby: \"ruby\",\n  rt: \"rt\",\n  v: \"span\",\n  lang: \"span\"\n};\n\n// 5.1 default text color\n// 5.2 default text background color is equivalent to text color with bg_ prefix\nvar DEFAULT_COLOR_CLASS = {\n  white: 'rgba(255,255,255,1)',\n  lime: 'rgba(0,255,0,1)',\n  cyan: 'rgba(0,255,255,1)',\n  red: 'rgba(255,0,0,1)',\n  yellow: 'rgba(255,255,0,1)',\n  magenta: 'rgba(255,0,255,1)',\n  blue: 'rgba(0,0,255,1)',\n  black: 'rgba(0,0,0,1)'\n};\n\nvar TAG_ANNOTATION = {\n  v: \"title\",\n  lang: \"lang\"\n};\n\nvar NEEDS_PARENT = {\n  rt: \"ruby\"\n};\n\n// Parse content into a document fragment.\nfunction parseContent(window, input) {\n  function nextToken() {\n    // Check for end-of-string.\n    if (!input) {\n      return null;\n    }\n\n    // Consume 'n' characters from the input.\n    function consume(result) {\n      input = input.substr(result.length);\n      return result;\n    }\n\n    var m = input.match(/^([^<]*)(<[^>]*>?)?/);\n    // If there is some text before the next tag, return it, otherwise return\n    // the tag.\n    return consume(m[1] ? m[1] : m[2]);\n  }\n\n  function unescape(s) {\n    TEXTAREA_ELEMENT.innerHTML = s;\n    s = TEXTAREA_ELEMENT.textContent;\n    TEXTAREA_ELEMENT.textContent = \"\";\n    return s;\n  }\n\n  function shouldAdd(current, element) {\n    return !NEEDS_PARENT[element.localName] ||\n           NEEDS_PARENT[element.localName] === current.localName;\n  }\n\n  // Create an element for this tag.\n  function createElement(type, annotation) {\n    var tagName = TAG_NAME[type];\n    if (!tagName) {\n      return null;\n    }\n    var element = window.document.createElement(tagName);\n    var name = TAG_ANNOTATION[type];\n    if (name && annotation) {\n      element[name] = annotation.trim();\n    }\n    return element;\n  }\n\n  var rootDiv = window.document.createElement(\"div\"),\n      current = rootDiv,\n      t,\n      tagStack = [];\n\n  while ((t = nextToken()) !== null) {\n    if (t[0] === '<') {\n      if (t[1] === \"/\") {\n        // If the closing tag matches, move back up to the parent node.\n        if (tagStack.length &&\n            tagStack[tagStack.length - 1] === t.substr(2).replace(\">\", \"\")) {\n          tagStack.pop();\n          current = current.parentNode;\n        }\n        // Otherwise just ignore the end tag.\n        continue;\n      }\n      var ts = parseTimeStamp(t.substr(1, t.length - 2));\n      var node;\n      if (ts) {\n        // Timestamps are lead nodes as well.\n        node = window.document.createProcessingInstruction(\"timestamp\", ts);\n        current.appendChild(node);\n        continue;\n      }\n      var m = t.match(/^<([^.\\s/0-9>]+)(\\.[^\\s\\\\>]+)?([^>\\\\]+)?(\\\\?)>?$/);\n      // If we can't parse the tag, skip to the next tag.\n      if (!m) {\n        continue;\n      }\n      // Try to construct an element, and ignore the tag if we couldn't.\n      node = createElement(m[1], m[3]);\n      if (!node) {\n        continue;\n      }\n      // Determine if the tag should be added based on the context of where it\n      // is placed in the cuetext.\n      if (!shouldAdd(current, node)) {\n        continue;\n      }\n      // Set the class list (as a list of classes, separated by space).\n      if (m[2]) {\n        var classes = m[2].split('.');\n\n        classes.forEach(function(cl) {\n          var bgColor = /^bg_/.test(cl);\n          // slice out `bg_` if it's a background color\n          var colorName = bgColor ? cl.slice(3) : cl;\n\n          if (DEFAULT_COLOR_CLASS.hasOwnProperty(colorName)) {\n            var propName = bgColor ? 'background-color' : 'color';\n            var propValue = DEFAULT_COLOR_CLASS[colorName];\n\n            node.style[propName] = propValue;\n          }\n        });\n\n        node.className = classes.join(' ');\n      }\n      // Append the node to the current node, and enter the scope of the new\n      // node.\n      tagStack.push(m[1]);\n      current.appendChild(node);\n      current = node;\n      continue;\n    }\n\n    // Text nodes are leaf nodes.\n    current.appendChild(window.document.createTextNode(unescape(t)));\n  }\n\n  return rootDiv;\n}\n\n// This is a list of all the Unicode characters that have a strong\n// right-to-left category. What this means is that these characters are\n// written right-to-left for sure. It was generated by pulling all the strong\n// right-to-left characters out of the Unicode data table. That table can\n// found at: http://www.unicode.org/Public/UNIDATA/UnicodeData.txt\nvar strongRTLRanges = [[0x5be, 0x5be], [0x5c0, 0x5c0], [0x5c3, 0x5c3], [0x5c6, 0x5c6],\n [0x5d0, 0x5ea], [0x5f0, 0x5f4], [0x608, 0x608], [0x60b, 0x60b], [0x60d, 0x60d],\n [0x61b, 0x61b], [0x61e, 0x64a], [0x66d, 0x66f], [0x671, 0x6d5], [0x6e5, 0x6e6],\n [0x6ee, 0x6ef], [0x6fa, 0x70d], [0x70f, 0x710], [0x712, 0x72f], [0x74d, 0x7a5],\n [0x7b1, 0x7b1], [0x7c0, 0x7ea], [0x7f4, 0x7f5], [0x7fa, 0x7fa], [0x800, 0x815],\n [0x81a, 0x81a], [0x824, 0x824], [0x828, 0x828], [0x830, 0x83e], [0x840, 0x858],\n [0x85e, 0x85e], [0x8a0, 0x8a0], [0x8a2, 0x8ac], [0x200f, 0x200f],\n [0xfb1d, 0xfb1d], [0xfb1f, 0xfb28], [0xfb2a, 0xfb36], [0xfb38, 0xfb3c],\n [0xfb3e, 0xfb3e], [0xfb40, 0xfb41], [0xfb43, 0xfb44], [0xfb46, 0xfbc1],\n [0xfbd3, 0xfd3d], [0xfd50, 0xfd8f], [0xfd92, 0xfdc7], [0xfdf0, 0xfdfc],\n [0xfe70, 0xfe74], [0xfe76, 0xfefc], [0x10800, 0x10805], [0x10808, 0x10808],\n [0x1080a, 0x10835], [0x10837, 0x10838], [0x1083c, 0x1083c], [0x1083f, 0x10855],\n [0x10857, 0x1085f], [0x10900, 0x1091b], [0x10920, 0x10939], [0x1093f, 0x1093f],\n [0x10980, 0x109b7], [0x109be, 0x109bf], [0x10a00, 0x10a00], [0x10a10, 0x10a13],\n [0x10a15, 0x10a17], [0x10a19, 0x10a33], [0x10a40, 0x10a47], [0x10a50, 0x10a58],\n [0x10a60, 0x10a7f], [0x10b00, 0x10b35], [0x10b40, 0x10b55], [0x10b58, 0x10b72],\n [0x10b78, 0x10b7f], [0x10c00, 0x10c48], [0x1ee00, 0x1ee03], [0x1ee05, 0x1ee1f],\n [0x1ee21, 0x1ee22], [0x1ee24, 0x1ee24], [0x1ee27, 0x1ee27], [0x1ee29, 0x1ee32],\n [0x1ee34, 0x1ee37], [0x1ee39, 0x1ee39], [0x1ee3b, 0x1ee3b], [0x1ee42, 0x1ee42],\n [0x1ee47, 0x1ee47], [0x1ee49, 0x1ee49], [0x1ee4b, 0x1ee4b], [0x1ee4d, 0x1ee4f],\n [0x1ee51, 0x1ee52], [0x1ee54, 0x1ee54], [0x1ee57, 0x1ee57], [0x1ee59, 0x1ee59],\n [0x1ee5b, 0x1ee5b], [0x1ee5d, 0x1ee5d], [0x1ee5f, 0x1ee5f], [0x1ee61, 0x1ee62],\n [0x1ee64, 0x1ee64], [0x1ee67, 0x1ee6a], [0x1ee6c, 0x1ee72], [0x1ee74, 0x1ee77],\n [0x1ee79, 0x1ee7c], [0x1ee7e, 0x1ee7e], [0x1ee80, 0x1ee89], [0x1ee8b, 0x1ee9b],\n [0x1eea1, 0x1eea3], [0x1eea5, 0x1eea9], [0x1eeab, 0x1eebb], [0x10fffd, 0x10fffd]];\n\nfunction isStrongRTLChar(charCode) {\n  for (var i = 0; i < strongRTLRanges.length; i++) {\n    var currentRange = strongRTLRanges[i];\n    if (charCode >= currentRange[0] && charCode <= currentRange[1]) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nfunction determineBidi(cueDiv) {\n  var nodeStack = [],\n      text = \"\",\n      charCode;\n\n  if (!cueDiv || !cueDiv.childNodes) {\n    return \"ltr\";\n  }\n\n  function pushNodes(nodeStack, node) {\n    for (var i = node.childNodes.length - 1; i >= 0; i--) {\n      nodeStack.push(node.childNodes[i]);\n    }\n  }\n\n  function nextTextNode(nodeStack) {\n    if (!nodeStack || !nodeStack.length) {\n      return null;\n    }\n\n    var node = nodeStack.pop(),\n        text = node.textContent || node.innerText;\n    if (text) {\n      // TODO: This should match all unicode type B characters (paragraph\n      // separator characters). See issue #115.\n      var m = text.match(/^.*(\\n|\\r)/);\n      if (m) {\n        nodeStack.length = 0;\n        return m[0];\n      }\n      return text;\n    }\n    if (node.tagName === \"ruby\") {\n      return nextTextNode(nodeStack);\n    }\n    if (node.childNodes) {\n      pushNodes(nodeStack, node);\n      return nextTextNode(nodeStack);\n    }\n  }\n\n  pushNodes(nodeStack, cueDiv);\n  while ((text = nextTextNode(nodeStack))) {\n    for (var i = 0; i < text.length; i++) {\n      charCode = text.charCodeAt(i);\n      if (isStrongRTLChar(charCode)) {\n        return \"rtl\";\n      }\n    }\n  }\n  return \"ltr\";\n}\n\nfunction computeLinePos(cue) {\n  if (typeof cue.line === \"number\" &&\n      (cue.snapToLines || (cue.line >= 0 && cue.line <= 100))) {\n    return cue.line;\n  }\n  if (!cue.track || !cue.track.textTrackList ||\n      !cue.track.textTrackList.mediaElement) {\n    return -1;\n  }\n  var track = cue.track,\n      trackList = track.textTrackList,\n      count = 0;\n  for (var i = 0; i < trackList.length && trackList[i] !== track; i++) {\n    if (trackList[i].mode === \"showing\") {\n      count++;\n    }\n  }\n  return ++count * -1;\n}\n\nfunction StyleBox() {\n}\n\n// Apply styles to a div. If there is no div passed then it defaults to the\n// div on 'this'.\nStyleBox.prototype.applyStyles = function(styles, div) {\n  div = div || this.div;\n  for (var prop in styles) {\n    if (styles.hasOwnProperty(prop)) {\n      div.style[prop] = styles[prop];\n    }\n  }\n};\n\nStyleBox.prototype.formatStyle = function(val, unit) {\n  return val === 0 ? 0 : val + unit;\n};\n\n// Constructs the computed display state of the cue (a div). Places the div\n// into the overlay which should be a block level element (usually a div).\nfunction CueStyleBox(window, cue, styleOptions) {\n  StyleBox.call(this);\n  this.cue = cue;\n\n  // Parse our cue's text into a DOM tree rooted at 'cueDiv'. This div will\n  // have inline positioning and will function as the cue background box.\n  this.cueDiv = parseContent(window, cue.text);\n  var styles = {\n    color: \"rgba(255, 255, 255, 1)\",\n    backgroundColor:  \"rgba(0, 0, 0, 0.8)\",\n    position: \"relative\",\n    left: 0,\n    right: 0,\n    top: 0,\n    bottom: 0,\n    display: \"inline\",\n    writingMode: cue.vertical === \"\" ? \"horizontal-tb\"\n                                     : cue.vertical === \"lr\" ? \"vertical-lr\"\n                                                             : \"vertical-rl\",\n    unicodeBidi: \"plaintext\"\n  };\n\n  this.applyStyles(styles, this.cueDiv);\n\n  // Create an absolutely positioned div that will be used to position the cue\n  // div. Note, all WebVTT cue-setting alignments are equivalent to the CSS\n  // mirrors of them except middle instead of center on Safari.\n  this.div = window.document.createElement(\"div\");\n  styles = {\n    direction: determineBidi(this.cueDiv),\n    writingMode: cue.vertical === \"\" ? \"horizontal-tb\"\n                                     : cue.vertical === \"lr\" ? \"vertical-lr\"\n                                                             : \"vertical-rl\",\n    unicodeBidi: \"plaintext\",\n    textAlign: cue.align === \"middle\" ? \"center\" : cue.align,\n    font: styleOptions.font,\n    whiteSpace: \"pre-line\",\n    position: \"absolute\"\n  };\n\n  this.applyStyles(styles);\n  this.div.appendChild(this.cueDiv);\n\n  // Calculate the distance from the reference edge of the viewport to the text\n  // position of the cue box. The reference edge will be resolved later when\n  // the box orientation styles are applied.\n  var textPos = 0;\n  switch (cue.positionAlign) {\n  case \"start\":\n  case \"line-left\":\n    textPos = cue.position;\n    break;\n  case \"center\":\n    textPos = cue.position - (cue.size / 2);\n    break;\n  case \"end\":\n  case \"line-right\":\n    textPos = cue.position - cue.size;\n    break;\n  }\n\n  // Horizontal box orientation; textPos is the distance from the left edge of the\n  // area to the left edge of the box and cue.size is the distance extending to\n  // the right from there.\n  if (cue.vertical === \"\") {\n    this.applyStyles({\n      left:  this.formatStyle(textPos, \"%\"),\n      width: this.formatStyle(cue.size, \"%\")\n    });\n  // Vertical box orientation; textPos is the distance from the top edge of the\n  // area to the top edge of the box and cue.size is the height extending\n  // downwards from there.\n  } else {\n    this.applyStyles({\n      top: this.formatStyle(textPos, \"%\"),\n      height: this.formatStyle(cue.size, \"%\")\n    });\n  }\n\n  this.move = function(box) {\n    this.applyStyles({\n      top: this.formatStyle(box.top, \"px\"),\n      bottom: this.formatStyle(box.bottom, \"px\"),\n      left: this.formatStyle(box.left, \"px\"),\n      right: this.formatStyle(box.right, \"px\"),\n      height: this.formatStyle(box.height, \"px\"),\n      width: this.formatStyle(box.width, \"px\")\n    });\n  };\n}\nCueStyleBox.prototype = _objCreate(StyleBox.prototype);\nCueStyleBox.prototype.constructor = CueStyleBox;\n\n// Represents the co-ordinates of an Element in a way that we can easily\n// compute things with such as if it overlaps or intersects with another Element.\n// Can initialize it with either a StyleBox or another BoxPosition.\nfunction BoxPosition(obj) {\n  // Either a BoxPosition was passed in and we need to copy it, or a StyleBox\n  // was passed in and we need to copy the results of 'getBoundingClientRect'\n  // as the object returned is readonly. All co-ordinate values are in reference\n  // to the viewport origin (top left).\n  var lh, height, width, top;\n  if (obj.div) {\n    height = obj.div.offsetHeight;\n    width = obj.div.offsetWidth;\n    top = obj.div.offsetTop;\n\n    var rects = (rects = obj.div.childNodes) && (rects = rects[0]) &&\n                rects.getClientRects && rects.getClientRects();\n    obj = obj.div.getBoundingClientRect();\n    // In certain cases the outter div will be slightly larger then the sum of\n    // the inner div's lines. This could be due to bold text, etc, on some platforms.\n    // In this case we should get the average line height and use that. This will\n    // result in the desired behaviour.\n    lh = rects ? Math.max((rects[0] && rects[0].height) || 0, obj.height / rects.length)\n               : 0;\n\n  }\n  this.left = obj.left;\n  this.right = obj.right;\n  this.top = obj.top || top;\n  this.height = obj.height || height;\n  this.bottom = obj.bottom || (top + (obj.height || height));\n  this.width = obj.width || width;\n  this.lineHeight = lh !== undefined ? lh : obj.lineHeight;\n}\n\n// Move the box along a particular axis. Optionally pass in an amount to move\n// the box. If no amount is passed then the default is the line height of the\n// box.\nBoxPosition.prototype.move = function(axis, toMove) {\n  toMove = toMove !== undefined ? toMove : this.lineHeight;\n  switch (axis) {\n  case \"+x\":\n    this.left += toMove;\n    this.right += toMove;\n    break;\n  case \"-x\":\n    this.left -= toMove;\n    this.right -= toMove;\n    break;\n  case \"+y\":\n    this.top += toMove;\n    this.bottom += toMove;\n    break;\n  case \"-y\":\n    this.top -= toMove;\n    this.bottom -= toMove;\n    break;\n  }\n};\n\n// Check if this box overlaps another box, b2.\nBoxPosition.prototype.overlaps = function(b2) {\n  return this.left < b2.right &&\n         this.right > b2.left &&\n         this.top < b2.bottom &&\n         this.bottom > b2.top;\n};\n\n// Check if this box overlaps any other boxes in boxes.\nBoxPosition.prototype.overlapsAny = function(boxes) {\n  for (var i = 0; i < boxes.length; i++) {\n    if (this.overlaps(boxes[i])) {\n      return true;\n    }\n  }\n  return false;\n};\n\n// Check if this box is within another box.\nBoxPosition.prototype.within = function(container) {\n  return this.top >= container.top &&\n         this.bottom <= container.bottom &&\n         this.left >= container.left &&\n         this.right <= container.right;\n};\n\n// Check if this box is entirely within the container or it is overlapping\n// on the edge opposite of the axis direction passed. For example, if \"+x\" is\n// passed and the box is overlapping on the left edge of the container, then\n// return true.\nBoxPosition.prototype.overlapsOppositeAxis = function(container, axis) {\n  switch (axis) {\n  case \"+x\":\n    return this.left < container.left;\n  case \"-x\":\n    return this.right > container.right;\n  case \"+y\":\n    return this.top < container.top;\n  case \"-y\":\n    return this.bottom > container.bottom;\n  }\n};\n\n// Find the percentage of the area that this box is overlapping with another\n// box.\nBoxPosition.prototype.intersectPercentage = function(b2) {\n  var x = Math.max(0, Math.min(this.right, b2.right) - Math.max(this.left, b2.left)),\n      y = Math.max(0, Math.min(this.bottom, b2.bottom) - Math.max(this.top, b2.top)),\n      intersectArea = x * y;\n  return intersectArea / (this.height * this.width);\n};\n\n// Convert the positions from this box to CSS compatible positions using\n// the reference container's positions. This has to be done because this\n// box's positions are in reference to the viewport origin, whereas, CSS\n// values are in referecne to their respective edges.\nBoxPosition.prototype.toCSSCompatValues = function(reference) {\n  return {\n    top: this.top - reference.top,\n    bottom: reference.bottom - this.bottom,\n    left: this.left - reference.left,\n    right: reference.right - this.right,\n    height: this.height,\n    width: this.width\n  };\n};\n\n// Get an object that represents the box's position without anything extra.\n// Can pass a StyleBox, HTMLElement, or another BoxPositon.\nBoxPosition.getSimpleBoxPosition = function(obj) {\n  var height = obj.div ? obj.div.offsetHeight : obj.tagName ? obj.offsetHeight : 0;\n  var width = obj.div ? obj.div.offsetWidth : obj.tagName ? obj.offsetWidth : 0;\n  var top = obj.div ? obj.div.offsetTop : obj.tagName ? obj.offsetTop : 0;\n\n  obj = obj.div ? obj.div.getBoundingClientRect() :\n                obj.tagName ? obj.getBoundingClientRect() : obj;\n  var ret = {\n    left: obj.left,\n    right: obj.right,\n    top: obj.top || top,\n    height: obj.height || height,\n    bottom: obj.bottom || (top + (obj.height || height)),\n    width: obj.width || width\n  };\n  return ret;\n};\n\n// Move a StyleBox to its specified, or next best, position. The containerBox\n// is the box that contains the StyleBox, such as a div. boxPositions are\n// a list of other boxes that the styleBox can't overlap with.\nfunction moveBoxToLinePosition(window, styleBox, containerBox, boxPositions) {\n\n  // Find the best position for a cue box, b, on the video. The axis parameter\n  // is a list of axis, the order of which, it will move the box along. For example:\n  // Passing [\"+x\", \"-x\"] will move the box first along the x axis in the positive\n  // direction. If it doesn't find a good position for it there it will then move\n  // it along the x axis in the negative direction.\n  function findBestPosition(b, axis) {\n    var bestPosition,\n        specifiedPosition = new BoxPosition(b),\n        percentage = 1; // Highest possible so the first thing we get is better.\n\n    for (var i = 0; i < axis.length; i++) {\n      while (b.overlapsOppositeAxis(containerBox, axis[i]) ||\n             (b.within(containerBox) && b.overlapsAny(boxPositions))) {\n        b.move(axis[i]);\n      }\n      // We found a spot where we aren't overlapping anything. This is our\n      // best position.\n      if (b.within(containerBox)) {\n        return b;\n      }\n      var p = b.intersectPercentage(containerBox);\n      // If we're outside the container box less then we were on our last try\n      // then remember this position as the best position.\n      if (percentage > p) {\n        bestPosition = new BoxPosition(b);\n        percentage = p;\n      }\n      // Reset the box position to the specified position.\n      b = new BoxPosition(specifiedPosition);\n    }\n    return bestPosition || specifiedPosition;\n  }\n\n  var boxPosition = new BoxPosition(styleBox),\n      cue = styleBox.cue,\n      linePos = computeLinePos(cue),\n      axis = [];\n\n  // If we have a line number to align the cue to.\n  if (cue.snapToLines) {\n    var size;\n    switch (cue.vertical) {\n    case \"\":\n      axis = [ \"+y\", \"-y\" ];\n      size = \"height\";\n      break;\n    case \"rl\":\n      axis = [ \"+x\", \"-x\" ];\n      size = \"width\";\n      break;\n    case \"lr\":\n      axis = [ \"-x\", \"+x\" ];\n      size = \"width\";\n      break;\n    }\n\n    var step = boxPosition.lineHeight,\n        position = step * Math.round(linePos),\n        maxPosition = containerBox[size] + step,\n        initialAxis = axis[0];\n\n    // If the specified intial position is greater then the max position then\n    // clamp the box to the amount of steps it would take for the box to\n    // reach the max position.\n    if (Math.abs(position) > maxPosition) {\n      position = position < 0 ? -1 : 1;\n      position *= Math.ceil(maxPosition / step) * step;\n    }\n\n    // If computed line position returns negative then line numbers are\n    // relative to the bottom of the video instead of the top. Therefore, we\n    // need to increase our initial position by the length or width of the\n    // video, depending on the writing direction, and reverse our axis directions.\n    if (linePos < 0) {\n      position += cue.vertical === \"\" ? containerBox.height : containerBox.width;\n      axis = axis.reverse();\n    }\n\n    // Move the box to the specified position. This may not be its best\n    // position.\n    boxPosition.move(initialAxis, position);\n\n  } else {\n    // If we have a percentage line value for the cue.\n    var calculatedPercentage = (boxPosition.lineHeight / containerBox.height) * 100;\n\n    switch (cue.lineAlign) {\n    case \"center\":\n      linePos -= (calculatedPercentage / 2);\n      break;\n    case \"end\":\n      linePos -= calculatedPercentage;\n      break;\n    }\n\n    // Apply initial line position to the cue box.\n    switch (cue.vertical) {\n    case \"\":\n      styleBox.applyStyles({\n        top: styleBox.formatStyle(linePos, \"%\")\n      });\n      break;\n    case \"rl\":\n      styleBox.applyStyles({\n        left: styleBox.formatStyle(linePos, \"%\")\n      });\n      break;\n    case \"lr\":\n      styleBox.applyStyles({\n        right: styleBox.formatStyle(linePos, \"%\")\n      });\n      break;\n    }\n\n    axis = [ \"+y\", \"-x\", \"+x\", \"-y\" ];\n\n    // Get the box position again after we've applied the specified positioning\n    // to it.\n    boxPosition = new BoxPosition(styleBox);\n  }\n\n  var bestPosition = findBestPosition(boxPosition, axis);\n  styleBox.move(bestPosition.toCSSCompatValues(containerBox));\n}\n\nfunction WebVTT() {\n  // Nothing\n}\n\n// Helper to allow strings to be decoded instead of the default binary utf8 data.\nWebVTT.StringDecoder = function() {\n  return {\n    decode: function(data) {\n      if (!data) {\n        return \"\";\n      }\n      if (typeof data !== \"string\") {\n        throw new Error(\"Error - expected string data.\");\n      }\n      return decodeURIComponent(encodeURIComponent(data));\n    }\n  };\n};\n\nWebVTT.convertCueToDOMTree = function(window, cuetext) {\n  if (!window || !cuetext) {\n    return null;\n  }\n  return parseContent(window, cuetext);\n};\n\nvar FONT_SIZE_PERCENT = 0.05;\nvar FONT_STYLE = \"sans-serif\";\nvar CUE_BACKGROUND_PADDING = \"1.5%\";\n\n// Runs the processing model over the cues and regions passed to it.\n// @param overlay A block level element (usually a div) that the computed cues\n//                and regions will be placed into.\nWebVTT.processCues = function(window, cues, overlay) {\n  if (!window || !cues || !overlay) {\n    return null;\n  }\n\n  // Remove all previous children.\n  while (overlay.firstChild) {\n    overlay.removeChild(overlay.firstChild);\n  }\n\n  var paddedOverlay = window.document.createElement(\"div\");\n  paddedOverlay.style.position = \"absolute\";\n  paddedOverlay.style.left = \"0\";\n  paddedOverlay.style.right = \"0\";\n  paddedOverlay.style.top = \"0\";\n  paddedOverlay.style.bottom = \"0\";\n  paddedOverlay.style.margin = CUE_BACKGROUND_PADDING;\n  overlay.appendChild(paddedOverlay);\n\n  // Determine if we need to compute the display states of the cues. This could\n  // be the case if a cue's state has been changed since the last computation or\n  // if it has not been computed yet.\n  function shouldCompute(cues) {\n    for (var i = 0; i < cues.length; i++) {\n      if (cues[i].hasBeenReset || !cues[i].displayState) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  // We don't need to recompute the cues' display states. Just reuse them.\n  if (!shouldCompute(cues)) {\n    for (var i = 0; i < cues.length; i++) {\n      paddedOverlay.appendChild(cues[i].displayState);\n    }\n    return;\n  }\n\n  var boxPositions = [],\n      containerBox = BoxPosition.getSimpleBoxPosition(paddedOverlay),\n      fontSize = Math.round(containerBox.height * FONT_SIZE_PERCENT * 100) / 100;\n  var styleOptions = {\n    font: fontSize + \"px \" + FONT_STYLE\n  };\n\n  (function() {\n    var styleBox, cue;\n\n    for (var i = 0; i < cues.length; i++) {\n      cue = cues[i];\n\n      // Compute the intial position and styles of the cue div.\n      styleBox = new CueStyleBox(window, cue, styleOptions);\n      paddedOverlay.appendChild(styleBox.div);\n\n      // Move the cue div to it's correct line position.\n      moveBoxToLinePosition(window, styleBox, containerBox, boxPositions);\n\n      // Remember the computed div so that we don't have to recompute it later\n      // if we don't have too.\n      cue.displayState = styleBox.div;\n\n      boxPositions.push(BoxPosition.getSimpleBoxPosition(styleBox));\n    }\n  })();\n};\n\nWebVTT.Parser = function(window, vttjs, decoder) {\n  if (!decoder) {\n    decoder = vttjs;\n    vttjs = {};\n  }\n  if (!vttjs) {\n    vttjs = {};\n  }\n\n  this.window = window;\n  this.vttjs = vttjs;\n  this.state = \"INITIAL\";\n  this.buffer = \"\";\n  this.decoder = decoder || new TextDecoder(\"utf8\");\n  this.regionList = [];\n};\n\nWebVTT.Parser.prototype = {\n  // If the error is a ParsingError then report it to the consumer if\n  // possible. If it's not a ParsingError then throw it like normal.\n  reportOrThrowError: function(e) {\n    if (e instanceof ParsingError) {\n      this.onparsingerror && this.onparsingerror(e);\n    } else {\n      throw e;\n    }\n  },\n  parse: function (data) {\n    var self = this;\n\n    // If there is no data then we won't decode it, but will just try to parse\n    // whatever is in buffer already. This may occur in circumstances, for\n    // example when flush() is called.\n    if (data) {\n      // Try to decode the data that we received.\n      self.buffer += self.decoder.decode(data, {stream: true});\n    }\n\n    function collectNextLine() {\n      var buffer = self.buffer;\n      var pos = 0;\n      while (pos < buffer.length && buffer[pos] !== '\\r' && buffer[pos] !== '\\n') {\n        ++pos;\n      }\n      var line = buffer.substr(0, pos);\n      // Advance the buffer early in case we fail below.\n      if (buffer[pos] === '\\r') {\n        ++pos;\n      }\n      if (buffer[pos] === '\\n') {\n        ++pos;\n      }\n      self.buffer = buffer.substr(pos);\n      return line;\n    }\n\n    // 3.4 WebVTT region and WebVTT region settings syntax\n    function parseRegion(input) {\n      var settings = new Settings();\n\n      parseOptions(input, function (k, v) {\n        switch (k) {\n        case \"id\":\n          settings.set(k, v);\n          break;\n        case \"width\":\n          settings.percent(k, v);\n          break;\n        case \"lines\":\n          settings.integer(k, v);\n          break;\n        case \"regionanchor\":\n        case \"viewportanchor\":\n          var xy = v.split(',');\n          if (xy.length !== 2) {\n            break;\n          }\n          // We have to make sure both x and y parse, so use a temporary\n          // settings object here.\n          var anchor = new Settings();\n          anchor.percent(\"x\", xy[0]);\n          anchor.percent(\"y\", xy[1]);\n          if (!anchor.has(\"x\") || !anchor.has(\"y\")) {\n            break;\n          }\n          settings.set(k + \"X\", anchor.get(\"x\"));\n          settings.set(k + \"Y\", anchor.get(\"y\"));\n          break;\n        case \"scroll\":\n          settings.alt(k, v, [\"up\"]);\n          break;\n        }\n      }, /=/, /\\s/);\n\n      // Create the region, using default values for any values that were not\n      // specified.\n      if (settings.has(\"id\")) {\n        var region = new (self.vttjs.VTTRegion || self.window.VTTRegion)();\n        region.width = settings.get(\"width\", 100);\n        region.lines = settings.get(\"lines\", 3);\n        region.regionAnchorX = settings.get(\"regionanchorX\", 0);\n        region.regionAnchorY = settings.get(\"regionanchorY\", 100);\n        region.viewportAnchorX = settings.get(\"viewportanchorX\", 0);\n        region.viewportAnchorY = settings.get(\"viewportanchorY\", 100);\n        region.scroll = settings.get(\"scroll\", \"\");\n        // Register the region.\n        self.onregion && self.onregion(region);\n        // Remember the VTTRegion for later in case we parse any VTTCues that\n        // reference it.\n        self.regionList.push({\n          id: settings.get(\"id\"),\n          region: region\n        });\n      }\n    }\n\n    // draft-pantos-http-live-streaming-20\n    // https://tools.ietf.org/html/draft-pantos-http-live-streaming-20#section-3.5\n    // 3.5 WebVTT\n    function parseTimestampMap(input) {\n      var settings = new Settings();\n\n      parseOptions(input, function(k, v) {\n        switch(k) {\n        case \"MPEGT\":\n          settings.integer(k + 'S', v);\n          break;\n        case \"LOCA\":\n          settings.set(k + 'L', parseTimeStamp(v));\n          break;\n        }\n      }, /[^\\d]:/, /,/);\n\n      self.ontimestampmap && self.ontimestampmap({\n        \"MPEGTS\": settings.get(\"MPEGTS\"),\n        \"LOCAL\": settings.get(\"LOCAL\")\n      });\n    }\n\n    // 3.2 WebVTT metadata header syntax\n    function parseHeader(input) {\n      if (input.match(/X-TIMESTAMP-MAP/)) {\n        // This line contains HLS X-TIMESTAMP-MAP metadata\n        parseOptions(input, function(k, v) {\n          switch(k) {\n          case \"X-TIMESTAMP-MAP\":\n            parseTimestampMap(v);\n            break;\n          }\n        }, /=/);\n      } else {\n        parseOptions(input, function (k, v) {\n          switch (k) {\n          case \"Region\":\n            // 3.3 WebVTT region metadata header syntax\n            parseRegion(v);\n            break;\n          }\n        }, /:/);\n      }\n\n    }\n\n    // 5.1 WebVTT file parsing.\n    try {\n      var line;\n      if (self.state === \"INITIAL\") {\n        // We can't start parsing until we have the first line.\n        if (!/\\r\\n|\\n/.test(self.buffer)) {\n          return this;\n        }\n\n        line = collectNextLine();\n\n        var m = line.match(/^WEBVTT([ \\t].*)?$/);\n        if (!m || !m[0]) {\n          throw new ParsingError(ParsingError.Errors.BadSignature);\n        }\n\n        self.state = \"HEADER\";\n      }\n\n      var alreadyCollectedLine = false;\n      while (self.buffer) {\n        // We can't parse a line until we have the full line.\n        if (!/\\r\\n|\\n/.test(self.buffer)) {\n          return this;\n        }\n\n        if (!alreadyCollectedLine) {\n          line = collectNextLine();\n        } else {\n          alreadyCollectedLine = false;\n        }\n\n        switch (self.state) {\n        case \"HEADER\":\n          // 13-18 - Allow a header (metadata) under the WEBVTT line.\n          if (/:/.test(line)) {\n            parseHeader(line);\n          } else if (!line) {\n            // An empty line terminates the header and starts the body (cues).\n            self.state = \"ID\";\n          }\n          continue;\n        case \"NOTE\":\n          // Ignore NOTE blocks.\n          if (!line) {\n            self.state = \"ID\";\n          }\n          continue;\n        case \"ID\":\n          // Check for the start of NOTE blocks.\n          if (/^NOTE($|[ \\t])/.test(line)) {\n            self.state = \"NOTE\";\n            break;\n          }\n          // 19-29 - Allow any number of line terminators, then initialize new cue values.\n          if (!line) {\n            continue;\n          }\n          self.cue = new (self.vttjs.VTTCue || self.window.VTTCue)(0, 0, \"\");\n          // Safari still uses the old middle value and won't accept center\n          try {\n            self.cue.align = \"center\";\n          } catch (e) {\n            self.cue.align = \"middle\";\n          }\n          self.state = \"CUE\";\n          // 30-39 - Check if self line contains an optional identifier or timing data.\n          if (line.indexOf(\"-->\") === -1) {\n            self.cue.id = line;\n            continue;\n          }\n          // Process line as start of a cue.\n          /*falls through*/\n        case \"CUE\":\n          // 40 - Collect cue timings and settings.\n          try {\n            parseCue(line, self.cue, self.regionList);\n          } catch (e) {\n            self.reportOrThrowError(e);\n            // In case of an error ignore rest of the cue.\n            self.cue = null;\n            self.state = \"BADCUE\";\n            continue;\n          }\n          self.state = \"CUETEXT\";\n          continue;\n        case \"CUETEXT\":\n          var hasSubstring = line.indexOf(\"-->\") !== -1;\n          // 34 - If we have an empty line then report the cue.\n          // 35 - If we have the special substring '-->' then report the cue,\n          // but do not collect the line as we need to process the current\n          // one as a new cue.\n          if (!line || hasSubstring && (alreadyCollectedLine = true)) {\n            // We are done parsing self cue.\n            self.oncue && self.oncue(self.cue);\n            self.cue = null;\n            self.state = \"ID\";\n            continue;\n          }\n          if (self.cue.text) {\n            self.cue.text += \"\\n\";\n          }\n          self.cue.text += line.replace(/\\u2028/g, '\\n').replace(/u2029/g, '\\n');\n          continue;\n        case \"BADCUE\": // BADCUE\n          // 54-62 - Collect and discard the remaining cue.\n          if (!line) {\n            self.state = \"ID\";\n          }\n          continue;\n        }\n      }\n    } catch (e) {\n      self.reportOrThrowError(e);\n\n      // If we are currently parsing a cue, report what we have.\n      if (self.state === \"CUETEXT\" && self.cue && self.oncue) {\n        self.oncue(self.cue);\n      }\n      self.cue = null;\n      // Enter BADWEBVTT state if header was not parsed correctly otherwise\n      // another exception occurred so enter BADCUE state.\n      self.state = self.state === \"INITIAL\" ? \"BADWEBVTT\" : \"BADCUE\";\n    }\n    return this;\n  },\n  flush: function () {\n    var self = this;\n    try {\n      // Finish decoding the stream.\n      self.buffer += self.decoder.decode();\n      // Synthesize the end of the current cue or region.\n      if (self.cue || self.state === \"HEADER\") {\n        self.buffer += \"\\n\\n\";\n        self.parse();\n      }\n      // If we've flushed, parsed, and we're still on the INITIAL state then\n      // that means we don't have enough of the stream to parse the first\n      // line.\n      if (self.state === \"INITIAL\") {\n        throw new ParsingError(ParsingError.Errors.BadSignature);\n      }\n    } catch(e) {\n      self.reportOrThrowError(e);\n    }\n    self.onflush && self.onflush();\n    return this;\n  }\n};\n\nmodule.exports = WebVTT;\n","/**\n * Copyright 2013 vtt.js Contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nvar autoKeyword = \"auto\";\nvar directionSetting = {\n  \"\": 1,\n  \"lr\": 1,\n  \"rl\": 1\n};\nvar alignSetting = {\n  \"start\": 1,\n  \"center\": 1,\n  \"end\": 1,\n  \"left\": 1,\n  \"right\": 1,\n  \"auto\": 1,\n  \"line-left\": 1,\n  \"line-right\": 1\n};\n\nfunction findDirectionSetting(value) {\n  if (typeof value !== \"string\") {\n    return false;\n  }\n  var dir = directionSetting[value.toLowerCase()];\n  return dir ? value.toLowerCase() : false;\n}\n\nfunction findAlignSetting(value) {\n  if (typeof value !== \"string\") {\n    return false;\n  }\n  var align = alignSetting[value.toLowerCase()];\n  return align ? value.toLowerCase() : false;\n}\n\nfunction VTTCue(startTime, endTime, text) {\n  /**\n   * Shim implementation specific properties. These properties are not in\n   * the spec.\n   */\n\n  // Lets us know when the VTTCue's data has changed in such a way that we need\n  // to recompute its display state. This lets us compute its display state\n  // lazily.\n  this.hasBeenReset = false;\n\n  /**\n   * VTTCue and TextTrackCue properties\n   * http://dev.w3.org/html5/webvtt/#vttcue-interface\n   */\n\n  var _id = \"\";\n  var _pauseOnExit = false;\n  var _startTime = startTime;\n  var _endTime = endTime;\n  var _text = text;\n  var _region = null;\n  var _vertical = \"\";\n  var _snapToLines = true;\n  var _line = \"auto\";\n  var _lineAlign = \"start\";\n  var _position = \"auto\";\n  var _positionAlign = \"auto\";\n  var _size = 100;\n  var _align = \"center\";\n\n  Object.defineProperties(this, {\n    \"id\": {\n      enumerable: true,\n      get: function() {\n        return _id;\n      },\n      set: function(value) {\n        _id = \"\" + value;\n      }\n    },\n\n    \"pauseOnExit\": {\n      enumerable: true,\n      get: function() {\n        return _pauseOnExit;\n      },\n      set: function(value) {\n        _pauseOnExit = !!value;\n      }\n    },\n\n    \"startTime\": {\n      enumerable: true,\n      get: function() {\n        return _startTime;\n      },\n      set: function(value) {\n        if (typeof value !== \"number\") {\n          throw new TypeError(\"Start time must be set to a number.\");\n        }\n        _startTime = value;\n        this.hasBeenReset = true;\n      }\n    },\n\n    \"endTime\": {\n      enumerable: true,\n      get: function() {\n        return _endTime;\n      },\n      set: function(value) {\n        if (typeof value !== \"number\") {\n          throw new TypeError(\"End time must be set to a number.\");\n        }\n        _endTime = value;\n        this.hasBeenReset = true;\n      }\n    },\n\n    \"text\": {\n      enumerable: true,\n      get: function() {\n        return _text;\n      },\n      set: function(value) {\n        _text = \"\" + value;\n        this.hasBeenReset = true;\n      }\n    },\n\n    \"region\": {\n      enumerable: true,\n      get: function() {\n        return _region;\n      },\n      set: function(value) {\n        _region = value;\n        this.hasBeenReset = true;\n      }\n    },\n\n    \"vertical\": {\n      enumerable: true,\n      get: function() {\n        return _vertical;\n      },\n      set: function(value) {\n        var setting = findDirectionSetting(value);\n        // Have to check for false because the setting an be an empty string.\n        if (setting === false) {\n          throw new SyntaxError(\"Vertical: an invalid or illegal direction string was specified.\");\n        }\n        _vertical = setting;\n        this.hasBeenReset = true;\n      }\n    },\n\n    \"snapToLines\": {\n      enumerable: true,\n      get: function() {\n        return _snapToLines;\n      },\n      set: function(value) {\n        _snapToLines = !!value;\n        this.hasBeenReset = true;\n      }\n    },\n\n    \"line\": {\n      enumerable: true,\n      get: function() {\n        return _line;\n      },\n      set: function(value) {\n        if (typeof value !== \"number\" && value !== autoKeyword) {\n          throw new SyntaxError(\"Line: an invalid number or illegal string was specified.\");\n        }\n        _line = value;\n        this.hasBeenReset = true;\n      }\n    },\n\n    \"lineAlign\": {\n      enumerable: true,\n      get: function() {\n        return _lineAlign;\n      },\n      set: function(value) {\n        var setting = findAlignSetting(value);\n        if (!setting) {\n          console.warn(\"lineAlign: an invalid or illegal string was specified.\");\n        } else {\n          _lineAlign = setting;\n          this.hasBeenReset = true;\n        }\n      }\n    },\n\n    \"position\": {\n      enumerable: true,\n      get: function() {\n        return _position;\n      },\n      set: function(value) {\n        if (value < 0 || value > 100) {\n          throw new Error(\"Position must be between 0 and 100.\");\n        }\n        _position = value;\n        this.hasBeenReset = true;\n      }\n    },\n\n    \"positionAlign\": {\n      enumerable: true,\n      get: function() {\n        return _positionAlign;\n      },\n      set: function(value) {\n        var setting = findAlignSetting(value);\n        if (!setting) {\n          console.warn(\"positionAlign: an invalid or illegal string was specified.\");\n        } else {\n          _positionAlign = setting;\n          this.hasBeenReset = true;\n        }\n      }\n    },\n\n    \"size\": {\n      enumerable: true,\n      get: function() {\n        return _size;\n      },\n      set: function(value) {\n        if (value < 0 || value > 100) {\n          throw new Error(\"Size must be between 0 and 100.\");\n        }\n        _size = value;\n        this.hasBeenReset = true;\n      }\n    },\n\n    \"align\": {\n      enumerable: true,\n      get: function() {\n        return _align;\n      },\n      set: function(value) {\n        var setting = findAlignSetting(value);\n        if (!setting) {\n          throw new SyntaxError(\"align: an invalid or illegal alignment string was specified.\");\n        }\n        _align = setting;\n        this.hasBeenReset = true;\n      }\n    }\n  });\n\n  /**\n   * Other <track> spec defined properties\n   */\n\n  // http://www.whatwg.org/specs/web-apps/current-work/multipage/the-video-element.html#text-track-cue-display-state\n  this.displayState = undefined;\n}\n\n/**\n * VTTCue methods\n */\n\nVTTCue.prototype.getCueAsHTML = function() {\n  // Assume WebVTT.convertCueToDOMTree is on the global.\n  return WebVTT.convertCueToDOMTree(window, this.text);\n};\n\nmodule.exports = VTTCue;\n","/**\n * Copyright 2013 vtt.js Contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nvar scrollSetting = {\n  \"\": true,\n  \"up\": true\n};\n\nfunction findScrollSetting(value) {\n  if (typeof value !== \"string\") {\n    return false;\n  }\n  var scroll = scrollSetting[value.toLowerCase()];\n  return scroll ? value.toLowerCase() : false;\n}\n\nfunction isValidPercentValue(value) {\n  return typeof value === \"number\" && (value >= 0 && value <= 100);\n}\n\n// VTTRegion shim http://dev.w3.org/html5/webvtt/#vttregion-interface\nfunction VTTRegion() {\n  var _width = 100;\n  var _lines = 3;\n  var _regionAnchorX = 0;\n  var _regionAnchorY = 100;\n  var _viewportAnchorX = 0;\n  var _viewportAnchorY = 100;\n  var _scroll = \"\";\n\n  Object.defineProperties(this, {\n    \"width\": {\n      enumerable: true,\n      get: function() {\n        return _width;\n      },\n      set: function(value) {\n        if (!isValidPercentValue(value)) {\n          throw new Error(\"Width must be between 0 and 100.\");\n        }\n        _width = value;\n      }\n    },\n    \"lines\": {\n      enumerable: true,\n      get: function() {\n        return _lines;\n      },\n      set: function(value) {\n        if (typeof value !== \"number\") {\n          throw new TypeError(\"Lines must be set to a number.\");\n        }\n        _lines = value;\n      }\n    },\n    \"regionAnchorY\": {\n      enumerable: true,\n      get: function() {\n        return _regionAnchorY;\n      },\n      set: function(value) {\n        if (!isValidPercentValue(value)) {\n          throw new Error(\"RegionAnchorX must be between 0 and 100.\");\n        }\n        _regionAnchorY = value;\n      }\n    },\n    \"regionAnchorX\": {\n      enumerable: true,\n      get: function() {\n        return _regionAnchorX;\n      },\n      set: function(value) {\n        if(!isValidPercentValue(value)) {\n          throw new Error(\"RegionAnchorY must be between 0 and 100.\");\n        }\n        _regionAnchorX = value;\n      }\n    },\n    \"viewportAnchorY\": {\n      enumerable: true,\n      get: function() {\n        return _viewportAnchorY;\n      },\n      set: function(value) {\n        if (!isValidPercentValue(value)) {\n          throw new Error(\"ViewportAnchorY must be between 0 and 100.\");\n        }\n        _viewportAnchorY = value;\n      }\n    },\n    \"viewportAnchorX\": {\n      enumerable: true,\n      get: function() {\n        return _viewportAnchorX;\n      },\n      set: function(value) {\n        if (!isValidPercentValue(value)) {\n          throw new Error(\"ViewportAnchorX must be between 0 and 100.\");\n        }\n        _viewportAnchorX = value;\n      }\n    },\n    \"scroll\": {\n      enumerable: true,\n      get: function() {\n        return _scroll;\n      },\n      set: function(value) {\n        var setting = findScrollSetting(value);\n        // Have to check for false as an empty string is a legal value.\n        if (setting === false) {\n          console.warn(\"Scroll: an invalid or illegal string was specified.\");\n        } else {\n          _scroll = setting;\n        }\n      }\n    }\n  });\n}\n\nmodule.exports = VTTRegion;\n","function _extends() {\n  return module.exports = _extends = Object.assign ? Object.assign.bind() : function (n) {\n    for (var e = 1; e < arguments.length; e++) {\n      var t = arguments[e];\n      for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]);\n    }\n    return n;\n  }, module.exports.__esModule = true, module.exports[\"default\"] = module.exports, _extends.apply(null, arguments);\n}\nmodule.exports = _extends, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;"],"names":["a","b","isArrayBufferView","obj","ArrayBuffer","isView","buffer","toUint8","bytes","Uint8Array","Array","isArray","byteOffset","byteLength","BigInt","Number","BYTE_TABLE","Uint16Array","bytesToNumber","_temp","_ref","_ref$signed","signed","_ref$le","le","fn","number","prototype","call","total","byte","i","exponent","Math","abs","length","max","numberToBytes","_temp2","_ref2$le","_ref2","byteCount","ceil","countBits","toString","byteIndex","bytesToString","slice","string","String","fromCharCode","apply","decodeURIComponent","escape","e","stringToBytes","stringIsBytes","unescape","encodeURIComponent","view","charCodeAt","concatTypedArrays","_len","arguments","buffers","_key","filter","totalLen","reduce","buf","tempBuffer","offset","forEach","set","bytesMatch","_temp3","_ref3","_ref3$offset","_ref3$mask","mask","every","bByte","regexs","mp4","webm","ogg","video","audio","text","muxerVideo","muxerAudio","muxerText","mediaTypes","upperMediaTypes","translateLegacyCodec","codec","replace","orig","profile","avcLevel","parseCodecs","codecString","codecs","split","result","codecType","trim","name","match","exec","toLowerCase","type","substring","details","push","mediaType","codecsFromDefault","master","audioGroupId","mediaGroups","AUDIO","audioGroup","audioType","default","playlists","attributes","CODECS","isAudioCodec","test","getMimeForCodec","map","c","container","browserSupportsCodec","withMMS","MediaSource","isTypeSupported","global_window__WEBPACK_IMPORTED_MODULE_0___default","ManagedMediaSource","muxerSupportsCodec","DEFAULT_AUDIO_CODEC","DEFAULT_VIDEO_CODEC","DESCRIPTORS","normalizePath","path","byte_helpers","qX","parseDescriptors","Ki","results","tag","size","headerSize","z","_DESCRIPTORS$z","id","parser","subarray","desc","flags","dependsOnEsId","ocrEsId","descriptors","url","len","d3","oti","streamType","bufferSize","maxBitrate","avgBitrate","findBox","paths","complete","p","end","data","G3","EBML_TAGS","EBML","DocType","Segment","SegmentInfo","Tracks","Track","TrackNumber","DefaultDuration","TrackEntry","TrackType","FlagDefault","CodecID","CodecPrivate","VideoTrack","AudioTrack","Cluster","Timestamp","TimestampScale","BlockGroup","BlockDuration","Block","SimpleBlock","LENGTH_TABLE","getLength","getvint","removeLength","valueBytes","value","tm","ebml_helpers_normalizePath","hL","getInfinityDataSize","innerid","dataHeader","findEbml","dataStart","dataEnd","concat","totalLength","NAL_TYPE_ONE","NAL_TYPE_TWO","EMULATION_PREVENTION","discardEmulationPreventionBytes","positions","newLength","newData","sourceIndex","shift","findNal","dataType","types","nalLimit","Infinity","nalStart","nalsFound","nalOffset","nalType","indexOf","CONSTANTS","_isLikely","aac","id3_helpers","mp3","docType","mkv","matroska","mov","fmp4","moof","moov","ac3","ts","flac","avi","riff","wav","findH264Nal","findH265Nal","isLikelyTypes","Object","keys","t","isLikelyFn","detectContainerForBytes","isLikely","isLikelyFmp4MediaSegment","decodeB64ToUint8Array","b64Text","decodedString","atob","Buffer","from","array","ID3","_byte_helpers_js__WEBPACK_IMPORTED_MODULE_0__","getId3Size","returnSize","getId3Offset","MPEGURL_REGEX","DASH_REGEX","simpleTypeFromSourceType","DEFAULT_LOCATION","__webpack_exports__","Z","baseUrl","relativeUrl","location","href","protocolLess","removeLocation","URL","newUrl","protocol","window","__webpack_require__","module","exports","callback","decodeResponseBody","err","response","responseBody","statusCode","cause","TextDecoder","contentTypeHeader","charset","headers","contentType","_contentType$split","decode","_extends","isFunction","InterceptorsStorage","RetryManager","createXHR","httpHandler","requestInterceptorsStorage","responseInterceptorsStorage","retryManager","parseHeaders","row","index","key","initParams","uri","options","params","_createXHR","requestType","getIsEnabled","aborted","timeoutTimer","requestInterceptorPayload","body","metadata","retry","timeout","updatedPayload","execute","called","errorFunc","evt","clearTimeout","retryTimeout","Error","shouldRetry","setTimeout","moveToNextAttempt","xhr","getCurrentFuzzedDelay","responseInterceptorPayload","failureResponse","responseUrl","responseURL","responseType","_updatedPayload","loadFunc","status","useXDR","undefined","getBody","responseText","getXml","responseXML","firefoxBugTakenEffect","documentElement","nodeName","isJson","JSON","parse","method","rawRequest","getAllResponseHeaders","_updatedPayload2","cors","XDomainRequest","XMLHttpRequest","sync","json","stringify","onreadystatechange","readyState","onload","onerror","onprogress","onabort","ontimeout","open","username","password","withCredentials","abort","code","setRequestHeader","hasOwnProperty","isEmpty","beforeSend","send","forEachArray","iterator","toUpperCase","_arrayLikeToArray","arr","arr2","typeToInterceptorsMap_","Map","enabled_","_proto","enable","disable","reset","addInterceptor","interceptor","has","Set","interceptorsSet","get","add","removeInterceptor","delete","clearInterceptorsByType","clear","getForType","payload","_step","interceptors","_iterator","_createForOfIteratorHelperLoose","o","allowArrayLike","it","Symbol","next","bind","_unsupportedIterableToArray","minLen","n","constructor","done","maxAttempts_","delayFactor_","fuzzFactor_","initialDelay_","getMaxAttempts","setMaxAttempts","maxAttempts","getDelayFactor","setDelayFactor","delayFactor","getFuzzFactor","setFuzzFactor","fuzzFactor","getInitialDelay","setInitialDelay","initialDelay","createRetry","Retry","currentDelay_","currentAttempt_","_proto2","delayDelta","getCurrentDelay","getCurrentMinPossibleDelay","getCurrentMaxPossibleDelay","lowValue","random","highValue","freeze","object","oc","MIME_TYPE","HTML","isHTML","XML_APPLICATION","XML_TEXT","XML_XHTML_APPLICATION","XML_SVG_IMAGE","NAMESPACE","SVG","XML","XMLNS","assign","target","source","find","list","predicate","ac","item","conventions","dom","entities","sax","DOMImplementation","ParseError","XMLReader","normalizeLineEndings","input","DOMParser","locator","DOMHandler","cdata","position","node","lineNumber","columnNumber","_locator","l","systemId","_toString","chars","start","substr","java","lang","appendElement","hander","currentElement","appendChild","doc","parseFromString","mimeType","domBuilder","errorHandler","defaultNSMap","xmlns","entityMap","HTML_ENTITIES","XML_ENTITIES","setDocumentLocator","buildErrorHandler","errorImpl","isCallback","Function","build","msg","xml","normalize","error","startDocument","createDocument","documentURI","startElement","namespaceURI","localName","qName","attrs","el","createElementNS","getURI","getValue","getQName","attr","createAttributeNS","getLocator","nodeValue","setAttributeNode","endElement","current","tagName","parentNode","startPrefixMapping","prefix","endPrefixMapping","processingInstruction","ins","createProcessingInstruction","ignorableWhitespace","ch","characters","charNode","createCDATASection","createTextNode","skippedEntity","endDocument","comment","comm","createComment","startCDATA","endCDATA","startDTD","publicId","impl","implementation","createDocumentType","dt","doctype","warning","console","warn","fatalError","notEmptyString","orderedSetReducer","element","toOrderedSet","copy","src","dest","Class","Super","pt","NodeType","ELEMENT_NODE","ATTRIBUTE_NODE","TEXT_NODE","CDATA_SECTION_NODE","ENTITY_REFERENCE_NODE","ENTITY_NODE","PROCESSING_INSTRUCTION_NODE","COMMENT_NODE","DOCUMENT_NODE","DOCUMENT_TYPE_NODE","DOCUMENT_FRAGMENT_NODE","NOTATION_NODE","ExceptionCode","ExceptionMessage","INDEX_SIZE_ERR","DOMSTRING_SIZE_ERR","HIERARCHY_REQUEST_ERR","WRONG_DOCUMENT_ERR","INVALID_CHARACTER_ERR","NO_DATA_ALLOWED_ERR","NO_MODIFICATION_ALLOWED_ERR","NOT_FOUND_ERR","NOT_SUPPORTED_ERR","INUSE_ATTRIBUTE_ERR","DOMException","message","captureStackTrace","NodeList","LiveNodeList","refresh","_node","_refresh","_updateLiveList","inc","_inc","ownerDocument","ls","__set__","$$length","NamedNodeMap","_findNodeIndex","_addNamedNode","newAttr","oldAttr","ownerElement","_onRemoveAttribute","_nsMap","_removeNamedNode","lastIndex","Node","_xmlEncoder","_visitNode","firstChild","nextSibling","Document","remove","_onUpdateChild","newChild","cs","childNodes","child","_removeChild","previous","previousSibling","lastChild","isDocTypeNode","nodeType","isElementNode","isTextNode","isElementInsertionPossible","parentChildNodes","docTypeNode","isElementReplacementPossible","assertPreInsertionValidityInDocument","parent","nodeChildNodes","nodeChildElements","parentElementChild","assertPreReplacementValidityInDocument","_insertBefore","_inDocumentAssertion","assertPreInsertionValidity1to5","cp","removeChild","newFirst","newLast","pre","Element","Attr","CharacterData","Text","Comment","CDATASection","DocumentType","Notation","Entity","EntityReference","DocumentFragment","ProcessingInstruction","XMLSerializer","nodeSerializeToString","isHtml","nodeFilter","refNode","lookupPrefix","visibleNamespaces","namespace","serializeToString","join","needNamespaceDefine","ns","addSerializedAttribute","qualifiedName","defaultNS","prefixedNodeName","ai","nsi","pubid","sysid","sub","internalSubset","INVALID_STATE_ERR","SYNTAX_ERR","INVALID_MODIFICATION_ERR","NAMESPACE_ERR","INVALID_ACCESS_ERR","getNamedItem","setNamedItem","_ownerElement","setNamedItemNS","getNamedItemNS","removeNamedItem","removeNamedItemNS","hasFeature","feature","version","root","insertBefore","refChild","replaceChild","oldChild","hasChildNodes","cloneNode","deep","node2","v","attrs2","appendData","isSupported","hasAttributes","lookupNamespaceURI","isDefaultNamespace","importNode","importedNode","getElementById","rtv","getAttribute","getElementsByClassName","classNames","classNamesSet","base","nodeClassNames","matches","nodeClassNamesSet","createElement","createDocumentFragment","createAttribute","specified","createEntityReference","pl","hasAttribute","getAttributeNode","setAttribute","removeAttribute","removeAttributeNode","setAttributeNodeNS","removeAttributeNS","old","getAttributeNodeNS","hasAttributeNS","getAttributeNS","setAttributeNS","getElementsByTagName","getElementsByTagNameNS","substringData","count","insertData","replaceData","deleteData","splitText","newText","newNode","defineProperty","getTextContent","amp","apos","gt","lt","quot","Aacute","aacute","Abreve","abreve","acd","acE","Acirc","acirc","acute","Acy","acy","AElig","aelig","af","Afr","afr","Agrave","agrave","alefsym","aleph","Alpha","alpha","Amacr","amacr","amalg","AMP","And","and","andand","andd","andslope","andv","ang","ange","angle","angmsd","angmsdaa","angmsdab","angmsdac","angmsdad","angmsdae","angmsdaf","angmsdag","angmsdah","angrt","angrtvb","angrtvbd","angsph","angst","angzarr","Aogon","aogon","Aopf","aopf","ap","apacir","apE","ape","apid","ApplyFunction","approx","approxeq","Aring","aring","Ascr","ascr","Assign","ast","asymp","asympeq","Atilde","atilde","Auml","auml","awconint","awint","backcong","backepsilon","backprime","backsim","backsimeq","Backslash","Barv","barvee","Barwed","barwed","barwedge","bbrk","bbrktbrk","bcong","Bcy","bcy","bdquo","becaus","Because","because","bemptyv","bepsi","bernou","Bernoullis","Beta","beta","beth","between","Bfr","bfr","bigcap","bigcirc","bigcup","bigodot","bigoplus","bigotimes","bigsqcup","bigstar","bigtriangledown","bigtriangleup","biguplus","bigvee","bigwedge","bkarow","blacklozenge","blacksquare","blacktriangle","blacktriangledown","blacktriangleleft","blacktriangleright","blank","blk12","blk14","blk34","block","bne","bnequiv","bNot","bnot","Bopf","bopf","bot","bottom","bowtie","boxbox","boxDL","boxDl","boxdL","boxdl","boxDR","boxDr","boxdR","boxdr","boxH","boxh","boxHD","boxHd","boxhD","boxhd","boxHU","boxHu","boxhU","boxhu","boxminus","boxplus","boxtimes","boxUL","boxUl","boxuL","boxul","boxUR","boxUr","boxuR","boxur","boxV","boxv","boxVH","boxVh","boxvH","boxvh","boxVL","boxVl","boxvL","boxvl","boxVR","boxVr","boxvR","boxvr","bprime","Breve","breve","brvbar","Bscr","bscr","bsemi","bsim","bsime","bsol","bsolb","bsolhsub","bull","bullet","bump","bumpE","bumpe","Bumpeq","bumpeq","Cacute","cacute","Cap","cap","capand","capbrcup","capcap","capcup","capdot","CapitalDifferentialD","caps","caret","caron","Cayleys","ccaps","Ccaron","ccaron","Ccedil","ccedil","Ccirc","ccirc","Cconint","ccups","ccupssm","Cdot","cdot","cedil","Cedilla","cemptyv","cent","CenterDot","centerdot","Cfr","cfr","CHcy","chcy","check","checkmark","Chi","chi","cir","circ","circeq","circlearrowleft","circlearrowright","circledast","circledcirc","circleddash","CircleDot","circledR","circledS","CircleMinus","CirclePlus","CircleTimes","cirE","cire","cirfnint","cirmid","cirscir","ClockwiseContourIntegral","CloseCurlyDoubleQuote","CloseCurlyQuote","clubs","clubsuit","Colon","colon","Colone","colone","coloneq","comma","commat","comp","compfn","complement","complexes","cong","congdot","Congruent","Conint","conint","ContourIntegral","Copf","copf","coprod","Coproduct","COPY","copysr","CounterClockwiseContourIntegral","crarr","Cross","cross","Cscr","cscr","csub","csube","csup","csupe","ctdot","cudarrl","cudarrr","cuepr","cuesc","cularr","cularrp","Cup","cup","cupbrcap","CupCap","cupcap","cupcup","cupdot","cupor","cups","curarr","curarrm","curlyeqprec","curlyeqsucc","curlyvee","curlywedge","curren","curvearrowleft","curvearrowright","cuvee","cuwed","cwconint","cwint","cylcty","Dagger","dagger","daleth","Darr","dArr","darr","dash","Dashv","dashv","dbkarow","dblac","Dcaron","dcaron","Dcy","dcy","DD","dd","ddagger","ddarr","DDotrahd","ddotseq","deg","Del","Delta","delta","demptyv","dfisht","Dfr","dfr","dHar","dharl","dharr","DiacriticalAcute","DiacriticalDot","DiacriticalDoubleAcute","DiacriticalGrave","DiacriticalTilde","diam","Diamond","diamond","diamondsuit","diams","die","DifferentialD","digamma","disin","div","divide","divideontimes","divonx","DJcy","djcy","dlcorn","dlcrop","dollar","Dopf","dopf","Dot","dot","DotDot","doteq","doteqdot","DotEqual","dotminus","dotplus","dotsquare","doublebarwedge","DoubleContourIntegral","DoubleDot","DoubleDownArrow","DoubleLeftArrow","DoubleLeftRightArrow","DoubleLeftTee","DoubleLongLeftArrow","DoubleLongLeftRightArrow","DoubleLongRightArrow","DoubleRightArrow","DoubleRightTee","DoubleUpArrow","DoubleUpDownArrow","DoubleVerticalBar","DownArrow","Downarrow","downarrow","DownArrowBar","DownArrowUpArrow","DownBreve","downdownarrows","downharpoonleft","downharpoonright","DownLeftRightVector","DownLeftTeeVector","DownLeftVector","DownLeftVectorBar","DownRightTeeVector","DownRightVector","DownRightVectorBar","DownTee","DownTeeArrow","drbkarow","drcorn","drcrop","Dscr","dscr","DScy","dscy","dsol","Dstrok","dstrok","dtdot","dtri","dtrif","duarr","duhar","dwangle","DZcy","dzcy","dzigrarr","Eacute","eacute","easter","Ecaron","ecaron","ecir","Ecirc","ecirc","ecolon","Ecy","ecy","eDDot","Edot","eDot","edot","ee","efDot","Efr","efr","eg","Egrave","egrave","egs","egsdot","elinters","ell","els","elsdot","Emacr","emacr","empty","emptyset","EmptySmallSquare","emptyv","EmptyVerySmallSquare","emsp","emsp13","emsp14","ENG","eng","ensp","Eogon","eogon","Eopf","eopf","epar","eparsl","eplus","epsi","Epsilon","epsilon","epsiv","eqcirc","eqcolon","eqsim","eqslantgtr","eqslantless","Equal","equals","EqualTilde","equest","Equilibrium","equiv","equivDD","eqvparsl","erarr","erDot","Escr","escr","esdot","Esim","esim","Eta","eta","ETH","eth","Euml","euml","euro","excl","exist","Exists","expectation","ExponentialE","exponentiale","fallingdotseq","Fcy","fcy","female","ffilig","fflig","ffllig","Ffr","ffr","filig","FilledSmallSquare","FilledVerySmallSquare","fjlig","flat","fllig","fltns","fnof","Fopf","fopf","ForAll","forall","fork","forkv","Fouriertrf","fpartint","frac12","frac13","frac14","frac15","frac16","frac18","frac23","frac25","frac34","frac35","frac38","frac45","frac56","frac58","frac78","frasl","frown","Fscr","fscr","gacute","Gamma","gamma","Gammad","gammad","gap","Gbreve","gbreve","Gcedil","Gcirc","gcirc","Gcy","gcy","Gdot","gdot","gE","ge","gEl","gel","geq","geqq","geqslant","ges","gescc","gesdot","gesdoto","gesdotol","gesl","gesles","Gfr","gfr","Gg","gg","ggg","gimel","GJcy","gjcy","gl","gla","glE","glj","gnap","gnapprox","gnE","gne","gneq","gneqq","gnsim","Gopf","gopf","grave","GreaterEqual","GreaterEqualLess","GreaterFullEqual","GreaterGreater","GreaterLess","GreaterSlantEqual","GreaterTilde","Gscr","gscr","gsim","gsime","gsiml","Gt","GT","gtcc","gtcir","gtdot","gtlPar","gtquest","gtrapprox","gtrarr","gtrdot","gtreqless","gtreqqless","gtrless","gtrsim","gvertneqq","gvnE","Hacek","hairsp","half","hamilt","HARDcy","hardcy","hArr","harr","harrcir","harrw","Hat","hbar","Hcirc","hcirc","hearts","heartsuit","hellip","hercon","Hfr","hfr","HilbertSpace","hksearow","hkswarow","hoarr","homtht","hookleftarrow","hookrightarrow","Hopf","hopf","horbar","HorizontalLine","Hscr","hscr","hslash","Hstrok","hstrok","HumpDownHump","HumpEqual","hybull","hyphen","Iacute","iacute","ic","Icirc","icirc","Icy","icy","Idot","IEcy","iecy","iexcl","iff","Ifr","ifr","Igrave","igrave","ii","iiiint","iiint","iinfin","iiota","IJlig","ijlig","Im","Imacr","imacr","image","ImaginaryI","imagline","imagpart","imath","imof","imped","Implies","in","incare","infin","infintie","inodot","Int","int","intcal","integers","Integral","intercal","Intersection","intlarhk","intprod","InvisibleComma","InvisibleTimes","IOcy","iocy","Iogon","iogon","Iopf","iopf","Iota","iota","iprod","iquest","Iscr","iscr","isin","isindot","isinE","isins","isinsv","isinv","Itilde","itilde","Iukcy","iukcy","Iuml","iuml","Jcirc","jcirc","Jcy","jcy","Jfr","jfr","jmath","Jopf","jopf","Jscr","jscr","Jsercy","jsercy","Jukcy","jukcy","Kappa","kappa","kappav","Kcedil","kcedil","Kcy","kcy","Kfr","kfr","kgreen","KHcy","khcy","KJcy","kjcy","Kopf","kopf","Kscr","kscr","lAarr","Lacute","lacute","laemptyv","lagran","Lambda","lambda","Lang","langd","langle","lap","Laplacetrf","laquo","Larr","lArr","larr","larrb","larrbfs","larrfs","larrhk","larrlp","larrpl","larrsim","larrtl","lat","lAtail","latail","late","lates","lBarr","lbarr","lbbrk","lbrace","lbrack","lbrke","lbrksld","lbrkslu","Lcaron","lcaron","Lcedil","lcedil","lceil","lcub","Lcy","lcy","ldca","ldquo","ldquor","ldrdhar","ldrushar","ldsh","lE","LeftAngleBracket","LeftArrow","Leftarrow","leftarrow","LeftArrowBar","LeftArrowRightArrow","leftarrowtail","LeftCeiling","LeftDoubleBracket","LeftDownTeeVector","LeftDownVector","LeftDownVectorBar","LeftFloor","leftharpoondown","leftharpoonup","leftleftarrows","LeftRightArrow","Leftrightarrow","leftrightarrow","leftrightarrows","leftrightharpoons","leftrightsquigarrow","LeftRightVector","LeftTee","LeftTeeArrow","LeftTeeVector","leftthreetimes","LeftTriangle","LeftTriangleBar","LeftTriangleEqual","LeftUpDownVector","LeftUpTeeVector","LeftUpVector","LeftUpVectorBar","LeftVector","LeftVectorBar","lEg","leg","leq","leqq","leqslant","les","lescc","lesdot","lesdoto","lesdotor","lesg","lesges","lessapprox","lessdot","lesseqgtr","lesseqqgtr","LessEqualGreater","LessFullEqual","LessGreater","lessgtr","LessLess","lesssim","LessSlantEqual","LessTilde","lfisht","lfloor","Lfr","lfr","lg","lgE","lHar","lhard","lharu","lharul","lhblk","LJcy","ljcy","Ll","ll","llarr","llcorner","Lleftarrow","llhard","lltri","Lmidot","lmidot","lmoust","lmoustache","lnap","lnapprox","lnE","lne","lneq","lneqq","lnsim","loang","loarr","lobrk","LongLeftArrow","Longleftarrow","longleftarrow","LongLeftRightArrow","Longleftrightarrow","longleftrightarrow","longmapsto","LongRightArrow","Longrightarrow","longrightarrow","looparrowleft","looparrowright","lopar","Lopf","lopf","loplus","lotimes","lowast","lowbar","LowerLeftArrow","LowerRightArrow","loz","lozenge","lozf","lpar","lparlt","lrarr","lrcorner","lrhar","lrhard","lrm","lrtri","lsaquo","Lscr","lscr","Lsh","lsh","lsim","lsime","lsimg","lsqb","lsquo","lsquor","Lstrok","lstrok","Lt","LT","ltcc","ltcir","ltdot","lthree","ltimes","ltlarr","ltquest","ltri","ltrie","ltrif","ltrPar","lurdshar","luruhar","lvertneqq","lvnE","macr","male","malt","maltese","mapsto","mapstodown","mapstoleft","mapstoup","marker","mcomma","Mcy","mcy","mdash","mDDot","measuredangle","MediumSpace","Mellintrf","Mfr","mfr","mho","micro","mid","midast","midcir","middot","minus","minusb","minusd","minusdu","MinusPlus","mlcp","mldr","mnplus","models","Mopf","mopf","mp","Mscr","mscr","mstpos","Mu","mu","multimap","mumap","nabla","Nacute","nacute","nang","nap","napE","napid","napos","napprox","natur","natural","naturals","nbsp","nbump","nbumpe","ncap","Ncaron","ncaron","Ncedil","ncedil","ncong","ncongdot","ncup","Ncy","ncy","ndash","ne","nearhk","neArr","nearr","nearrow","nedot","NegativeMediumSpace","NegativeThickSpace","NegativeThinSpace","NegativeVeryThinSpace","nequiv","nesear","nesim","NestedGreaterGreater","NestedLessLess","NewLine","nexist","nexists","Nfr","nfr","ngE","nge","ngeq","ngeqq","ngeqslant","nges","nGg","ngsim","nGt","ngt","ngtr","nGtv","nhArr","nharr","nhpar","ni","nis","nisd","niv","NJcy","njcy","nlArr","nlarr","nldr","nlE","nle","nLeftarrow","nleftarrow","nLeftrightarrow","nleftrightarrow","nleq","nleqq","nleqslant","nles","nless","nLl","nlsim","nLt","nlt","nltri","nltrie","nLtv","nmid","NoBreak","NonBreakingSpace","Nopf","nopf","Not","not","NotCongruent","NotCupCap","NotDoubleVerticalBar","NotElement","NotEqual","NotEqualTilde","NotExists","NotGreater","NotGreaterEqual","NotGreaterFullEqual","NotGreaterGreater","NotGreaterLess","NotGreaterSlantEqual","NotGreaterTilde","NotHumpDownHump","NotHumpEqual","notin","notindot","notinE","notinva","notinvb","notinvc","NotLeftTriangle","NotLeftTriangleBar","NotLeftTriangleEqual","NotLess","NotLessEqual","NotLessGreater","NotLessLess","NotLessSlantEqual","NotLessTilde","NotNestedGreaterGreater","NotNestedLessLess","notni","notniva","notnivb","notnivc","NotPrecedes","NotPrecedesEqual","NotPrecedesSlantEqual","NotReverseElement","NotRightTriangle","NotRightTriangleBar","NotRightTriangleEqual","NotSquareSubset","NotSquareSubsetEqual","NotSquareSuperset","NotSquareSupersetEqual","NotSubset","NotSubsetEqual","NotSucceeds","NotSucceedsEqual","NotSucceedsSlantEqual","NotSucceedsTilde","NotSuperset","NotSupersetEqual","NotTilde","NotTildeEqual","NotTildeFullEqual","NotTildeTilde","NotVerticalBar","npar","nparallel","nparsl","npart","npolint","npr","nprcue","npre","nprec","npreceq","nrArr","nrarr","nrarrc","nrarrw","nRightarrow","nrightarrow","nrtri","nrtrie","nsc","nsccue","nsce","Nscr","nscr","nshortmid","nshortparallel","nsim","nsime","nsimeq","nsmid","nspar","nsqsube","nsqsupe","nsub","nsubE","nsube","nsubset","nsubseteq","nsubseteqq","nsucc","nsucceq","nsup","nsupE","nsupe","nsupset","nsupseteq","nsupseteqq","ntgl","Ntilde","ntilde","ntlg","ntriangleleft","ntrianglelefteq","ntriangleright","ntrianglerighteq","Nu","nu","num","numero","numsp","nvap","nVDash","nVdash","nvDash","nvdash","nvge","nvgt","nvHarr","nvinfin","nvlArr","nvle","nvlt","nvltrie","nvrArr","nvrtrie","nvsim","nwarhk","nwArr","nwarr","nwarrow","nwnear","Oacute","oacute","oast","ocir","Ocirc","ocirc","Ocy","ocy","odash","Odblac","odblac","odiv","odot","odsold","OElig","oelig","ofcir","Ofr","ofr","ogon","Ograve","ograve","ogt","ohbar","ohm","oint","olarr","olcir","olcross","oline","olt","Omacr","omacr","Omega","omega","Omicron","omicron","omid","ominus","Oopf","oopf","opar","OpenCurlyDoubleQuote","OpenCurlyQuote","operp","oplus","Or","or","orarr","ord","order","orderof","ordf","ordm","origof","oror","orslope","orv","oS","Oscr","oscr","Oslash","oslash","osol","Otilde","otilde","Otimes","otimes","otimesas","Ouml","ouml","ovbar","OverBar","OverBrace","OverBracket","OverParenthesis","par","para","parallel","parsim","parsl","part","PartialD","Pcy","pcy","percnt","period","permil","perp","pertenk","Pfr","pfr","Phi","phi","phiv","phmmat","phone","Pi","pi","pitchfork","piv","planck","planckh","plankv","plus","plusacir","plusb","pluscir","plusdo","plusdu","pluse","PlusMinus","plusmn","plussim","plustwo","pm","Poincareplane","pointint","Popf","popf","pound","Pr","pr","prap","prcue","prE","prec","precapprox","preccurlyeq","Precedes","PrecedesEqual","PrecedesSlantEqual","PrecedesTilde","preceq","precnapprox","precneqq","precnsim","precsim","Prime","prime","primes","prnap","prnE","prnsim","prod","Product","profalar","profline","profsurf","prop","Proportion","Proportional","propto","prsim","prurel","Pscr","pscr","Psi","psi","puncsp","Qfr","qfr","qint","Qopf","qopf","qprime","Qscr","qscr","quaternions","quatint","quest","questeq","QUOT","rAarr","race","Racute","racute","radic","raemptyv","Rang","rang","rangd","range","rangle","raquo","Rarr","rArr","rarr","rarrap","rarrb","rarrbfs","rarrc","rarrfs","rarrhk","rarrlp","rarrpl","rarrsim","Rarrtl","rarrtl","rarrw","rAtail","ratail","ratio","rationals","RBarr","rBarr","rbarr","rbbrk","rbrace","rbrack","rbrke","rbrksld","rbrkslu","Rcaron","rcaron","Rcedil","rcedil","rceil","rcub","Rcy","rcy","rdca","rdldhar","rdquo","rdquor","rdsh","Re","real","realine","realpart","reals","rect","REG","reg","ReverseElement","ReverseEquilibrium","ReverseUpEquilibrium","rfisht","rfloor","Rfr","rfr","rHar","rhard","rharu","rharul","Rho","rho","rhov","RightAngleBracket","RightArrow","Rightarrow","rightarrow","RightArrowBar","RightArrowLeftArrow","rightarrowtail","RightCeiling","RightDoubleBracket","RightDownTeeVector","RightDownVector","RightDownVectorBar","RightFloor","rightharpoondown","rightharpoonup","rightleftarrows","rightleftharpoons","rightrightarrows","rightsquigarrow","RightTee","RightTeeArrow","RightTeeVector","rightthreetimes","RightTriangle","RightTriangleBar","RightTriangleEqual","RightUpDownVector","RightUpTeeVector","RightUpVector","RightUpVectorBar","RightVector","RightVectorBar","ring","risingdotseq","rlarr","rlhar","rlm","rmoust","rmoustache","rnmid","roang","roarr","robrk","ropar","Ropf","ropf","roplus","rotimes","RoundImplies","rpar","rpargt","rppolint","rrarr","Rrightarrow","rsaquo","Rscr","rscr","Rsh","rsh","rsqb","rsquo","rsquor","rthree","rtimes","rtri","rtrie","rtrif","rtriltri","RuleDelayed","ruluhar","rx","Sacute","sacute","sbquo","Sc","sc","scap","Scaron","scaron","sccue","scE","sce","Scedil","scedil","Scirc","scirc","scnap","scnE","scnsim","scpolint","scsim","Scy","scy","sdot","sdotb","sdote","searhk","seArr","searr","searrow","sect","semi","seswar","setminus","setmn","sext","Sfr","sfr","sfrown","sharp","SHCHcy","shchcy","SHcy","shcy","ShortDownArrow","ShortLeftArrow","shortmid","shortparallel","ShortRightArrow","ShortUpArrow","shy","Sigma","sigma","sigmaf","sigmav","sim","simdot","sime","simeq","simg","simgE","siml","simlE","simne","simplus","simrarr","slarr","SmallCircle","smallsetminus","smashp","smeparsl","smid","smile","smt","smte","smtes","SOFTcy","softcy","sol","solb","solbar","Sopf","sopf","spades","spadesuit","spar","sqcap","sqcaps","sqcup","sqcups","Sqrt","sqsub","sqsube","sqsubset","sqsubseteq","sqsup","sqsupe","sqsupset","sqsupseteq","squ","Square","square","SquareIntersection","SquareSubset","SquareSubsetEqual","SquareSuperset","SquareSupersetEqual","SquareUnion","squarf","squf","srarr","Sscr","sscr","ssetmn","ssmile","sstarf","Star","star","starf","straightepsilon","straightphi","strns","Sub","subdot","subE","sube","subedot","submult","subnE","subne","subplus","subrarr","Subset","subset","subseteq","subseteqq","SubsetEqual","subsetneq","subsetneqq","subsim","subsub","subsup","succ","succapprox","succcurlyeq","Succeeds","SucceedsEqual","SucceedsSlantEqual","SucceedsTilde","succeq","succnapprox","succneqq","succnsim","succsim","SuchThat","Sum","sum","sung","Sup","sup","sup1","sup2","sup3","supdot","supdsub","supE","supe","supedot","Superset","SupersetEqual","suphsol","suphsub","suplarr","supmult","supnE","supne","supplus","Supset","supset","supseteq","supseteqq","supsetneq","supsetneqq","supsim","supsub","supsup","swarhk","swArr","swarr","swarrow","swnwar","szlig","Tab","Tau","tau","tbrk","Tcaron","tcaron","Tcedil","tcedil","Tcy","tcy","tdot","telrec","Tfr","tfr","there4","Therefore","therefore","Theta","theta","thetasym","thetav","thickapprox","thicksim","ThickSpace","thinsp","ThinSpace","thkap","thksim","THORN","thorn","Tilde","tilde","TildeEqual","TildeFullEqual","TildeTilde","times","timesb","timesbar","timesd","tint","toea","top","topbot","topcir","Topf","topf","topfork","tosa","tprime","TRADE","trade","triangle","triangledown","triangleleft","trianglelefteq","triangleq","triangleright","trianglerighteq","tridot","trie","triminus","TripleDot","triplus","trisb","tritime","trpezium","Tscr","tscr","TScy","tscy","TSHcy","tshcy","Tstrok","tstrok","twixt","twoheadleftarrow","twoheadrightarrow","Uacute","uacute","Uarr","uArr","uarr","Uarrocir","Ubrcy","ubrcy","Ubreve","ubreve","Ucirc","ucirc","Ucy","ucy","udarr","Udblac","udblac","udhar","ufisht","Ufr","ufr","Ugrave","ugrave","uHar","uharl","uharr","uhblk","ulcorn","ulcorner","ulcrop","ultri","Umacr","umacr","uml","UnderBar","UnderBrace","UnderBracket","UnderParenthesis","Union","UnionPlus","Uogon","uogon","Uopf","uopf","UpArrow","Uparrow","uparrow","UpArrowBar","UpArrowDownArrow","UpDownArrow","Updownarrow","updownarrow","UpEquilibrium","upharpoonleft","upharpoonright","uplus","UpperLeftArrow","UpperRightArrow","Upsi","upsi","upsih","Upsilon","upsilon","UpTee","UpTeeArrow","upuparrows","urcorn","urcorner","urcrop","Uring","uring","urtri","Uscr","uscr","utdot","Utilde","utilde","utri","utrif","uuarr","Uuml","uuml","uwangle","vangrt","varepsilon","varkappa","varnothing","varphi","varpi","varpropto","vArr","varr","varrho","varsigma","varsubsetneq","varsubsetneqq","varsupsetneq","varsupsetneqq","vartheta","vartriangleleft","vartriangleright","Vbar","vBar","vBarv","Vcy","vcy","VDash","Vdash","vDash","vdash","Vdashl","Vee","vee","veebar","veeeq","vellip","Verbar","verbar","Vert","vert","VerticalBar","VerticalLine","VerticalSeparator","VerticalTilde","VeryThinSpace","Vfr","vfr","vltri","vnsub","vnsup","Vopf","vopf","vprop","vrtri","Vscr","vscr","vsubnE","vsubne","vsupnE","vsupne","Vvdash","vzigzag","Wcirc","wcirc","wedbar","Wedge","wedge","wedgeq","weierp","Wfr","wfr","Wopf","wopf","wp","wr","wreath","Wscr","wscr","xcap","xcirc","xcup","xdtri","Xfr","xfr","xhArr","xharr","Xi","xi","xlArr","xlarr","xmap","xnis","xodot","Xopf","xopf","xoplus","xotime","xrArr","xrarr","Xscr","xscr","xsqcup","xuplus","xutri","xvee","xwedge","Yacute","yacute","YAcy","yacy","Ycirc","ycirc","Ycy","ycy","yen","Yfr","yfr","YIcy","yicy","Yopf","yopf","Yscr","yscr","YUcy","yucy","Yuml","yuml","Zacute","zacute","Zcaron","zcaron","Zcy","zcy","Zdot","zdot","zeetrf","ZeroWidthSpace","Zeta","zeta","Zfr","zfr","ZHcy","zhcy","zigrarr","Zopf","zopf","Zscr","zscr","zwj","zwnj","nameStartChar","nameChar","tagNamePattern","copyLocator","f","currentNSMap","localNSMap","nsp","nsPrefix","_copy","closed","ElementAttributes","attributeNames","defaultNSMapCopy","entityReplacer","k","charAt","parseInt","appendText","xt","m","lineEnd","linePattern","lineStart","parseStack","closeMap","tagStart","config","pop","endMatch","parseInstruction","parseDCC","matchs","lastMatch","endDTD","parseElementStartPart","addAttribute","qname","startIndex","addValue","attrName","s","setTagName","fixSelfClosed","elStartEnd","pos","lastIndexOf","locator2","parseHtmlSpecialContent","elEndStart","getLocalName","doccy","topLevel","g","minDoc","document","win","self","alert","confirm","prompt","Stream","listeners","on","listener","off","splice","trigger","callbacks","args","_length","_i","dispose","pipe","destination","LineStream","nextNewline","parseByterange","byterangeString","parseAttributes","parseResolution","resolution","width","height","ParseStream","customParsers","tagMappers","line","event","newLines","acc","mapper","mappedLine","newLine","tagType","duration","parseFloat","title","playlistType","esm_extends","allowed","URI","BYTERANGE","byterange","RESOLUTION","BANDWIDTH","dateTimeString","dateTimeObject","Date","IV","Uint32Array","PRECISE","subkey","clientAttributePattern","isHexaDecimal","isDecimalFloating","addParser","expression","customType","dataParser","segment","addTagMapper","camelCase","str","camelCaseKeys","setHoldBack","manifest","serverControl","targetDuration","partTargetDuration","hb","phb","minTargetDuration","minPartDuration","Parser","opts","currentMap","lineStream","parseStream","mainDefinitions","searchParams","lastProgramDateTime","uris","currentUri","hasParts","noop","defaultMediaGroups","currentTimeline","allowCache","discontinuityStarts","dateRanges","iFramePlaylists","segments","lastByterangeEnd","lastPartByterangeEnd","dateRangeTags","parts","preloadHints","timeline","preloadSegment","entry","mediaGroup","rendition","definitions","def","endlist","endList","inf","mediaSequence","discontinuitySequence","METHOD","KEYFORMAT","contentProtection","VALID_METHODS","KEYID","schemeIdUri","keyId","pssh","decode_b64_to_uint8_array","iv","isFinite","playlist","media","TYPE","NAME","mediaGroupType","DEFAULT","autoselect","AUTOSELECT","LANGUAGE","language","instreamId","CHARACTERISTICS","characteristics","FORCED","forced","discontinuity","getTime","reduceRight","programDateTime","targetduration","isNaN","timeOffset","precise","cueOut","cueOutCont","cueIn","skip","warnOnMissingAttributes_","segmentIndex","partIndex","renditionReports","r","canBlockReload","canSkipDateranges","hint","isPart","otherHint","report","required","partInf","partTarget","dateRange","endDate","startDate","plannedDuration","endOnNextYes","endOnNext","class","newDateInSeconds","attribute","dateRangeWithSameId","findIndex","dateRangeToFind","independentSegments","iFramesOnly","requiredCompatibilityversion","contentSteering","define","addDef","val","QUERYPARAM","VALUE","IMPORT","custom","currentVersion","targetVersion","identifier","missing","chunk","forEachMediaGroup","groups","groupKey","labelKey","isObject","merge","objects","values","flatten","lists","x","y","findIndexes","union","keyFunction","errors","INVALID_NUMBER_OF_PERIOD","DASH_EMPTY_MANIFEST","DASH_INVALID_XML","NO_BASE_URL","SEGMENT_TIME_UNSPECIFIED","UNSUPPORTED_UTC_TIMING_SCHEME","urlTypeToSegment","indexRange","resolvedUri","resolve_url","ranges","rangeStr","startRange","window_default","endRange","MAX_SAFE_INTEGER","byteRangeToString","parseEndNumber","endNumber","segmentRange","static","timescale","sourceDuration","periodDuration","segmentDuration","dynamic","NOW","clientOffset","availabilityStartTime","periodStart","minimumUpdatePeriod","timeShiftBufferDepth","now","periodStartWC","floor","min","periodEndWC","toSegments","startNumber","time","parseByDuration","sectionDuration","segmentsFromBase","initialization","presentationTime","initSegment","sourceURL","segmentTimeInfo","addSidxSegmentsToPlaylist$1","sidx","sidxByteRange","sidxEnd","mediaReferences","references","referenceType","firstOffset","endIndex","reference","referencedSize","subsegmentDuration","SUPPORTED_MEDIA_TYPES","TIME_FUDGE","getUniqueTimelineStarts","timelineStarts","sort","findPlaylistWithName","getMediaGroupPlaylists","mediaGroupPlaylists","properties","group","label","updateMediaSequenceForPlaylist","updateSequenceNumbers","oldPlaylists","newPlaylists","oldPlaylist","firstNewSegment","oldMatchingSegmentIndex","oldSegment","unshift","oldMatchingSegment","positionManifestOnTimeline","oldManifest","newManifest","generateSidxKey","mergeDiscontiguousPlaylists","playlistsByBaseUrl","cur","allPlaylists","playlistGroup","mergedPlaylists","addSidxSegmentsToPlaylist","sidxMapping","sidxKey","sidxMatch","addSidxSegmentsToPlaylists","formatAudioPlaylist","isAudioOnly","bandwidth","serviceLocation","SUBTITLES","formatVttPlaylist","m3u8Attributes","vttPlaylist","organizeAudioPlaylists","mainPlaylist","formattedPlaylists","role","roleLabel","formatted","firstLabel","organizeVttPlaylists","organizeCaptionServices","captionServices","svcObj","svc","service","channel","aspectRatio","easyReader","formatVideoPlaylist","frameRate","videoOnly","audioOnly","vttOnly","addMediaSequenceValues","flattenMediaGroupPlaylists","mediaGroupObject","labelContents","toM3u8","dashPlaylists","locations","previousManifest","eventStream","suggestedPresentationDelay","videoPlaylists","audioPlaylists","vttPlaylists","captions","Boolean","VIDEO","organizedAudioGroup","organizedVttGroup","playlistTimelineStarts","subs","cc","getLiveRValue","parseByTimeline","segmentTimeline","sIndex","S","d","repeat","segmentTime","nextS","identifierPattern","identifierReplacement","format","constructTemplateUrl","parseTemplateInfo","segmentsFromTemplate","templateValues","RepresentationID","Bandwidth","mapSegment","Time","presentationTimeOffset","SegmentURLToSegmentObject","segmentUrl","mediaRange","segmentsFromList","segmentUrls","segmentUrlMap","segmentUrlObject","generateSegments","segmentInfo","segmentAttributes","segmentsFn","template","segmentsInfo","toPlaylists","representations","findChildren","getContent","textContent","parseDivisionValue","prev","parseDuration","durationRegex","year","month","day","hour","minute","second","parseDate","dateRegex","parsers","mediaPresentationDuration","parsedValue","parseFn","keySystemsMap","buildBaseUrls","baseUrlElements","baseUrlElement","initialBaseUrl","resolvedBaseUrl","finalBaseUrl","getSegmentInformation","adaptationSet","segmentTemplate","segmentList","segmentBase","segmentTimelineParentNode","segmentInitializationParentNode","segmentInitialization","inheritBaseUrls","adaptationSetAttributes","adaptationSetBaseUrls","adaptationSetSegmentInfo","representation","repBaseUrlElements","repBaseUrls","representationSegmentInfo","generateKeySystemInformation","contentProtectionNodes","keySystem","psshNode","parseCaptionServiceMetadata","opt","toEventStream","eventStreamAttributes","eventAttributes","messageData","contentEncoding","toRepresentations","periodAttributes","periodBaseUrls","periodSegmentInfo","roleAttributes","accessibility","labelVal","toAdaptationSets","mpdAttributes","mpdBaseUrls","adaptationSets","generateContentSteeringInformation","contentSteeringNodes","eventHandler","infoFromContentSteeringTag","serverURL","queryBeforeStart","getPeriodStart","priorPeriodAttributes","mpdType","inheritAttributes","mpd","manifestUri","periodNodes","periods","priorPeriod","contentSteeringInfo","representationInfo","stringToMpdXml","manifestString","lib","parseUTCTimingScheme","UTCTimingNode","parsedManifestInfo","parseUTCTiming","getUint64","DataView","referenceId","getUint32","earliestPresentationTime","referenceCount","getUint16","startsWithSap","sapType","sapDeltaTime","secondsToVideoTs","secondsToAudioTs","videoTsToSeconds","audioTsToSeconds","seconds","sampleRate","timestamp","ONE_SECOND_IN_TS","audioTsToVideoTs","videoTsToAudioTs","metadataTsToSeconds","timelineStartPts","keepOriginalTimestamps","uint8","dv","getBigUint64","MAX_UINT32","vttjs","WebVTT","VTTCue","VTTRegion","cueShim","regionShim","nativeVTTCue","nativeVTTRegion","shim","restore","_objCreate","create","F","ParsingError","errorData","parseTimeStamp","computeSeconds","h","Settings","parseOptions","keyValueDelim","groupDelim","kv","Errors","BadSignature","BadTimeStamp","dflt","defaultKey","alt","integer","percent","TEXTAREA_ELEMENT","TAG_NAME","u","ruby","rt","DEFAULT_COLOR_CLASS","white","lime","cyan","red","yellow","magenta","blue","black","TAG_ANNOTATION","NEEDS_PARENT","parseContent","rootDiv","tagStack","nextToken","annotation","classes","cl","bgColor","colorName","propName","propValue","style","className","innerHTML","strongRTLRanges","StyleBox","CueStyleBox","cue","styleOptions","cueDiv","styles","color","backgroundColor","left","right","display","writingMode","vertical","unicodeBidi","applyStyles","direction","determineBidi","nodeStack","pushNodes","nextTextNode","innerText","isStrongRTLChar","charCode","currentRange","textAlign","align","font","whiteSpace","textPos","positionAlign","formatStyle","move","box","BoxPosition","lh","offsetHeight","offsetWidth","offsetTop","rects","getClientRects","getBoundingClientRect","lineHeight","unit","axis","toMove","overlaps","b2","overlapsAny","boxes","within","overlapsOppositeAxis","intersectPercentage","intersectArea","toCSSCompatValues","getSimpleBoxPosition","StringDecoder","convertCueToDOMTree","cuetext","processCues","cues","overlay","paddedOverlay","margin","shouldCompute","hasBeenReset","displayState","boxPositions","containerBox","fontSize","round","styleBox","moveBoxToLinePosition","boxPosition","linePos","computeLinePos","snapToLines","track","textTrackList","mediaElement","trackList","mode","step","maxPosition","initialAxis","reverse","calculatedPercentage","lineAlign","bestPosition","findBestPosition","specifiedPosition","percentage","decoder","state","regionList","reportOrThrowError","onparsingerror","collectNextLine","stream","alreadyCollectedLine","settings","ontimestampmap","parseRegion","xy","anchor","region","lines","regionAnchorX","regionAnchorY","viewportAnchorX","viewportAnchorY","scroll","onregion","parseCue","oInput","consumeTimeStamp","skipWhitespace","startTime","endTime","consumeCueSettings","vals","vals0","center","middle","hasSubstring","oncue","flush","onflush","directionSetting","alignSetting","findAlignSetting","_id","_pauseOnExit","_startTime","_endTime","_text","_region","_vertical","_snapToLines","_line","_lineAlign","_position","_positionAlign","_size","_align","defineProperties","enumerable","setting","getCueAsHTML","scrollSetting","isValidPercentValue","_width","_lines","_regionAnchorX","_regionAnchorY","_viewportAnchorX","_viewportAnchorY","_scroll","__esModule"],"sourceRoot":""}